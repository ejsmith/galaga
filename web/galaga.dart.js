// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $ = Isolate.$isolateProperties;
var $$ = {};

// Classes
$$.ListIterator = {"": "Object;_iterable,_liblib$_length,_index,_liblib$_current",
  get$current: function() {
    return this._liblib$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._liblib$_length;
    t2 = this._iterable;
    if (t1 !== t2.length)
      throw $.$$throw($.ConcurrentModificationError$(t2));
    t3 = this._index;
    if (t3 === t1) {
      this._liblib$_current = null;
      return false;
    }
    this._liblib$_current = $.JSArray_methods.elementAt$1(t2, t3);
    this._index = this._index + 1;
    return true;
  }
};

$$.WhereIterable = {"": "Iterable;_iterable,_f",
  get$iterator: function(_) {
    return $.WhereIterator$($.JSArray_methods.get$iterator(this._iterable), this._f);
  }
};

$$.WhereIterator = {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0();)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  }
};

$$.ToString__emitMap_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (!t1.first_0)
      this.result_1.write$1(", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.ToString__emitObject(k, t1, t2);
    t1.write$1(": ");
    $.ToString__emitObject(v, t1, t2);
  }
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if ($.$gt$n(t1.i_1, 0) === true)
      t1.sb_0.write$1(", ");
    t1.sb_0.write$1(key);
    t1.sb_0.write$1(": ");
    t1.sb_0.write$1($.Error_safeToString(value));
    t1.i_1 = $.$add$ns(t1.i_1, 1);
  }
};

$$.JSFunction = {"": "Object;",
  toString$0: function(receiver) {
    return "Closure";
  }
};

$$.JSBool = {"": "Object;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true
};

$$.JSNull = {"": "Object;",
  $eq: function(receiver, other) {
    return null == other;
  },
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  }
};

$$.CloseToken = {"": "Object;", $isCloseToken: true};

$$.JsIsolateSink = {"": "StreamSink;_isClosed,_port<",
  add$1: function(_, message) {
    this._port.send$1(message);
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!other.$isIsolateSink && $.$eq(this._port, other.get$_port()) === true;
  },
  get$hashCode: function(_) {
    return $.$add$ns($.get$hashCode$(this._port), 499);
  },
  $isJsIsolateSink: true,
  $asIsolateSink: null,
  $isIsolateSink: true
};

$$._Manager = {"": "Object;nextIsolateId@,currentManagerId,nextManagerId,currentContext<,rootContext,topEventLoop<,fromCommandLine,isWorker<,supportsWorkers,isolates,mainManager,managers",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = $.get$globalWorker() != null && $.get$IsolateNatives_thisScript() != null;
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { $.IsolateNatives__processWorkerMessage.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  maybeCloseWorker$0: function() {
    if (this.isWorker === true) {
      var t1 = this.isolates;
      t1 = t1.get$isEmpty(t1) && this.topEventLoop.activeTimerCount === 0;
    } else
      t1 = false;
    if (t1) {
      t1 = this.mainManager;
      t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "close"])));
    }
  },
  _Manager$0: function() {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map();
    this.managers = $.Map_Map();
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
};

$$._IsolateContext = {"": "Object;id*,ports,isolateStatics",
  eval$1: function(code) {
    var old, result;
    old = $globalState.currentContext;
    $globalState.currentContext = this;
    $ = this.isolateStatics;
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.currentContext = old;
      if (old != null)
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    var t1 = this.ports;
    return t1.$index(t1, portId);
  },
  register$2: function(portId, port) {
    var t1 = this.ports;
    if (t1.containsKey$1(t1, portId))
      throw $.$$throw($._ExceptionImplementation$("Registry: ports must be registered only once."));
    t1 = this.ports;
    t1.$indexSet(t1, portId, port);
    t1 = $globalState.isolates;
    t1.$indexSet(t1, this.id, this);
  },
  unregister$1: function(portId) {
    var t1 = this.ports;
    t1.remove$1(t1, portId);
    t1 = this.ports;
    if (t1.get$isEmpty(t1)) {
      t1 = $globalState.isolates;
      t1.remove$1(t1, this.id);
    }
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.get$nextIsolateId();
    t1.set$nextIsolateId(t2 + 1);
    this.id = t2;
    this.ports = $.Map_Map();
    this.isolateStatics = new Isolate;
  }
};

$$._EventLoop = {"": "Object;events,activeTimerCount",
  enqueue$3: function(isolate, fn, msg) {
    var t1 = this.events;
    t1.addLast$1(t1, $._IsolateEvent$(isolate, fn, msg));
  },
  dequeue$0: function() {
    var t1 = this.events;
    if (t1.get$isEmpty(t1))
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if ($globalState.rootContext != null) {
      var t1 = $globalState.isolates;
      if (t1.containsKey$1(t1, $globalState.rootContext.id))
        if ($globalState.fromCommandLine === true) {
          t1 = $globalState.rootContext.ports;
          t1 = t1.get$isEmpty(t1);
        } else
          t1 = false;
      else
        t1 = false;
    } else
      t1 = false;
    if (t1)
      throw $.$$throw($._ExceptionImplementation$("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      $globalState.maybeCloseWorker$0();
      return false;
    }
    $event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if ($.get$globalWindow() != null)
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0();)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1;
    if ($globalState.isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        t1 = $globalState.mainManager;
        t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
      }

  }
};

$$._EventLoop__runHelper_next = {"": "Closure;this_0",
  call$0: function() {
    if (!this.this_0.runIteration$0())
      return;
    $.Timer_run(this);
  }
};

$$._IsolateEvent = {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
};

$$._MainManagerStub = {"": "Object;",
  get$id: function(_) {
    return 0;
  },
  set$id: function(_, i) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  postMessage$1: function(_, msg) {
    $.get$globalThis().postMessage(msg);
  },
  terminate$0: function(_) {
  }
};

$$.IsolateNatives__processWorkerMessage_function = {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  }
};

$$._BaseSendPort = {"": "Object;_isolateId<",
  _checkReplyTo$1: function(replyTo) {
    if (replyTo != null && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_NativeJsSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_WorkerSendPort) && true)
      throw $.$$throw($._ExceptionImplementation$("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $._CompleterImpl$();
    port = $.ReceivePortImpl$();
    this.send$2(message, port.toSendPort$0());
    port.receive$1(new $._BaseSendPort_call_anon(completer, port));
    return completer.future;
  },
  $isSendPort: true
};

$$._BaseSendPort_call_anon = {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1 = this.port_1;
    t1.close$0(t1);
    t1 = this.completer_0;
    if (typeof value === "object" && value !== null && !!value.$isException)
      t1.completeError$1(value);
    else
      t1.complete$1(t1, value);
  }
};

$$._NativeJsSendPort = {"": "_BaseSendPort;_receivePort<,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
  },
  send$1: function(message) {
    return this.send$2(message, null);
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!other.$is_NativeJsSendPort && $.$eq(this._receivePort, other._receivePort) === true;
  },
  get$hashCode: function(_) {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
};

$$._NativeJsSendPort_send_anon = {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, t4, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    t4 = $globalState.isolates;
    isolate = t4.$index(t4, t2.get$_isolateId());
    if (isolate == null)
      return;
    if (t2.get$_receivePort().get$_liblib0$_callback() == null)
      return;
    shouldSerialize = $globalState.currentContext != null && $.$eq($.get$id$x($globalState.currentContext), t2.get$_isolateId()) !== true;
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    $globalState.topEventLoop.enqueue$3(isolate, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), "receive " + $.S(msg));
  }
};

$$._NativeJsSendPort_send__anon = {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (t1.get$_receivePort().get$_liblib0$_callback() != null) {
      if (this.shouldSerialize_5) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t1 = t1.get$_receivePort();
      t2 = this.box_0;
      t1._liblib0$_callback$2(t2.msg_0, t2.reply_1);
    }
  }
};

$$._WorkerSendPort = {"": "_BaseSendPort;_workerId<,_receivePortId,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
  },
  send$1: function(message) {
    return this.send$2(message, null);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other === "object" && other !== null && !!other.$is_WorkerSendPort)
      t1 = $.$eq(this._workerId, other._workerId) === true && $.$eq(this._isolateId, other._isolateId) === true && $.$eq(this._receivePortId, other._receivePortId) === true;
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function(_) {
    var t1, t2, t3;
    t1 = $.$shl$n(this._workerId, 16);
    t2 = $.$shl$n(this._isolateId, 8);
    t3 = this._receivePortId;
    if (typeof t3 !== "number")
      throw $.iae(t3);
    return (t1 ^ t2 ^ t3) >>> 0;
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
};

$$._WorkerSendPort_send_anon = {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage, manager;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($globalState.isWorker === true) {
      t1 = $globalState.mainManager;
      t1.postMessage$1(t1, workerMessage);
    } else {
      t2 = $globalState.managers;
      manager = t2.$index(t2, t1.get$_workerId());
      if (manager != null)
        $.postMessage$1$x(manager, workerMessage);
    }
  }
};

$$.ReceivePortImpl = {"": "Object;_id<,_liblib0$_callback<",
  _liblib0$_callback$2: function(arg0, arg1) {
    return this._liblib0$_callback.call$2(arg0, arg1);
  },
  receive$1: function(onMessage) {
    this._liblib0$_callback = onMessage;
  },
  close$0: function(_) {
    this._liblib0$_callback = null;
    $globalState.currentContext.unregister$1(this._id);
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $.get$id$x($globalState.currentContext));
  },
  ReceivePortImpl$0: function() {
    $._globalState().get$currentContext().register$2(this._id, this);
  }
};

$$._waitForPendingPorts_anon = {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  }
};

$$._PendingSendPortFinder = {"": "_MessageTraverser;ports,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    var t1 = this._visited;
    if (t1.$index(t1, list) != null)
      return;
    t1 = this._visited;
    t1.$indexSet(t1, list, true);
    $.forEach$1$ax(list, new $._PendingSendPortFinder_visitList_anon(this));
  },
  visitMap$1: function(map) {
    var t1 = this._visited;
    if (t1.$index(t1, map) != null)
      return;
    t1 = this._visited;
    t1.$indexSet(t1, map, true);
    $.forEach$1$ax($.get$values$x(map), new $._PendingSendPortFinder_visitMap_anon(this));
  },
  visitSendPort$1: function(port) {
    if (false)
      this.ports.push(port.get$_futurePort());
  },
  visitIsolateSink$1: function(sink) {
    this.visitSendPort$1(sink._port);
  },
  visitCloseToken$1: function(token) {
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._PendingSendPortFinder_visitList_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$._PendingSendPortFinder_visitMap_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$._JsSerializer = {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    throw $.$$throw("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return ["sendport", $globalState.currentManagerId, port._isolateId, port._receivePort.get$_id()];
  },
  visitIsolateSink$1: function(sink) {
    var isClosed = sink._isClosed;
    return ["isolateSink", this.visitSendPort$1(sink._port), isClosed];
  },
  visitCloseToken$1: function(token) {
    return ["closeToken"];
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsCopier = {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(this.get$p()));
  },
  visitNativeJsSendPort$1: function(port) {
    return $._NativeJsSendPort$(port._receivePort, port._isolateId);
  },
  visitWorkerSendPort$1: function(port) {
    return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
  },
  visitIsolateSink$1: function(sink) {
    var isClosed, result;
    isClosed = sink._isClosed;
    result = $.JsIsolateSink$fromPort(this.visitSendPort$1(sink._port));
    result._isClosed = isClosed;
    return result;
  },
  visitCloseToken$1: function(token) {
    return token;
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsDeserializer = {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(list) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = $.getInterceptor$asx(list);
    managerId = t1.$index(list, 1);
    isolateId = t1.$index(list, 2);
    receivePortId = t1.$index(list, 3);
    if ($.$eq(managerId, $globalState.currentManagerId) === true) {
      t1 = $globalState.isolates;
      isolate = t1.$index(t1, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  },
  deserializeIsolateSink$1: function(list) {
    var t1, port, isClosed, result;
    t1 = $.getInterceptor$asx(list);
    port = this.deserializeSendPort$1(t1.$index(list, 1));
    isClosed = t1.$index(list, 2);
    result = $.JsIsolateSink$fromPort(port);
    result._isClosed = isClosed;
    return result;
  },
  deserializeCloseToken$1: function(list) {
    return $.CONSTANT5;
  }
};

$$._JsVisitedMap = {"": "Object;tagged",
  $index: function(_, object) {
    return object['__MessageTraverser__attached_info__'];
  },
  $indexSet: function(_, object, info) {
    $.add$1$ax(this.tagged, object);
    object['__MessageTraverser__attached_info__'] = info;
  },
  reset$0: function(_) {
    this.tagged = $.List_List($);
  },
  cleanup$0: function() {
    var $length, i;
    for ($length = $.get$length$asx(this.tagged), i = 0; i < $length; ++i)
      $.$index$asx(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  }
};

$$._MessageTraverserVisitedMap = {"": "Object;",
  $index: function(_, object) {
    return;
  },
  $indexSet: function(_, object, info) {
  },
  reset$0: function(_) {
  },
  cleanup$0: function() {
  }
};

$$._MessageTraverser = {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    t1 = x;
    if (t1 == null || typeof t1 === "string" || typeof t1 === "number" || typeof t1 === "boolean")
      return this.visitPrimitive$1(x);
    t1 = this._visited;
    t1.reset$0(t1);
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || x.$isList()))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && x.$isMap())
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$isJsIsolateSink)
      return this.visitIsolateSink$1(x);
    if (typeof x === "object" && x !== null && !!x.$isCloseToken)
      return this.visitCloseToken$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
  }
};

$$._Copier = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copy, len, t3, t2, i;
    t1 = this._visited;
    copy = t1.$index(t1, list);
    if (copy != null)
      return copy;
    t1 = $.getInterceptor$asx(list);
    len = t1.get$length(list);
    if (typeof len !== "number")
      return this.visitList$1$bailout1(1, t1, list, len);
    copy = $.List_List(len);
    t3 = this._visited;
    t3.$indexSet(t3, list, copy);
    for (t2 = copy.length, i = 0; i < len; ++i) {
      t3 = this._dispatch$1(t1.$index(list, i));
      if (i >= t2)
        throw $.ioore(i);
      copy[i] = t3;
    }
    return copy;
  },
  visitList$1$bailout1: function(state0, t1, list, len) {
    var copy, t3, t2, i;
    copy = $.List_List(len);
    t3 = this._visited;
    t3.$indexSet(t3, list, copy);
    for (t2 = copy.length, i = 0; $.JSNumber_methods.$lt(i, len); ++i) {
      t3 = this._dispatch$1(t1.$index(list, i));
      if (i >= t2)
        throw $.ioore(i);
      copy[i] = t3;
    }
    return copy;
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t2 = this._visited;
    t1.copy_0 = t2.$index(t2, map);
    t2 = t1.copy_0;
    if (t2 != null)
      return t2;
    t1.copy_0 = $.HashMap$();
    t2 = this._visited;
    t2.$indexSet(t2, map, t1.copy_0);
    $.forEach$1$ax(map, new $._Copier_visitMap_anon(t1, this));
    return t1.copy_0;
  }
};

$$._Copier_visitMap_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1, t2;
    t1 = this.box_0.copy_0;
    t2 = this.this_1;
    $.$indexSet$ax(t1, t2._dispatch$1(key), t2._dispatch$1(val));
  }
};

$$._Serializer = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, list);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, map);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, map, id);
    t1 = $.getInterceptor$x(map);
    return ["map", id, this._serializeList$1($.toList$0$ax(t1.get$keys(map))), this._serializeList$1($.toList$0$ax(t1.get$values(map)))];
  },
  _serializeList$1: function(list) {
    var len, result, i;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      result[i] = this._dispatch$1(list[i]);
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, list) {
    var t1, len, result, t2, i, t3;
    t1 = $.getInterceptor$asx(list);
    len = t1.get$length(list);
    result = $.List_List(len);
    for (t2 = result.length, i = 0; $.JSNumber_methods.$lt(i, len); ++i) {
      t3 = this._dispatch$1(t1.$index(list, i));
      if (i >= t2)
        throw $.ioore(i);
      result[i] = t3;
    }
    return result;
  }
};

$$._Deserializer = {"": "Object;",
  deserialize$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    this._deserialized = $.HashMap$();
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    switch ($.$index$asx(x, 0)) {
      case "ref":
        return this._deserializeRef$1(x);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      case "isolateSink":
        return this.deserializeIsolateSink$1(x);
      case "closeToken":
        return this.deserializeCloseToken$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeRef$1: function(x) {
    var id, t1;
    id = $.$index$asx(x, 1);
    t1 = this._deserialized;
    return t1.$index(t1, id);
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, t2, len, i;
    t1 = $.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.$isJavaScriptIndexingBehavior())
      return this._deserializeList$1$bailout(1, dartList, id);
    t2 = this._deserialized;
    t2.$indexSet(t2, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id) {
    var t2, len, i;
    t2 = this._deserialized;
    t2.$indexSet(t2, id, dartList);
    t2 = $.getInterceptor$asx(dartList);
    len = t2.get$length(dartList);
    for (i = 0; $.JSNumber_methods.$lt(i, len); ++i)
      t2.$indexSet(dartList, i, this._deserializeHelper$1(t2.$index(dartList, i)));
    return dartList;
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, t2, keys, values, len, i, key;
    result = $.HashMap$();
    t1 = $.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    t2 = this._deserialized;
    t2.$indexSet(t2, id, result);
    keys = t1.$index(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !keys.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(1, x, result, keys, t1);
    values = t1.$index(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !values.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(2, 0, result, keys, 0, values);
    len = keys.length;
    for (i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      result.$indexSet(result, key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, x, result, keys, t1, values) {
    switch (state0) {
      case 0:
        result = $.HashMap$();
        t1 = $.getInterceptor$asx(x);
        id = t1.$index(x, 1);
        t2 = this._deserialized;
        t2.$indexSet(t2, id, result);
        keys = t1.$index(x, 2);
      case 1:
        state0 = 0;
        values = t1.$index(x, 3);
      case 2:
        var id, t2, t3, len, i;
        state0 = 0;
        t3 = $.getInterceptor$asx(keys);
        len = t3.get$length(keys);
        for (t1 = $.getInterceptor$asx(values), i = 0; $.JSNumber_methods.$lt(i, len); ++i)
          result.$indexSet(result, this._deserializeHelper$1(t3.$index(keys, i)), this._deserializeHelper$1(t1.$index(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.$$throw("Unexpected serialized object");
  }
};

$$.TimerImpl = {"": "Object;_once,_inEventLoop,_handle?",
  cancel$0: function() {
    if ($.get$globalThis().setTimeout != null) {
      if (this._inEventLoop)
        throw $.$$throw($.UnsupportedError$("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      var t1 = $globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount - 1;
      if (this._once)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw $.$$throw($.UnsupportedError$("Canceling a timer."));
  },
  TimerImpl$periodic$2: function(milliseconds, callback) {
    var t1;
    if ($.hasTimer()) {
      t1 = $._globalState().get$topEventLoop();
      t1.activeTimerCount = t1.activeTimerCount + 1;
      this._handle = $.get$globalThis().setInterval($.convertDartClosureToJS(new $.anon(this, callback), 0), milliseconds);
    } else
      throw $.$$throw($.UnsupportedError$("Periodic timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1;
    if (milliseconds === 0)
      t1 = $.hasTimer() !== true || $._globalState().get$isWorker() === true;
    else
      t1 = false;
    if (t1) {
      $._globalState().get$topEventLoop().enqueue$3($._globalState().get$currentContext(), callback, "timer");
      this._inEventLoop = true;
    } else if ($.hasTimer() === true) {
      t1 = $._globalState().get$topEventLoop();
      t1.activeTimerCount = t1.activeTimerCount + 1;
      t1 = new $.internalCallback(this, callback);
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(t1, 0), milliseconds);
    } else
      throw $.$$throw($.UnsupportedError$("Timer greater than 0."));
  }
};

$$.internalCallback = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$0();
    this.this_0.set$_handle(null);
    var t1 = $globalState.topEventLoop;
    t1.activeTimerCount = t1.activeTimerCount - 1;
  }
};

$$.anon = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$1(this.this_0);
  }
};

$$.JSArray = {"": "Object;",
  add$1: function(receiver, value) {
    $.checkGrowable(receiver, "add");
    receiver.push(value);
  },
  removeLast$0: function(receiver) {
    $.checkGrowable(receiver, "removeLast");
    if (receiver.length === 0)
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  },
  where$1: function(receiver, f) {
    return $.WhereIterable$(receiver, f);
  },
  addAll$1: function(receiver, collection) {
    var t1, t2;
    for (t1 = $.get$iterator$ax(collection); t1.moveNext$0();) {
      t2 = t1.get$current();
      $.checkGrowable(receiver, "add");
      receiver.push(t2);
    }
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  elementAt$1: function(receiver, index) {
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  sublist$2: function(receiver, start, end) {
    $.checkNull(start);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (start < 0 || start > receiver.length)
      throw $.$$throw($.RangeError$range(start, 0, receiver.length));
    if (end == null)
      end = receiver.length;
    else {
      throw $.$$throw($.ArgumentError$(end));
      if ($.JSNull_methods.$lt(end, start) || $.JSNull_methods.$gt(end, receiver.length))
        throw $.$$throw($.RangeError$range(end, start, receiver.length));
    }
    if (start === end)
      return [];
    return receiver.slice(start, end);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  removeRange$2: function(receiver, start, $length) {
    var receiverLength, t1, t2;
    $.checkGrowable(receiver, "removeRange");
    if ($length === 0)
      return;
    $.checkNull(start);
    $.checkNull($length);
    if ($length < 0)
      throw $.$$throw($.ArgumentError$($length));
    receiverLength = receiver.length;
    if (start < 0 || start >= receiverLength)
      throw $.$$throw($.RangeError$value(start));
    t1 = start + $length;
    if (t1 > receiverLength)
      throw $.$$throw($.RangeError$value(t1));
    t2 = receiverLength - $length;
    $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
    this.set$length(receiver, t2);
  },
  setRange$4: function(receiver, start, $length, from, startFrom) {
    $.checkMutable(receiver, "set range");
    $.IterableMixinWorkaround_setRangeList(receiver, start, $length, from, startFrom);
  },
  toString$0: function(receiver) {
    return $.ToString_collectionToString(receiver);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (!(typeof newLength === "number" && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    $.checkMutable(receiver, "indexed set");
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    receiver[index] = value;
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return null;
  }
};

$$.JSMutableArray = {"": "JSArray;",
  $asList: function() {
    return function () { return [null]; };
  },
  $asCollection: function() {
    return function () { return [null]; };
  }
};

$$.JSFixedArray = {"": "JSMutableArray;"};

$$.JSExtendableArray = {"": "JSMutableArray;"};

$$.DartError = {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function(_) {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString$0(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper.call$0;
  }
};

$$.StackTrace = {"": "Object;stack",
  toString$0: function(_) {
    var t1 = this.stack;
    return t1 != null ? t1 : "";
  }
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
};

$$.Closure = {"": "Object;",
  toString$0: function(_) {
    return "Closure";
  }
};

$$.Null = {"": "Object;"};

$$.CastErrorImplementation = {"": "Object;message",
  toString$0: function(_) {
    return this.message;
  }
};

$$.JSNumber = {"": "Object;",
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  get$isInfinite: function(receiver) {
    return receiver == Infinity || receiver == -Infinity;
  },
  remainder$1: function(receiver, b) {
    $.checkNull(b);
    return receiver % b;
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var truncated;
    if (this.get$isNaN(receiver))
      throw $.$$throw($.UnsupportedError$("NaN"));
    if (this.get$isInfinite(receiver))
      throw $.$$throw($.UnsupportedError$("Infinity"));
    truncated = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  truncate$0: function(receiver) {
    return this.toInt$0(receiver);
  },
  round$0: function(receiver) {
    return this.toInt$0(this.roundToDouble$0(receiver));
  },
  roundToDouble$0: function(receiver) {
    if (receiver < 0)
      return -Math.round(-receiver);
    else
      return Math.round(receiver);
  },
  toStringAsFixed$1: function(receiver, fractionDigits) {
    var result;
    $.checkNum(fractionDigits);
    if (fractionDigits < 0 || fractionDigits > 20)
      throw $.$$throw($.RangeError$(fractionDigits));
    result = receiver.toFixed(fractionDigits);
    if (receiver === 0 && this.get$isNegative(receiver))
      return "-" + result;
    return result;
  },
  toString$0: function(receiver) {
    if (receiver === 0 && (1 / receiver) < 0)
      return "-0.0";
    else
      return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $negate: function(receiver) {
    return -receiver;
  },
  $add: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver - other;
  },
  $div: function(receiver, other) {
    return receiver / other;
  },
  $mul: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver * other;
  },
  $tdiv: function(receiver, other) {
    return this.truncate$0(receiver / other);
  },
  $shl: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (other > 31)
      return 0;
    return (receiver << other) >>> 0;
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return (receiver >> other) >>> 0;
  },
  $and: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver & other) >>> 0;
  },
  $or: function(receiver, other) {
    return (receiver | other) >>> 0;
  },
  $xor: function(receiver, other) {
    return (receiver ^ other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver >= other;
  },
  $isnum: true
};

$$.JSInt = {"": "JSNumber;", $is$int: true, $isnum: true};

$$.JSDouble = {"": "JSNumber;", $is$double: true, $isnum: true};

$$.JSString = {"": "Object;",
  codeUnitAt$1: function(receiver, index) {
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  $add: function(receiver, other) {
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  split$1: function(receiver, pattern) {
    $.checkNull(pattern);
    return receiver.split(pattern);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    if (startIndex < 0)
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.JSNumber_methods.$gt(startIndex, endIndex))
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.$gt$n(endIndex, receiver.length) === true)
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase();
  },
  trim$0: function(receiver) {
    return receiver.trim();
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var hash, i, hash0, hash1;
    for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
      hash0 = 536870911 & hash + receiver.charCodeAt(i);
      hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
      hash1 = hash1 ^ (hash1 >> 6);
    }
    hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash0 = hash0 ^ (hash0 >> 11);
    return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $isString: true
};

$$._Random = {"": "Object;",
  nextDouble$0: function() {
    return Math.random();
  }
};

$$.MetaInfo = {"": "Object;_tag<,_tags,_set<"};

$$.AsyncError = {"": "Object;error>,stackTrace<,cause<",
  _writeOn$1: function(buffer) {
    var message, exception, t1;
    buffer.write$1("'");
    message = null;
    try {
      message = $.toString$0(this.error);
    } catch (exception) {
      $.unwrapException(exception);
      message = $.Error_safeToString(this.error);
    }

    buffer.write$1(message);
    buffer.write$1("'\n");
    t1 = this.stackTrace;
    if (t1 != null) {
      buffer.write$1("Stack trace:\n");
      buffer.writeln$1($.toString$0(t1));
    }
  },
  toString$0: function(_) {
    var buffer, cause;
    buffer = $.StringBuffer$("");
    buffer.write$1("AsyncError: ");
    this._writeOn$1(buffer);
    cause = this.cause;
    for (; cause != null;) {
      buffer.write$1("Caused by: ");
      cause._writeOn$1(buffer);
      cause = cause.get$cause();
    }
    return buffer.toString$0(buffer);
  },
  throwDelayed$0: function() {
    var reportError, exception;
    reportError = new $.AsyncError_throwDelayed_reportError(this);
    try {
      $.Timer_run(new $.AsyncError_throwDelayed_anon(this, reportError));
    } catch (exception) {
      $.unwrapException(exception);
      reportError.call$0();
    }

  },
  $isAsyncError: true
};

$$.AsyncError_throwDelayed_reportError = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.Primitives_printString("Uncaught Error: " + $.S($.get$error$x(t1)));
    t1 = t1.get$stackTrace();
    if (t1 != null)
      $.Primitives_printString("Stack Trace:\n" + $.S(t1) + "\n");
  }
};

$$.AsyncError_throwDelayed_anon = {"": "Closure;this_1,reportError_2",
  call$0: function() {
    this.reportError_2.call$0();
    throw $.$$throw($.get$error$x(this.this_1));
  }
};

$$._CompleterImpl = {"": "Object;future,_isComplete",
  complete$1: function(_, value) {
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    this.future._liblib1$_setValue$1(value);
  },
  completeError$2: function(error, stackTrace) {
    var asyncError;
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    asyncError = typeof error === "object" && error !== null && !!error.$isAsyncError ? error : $.AsyncError$(error, stackTrace);
    this.future._setError$1(asyncError);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  }
};

$$._FutureListenerWrapper = {"": "Object;future,_nextListener@",
  _sendValue$1: function(value) {
    this.future._liblib1$_setValue$1(value);
  },
  _sendError$1: function(error) {
    this.future._setError$1(error);
  }
};

$$._FutureImpl = {"": "Object;_state@,_resultOrListeners<",
  get$_isComplete: function() {
    return this._state !== 0;
  },
  get$_hasValue: function() {
    return this._state === 1;
  },
  get$_hasError: function() {
    return (this._state & 2) !== 0;
  },
  get$_hasUnhandledError: function() {
    return (this._state & 4) !== 0;
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (!this.get$_isComplete()) {
      if (onError == null) {
        t1 = $._ThenFuture$(f);
        t1._subscribeTo$1(this);
        return t1;
      }
      t1 = $._SubscribeFuture$(f, onError);
      t1._subscribeTo$1(this);
      return t1;
    }
    if (this.get$_hasError()) {
      if (onError != null)
        return this._handleError$2(onError, null);
      return $._FutureWrapper$(this);
    } else
      return this._handleValue$1(f);
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1;
    if (this.get$_hasValue())
      return $._FutureWrapper$(this);
    if (!this.get$_isComplete()) {
      t1 = $._CatchErrorFuture$(f, test);
      t1._subscribeTo$1(this);
      return t1;
    } else
      return this._handleError$2(f, test);
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  whenComplete$1: function(action) {
    var whenFuture = $._WhenFuture$(action);
    if (!this.get$_isComplete())
      this._addListener$1(whenFuture);
    else if (this.get$_hasValue())
      $.Timer_run(new $._FutureImpl_whenComplete_anon(whenFuture, this._resultOrListeners));
    else {
      this._state = (this._state & 4294967291) >>> 0;
      $.Timer_run(new $._FutureImpl_whenComplete_anon0(whenFuture, this._resultOrListeners));
    }
    return whenFuture;
  },
  _handleValue$1: function(onValue) {
    var thenFuture = $._ThenFuture$(onValue);
    $.Timer_run(new $._FutureImpl__handleValue_anon(thenFuture, this._resultOrListeners));
    return thenFuture;
  },
  _handleError$2: function(onError, test) {
    var error, errorFuture;
    this._state = (this._state & 4294967291) >>> 0;
    error = this._resultOrListeners;
    errorFuture = $._CatchErrorFuture$(onError, test);
    $.Timer_run(new $._FutureImpl__handleError_anon(error, errorFuture));
    return errorFuture;
  },
  _liblib1$_setValue$1: function(value) {
    var listeners, listeners0;
    if (this.get$_isComplete())
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 1;
    this._resultOrListeners = value;
    for (; listeners != null; listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  get$_liblib1$_setValue: function() {
    return new $.BoundClosure$1(this, "_liblib1$_setValue$1");
  },
  _setError$1: function(error) {
    var listeners, listeners0;
    if (this.get$_isComplete())
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 2;
    this._resultOrListeners = error;
    if (listeners == null) {
      this._scheduleUnhandledError$0();
      return;
    }
    do {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
      if (listeners0 != null) {
        listeners = listeners0;
        continue;
      } else
        break;
    } while (true);
  },
  get$_setError: function() {
    return new $.BoundClosure$1(this, "_setError$1");
  },
  _scheduleUnhandledError$0: function() {
    this._state = (this._state | 4) >>> 0;
    $.Timer_run(new $._FutureImpl__scheduleUnhandledError_anon(this));
  },
  _addListener$1: function(listener) {
    listener.set$_nextListener(this._resultOrListeners);
    this._resultOrListeners = listener;
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; current != null; prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    if (!this.get$_isComplete())
      this._addListener$1(future._asListener$0());
    else if (this.get$_hasValue())
      future._liblib1$_setValue$1(this._resultOrListeners);
    else {
      this._state = (this._state & 4294967291) >>> 0;
      future._setError$1(this._resultOrListeners);
    }
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!result.$isFuture)
      if (!!result.$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_liblib1$_setValue(), this.get$_setError());
        return;
      }
    else
      this._liblib1$_setValue$1(result);
  },
  _asListener$0: function() {
    return $._FutureListenerWrapper$(this);
  },
  _FutureImpl$immediate$1: function(value) {
    this._state = 1;
    this._resultOrListeners = value;
  },
  $is_FutureImpl: true,
  $isFuture: true
};

$$._FutureImpl__FutureImpl$wait_handleError = {"": "Closure;box_0",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.values_1 != null) {
      t1.values_1 = null;
      t1.completer_0.completeError$2($.get$error$x(error), error.get$stackTrace());
    }
  }
};

$$._FutureImpl__FutureImpl$wait_anon = {"": "Closure;box_0,pos_1",
  call$1: function(value) {
    var t1, t2;
    t1 = this.box_0;
    t2 = t1.values_1;
    if (t2 == null)
      return;
    $.$indexSet$ax(t2, this.pos_1, value);
    t1.remaining_2 = $.$sub$n(t1.remaining_2, 1);
    if ($.$eq(t1.remaining_2, 0) === true) {
      t2 = t1.completer_0;
      t2.complete$1(t2, t1.values_1);
    }
  }
};

$$._FutureImpl_whenComplete_anon = {"": "Closure;whenFuture_0,value_1",
  call$0: function() {
    this.whenFuture_0._sendValue$1(this.value_1);
  }
};

$$._FutureImpl_whenComplete_anon0 = {"": "Closure;whenFuture_2,error_3",
  call$0: function() {
    this.whenFuture_2._sendError$1(this.error_3);
  }
};

$$._FutureImpl__handleValue_anon = {"": "Closure;thenFuture_0,value_1",
  call$0: function() {
    this.thenFuture_0._sendValue$1(this.value_1);
  }
};

$$._FutureImpl__handleError_anon = {"": "Closure;error_0,errorFuture_1",
  call$0: function() {
    this.errorFuture_1._sendError$1(this.error_0);
  }
};

$$._FutureImpl__scheduleUnhandledError_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1, error, t2;
    t1 = this.this_0;
    if (t1.get$_hasUnhandledError()) {
      t1.set$_state($.$and$n(t1.get$_state(), 4294967291));
      error = t1.get$_resultOrListeners();
      t1 = $.getInterceptor$x(error);
      $.Primitives_printString("Uncaught Error: " + $.S(t1.get$error(error)));
      t2 = error.get$stackTrace();
      if (t2 != null)
        $.Primitives_printString("Stack Trace:\n" + $.S(t2) + "\n");
      throw $.$$throw(t1.get$error(error));
    }
  }
};

$$._TransformFuture = {"": "_FutureImpl;_nextListener@",
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._ThenFuture = {"": "_TransformFuture;_onValue,_nextListener,_state,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _sendValue$1: function(value) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  _sendError$1: function(error) {
    this._setError$1(error);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._CatchErrorFuture = {"": "_TransformFuture;_test,_onError,_nextListener,_state,_resultOrListeners",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendValue$1: function(value) {
    this._liblib1$_setValue$1(value);
  },
  _sendError$1: function(error) {
    var matchesTest, e, s, result, e0, e1, s0, exception, t1;
    if (this._test != null) {
      matchesTest = null;
      try {
        matchesTest = this._test$1($.get$error$x(error));
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e, s, error));
        return;
      }

      if (matchesTest !== true) {
        this._setError$1(error);
        return;
      }
    }
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e0 = t1;
        this._setError$1(e0);
        return;
      } else {
        e1 = t1;
        s0 = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e1, s0, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: null,
  $asFuture: null
};

$$._SubscribeFuture = {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendError$1: function(error) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e0, s, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._WhenFuture = {"": "_TransformFuture;_action,_nextListener,_state,_resultOrListeners",
  _action$0: function() {
    return this._action.call$0();
  },
  _sendValue$1: function(value) {
    var result, resultFuture, e, e0, s, t1, exception;
    try {
      result = this._action$0();
      t1 = result;
      if (typeof t1 === "object" && t1 !== null && !!t1.$isFuture) {
        resultFuture = result;
        resultFuture.then$2$onError(new $._WhenFuture__sendValue_anon(this, value), this.get$_setError());
        return;
      }
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._liblib1$_setValue$1(value);
  },
  _sendError$1: function(error) {
    var t1, result, resultFuture, e, e0, s, t2, exception;
    t1 = {};
    t1.error_0 = error;
    try {
      result = this._action$0();
      t2 = result;
      if (typeof t2 === "object" && t2 !== null && !!t2.$isFuture) {
        resultFuture = result;
        resultFuture.then$2$onError(new $._WhenFuture__sendError_anon(t1, this), this.get$_setError());
        return;
      }
    } catch (exception) {
      t2 = $.unwrapException(exception);
      if (typeof t2 === "object" && t2 !== null && !!t2.$isAsyncError) {
        e = t2;
        t1.error_0 = e;
      } else {
        e0 = t2;
        s = $.getTraceFromException(exception);
        t1.error_0 = $.AsyncError$withCause(e0, s, t1.error_0);
      }
    }

    this._setError$1(t1.error_0);
  },
  $as_FutureImpl: null,
  $asFuture: null
};

$$._WhenFuture__sendValue_anon = {"": "Closure;this_0,value_1",
  call$1: function(_) {
    this.this_0._liblib1$_setValue$1(this.value_1);
  }
};

$$._WhenFuture__sendError_anon = {"": "Closure;box_0,this_1",
  call$1: function(_) {
    this.this_1._setError$1(this.box_0.error_0);
  }
};

$$._FutureWrapper = {"": "Object;_future",
  then$2$onError: function($function, onError) {
    return this._future.then$2$onError($function, onError);
  },
  then$1: function($function) {
    return this.then$2$onError($function, null);
  },
  catchError$2$test: function($function, test) {
    return this._future.catchError$2$test($function, test);
  },
  catchError$1: function($function) {
    return this.catchError$2$test($function, null);
  },
  whenComplete$1: function(action) {
    return this._future.whenComplete$1(action);
  },
  $isFuture: true
};

$$.Stream = {"": "Object;",
  get$length: function(_) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.count_0 = 0;
    t2 = new $.Stream_length_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_length_anon0(t1, future), t3, true);
    return future;
  }
};

$$.Stream_length_anon = {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$add$ns(t1.count_0, 1);
  }
};

$$.Stream_length_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._liblib1$_setValue$1(this.box_0.count_0);
  }
};

$$.StreamSubscription = {"": "Object;"};

$$.StreamSink = {"": "EventSink;"};

$$.EventSink = {"": "Object;"};

$$.StreamController = {"": "StreamSink;stream",
  add$1: function(_, value) {
    return this.stream._liblib1$_add$1(value);
  }
};

$$._MultiControllerStream = {"": "_MultiStreamImpl;_subscriptionHandler,_pauseHandler,_nextLink,_previousLink,_state,_pendingEvents",
  _subscriptionHandler$0: function() {
    return this._subscriptionHandler.call$0();
  },
  _pauseHandler$0: function() {
    return this._pauseHandler.call$0();
  },
  _onSubscriptionStateChange$0: function() {
    var e, s, exception, t1;
    if (this._subscriptionHandler != null)
      try {
        this._subscriptionHandler$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$(e, s).throwDelayed$0();
      }

  },
  _onPauseStateChange$0: function() {
    var e, s, exception, t1;
    if (this._pauseHandler != null)
      try {
        this._pauseHandler$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$(e, s).throwDelayed$0();
      }

  }
};

$$._StreamImpl = {"": "Stream;_state@",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    var subscription;
    if (this.get$_isComplete())
      return $._DoneSubscription$(onDone);
    if (onError == null)
      onError = $._nullErrorHandler;
    if (onDone == null)
      onDone = $._nullDoneHandler;
    subscription = this._createSubscription$4(onData, onError, onDone, true === unsubscribeOnError);
    this._addListener$1(subscription);
    return subscription;
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  _liblib1$_add$1: function(value) {
    if (this.get$_liblib1$_isClosed())
      throw $.$$throw($.StateError$("Sending on closed stream"));
    if (!this.get$_mayFireState()) {
      this._addPendingEvent$1($._DelayedData$(value));
      return;
    }
    if (this.get$_hasPendingEvent())
      this._addPendingEvent$1($._DelayedData$(value));
    else
      this._sendData$1(value);
    this._handlePendingEvents$0();
  },
  get$_liblib1$_isClosed: function() {
    return $.$and$n(this._state, 1) !== 0;
  },
  get$_isComplete: function() {
    return $.$and$n(this._state, 2) !== 0;
  },
  get$_isPaused: function() {
    var t1 = this._state;
    if (typeof t1 !== "number")
      return this.get$_isPaused$bailout(1, t1);
    return t1 >= 64;
  },
  get$_isPaused$bailout: function(state0, t1) {
    return $.$ge$n(t1, 64);
  },
  get$_isInputPaused: function() {
    var t1 = this._state;
    if (typeof t1 !== "number")
      return this.get$_isInputPaused$bailout(1, t1);
    return t1 >= 32;
  },
  get$_isInputPaused$bailout: function(state0, t1) {
    return $.$ge$n(t1, 32);
  },
  get$_hasPendingResume: function() {
    return $.$and$n(this._state, 32) !== 0;
  },
  get$_isInactive: function() {
    return $.$and$n(this._state, 24) === 0;
  },
  get$_isInCallback: function() {
    return $.$and$n(this._state, 16) !== 0;
  },
  get$_isFiring: function() {
    return $.$and$n(this._state, 8) !== 0;
  },
  get$_hasPendingEvent: function() {
    var t1 = this._pendingEvents;
    return t1 != null && t1.get$isEmpty(t1) !== true;
  },
  get$_currentEventIdBit: function() {
    var t1 = this._state;
    if (typeof t1 !== "number")
      return this.get$_currentEventIdBit$bailout(1, t1);
    return $.JSInt_methods.$shr(t1 & 4, 2);
  },
  get$_currentEventIdBit$bailout: function(state0, t1) {
    return $.JSInt_methods.$shr($.$and$n(t1, 4), 2);
  },
  get$_mayFireState: function() {
    return $.$and$n(this._state, 4294967256) === 0;
  },
  _incrementPauseCount$1: function(listener) {
    listener._incrementPauseCount$0();
    this._state = $.$and$n(this._state, 4294967263);
    this._updatePauseCount$1(1);
  },
  _decrementPauseCount$1: function(listener) {
    listener._decrementPauseCount$0();
    this._updatePauseCount$1(-1);
  },
  _updatePauseCount$1: function(by) {
    var oldState = this._state;
    if (by >= 0)
      this._state = $.$add$ns(oldState, by << 6 >>> 0);
    else
      this._state = $.$sub$n(oldState, -by << 6 >>> 0);
  },
  _startFiring$0: function() {
    this._state = $.$xor$n(this._state, 12);
  },
  _endFiring$1: function(wasInputPaused) {
    this._state = $.$xor$n(this._state, 8);
    this._checkCallbacks$2(true, wasInputPaused);
  },
  _pause$2: function(listener, resumeSignal) {
    var wasInputPaused, wasPaused;
    if (!listener.get$_isSubscribed())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    wasInputPaused = this.get$_isInputPaused();
    wasPaused = this.get$_isPaused();
    this._incrementPauseCount$1(listener);
    if (resumeSignal != null)
      resumeSignal.whenComplete$1(new $._StreamImpl__pause_anon(this, listener));
    if (wasPaused !== true && this.get$_hasPendingEvent() && this._pendingEvents.get$isScheduled())
      this._pendingEvents.cancelSchedule$0();
    if (this.get$_isInactive() && wasInputPaused !== true) {
      this._checkCallbacks$2(true, false);
      if (this.get$_isPaused() !== true && this.get$_hasPendingEvent())
        this._pendingEvents.schedule$1(this);
    }
  },
  _resume$2: function(listener, fromEvent) {
    if (!listener.get$isPaused())
      return;
    this._decrementPauseCount$1(listener);
    if (this.get$_isPaused() !== true)
      if (this.get$_hasPendingEvent()) {
        this._state = $.$or$n(this._state, 32);
        if (this.get$_isInactive())
          if (fromEvent)
            this._handlePendingEvents$0();
          else
            this._pendingEvents.schedule$1(this);
      } else if (this.get$_isInactive()) {
        this._checkCallbacks$2(true, true);
        if (this.get$_isPaused() !== true && this.get$_hasPendingEvent())
          if (fromEvent)
            this._handlePendingEvents$0();
          else
            this._pendingEvents.schedule$1(this);
      }
  },
  _checkCallbacks$2: function(hadSubscribers, wasPaused) {
    var hasSubscribers, isPaused;
    if (this.get$_isInCallback())
      return;
    if (this.get$_hasPendingResume() && !this.get$_hasPendingEvent())
      this._state = $.$xor$n(this._state, 32);
    this._state = $.$or$n(this._state, 16);
    for (; true; wasPaused = isPaused, hadSubscribers = hasSubscribers) {
      hasSubscribers = this.get$_hasSubscribers();
      isPaused = this.get$_isInputPaused();
      if (hadSubscribers !== hasSubscribers)
        this._onSubscriptionStateChange$0();
      else if ($.$eq(isPaused, wasPaused) !== true)
        this._onPauseStateChange$0();
      else {
        this._state = $.$xor$n(this._state, 16);
        return;
      }
    }
  },
  _onPauseStateChange$0: function() {
  },
  _onSubscriptionStateChange$0: function() {
  },
  _addPendingEvent$1: function($event) {
    var events;
    if (this._pendingEvents == null)
      this._pendingEvents = $._StreamImplEvents$();
    events = this._pendingEvents;
    events.add$1(events, $event);
    if (this.get$_isPaused() === true || this.get$_isFiring())
      return;
    if (this.get$_isInCallback()) {
      this._pendingEvents.schedule$1(this);
      return;
    }
  },
  _handlePendingEvents$0: function() {
    if (!this.get$_hasPendingEvent())
      return;
    var events = this._pendingEvents;
    do {
      if (this.get$_isPaused() === true)
        return;
      if (events.get$isScheduled())
        events.cancelSchedule$0();
      events.handleNext$1(this);
    } while (events.get$isEmpty(events) !== true);
  },
  _sendData$1: function(value) {
    if (!this.get$_hasSubscribers())
      return;
    this._forEachSubscriber$1(new $._StreamImpl__sendData_anon(value));
  },
  _sendError$1: function(error) {
    if (!this.get$_hasSubscribers())
      return;
    this._forEachSubscriber$1(new $._StreamImpl__sendError_anon(error));
  }
};

$$._StreamImpl__pause_anon = {"": "Closure;this_0,listener_1",
  call$0: function() {
    this.this_0._resume$2(this.listener_1, true);
  }
};

$$._StreamImpl__sendData_anon = {"": "Closure;value_0",
  call$1: function(subscriber) {
    var e, e0, s, exception, t1;
    try {
      subscriber._sendData$1(this.value_0);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        e.throwDelayed$0();
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$(e0, s).throwDelayed$0();
      }
    }

  }
};

$$._StreamImpl__sendError_anon = {"": "Closure;error_0",
  call$1: function(subscriber) {
    var e, e0, s, exception, t1;
    try {
      subscriber._sendError$1(this.error_0);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        e.throwDelayed$0();
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$withCause(e0, s, this.error_0).throwDelayed$0();
      }
    }

  }
};

$$._MultiStreamImpl = {"": "_StreamImpl;_nextLink@,_previousLink@",
  get$_hasSubscribers: function() {
    return !$._InternalLinkList_isEmpty(this);
  },
  _createSubscription$4: function(onData, onError, onDone, unsubscribeOnError) {
    return $._StreamSubscriptionImpl$(this, onData, onError, onDone, unsubscribeOnError);
  },
  _forEachSubscriber$1: function(action) {
    var wasInputPaused, cursor, cursor0;
    if (!this.get$_hasSubscribers())
      return;
    wasInputPaused = this.get$_isInputPaused();
    this._startFiring$0();
    cursor = this._nextLink;
    for (; cursor !== this; cursor = cursor0) {
      if (cursor._needsEvent$1(this.get$_currentEventIdBit())) {
        action.call$1(cursor);
        cursor._toggleEventReceived$0();
      }
      cursor0 = cursor.get$_nextLink();
      if (cursor.get$_isPendingUnsubscribe())
        this._removeListener$1(cursor);
    }
    this._endFiring$1(wasInputPaused);
  },
  _addListener$1: function(listener) {
    var hadSubscribers;
    listener._setSubscribed$1(this.get$_currentEventIdBit());
    hadSubscribers = this.get$_hasSubscribers();
    $._InternalLinkList_add(this, listener);
    if (!hadSubscribers && this.get$_isInactive()) {
      this._checkCallbacks$2(false, false);
      if (this.get$_isPaused() !== true && this.get$_hasPendingEvent())
        this._pendingEvents.schedule$1(this);
    }
  },
  _cancel$1: function(listener) {
    var wasInputPaused;
    if (listener === listener._nextLink)
      return;
    if (this.get$_isFiring())
      if (listener._needsEvent$1(this.get$_currentEventIdBit()))
        listener._setPendingUnsubscribe$1(this.get$_currentEventIdBit());
      else
        this._removeListener$1(listener);
    else {
      wasInputPaused = this.get$_isInputPaused();
      this._removeListener$1(listener);
      if (this.get$_isInactive()) {
        this._checkCallbacks$2(true, wasInputPaused);
        if (this.get$_isPaused() !== true && this.get$_hasPendingEvent())
          this._pendingEvents.schedule$1(this);
      }
    }
  },
  _removeListener$1: function(listener) {
    var pauseCount, t1;
    pauseCount = listener._setUnsubscribed$0();
    $._InternalLink_unlink(listener);
    if (pauseCount > 0) {
      this._updatePauseCount$1(-pauseCount);
      if (this.get$_isPaused() !== true && this.get$_hasPendingEvent()) {
        t1 = this._state;
        if (typeof t1 !== "number")
          return this._removeListener$1$bailout(1, t1);
        this._state = (t1 | 32) >>> 0;
      }
    }
  },
  _removeListener$1$bailout: function(state0, t1) {
    switch (state0) {
      case 0:
        pauseCount = listener._setUnsubscribed$0();
        $._InternalLink_unlink(listener);
      case 1:
        var pauseCount;
        if (state0 === 1 || state0 === 0 && pauseCount > 0)
          switch (state0) {
            case 0:
              this._updatePauseCount$1(-pauseCount);
            case 1:
              if (state0 === 1 || state0 === 0 && this.get$_isPaused() !== true && this.get$_hasPendingEvent())
                switch (state0) {
                  case 0:
                    t1 = this._state;
                  case 1:
                    state0 = 0;
                    this._state = $.$or$n(t1, 32);
                }
          }
    }
  },
  _MultiStreamImpl$0: function() {
    this._previousLink = this;
    this._nextLink = this;
  }
};

$$._StreamSubscriptionImpl = {"": "_StreamListener;_unsubscribeOnError,_liblib1$_onData,_onError,_onDone,_source,_state,_nextLink,_previousLink",
  _liblib1$_onData$1: function(arg0) {
    return this._liblib1$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendData$1: function(data) {
    this._liblib1$_onData$1(data);
  },
  _sendError$1: function(error) {
    this._onError$1(error);
    if (this._unsubscribeOnError)
      this._source._cancel$1(this);
  },
  cancel$0: function() {
    this._source._cancel$1(this);
  },
  pause$1: function(_, resumeSignal) {
    this._source._pause$2(this, resumeSignal);
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  }
};

$$._DelayedEvent = {"": "Object;next@"};

$$._DelayedData = {"": "_DelayedEvent;value,next",
  perform$1: function(stream) {
    stream._sendData$1(this.value);
  }
};

$$._InternalLink = {"": "Object;_nextLink@,_previousLink@",
  _InternalLink$0: function() {
    this._nextLink = this;
    this._previousLink = this;
  }
};

$$._StreamListener = {"": "_InternalLink;_state@",
  get$isPaused: function() {
    return this._state >= 8;
  },
  get$_isPendingUnsubscribe: function() {
    return (this._state & 2) !== 0;
  },
  get$_isSubscribed: function() {
    return (this._state & 1) !== 0;
  },
  _needsEvent$1: function(currentEventIdBit) {
    return $.JSInt_methods.$shr(this._state & 4, 2) !== currentEventIdBit;
  },
  _toggleEventReceived$0: function() {
    this._state = (this._state ^ 4) >>> 0;
  },
  _setSubscribed$1: function(eventIdBit) {
    this._state = (1 | eventIdBit << 2) >>> 0;
  },
  _setPendingUnsubscribe$1: function(currentEventIdBit) {
    this._state = (this._state | 6) >>> 0;
    this._state = (this._state ^ (1 ^ currentEventIdBit) << 2) >>> 0;
  },
  _setUnsubscribed$0: function() {
    var timesPaused = $.JSNumber_methods.$shr(this._state, 3);
    this._state = 0;
    return timesPaused;
  },
  _incrementPauseCount$0: function() {
    this._state = this._state + 8;
  },
  _decrementPauseCount$0: function() {
    this._state = this._state - 8;
  }
};

$$._PendingEvents = {"": "Object;scheduleTimer?",
  get$isScheduled: function() {
    return this.scheduleTimer != null;
  },
  schedule$1: function(stream) {
    if (this.get$isScheduled())
      return;
    this.scheduleTimer = $.Timer_Timer($.CONSTANT4, new $._PendingEvents_schedule_anon(this, stream));
  },
  cancelSchedule$0: function() {
    this.scheduleTimer.cancel$0();
    this.scheduleTimer = null;
  }
};

$$._PendingEvents_schedule_anon = {"": "Closure;this_0,stream_1",
  call$0: function() {
    this.this_0.set$scheduleTimer(null);
    this.stream_1._handlePendingEvents$0();
  }
};

$$._StreamImplEvents = {"": "_PendingEvents;firstPendingEvent,lastPendingEvent,scheduleTimer",
  get$isEmpty: function(_) {
    return this.lastPendingEvent == null;
  },
  get$isScheduled: function() {
    return this.scheduleTimer != null;
  },
  add$1: function(_, $event) {
    var t1 = this.lastPendingEvent;
    if (t1 == null) {
      this.lastPendingEvent = $event;
      this.firstPendingEvent = $event;
    } else {
      t1.set$next($event);
      this.lastPendingEvent = $event;
    }
  },
  handleNext$1: function(stream) {
    var $event = this.firstPendingEvent;
    this.firstPendingEvent = $event.get$next();
    if (this.firstPendingEvent == null)
      this.lastPendingEvent = null;
    $event.perform$1(stream);
  }
};

$$._DoneSubscription = {"": "Object;_handler<,_timer,_liblib1$_pauseCount",
  _handler$0: function() {
    return this._handler.call$0();
  },
  _delayDone$0: function() {
    this._timer = $.Timer_Timer($.CONSTANT4, new $._DoneSubscription__delayDone_anon(this));
  },
  get$_isComplete: function() {
    return this._timer == null && this._liblib1$_pauseCount === 0;
  },
  pause$1: function(_, signal) {
    var t1;
    if (this.get$_isComplete())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    t1 = this._timer;
    if (t1 != null) {
      t1.cancel$0();
      this._timer = null;
    }
    this._liblib1$_pauseCount = this._liblib1$_pauseCount + 1;
    if (signal != null)
      signal.whenComplete$1(this.get$resume());
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  },
  resume$0: function() {
    if (this.get$_isComplete())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._liblib1$_pauseCount;
    if (t1 === 0)
      return;
    this._liblib1$_pauseCount = t1 - 1;
    if (this._liblib1$_pauseCount === 0)
      this._delayDone$0();
  },
  get$resume: function() {
    return new $.BoundClosure$0(this, "resume$0");
  },
  cancel$0: function() {
    if (this.get$_isComplete())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._timer;
    if (t1 != null) {
      t1.cancel$0();
      this._timer = null;
    }
    this._liblib1$_pauseCount = 0;
  },
  _DoneSubscription$1: function(_handler) {
    this._delayDone$0();
  }
};

$$._DoneSubscription__delayDone_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    if (t1.get$_handler() != null)
      t1._handler$0();
  }
};

$$.Timer_run_anon = {"": "Closure;",
  call$0: function() {
    var runCallbacks, i, callback, newCallbacks, exception;
    runCallbacks = $.get$Timer__runCallbacks();
    $.Timer__runCallbacks = [];
    for (i = 0; $.$lt$n(i, $.get$length$asx(runCallbacks)) === true; i = $.$add$ns(i, 1)) {
      callback = $.$index$asx(runCallbacks, i);
      try {
        callback.call$0();
      } catch (exception) {
        $.unwrapException(exception);
        newCallbacks = $.get$Timer__runCallbacks();
        $.Timer__runCallbacks = [];
        i = $.$add$ns(i, 1);
        $.addAll$1$ax($.get$Timer__runCallbacks(), $.sublist$1$ax(runCallbacks, i));
        $.addAll$1$ax($.get$Timer__runCallbacks(), newCallbacks);
        throw exception;
      }

    }
  }
};

$$._HashMapTable = {"": "_HashTable;_table,_capacity,_entryCount,_deletedCount,_modificationCount,_container",
  get$_entrySize: function() {
    return 2;
  },
  _value$1: function(offset) {
    var t1, t3;
    if (typeof offset !== "number")
      return this._value$1$bailout(1, offset);
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._value$1$bailout(2, offset, t1);
    t3 = offset + 1;
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  _value$1$bailout: function(state0, offset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._table;
      case 2:
        state0 = 0;
        return $.$index$asx(t1, $.$add$ns(offset, 1));
    }
  },
  _setValue$2: function(offset, value) {
    $.$indexSet$ax(this._table, $.$add$ns(offset, 1), value);
  },
  _copyEntry$3: function(fromTable, fromOffset, toOffset) {
    var t1, t3, t4;
    if (typeof fromTable !== "object" || fromTable === null || (fromTable.constructor !== Array || !!fromTable.immutable$list) && !fromTable.$isJavaScriptIndexingBehavior())
      return this._copyEntry$3$bailout1(1, fromTable, fromOffset, toOffset);
    if (typeof toOffset !== "number")
      return this._copyEntry$3$bailout1(1, fromTable, fromOffset, toOffset);
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._copyEntry$3$bailout1(2, fromTable, fromOffset, toOffset, t1);
    t3 = toOffset + 1;
    t4 = fromOffset + 1;
    if (t4 < 0 || t4 >= fromTable.length)
      throw $.ioore(t4);
    t4 = fromTable[t4];
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    t1[t3] = t4;
  },
  _copyEntry$3$bailout1: function(state0, fromTable, fromOffset, toOffset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._table;
      case 2:
        state0 = 0;
        $.$indexSet$ax(t1, $.$add$ns(toOffset, 1), $.$index$asx(fromTable, fromOffset + 1));
    }
  }
};

$$.HashMap = {"": "Object;_hashTable<",
  containsKey$1: function(_, key) {
    return $.$ge$n(this._hashTable._get$1(key), 0);
  },
  addAll$1: function(_, other) {
    $.forEach$1$ax(other, new $.HashMap_addAll_anon(this));
  },
  $index: function(_, key) {
    var t1, offset;
    t1 = this._hashTable;
    offset = t1._get$1(key);
    if (typeof offset !== "number")
      return this.$$index$bailout(1, t1, offset);
    if (offset >= 0)
      return t1._value$1(offset);
    return;
  },
  $$index$bailout: function(state0, t1, offset) {
    if ($.$ge$n(offset, 0))
      return t1._value$1(offset);
    return;
  },
  $indexSet: function(_, key, value) {
    var t1 = this._hashTable;
    t1._setValue$2(t1._put$1(key), value);
    t1._checkCapacity$0();
  },
  remove$1: function(_, key) {
    var t1, offset, oldValue;
    t1 = this._hashTable;
    offset = t1._remove$1(key);
    if ($.$lt$n(offset, 0))
      return;
    oldValue = t1._value$1(offset);
    t1._setValue$2(offset, null);
    t1._checkCapacity$0();
    return oldValue;
  },
  forEach$1: function(_, action) {
    var t1, modificationCount, table, entrySize, t2, offset, entry;
    t1 = this._hashTable;
    modificationCount = t1._modificationCount;
    table = t1._table;
    if (typeof table !== "object" || table === null || (table.constructor !== Array || !!table.immutable$list) && !table.$isJavaScriptIndexingBehavior())
      return this.forEach$1$bailout(1, action, table, t1, modificationCount);
    entrySize = t1.get$_entrySize();
    for (t2 = table.length, offset = 0; offset < t2; offset += entrySize) {
      if (offset < 0)
        throw $.ioore(offset);
      entry = table[offset];
      if (!t1._isFree$1(entry)) {
        action.call$2(entry, t1._value$1(offset));
        t1._checkModification$1(modificationCount);
      }
    }
  },
  forEach$1$bailout: function(state0, action, table, t1, modificationCount) {
    var entrySize, t2, offset, entry;
    entrySize = t1.get$_entrySize();
    for (t2 = $.getInterceptor$asx(table), offset = 0; offset < t2.get$length(table); offset += entrySize) {
      entry = t2.$index(table, offset);
      if (!t1._isFree$1(entry)) {
        action.call$2(entry, t1._value$1(offset));
        t1._checkModification$1(modificationCount);
      }
    }
  },
  get$keys: function(_) {
    return $._HashTableKeyIterable$(this._hashTable);
  },
  get$values: function(_) {
    return $._HashTableValueIterable$(this._hashTable, 1);
  },
  get$length: function(_) {
    return this._hashTable.get$_elementCount();
  },
  get$isEmpty: function(_) {
    return this._hashTable.get$_elementCount() === 0;
  },
  toString$0: function(_) {
    return $.ToString_mapToString(this);
  },
  HashMap$0: function() {
    this._hashTable._container = this;
  },
  $isMap: function() {
    return true;
  },
  $asMap: function() {
    return null;
  }
};

$$.HashMap_addAll_anon = {"": "Closure;this_0",
  call$2: function(key, value) {
    var t1, offset;
    t1 = this.this_0;
    offset = t1.get$_hashTable()._put$1(key);
    t1.get$_hashTable()._setValue$2(offset, value);
    t1.get$_hashTable()._checkCapacity$0();
  }
};

$$._DeadEntry = {"": "Object;"};

$$._NullKey = {"": "Object;",
  get$hashCode: function(_) {
    return $.JSNull_methods.get$hashCode(null);
  }
};

$$._HashTable = {"": "Object;",
  _key$1: function(offset) {
    var t1, key;
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._key$1$bailout(1, offset, t1);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    key = t1[offset];
    if (key !== $.CONSTANT1)
      return key;
    return;
  },
  _key$1$bailout: function(state0, offset, t1) {
    var key = $.$index$asx(t1, offset);
    if (key !== $.CONSTANT1)
      return key;
    return;
  },
  get$_elementCount: function() {
    return this._entryCount - this._deletedCount;
  },
  get$_entrySize: function() {
    return 1;
  },
  _checkModification$1: function(expectedModificationCount) {
    if (this._modificationCount !== expectedModificationCount)
      throw $.$$throw($.ConcurrentModificationError$(this._container));
  },
  _recordModification$0: function() {
    this._modificationCount = this._modificationCount + 1 & 1073741823;
  },
  _createTable$1: function(capacity) {
    return $.List_List($.$mul$n(capacity, this.get$_entrySize()));
  },
  _nextProbe$3: function(previousIndex, probeCount, capacity) {
    if (typeof capacity !== "number")
      return this._nextProbe$3$bailout(1, previousIndex, probeCount, capacity);
    return (previousIndex + probeCount & capacity - 1) >>> 0;
  },
  _nextProbe$3$bailout: function(state0, previousIndex, probeCount, capacity) {
    var t1 = $.$sub$n(capacity, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return (previousIndex + probeCount & t1) >>> 0;
  },
  _isFree$1: function(marker) {
    return marker == null || marker === $.CONSTANT0;
  },
  _probeForAdd$2: function(hashCode, object) {
    var entrySize, index, t1, firstTombstone, probeCount, offset, entry;
    entrySize = this.get$_entrySize();
    index = $.$and$n(hashCode, $.$sub$n(this._capacity, 1));
    for (t1 = null == object, firstTombstone = -1, probeCount = 0; true;) {
      offset = index * entrySize;
      entry = $.$index$asx(this._table, offset);
      if (entry === $.CONSTANT0) {
        if (firstTombstone < 0)
          firstTombstone = offset;
      } else if (entry == null) {
        if (firstTombstone < 0)
          return offset;
        return firstTombstone;
      } else if (($.CONSTANT1 === entry ? t1 : $.$eq(entry, object)) === true)
        return offset;
      ++probeCount;
      index = this._nextProbe$3(index, probeCount, this._capacity);
    }
  },
  _probeForLookup$2: function(hashCode, object) {
    var entrySize, index, t1, probeCount, offset, entry;
    entrySize = this.get$_entrySize();
    index = $.$and$n(hashCode, $.$sub$n(this._capacity, 1));
    for (t1 = null == object, probeCount = 0; true;) {
      offset = index * entrySize;
      entry = $.$index$asx(this._table, offset);
      if (entry == null)
        return -1;
      else if ($.CONSTANT0 !== entry)
        if (($.CONSTANT1 === entry ? t1 : $.$eq(entry, object)) === true)
          return offset;
      ++probeCount;
      index = this._nextProbe$3(index, probeCount, this._capacity);
    }
  },
  _checkCapacity$0: function() {
    var t1, t3, freeCount;
    t1 = this._capacity;
    if (typeof t1 !== "number")
      return this._checkCapacity$0$bailout(1, t1);
    t3 = this._entryCount;
    freeCount = t1 - t3;
    if (freeCount * 4 < t1 || freeCount < this._deletedCount)
      this._grow$1(t3 - this._deletedCount);
  },
  _checkCapacity$0$bailout: function(state0, t1, t2, freeCount, t3) {
    switch (state0) {
      case 0:
        t1 = this._capacity;
      case 1:
        state0 = 0;
        freeCount = $.$sub$n(t1, this._entryCount);
        t1 = $.getInterceptor$n(freeCount);
        t2 = t1.$mul(freeCount, 4);
        t3 = this._capacity;
      case 2:
        state0 = 0;
        if ($.$lt$n(t2, t3) === true || t1.$lt(freeCount, this._deletedCount) === true)
          this._grow$1(this._entryCount - this._deletedCount);
    }
  },
  _grow$1: function(contentCount) {
    var capacity, minCapacity, oldTable;
    capacity = this._capacity;
    if (typeof capacity !== "number")
      return this._grow$1$bailout(1, contentCount, capacity);
    minCapacity = contentCount * 2;
    for (; capacity < minCapacity;)
      capacity *= 2;
    oldTable = this._table;
    this._table = this._createTable$1(capacity);
    this._capacity = capacity;
    this._entryCount = 0;
    this._deletedCount = 0;
    this._addAllEntries$1(oldTable);
    this._recordModification$0();
  },
  _grow$1$bailout: function(state0, contentCount, capacity) {
    var minCapacity, t1, oldTable;
    minCapacity = contentCount * 2;
    for (; t1 = $.getInterceptor$n(capacity), t1.$lt(capacity, minCapacity) === true;)
      capacity = t1.$mul(capacity, 2);
    oldTable = this._table;
    this._table = this._createTable$1(capacity);
    this._capacity = capacity;
    this._entryCount = 0;
    this._deletedCount = 0;
    this._addAllEntries$1(oldTable);
    this._recordModification$0();
  },
  _addAllEntries$1: function(oldTable) {
    var t1, i, object;
    if (typeof oldTable !== "object" || oldTable === null || (oldTable.constructor !== Array || !!oldTable.immutable$list) && !oldTable.$isJavaScriptIndexingBehavior())
      return this._addAllEntries$1$bailout(1, oldTable);
    for (t1 = oldTable.length, i = 0; i < t1; i += this.get$_entrySize()) {
      if (i < 0)
        throw $.ioore(i);
      object = oldTable[i];
      if (!(object == null || object === $.CONSTANT0))
        this._copyEntry$3(oldTable, i, this._put$1(object));
    }
  },
  _addAllEntries$1$bailout: function(state0, oldTable) {
    var t1, i, object;
    for (t1 = $.getInterceptor$asx(oldTable), i = 0; i < t1.get$length(oldTable); i += this.get$_entrySize()) {
      object = t1.$index(oldTable, i);
      if (!(object == null || object === $.CONSTANT0))
        this._copyEntry$3(oldTable, i, this._put$1(object));
    }
  },
  _copyEntry$3: function(fromTable, fromOffset, toOffset) {
  },
  _get$1: function(key) {
    return this._probeForLookup$2($.get$hashCode$(key), key);
  },
  _put$1: function(key) {
    var offset, t1, oldEntry;
    offset = this._probeForAdd$2($.get$hashCode$(key), key);
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._put$1$bailout(1, key, t1, offset);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    oldEntry = t1[offset];
    if (oldEntry == null)
      this._entryCount = this._entryCount + 1;
    else if (oldEntry === $.CONSTANT0)
      this._deletedCount = this._deletedCount - 1;
    else
      return offset;
    if (key == null)
      key = $.CONSTANT1;
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._put$1$bailout(2, key, t1, offset);
    if (offset >= t1.length)
      throw $.ioore(offset);
    t1[offset] = key;
    this._recordModification$0();
    return offset;
  },
  _put$1$bailout: function(state0, key, t1, offset) {
    switch (state0) {
      case 0:
        offset = this._probeForAdd$2($.get$hashCode$(key), key);
        t1 = this._table;
      case 1:
        state0 = 0;
        oldEntry = $.$index$asx(t1, offset);
        if (oldEntry == null)
          this._entryCount = this._entryCount + 1;
        else if (oldEntry === $.CONSTANT0)
          this._deletedCount = this._deletedCount - 1;
        else
          return offset;
        if (key == null)
          key = $.CONSTANT1;
        t1 = this._table;
      case 2:
        var oldEntry;
        state0 = 0;
        $.$indexSet$ax(t1, offset, key);
        this._recordModification$0();
        return offset;
    }
  },
  _remove$1: function(key) {
    var offset = this._probeForLookup$2($.get$hashCode$(key), key);
    if ($.$ge$n(offset, 0))
      this._deleteEntry$1(offset);
    return offset;
  },
  _deleteEntry$1: function(offset) {
    var key = $.CONSTANT0;
    $.$indexSet$ax(this._table, offset, key);
    this._deletedCount = this._deletedCount + 1;
    this._recordModification$0();
  },
  _HashTable$1: function(initialCapacity) {
    this._table = this._createTable$1(initialCapacity);
  }
};

$$._HashTableIterable = {"": "Iterable;_hashTable<",
  get$length: function(_) {
    return this._hashTable.get$_elementCount();
  },
  forEach$1: function(_, action) {
    var t1, entrySize, table, modificationCount, t2, offset, entry;
    t1 = this._hashTable;
    entrySize = t1.get$_entrySize();
    table = t1._table;
    if (typeof table !== "object" || table === null || (table.constructor !== Array || !!table.immutable$list) && !table.$isJavaScriptIndexingBehavior())
      return this.forEach$1$bailout1(1, action, entrySize, t1, table);
    modificationCount = t1._modificationCount;
    for (t2 = table.length, offset = 0; offset < t2; offset += entrySize) {
      if (offset < 0)
        throw $.ioore(offset);
      entry = table[offset];
      if (!t1._isFree$1(entry))
        action.call$1(this._valueAt$2(offset, entry));
      t1._checkModification$1(modificationCount);
    }
  },
  forEach$1$bailout1: function(state0, action, entrySize, t1, table) {
    var modificationCount, t2, offset, entry;
    modificationCount = t1._modificationCount;
    for (t2 = $.getInterceptor$asx(table), offset = 0; offset < t2.get$length(table); offset += entrySize) {
      entry = t2.$index(table, offset);
      if (!t1._isFree$1(entry))
        action.call$1(this._valueAt$2(offset, entry));
      t1._checkModification$1(modificationCount);
    }
  }
};

$$._HashTableIterator = {"": "Object;_hashTable<",
  moveNext$0: function() {
    var t1, table, entrySize, t2, t3, entry;
    t1 = this._hashTable;
    t1._checkModification$1(this._modificationCount);
    table = t1._table;
    if (typeof table !== "object" || table === null || (table.constructor !== Array || !!table.immutable$list) && !table.$isJavaScriptIndexingBehavior())
      return this.moveNext$0$bailout(1, table, t1);
    entrySize = t1.get$_entrySize();
    for (t2 = table.length; t3 = this._offset, t3 < t2;) {
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t2)
        throw $.ioore(t3);
      entry = table[t3];
      this._offset = t3 + entrySize;
      if (!t1._isFree$1(entry)) {
        this._liblib2$_current = this._valueAt$2(t3, entry);
        return true;
      }
    }
    this._liblib2$_current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, table, t1) {
    var entrySize, t2, currentOffset, entry;
    entrySize = t1.get$_entrySize();
    for (t2 = $.getInterceptor$asx(table); this._offset < t2.get$length(table);) {
      currentOffset = this._offset;
      entry = t2.$index(table, currentOffset);
      this._offset = currentOffset + entrySize;
      if (!t1._isFree$1(entry)) {
        this._liblib2$_current = this._valueAt$2(currentOffset, entry);
        return true;
      }
    }
    this._liblib2$_current = null;
    return false;
  },
  get$current: function() {
    return this._liblib2$_current;
  }
};

$$._HashTableKeyIterable = {"": "_HashTableIterable;_hashTable",
  get$iterator: function(_) {
    return $._HashTableKeyIterator$(this._hashTable);
  },
  _valueAt$2: function(offset, key) {
    if (key === $.CONSTANT1)
      return;
    return key;
  }
};

$$._HashTableKeyIterator = {"": "_HashTableIterator;_hashTable,_modificationCount,_offset,_liblib2$_current",
  _valueAt$2: function(offset, key) {
    if (key === $.CONSTANT1)
      return;
    return key;
  }
};

$$._HashTableValueIterable = {"": "_HashTableIterable;_entryIndex,_hashTable",
  get$iterator: function(_) {
    return $._HashTableValueIterator$(this._hashTable, this._entryIndex);
  },
  _valueAt$2: function(offset, key) {
    var t1, t3;
    t1 = this._hashTable._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._valueAt$2$bailout1(1, offset, t1);
    t3 = offset + this._entryIndex;
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  _valueAt$2$bailout1: function(state0, offset, t1) {
    return $.$index$asx(t1, offset + this._entryIndex);
  }
};

$$._HashTableValueIterator = {"": "_HashTableIterator;_entryIndex,_hashTable,_modificationCount,_offset,_liblib2$_current",
  _valueAt$2: function(offset, key) {
    var t1, t3;
    if (typeof offset !== "number")
      return this._valueAt$2$bailout1(1, offset);
    t1 = this._hashTable._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._valueAt$2$bailout1(2, offset, t1);
    t3 = offset + this._entryIndex;
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  _valueAt$2$bailout1: function(state0, offset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._hashTable._table;
      case 2:
        state0 = 0;
        return $.$index$asx(t1, $.$add$ns(offset, this._entryIndex));
    }
  }
};

$$._LinkedHashMapTable = {"": "_LinkedHashTable;_table,_capacity,_entryCount,_deletedCount,_modificationCount,_container",
  get$_entrySize: function() {
    return 4;
  },
  _value$1: function(offset) {
    var t1, t3;
    if (typeof offset !== "number")
      return this._value$1$bailout(1, offset);
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._value$1$bailout(2, offset, t1);
    t3 = offset + 3;
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  _value$1$bailout: function(state0, offset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._table;
      case 2:
        state0 = 0;
        return $.$index$asx(t1, $.$add$ns(offset, 3));
    }
  },
  _setValue$2: function(offset, value) {
    $.$indexSet$ax(this._table, $.$add$ns(offset, 3), value);
  },
  _copyEntry$3: function(oldTable, fromOffset, toOffset) {
    var t1, t3, t4;
    if (typeof oldTable !== "object" || oldTable === null || (oldTable.constructor !== Array || !!oldTable.immutable$list) && !oldTable.$isJavaScriptIndexingBehavior())
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    if (typeof fromOffset !== "number")
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    if (typeof toOffset !== "number")
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._copyEntry$3$bailout1(2, oldTable, fromOffset, toOffset, t1);
    t3 = toOffset + 3;
    t4 = fromOffset + 3;
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= oldTable.length)
      throw $.ioore(t4);
    t4 = oldTable[t4];
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    t1[t3] = t4;
  },
  _copyEntry$3$bailout1: function(state0, oldTable, fromOffset, toOffset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._table;
      case 2:
        state0 = 0;
        $.$indexSet$ax(t1, $.$add$ns(toOffset, 3), $.$index$asx(oldTable, $.$add$ns(fromOffset, 3)));
    }
  }
};

$$.LinkedHashMap = {"": "Object;_hashTable<",
  addAll$1: function(_, other) {
    $.forEach$1$ax(other, new $.LinkedHashMap_addAll_anon(this));
  },
  $index: function(_, key) {
    var t1, offset;
    t1 = this._hashTable;
    offset = t1._get$1(key);
    if ($.$ge$n(offset, 0))
      return t1._value$1(offset);
    return;
  },
  $indexSet: function(_, key, value) {
    var t1 = this._hashTable;
    t1._setValue$2(t1._put$1(key), value);
    t1._checkCapacity$0();
  },
  forEach$1: function(_, action) {
    var t1, modificationCount, offset;
    t1 = this._hashTable;
    modificationCount = t1._modificationCount;
    offset = t1._next$1(0);
    if (typeof offset !== "number")
      return this.forEach$1$bailout(1, action, t1, modificationCount, offset);
    for (; !$.$eq(offset, 0); offset = t1._next$1(offset)) {
      action.call$2(t1._key$1(offset), t1._value$1(offset));
      t1._checkModification$1(modificationCount);
    }
  },
  forEach$1$bailout: function(state0, action, t1, modificationCount, offset) {
    for (; $.$eq(offset, 0) !== true; offset = t1._next$1(offset)) {
      action.call$2(t1._key$1(offset), t1._value$1(offset));
      t1._checkModification$1(modificationCount);
    }
  },
  get$keys: function(_) {
    return $._LinkedHashTableKeyIterable$(this._hashTable);
  },
  get$values: function(_) {
    return $._LinkedHashTableValueIterable$(this._hashTable, 3);
  },
  get$length: function(_) {
    return this._hashTable.get$_elementCount();
  },
  toString$0: function(_) {
    return $.ToString_mapToString(this);
  },
  LinkedHashMap$0: function() {
    this._hashTable._container = this;
  },
  $isMap: function() {
    return true;
  },
  $asMap: function() {
    return null;
  }
};

$$.LinkedHashMap_addAll_anon = {"": "Closure;this_0",
  call$2: function(key, value) {
    var t1, offset;
    t1 = this.this_0;
    offset = t1.get$_hashTable()._put$1(key);
    t1.get$_hashTable()._setValue$2(offset, value);
    t1.get$_hashTable()._checkCapacity$0();
  }
};

$$.LinkedHashSet = {"": "Collection;_table",
  get$iterator: function(_) {
    return $._LinkedHashTableKeyIterator$(this._table);
  },
  forEach$1: function(_, action) {
    var offset, modificationCount;
    offset = this._table._next$1(0);
    if (typeof offset !== "number")
      return this.forEach$1$bailout1(1, action, offset);
    modificationCount = this._table._modificationCount;
    for (; !$.$eq(offset, 0);) {
      action.call$1(this._table._key$1(offset));
      this._table._checkModification$1(modificationCount);
      offset = this._table._next$1(offset);
    }
  },
  forEach$1$bailout1: function(state0, action, offset) {
    var modificationCount = this._table._modificationCount;
    for (; $.$eq(offset, 0) !== true;) {
      action.call$1(this._table._key$1(offset));
      this._table._checkModification$1(modificationCount);
      offset = this._table._next$1(offset);
    }
  },
  get$length: function(_) {
    return this._table.get$_elementCount();
  },
  add$1: function(_, element) {
    this._table._put$1(element);
    this._table._checkCapacity$0();
  },
  addAll$1: function(_, objects) {
    var t1, t2;
    for (t1 = $.get$iterator$ax(objects); t1.moveNext$0();) {
      t2 = t1.get$current();
      this._table._put$1(t2);
      this._table._checkCapacity$0();
    }
  },
  toString$0: function(_) {
    return $.ToString_collectionToString(this);
  },
  LinkedHashSet$0: function() {
    this._table._container = this;
  },
  $asCollection: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  }
};

$$._LinkedHashTableHeadMarker = {"": "Object;"};

$$._LinkedHashTable = {"": "_HashTable;_table,_capacity,_entryCount,_deletedCount,_modificationCount,_container",
  get$_entrySize: function() {
    return 3;
  },
  _createTable$1: function(capacity) {
    var result, t1;
    result = $.List_List($.$mul$n(capacity, this.get$_entrySize()));
    t1 = result.length;
    if (0 >= t1)
      throw $.ioore(0);
    result[0] = $.CONSTANT2;
    if (1 >= t1)
      throw $.ioore(1);
    result[1] = 0;
    if (2 >= t1)
      throw $.ioore(2);
    result[2] = 0;
    return result;
  },
  _next$1: function(offset) {
    var t1, t3;
    if (typeof offset !== "number")
      return this._next$1$bailout(1, offset);
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._next$1$bailout(2, offset, t1);
    t3 = offset + 1;
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  _next$1$bailout: function(state0, offset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._table;
      case 2:
        state0 = 0;
        return $.$index$asx(t1, $.$add$ns(offset, 1));
    }
  },
  _linkLast$1: function(offset) {
    var last, t1;
    last = $.$index$asx(this._table, 2);
    t1 = $.getInterceptor$ns(offset);
    $.$indexSet$ax(this._table, t1.$add(offset, 1), 0);
    $.$indexSet$ax(this._table, t1.$add(offset, 2), last);
    $.$indexSet$ax(this._table, $.$add$ns(last, 1), offset);
    $.$indexSet$ax(this._table, 2, offset);
  },
  _unlink$1: function(offset) {
    var t1, next, prev;
    t1 = $.getInterceptor$ns(offset);
    next = $.$index$asx(this._table, t1.$add(offset, 1));
    prev = $.$index$asx(this._table, t1.$add(offset, 2));
    $.$indexSet$ax(this._table, t1.$add(offset, 1), null);
    $.$indexSet$ax(this._table, t1.$add(offset, 2), null);
    $.$indexSet$ax(this._table, $.$add$ns(prev, 1), next);
    $.$indexSet$ax(this._table, $.$add$ns(next, 2), prev);
  },
  _addAllEntries$1: function(oldTable) {
    var t1, offset, object, t2, nextOffset;
    if (typeof oldTable !== "object" || oldTable === null || (oldTable.constructor !== Array || !!oldTable.immutable$list) && !oldTable.$isJavaScriptIndexingBehavior())
      return this._addAllEntries$1$bailout1(1, oldTable);
    t1 = oldTable.length;
    if (1 >= t1)
      throw $.ioore(1);
    offset = oldTable[1];
    if (typeof offset !== "number")
      return this._addAllEntries$1$bailout1(2, oldTable, offset, $.JSArray_methods);
    for (; !$.$eq(offset, 0); offset = nextOffset) {
      if (offset !== (offset | 0))
        throw $.iae(offset);
      if (offset < 0 || offset >= t1)
        throw $.ioore(offset);
      object = oldTable[offset];
      t2 = offset + 1;
      if (t2 >= t1)
        throw $.ioore(t2);
      nextOffset = oldTable[t2];
      this._copyEntry$3(oldTable, offset, this._put$1(object));
    }
  },
  _addAllEntries$1$bailout1: function(state0, oldTable, offset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$asx(oldTable);
        offset = t1.$index(oldTable, 1);
      case 2:
        var t2, object, nextOffset;
        state0 = 0;
        for (; t2 = $.getInterceptor(offset), t2.$eq(offset, 0) !== true; offset = nextOffset) {
          object = t1.$index(oldTable, offset);
          nextOffset = t1.$index(oldTable, t2.$add(offset, 1));
          this._copyEntry$3(oldTable, offset, this._put$1(object));
        }
    }
  },
  _put$1: function(key) {
    var offset, t1, oldEntry;
    offset = this._probeForAdd$2($.get$hashCode$(key), key);
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._put$1$bailout1(1, key, t1, offset);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    oldEntry = t1[offset];
    if (oldEntry === $.CONSTANT0)
      this._deletedCount = this._deletedCount - 1;
    else if (oldEntry == null)
      this._entryCount = this._entryCount + 1;
    else
      return offset;
    this._recordModification$0();
    if (key == null)
      key = $.CONSTANT1;
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._put$1$bailout1(2, key, t1, offset);
    if (offset >= t1.length)
      throw $.ioore(offset);
    t1[offset] = key;
    this._linkLast$1(offset);
    return offset;
  },
  _put$1$bailout1: function(state0, key, t1, offset) {
    switch (state0) {
      case 0:
        offset = this._probeForAdd$2($.get$hashCode$(key), key);
        t1 = this._table;
      case 1:
        state0 = 0;
        oldEntry = $.$index$asx(t1, offset);
        if (oldEntry === $.CONSTANT0)
          this._deletedCount = this._deletedCount - 1;
        else if (oldEntry == null)
          this._entryCount = this._entryCount + 1;
        else
          return offset;
        this._recordModification$0();
        if (key == null)
          key = $.CONSTANT1;
        t1 = this._table;
      case 2:
        var oldEntry;
        state0 = 0;
        $.$indexSet$ax(t1, offset, key);
        this._linkLast$1(offset);
        return offset;
    }
  },
  _deleteEntry$1: function(offset) {
    var key;
    this._unlink$1(offset);
    key = $.CONSTANT0;
    $.$indexSet$ax(this._table, offset, key);
    this._deletedCount = this._deletedCount + 1;
    this._recordModification$0();
  }
};

$$._LinkedHashTableKeyIterable = {"": "Iterable;_table",
  get$iterator: function(_) {
    return $._LinkedHashTableKeyIterator$(this._table);
  },
  get$length: function(_) {
    return this._table.get$_elementCount();
  }
};

$$._LinkedHashTableKeyIterator = {"": "_LinkedHashTableIterator;_hashTable,_modificationCount,_offset,_liblib2$_current",
  _getCurrent$1: function(offset) {
    return this._hashTable._key$1(offset);
  }
};

$$._LinkedHashTableValueIterable = {"": "Iterable;_hashTable<,_valueIndex",
  get$iterator: function(_) {
    return $._LinkedHashTableValueIterator$(this._hashTable, this._valueIndex);
  },
  get$length: function(_) {
    return this._hashTable.get$_elementCount();
  }
};

$$._LinkedHashTableValueIterator = {"": "_LinkedHashTableIterator;_valueIndex,_hashTable,_modificationCount,_offset,_liblib2$_current",
  _getCurrent$1: function(offset) {
    return $.$index$asx(this._hashTable._table, $.$add$ns(offset, this._valueIndex));
  }
};

$$._LinkedHashTableIterator = {"": "Object;_hashTable<",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._hashTable;
    t1._checkModification$1(this._modificationCount);
    t2 = this._offset;
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout(1, t1, t2);
    if (t2 === 0) {
      this._liblib2$_current = null;
      return false;
    }
    this._liblib2$_current = this._getCurrent$1(t2);
    this._offset = t1._next$1(this._offset);
    return true;
  },
  moveNext$0$bailout: function(state0, t1, t2) {
    if ($.$eq(t2, 0) === true) {
      this._liblib2$_current = null;
      return false;
    }
    this._liblib2$_current = this._getCurrent$1(this._offset);
    this._offset = t1._next$1(this._offset);
    return true;
  },
  get$current: function() {
    return this._liblib2$_current;
  }
};

$$.ListQueue = {"": "Collection;_table,_head,_tail,_modificationCount",
  get$iterator: function(_) {
    return $._ListQueueIterator$(this);
  },
  forEach$1: function(_, action) {
    var modificationCount, i, i0, t1;
    modificationCount = this._modificationCount;
    for (i = this._head; i !== this._tail; i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      action.call$1(t1[i]);
      this._checkModification$1(modificationCount);
    }
  },
  get$isEmpty: function(_) {
    return this._head === this._tail;
  },
  get$length: function(_) {
    return $.$and$n($.$sub$n(this._tail, this._head), this._table.length - 1);
  },
  toList$1$growable: function(_, growable) {
    var t1, list;
    if (growable === true) {
      t1 = this.get$length(this);
      list = $.List_List($);
      $.JSArray_methods.set$length(list, t1);
    } else
      list = $.List_List(this.get$length(this));
    this._writeToList$1(list);
    return list;
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(_, element) {
    this._add$1(element);
  },
  addAll$1: function(_, elements) {
    var addCount, $length, t1, t2, t3, endSpace, preSpace;
    if (typeof elements === "object" && elements !== null && (elements.constructor === Array || elements.$isList())) {
      addCount = $.get$length$asx(elements);
      $length = this.get$length(this);
      if (typeof addCount !== "number")
        throw $.iae(addCount);
      t1 = $length + addCount;
      t2 = this._table;
      t3 = t2.length;
      if (t1 >= t3) {
        this._preGrow$1(t1);
        $.JSArray_methods.setRange$4(this._table, $length, addCount, elements, 0);
        this._tail = $.$add$ns(this._tail, addCount);
      } else {
        t1 = this._tail;
        if (typeof t1 !== "number")
          throw $.iae(t1);
        endSpace = t3 - t1;
        if (addCount < endSpace) {
          $.JSArray_methods.setRange$4(t2, t1, addCount, elements, 0);
          this._tail = $.$add$ns(this._tail, addCount);
        } else {
          preSpace = addCount - endSpace;
          $.JSArray_methods.setRange$4(t2, t1, endSpace, elements, 0);
          $.JSArray_methods.setRange$4(this._table, 0, preSpace, elements, endSpace);
          this._tail = preSpace;
        }
      }
      this._modificationCount = this._modificationCount + 1;
    } else
      for (t1 = $.get$iterator$ax(elements); t1.moveNext$0();)
        this._add$1(t1.get$current());
  },
  toString$0: function(_) {
    return $.ToString_collectionToString(this);
  },
  addLast$1: function(_, element) {
    this._add$1(element);
  },
  removeFirst$0: function() {
    var t1, t2, t3, result;
    if (this._head === this._tail)
      throw $.$$throw($.StateError$("No elements"));
    this._modificationCount = this._modificationCount + 1;
    t1 = this._table;
    t2 = this._head;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw $.ioore(t2);
    result = t1[t2];
    this._head = (t2 + 1 & t3 - 1) >>> 0;
    return result;
  },
  removeLast$0: function(_) {
    var t1, t2;
    if (this._head === this._tail)
      throw $.$$throw($.StateError$("No elements"));
    this._modificationCount = this._modificationCount + 1;
    this._tail = $.$and$n($.$sub$n(this._tail, 1), this._table.length - 1);
    t1 = this._table;
    t2 = this._tail;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  _checkModification$1: function(expectedModificationCount) {
    if (typeof expectedModificationCount !== "number")
      return this._checkModification$1$bailout(1, expectedModificationCount);
    if (expectedModificationCount !== this._modificationCount)
      throw $.$$throw($.ConcurrentModificationError$(this));
  },
  _checkModification$1$bailout: function(state0, expectedModificationCount) {
    if ($.$eq(expectedModificationCount, this._modificationCount) !== true)
      throw $.$$throw($.ConcurrentModificationError$(this));
  },
  _add$1: function(element) {
    var t1, t2;
    t1 = this._table;
    t2 = this._tail;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    t1[t2] = element;
    this._tail = $.$and$n(t2 + 1, this._table.length - 1);
    if (this._head === this._tail)
      this._grow$0();
    this._modificationCount = this._modificationCount + 1;
  },
  _grow$0: function() {
    var newTable, t1, t2, split;
    newTable = $.List_List(this._table.length * 2);
    t1 = this._table;
    t2 = this._head;
    split = t1.length - t2;
    $.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
    $.JSArray_methods.setRange$4(newTable, split, this._head, this._table, 0);
    this._head = 0;
    this._tail = this._table.length;
    this._table = newTable;
  },
  _writeToList$1: function(target) {
    var t1, t2, $length, firstPartSize;
    t1 = $.JSInt_methods.$le(this._head, this._tail);
    t2 = this._head;
    if (t1) {
      $length = $.$sub$n(this._tail, t2);
      $.JSArray_methods.setRange$4(target, 0, $length, this._table, this._head);
      return $length;
    } else {
      t1 = this._table;
      firstPartSize = t1.length - t2;
      $.JSArray_methods.setRange$4(target, 0, firstPartSize, t1, t2);
      $.JSArray_methods.setRange$4(target, firstPartSize, this._tail, this._table, 0);
      return $.$add$ns(this._tail, firstPartSize);
    }
  },
  _preGrow$1: function(newElementCount) {
    var newTable = $.List_List($.ListQueue__nextPowerOf2(newElementCount));
    this._tail = this._writeToList$1(newTable);
    this._table = newTable;
    this._head = 0;
  },
  ListQueue$1: function(initialCapacity) {
    if (initialCapacity == null || $.JSNull_methods.$lt(initialCapacity, 8))
      initialCapacity = 8;
    else if (!$.ListQueue__isPowerOf2(initialCapacity))
      initialCapacity = $.ListQueue__nextPowerOf2(initialCapacity);
    this._table = $.List_List(initialCapacity);
  },
  $asCollection: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  }
};

$$._ListQueueIterator = {"": "Object;_queue,_end,_modificationCount,_liblib2$_position,_liblib2$_current",
  get$current: function() {
    return this._liblib2$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._queue;
    t1._checkModification$1(this._modificationCount);
    t2 = this._liblib2$_position;
    if (t2 === this._end) {
      this._liblib2$_current = null;
      return false;
    }
    t3 = t1._table;
    if (t2 < 0 || t2 >= t3.length)
      throw $.ioore(t2);
    this._liblib2$_current = t3[t2];
    this._liblib2$_position = (this._liblib2$_position + 1 & t1._table.length - 1) >>> 0;
    return true;
  }
};

$$.Collection = {"": "Iterable;",
  addAll$1: function(_, elements) {
    var t1;
    for (t1 = $.get$iterator$ax(elements); t1.moveNext$0();)
      this.add$1(this, t1.get$current());
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return null;
  }
};

$$.DateTime = {"": "Object;millisecondsSinceEpoch<,isUtc",
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isDateTime))
      return false;
    return $.$eq(this.millisecondsSinceEpoch, other.millisecondsSinceEpoch) === true && $.$eq(this.isUtc, other.isUtc) === true;
  },
  $lt: function(_, other) {
    return $.$lt$n(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  $le: function(_, other) {
    return $.$le$n(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  $gt: function(_, other) {
    return $.$gt$n(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  $ge: function(_, other) {
    return $.$ge$n(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  get$hashCode: function(_) {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function(_) {
    var t1, t2, t3, y, m, d, h, min, sec, ms;
    t1 = new $.DateTime_toString_fourDigits();
    t2 = new $.DateTime_toString_threeDigits();
    t3 = new $.DateTime_toString_twoDigits();
    y = t1.call$1(this.get$year());
    m = t3.call$1(this.get$month());
    d = t3.call$1(this.get$day());
    h = t3.call$1(this.get$hour());
    min = t3.call$1(this.get$minute());
    sec = t3.call$1(this.get$second());
    ms = t2.call$1(this.get$millisecond());
    if (this.isUtc === true)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(_, duration) {
    return $.DateTime$fromMillisecondsSinceEpoch($.$add$ns(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
  },
  get$year: function() {
    return $.Primitives_getYear(this);
  },
  get$month: function() {
    return $.Primitives_getMonth(this);
  },
  get$day: function() {
    return $.Primitives_getDay(this);
  },
  get$hour: function() {
    return $.Primitives_getHours(this);
  },
  get$minute: function() {
    return $.Primitives_getMinutes(this);
  },
  get$second: function() {
    return $.Primitives_getSeconds(this);
  },
  get$millisecond: function() {
    return $.Primitives_getMilliseconds(this);
  },
  DateTime$_now$0: function() {
    $.Primitives_lazyAsJsDate(this);
  },
  DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
    if ($.abs$0$n(millisecondsSinceEpoch) > 8640000000000000)
      throw $.$$throw($.ArgumentError$(millisecondsSinceEpoch));
    if (isUtc == null)
      throw $.$$throw($.ArgumentError$(isUtc));
  },
  $isDateTime: true
};

$$.DateTime_toString_fourDigits = {"": "Closure;",
  call$1: function(n) {
    var t1, absN, sign;
    t1 = $.getInterceptor$n(n);
    absN = t1.abs$0(n);
    sign = t1.$lt(n, 0) === true ? "-" : "";
    if (absN >= 1000)
      return $.S(n);
    if (absN >= 100)
      return sign + "0" + $.S(absN);
    if (absN >= 10)
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  }
};

$$.DateTime_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100) === true)
      return $.S(n);
    if (t1.$ge(n, 10) === true)
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
};

$$.DateTime_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$ge$n(n, 10) === true)
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$.Duration = {"": "Object;_duration<",
  $add: function(_, other) {
    return $.Duration$(0, 0, this._duration + other.get$_duration(), 0, 0, 0);
  },
  $sub: function(_, other) {
    return $.Duration$(0, 0, this._duration - other.get$_duration(), 0, 0, 0);
  },
  $mul: function(_, factor) {
    if (typeof factor !== "number")
      throw $.iae(factor);
    return $.Duration$(0, 0, this._duration * factor, 0, 0, 0);
  },
  $lt: function(_, other) {
    return this._duration < other.get$_duration();
  },
  $gt: function(_, other) {
    return this._duration > other.get$_duration();
  },
  $le: function(_, other) {
    return this._duration <= other.get$_duration();
  },
  $ge: function(_, other) {
    return this._duration >= other.get$_duration();
  },
  get$inHours: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 3600000000);
  },
  get$inMinutes: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 60000000);
  },
  get$inSeconds: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 1000000);
  },
  get$inMilliseconds: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 1000);
  },
  get$inMicroseconds: function() {
    return this._duration;
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isDuration))
      return false;
    return this._duration === other._duration;
  },
  get$hashCode: function(_) {
    return $.JSNumber_methods.get$hashCode(this._duration);
  },
  toString$0: function(_) {
    var t1, t2, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
    t1 = new $.Duration_toString_sixDigits();
    t2 = new $.Duration_toString_twoDigits();
    if (this.get$inMicroseconds() < 0)
      return "-" + $.S($.Duration$(0, 0, -this.get$inMicroseconds(), 0, 0, 0));
    twoDigitMinutes = t2.call$1($.JSNumber_methods.remainder$1(this.get$inMinutes(), 60));
    twoDigitSeconds = t2.call$1($.JSNumber_methods.remainder$1(this.get$inSeconds(), 60));
    sixDigitUs = t1.call$1($.JSNumber_methods.remainder$1(this.get$inMicroseconds(), 1000000));
    return $.S(this.get$inHours()) + ":" + $.S(twoDigitMinutes) + ":" + $.S(twoDigitSeconds) + "." + $.S(sixDigitUs);
  },
  $isDuration: true
};

$$.Duration_toString_sixDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100000) === true)
      return $.S(n);
    if (t1.$ge(n, 10000) === true)
      return "0" + $.S(n);
    if (t1.$ge(n, 1000) === true)
      return "00" + $.S(n);
    if (t1.$ge(n, 100) === true)
      return "000" + $.S(n);
    if (t1.$gt(n, 10) === true)
      return "0000" + $.S(n);
    return "00000" + $.S(n);
  }
};

$$.Duration_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$ge$n(n, 10) === true)
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$.NullThrownError = {"": "Object;",
  toString$0: function(_) {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 != null)
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function(_) {
    return "RangeError: " + $.S(this.message);
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function(_) {
    var t1, t2, t3, t4, actualParameters, i, formalParameters;
    t1 = {};
    t1.sb_0 = $.StringBuffer$("");
    t1.i_1 = 0;
    t2 = this._arguments;
    for (; $.$lt$n(t1.i_1, t2.length) === true; t1.i_1 = $.$add$ns(t1.i_1, 1)) {
      if ($.$gt$n(t1.i_1, 0) === true)
        t1.sb_0.write$1(", ");
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      t3.write$1($.Error_safeToString(t2[t4]));
    }
    t2 = this._namedArguments;
    t2.forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
    t2 = this._existingArgumentNames;
    if (t2 == null)
      return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
    else {
      t3 = t1.sb_0;
      actualParameters = t3.toString$0(t3);
      t1.sb_0 = $.StringBuffer$("");
      for (i = 0; $.JSNumber_methods.$lt(i, $.JSNull_methods.get$length(t2)); ++i) {
        if (i > 0)
          t1.sb_0.write$1(", ");
        t1.sb_0.write$1($.JSNull_methods.$index(t2, i));
      }
      t1 = t1.sb_0;
      formalParameters = t1.toString$0(t1);
      t1 = this._memberName;
      return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + actualParameters + ")\n" + "Found: " + $.S(t1) + "(" + formalParameters + ")";
    }
  }
};

$$.UnsupportedError = {"": "Object;message",
  toString$0: function(_) {
    return "Unsupported operation: " + this.message;
  }
};

$$.UnimplementedError = {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    return t1 != null ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
  }
};

$$.StateError = {"": "Object;message",
  toString$0: function(_) {
    return "Bad state: " + this.message;
  }
};

$$.ConcurrentModificationError = {"": "Object;modifiedObject",
  toString$0: function(_) {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.S($.Error_safeToString(t1)) + ".";
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function(_) {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message",
  toString$0: function(_) {
    return "RuntimeError: " + this.message;
  }
};

$$._ExceptionImplementation = {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
};

$$.FormatException = {"": "Object;message",
  toString$0: function(_) {
    return "FormatException: " + $.S(this.message);
  },
  $isException: true
};

$$.Iterable = {"": "Object;",
  forEach$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0();)
      f.call$1(t1.get$current());
  },
  join$1: function(_, separator) {
    var iterator, buffer;
    if (typeof separator !== "string")
      return this.join$1$bailout(1, separator);
    iterator = this.get$iterator(this);
    if (!iterator.moveNext$0())
      return "";
    buffer = $.StringBuffer$("");
    if (separator === "")
      do
        buffer.write$1($.S(iterator.get$current()));
      while (iterator.moveNext$0());
    else {
      buffer.write$1($.S(iterator.get$current()));
      for (; iterator.moveNext$0();) {
        buffer.write$1(separator);
        buffer.write$1($.S(iterator.get$current()));
      }
    }
    return buffer.toString$0(buffer);
  },
  join$1$bailout: function(state0, separator) {
    var iterator, buffer;
    iterator = this.get$iterator(this);
    if (!iterator.moveNext$0())
      return "";
    buffer = $.StringBuffer$("");
    if (separator == null || $.$eq(separator, "") === true)
      do
        buffer.write$1($.S(iterator.get$current()));
      while (iterator.moveNext$0());
    else {
      buffer.write$1($.S(iterator.get$current()));
      for (; iterator.moveNext$0();) {
        buffer.write$1(separator);
        buffer.write$1($.S(iterator.get$current()));
      }
    }
    return buffer.toString$0(buffer);
  },
  any$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0();)
      if (f.call$1(t1.get$current()) === true)
        return true;
    return false;
  },
  toList$1$growable: function(_, growable) {
    return $.List_List$from(this, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$length: function(_) {
    var it, count;
    it = this.get$iterator(this);
    for (count = 0; it.moveNext$0();)
      ++count;
    return count;
  }
};

$$.Iterator = {"": "Object;"};

$$.Object = {"": ";",
  $eq: function(receiver, other) {
    return receiver === other;
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  toString$0: function(receiver) {
    return "Instance of '" + $.S($.Primitives_objectTypeName(receiver)) + "'";
  }
};

$$.StringBuffer = {"": "Object;_contents",
  get$length: function(_) {
    return this._contents.length;
  },
  write$1: function(obj) {
    var str;
    if (typeof obj !== "string")
      return this.write$1$bailout(1, obj);
    str = obj;
    this._contents = this._contents + str;
  },
  write$1$bailout: function(state0, obj) {
    var str = typeof obj === "string" ? obj : $.S(obj);
    this._contents = this._contents + str;
  },
  writeln$1: function(obj) {
    this.write$1(obj);
    this.write$1("\n");
  },
  toString$0: function(_) {
    return this._contents;
  },
  StringBuffer$1: function($content) {
    this._contents = $content;
  }
};

$$._ElementCssClassSet = {"": "CssClassSet;_element",
  readClasses$0: function() {
    var s, t1, trimmed;
    s = $.LinkedHashSet$();
    for (t1 = $.JSArray_methods.get$iterator($.split$1$s(this._element.className, " ")); t1.moveNext$0();) {
      trimmed = $.trim$0$s(t1.get$current());
      if (!$.JSString_methods.get$isEmpty(trimmed))
        s.add$1(s, trimmed);
    }
    return s;
  },
  writeClasses$1: function(s) {
    $.List_List$from(s, true);
    $.getInterceptor$x(this._element).className = s.join$1(s, " ");
  }
};

$$._ChildNodeListLazy = {"": "Object;_this",
  get$last: function(_) {
    var result = this._this.lastChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  add$1: function(_, value) {
    $.append$1$x(this._this, value);
  },
  addAll$1: function(_, iterable) {
    var t1, len, t3, i, t2;
    if (typeof iterable === "object" && iterable !== null && !!iterable.$is_ChildNodeListLazy) {
      t1 = this._this;
      if (iterable._this !== t1) {
        len = iterable.get$length(iterable);
        if (typeof len !== "number")
          return this.addAll$1$bailout(1, iterable, len, t1);
        t3 = $.getInterceptor$x(t1);
        i = 0;
        for (; i < len; ++i)
          t3.append$1(t1, iterable.$index(iterable, 0));
      }
      return;
    }
    for (t1 = $.get$iterator$ax(iterable), t2 = this._this, t3 = $.getInterceptor$x(t2); t1.moveNext$0();)
      t3.append$1(t2, t1.get$current());
  },
  addAll$1$bailout: function(state0, iterable, len, t1) {
    switch (state0) {
      case 0:
      case 1:
        var t3, i, t2;
        if (state0 === 1 || state0 === 0 && typeof iterable === "object" && iterable !== null && !!iterable.$is_ChildNodeListLazy)
          switch (state0) {
            case 0:
              t1 = this._this;
            case 1:
              if (state0 === 1 || state0 === 0 && iterable._this !== t1)
                switch (state0) {
                  case 0:
                    len = iterable.get$length(iterable);
                  case 1:
                    state0 = 0;
                    t3 = $.getInterceptor$x(t1);
                    i = 0;
                    for (; $.JSNumber_methods.$lt(i, len); ++i)
                      t3.append$1(t1, iterable.$index(iterable, 0));
                }
              return;
          }
        for (t1 = $.get$iterator$ax(iterable), t2 = this._this, t3 = $.getInterceptor$x(t2); t1.moveNext$0();)
          t3.append$1(t2, t1.get$current());
    }
  },
  removeLast$0: function(_) {
    var result = this.get$last(this);
    if (result != null)
      $.$$dom_removeChild$1$x(this._this, result);
    return result;
  },
  $indexSet: function(_, index, value) {
    var t1 = this._this;
    $.$$dom_replaceChild$2$x(t1, value, $.$index$asx(t1.childNodes, index));
  },
  get$iterator: function(_) {
    return $.get$iterator$ax(this._this.childNodes);
  },
  forEach$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(_, growable) {
    return $.List_List$from(this, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  sublist$2: function(_, start, end) {
    if (end == null)
      this.get$length(this);
    return $.Lists_getRange(this, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  get$length: function(_) {
    return $.get$length$asx(this._this.childNodes);
  },
  $index: function(_, index) {
    return $.$index$asx(this._this.childNodes, index);
  },
  $is_ChildNodeListLazy: true,
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [null]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [null]; };
  }
};

$$.Storage_keys_anon = {"": "Closure;keys_0",
  call$2: function(k, v) {
    return this.keys_0.push(k);
  }
};

$$.Storage_values_anon = {"": "Closure;values_0",
  call$2: function(k, v) {
    return this.values_0.push(v);
  }
};

$$._AttributeMap = {"": "Object;",
  forEach$1: function(_, f) {
    var t1, t2;
    for (t1 = $.JSArray_methods.get$iterator(this.get$keys(this)); t1.moveNext$0();) {
      t2 = t1.get$current();
      f.call$2(t2, this.$index(this, t2));
    }
  },
  get$keys: function(_) {
    var attributes, keys, t1, len, i;
    attributes = this._element.attributes;
    keys = $.List_List($);
    for (t1 = $.getInterceptor$asx(attributes), len = t1.get$length(attributes), i = 0; i < len; ++i)
      if (this._matches$1(t1.$index(attributes, i)))
        keys.push(t1.$index(attributes, i).localName);
    return keys;
  },
  get$values: function(_) {
    var attributes, values, t1, len, i;
    attributes = this._element.attributes;
    values = $.List_List($);
    for (t1 = $.getInterceptor$asx(attributes), len = t1.get$length(attributes), i = 0; i < len; ++i)
      if (this._matches$1(t1.$index(attributes, i)))
        values.push($.get$value$x(t1.$index(attributes, i)));
    return values;
  },
  $isMap: function() {
    return true;
  },
  $asMap: function() {
    return function () { return [$.String, $.String]; };
  }
};

$$._ElementAttributeMap = {"": "_AttributeMap;_element",
  $index: function(_, key) {
    return $.$$dom_getAttribute$1$x(this._element, key);
  },
  $indexSet: function(_, key, value) {
    $.$$dom_setAttribute$2$x(this._element, key, value);
  },
  get$length: function(_) {
    return this.get$keys(this).length;
  },
  _matches$1: function(node) {
    return node.namespaceURI == null;
  }
};

$$.CssClassSet = {"": "Object;",
  toString$0: function(_) {
    var t1 = this.readClasses$0();
    return t1.join$1(t1, " ");
  },
  get$iterator: function(_) {
    var t1 = this.readClasses$0();
    return t1.get$iterator(t1);
  },
  forEach$1: function(_, f) {
    var t1 = this.readClasses$0();
    t1.forEach$1(t1, f);
  },
  get$length: function(_) {
    var t1 = this.readClasses$0();
    return t1.get$length(t1);
  },
  add$1: function(_, value) {
    var t1, s;
    t1 = new $.CssClassSet_add_anon(value);
    s = this.readClasses$0();
    t1.call$1(s);
    this.writeClasses$1(s);
  },
  addAll$1: function(_, iterable) {
    var t1, s;
    t1 = new $.CssClassSet_addAll_anon(iterable);
    s = this.readClasses$0();
    t1.call$1(s);
    this.writeClasses$1(s);
  },
  toList$1$growable: function(_, growable) {
    var t1 = this.readClasses$0();
    return t1.toList$1$growable(t1, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.String]; };
  }
};

$$.CssClassSet_add_anon = {"": "Closure;value_0",
  call$1: function(s) {
    return $.add$1$ax(s, this.value_0);
  }
};

$$.CssClassSet_addAll_anon = {"": "Closure;iterable_0",
  call$1: function(s) {
    return $.addAll$1$ax(s, this.iterable_0);
  }
};

$$._EventStream = {"": "Stream;_target,_eventType,_useCapture",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    return $._EventStreamSubscription$(this._target, this._eventType, onData, this._useCapture);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  }
};

$$._EventStreamSubscription = {"": "StreamSubscription;_pauseCount,_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this.get$_canceled())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._onData;
    if (t1 != null)
      $.$$dom_removeEventListener$3$x(this._target, this._eventType, t1, this._useCapture);
    this._target = null;
    this._onData = null;
  },
  get$_canceled: function() {
    return this._target == null;
  },
  pause$1: function(_, resumeSignal) {
    var t1;
    if (this.get$_canceled())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    this._pauseCount = this._pauseCount + 1;
    t1 = this._onData;
    if (t1 != null)
      $.$$dom_removeEventListener$3$x(this._target, this._eventType, t1, this._useCapture);
    if (resumeSignal != null)
      resumeSignal.whenComplete$1(this.get$resume());
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  },
  get$_paused: function() {
    return this._pauseCount > 0;
  },
  resume$0: function() {
    if (this.get$_canceled())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    if (!this.get$_paused())
      throw $.$$throw($.StateError$("Subscription is not paused."));
    this._pauseCount = this._pauseCount - 1;
    this._tryResume$0();
  },
  get$resume: function() {
    return new $.BoundClosure$0(this, "resume$0");
  },
  _tryResume$0: function() {
    if (this._onData != null && !this.get$_paused())
      $.$$dom_addEventListener$3$x(this._target, this._eventType, this._onData, this._useCapture);
  },
  _EventStreamSubscription$4: function(_target, _eventType, _onData, _useCapture) {
    this._tryResume$0();
  }
};

$$.EventStreamProvider = {"": "Object;_eventType",
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventType, useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$.Point = {"": "Object;x>,y>",
  toString$0: function(_) {
    return "(" + $.S(this.x) + ", " + $.S(this.y) + ")";
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isPoint))
      return false;
    return $.$eq(this.x, other.x) === true && $.$eq(this.y, other.y) === true;
  },
  $add: function(_, other) {
    var t1 = $.getInterceptor$x(other);
    return $.Point$($.$add$ns(this.x, t1.get$x(other)), $.$add$ns(this.y, t1.get$y(other)));
  },
  $sub: function(_, other) {
    var t1 = $.getInterceptor$x(other);
    return $.Point$($.$sub$n(this.x, t1.get$x(other)), $.$sub$n(this.y, t1.get$y(other)));
  },
  $mul: function(_, factor) {
    return $.Point$($.$mul$n(this.x, factor), $.$mul$n(this.y, factor));
  },
  round$0: function(_) {
    return $.Point$($.round$0$nx(this.x), $.round$0$nx(this.y));
  },
  $isPoint: true
};

$$.Rect = {"": "Object;left>,top>,width>,height>",
  get$right: function(_) {
    var t1 = this.width;
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return this.left + t1;
  },
  get$bottom: function(_) {
    var t1 = this.height;
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return this.top + t1;
  },
  toString$0: function(_) {
    return "(" + $.S(this.left) + ", " + $.S(this.top) + ", " + $.S(this.width) + ", " + $.S(this.height) + ")";
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && other.$isRect()))
      return false;
    t1 = $.getInterceptor$x(other);
    return this.left === t1.get$left(other) && this.top === t1.get$top(other) && $.$eq(this.width, t1.get$width(other)) === true && $.$eq(this.height, t1.get$height(other)) === true;
  },
  round$0: function(_) {
    return $.Rect$($.JSNumber_methods.round$0(this.left), $.JSNumber_methods.round$0(this.top), $.round$0$nx(this.width), $.round$0$nx(this.height));
  },
  $isRect: function() {
    return true;
  },
  $asRect: function() {
    return null;
  }
};

$$.FixedSizeListIterator = {"": "Object;_array,_length,_position,_current",
  moveNext$0: function() {
    var t1, nextPosition;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    nextPosition = t1 + 1;
    t1 = this._length;
    if (nextPosition < t1) {
      this._current = $.$index$asx(this._array, nextPosition);
      this._position = nextPosition;
      return true;
    }
    this._current = null;
    this._position = t1;
    return false;
  },
  moveNext$0$bailout: function(state0, t1) {
    var nextPosition = $.$add$ns(t1, 1);
    t1 = this._length;
    if ($.$lt$n(nextPosition, t1) === true) {
      this._current = $.$index$asx(this._array, nextPosition);
      this._position = nextPosition;
      return true;
    }
    this._current = null;
    this._position = t1;
    return false;
  },
  get$current: function() {
    return this._current;
  }
};

$$.convertDartToNative_Dictionary_anon = {"": "Closure;object_0",
  call$2: function(key, value) {
    this.object_0[key] = value;
  }
};

$$.convertNativeToDart_AcceptStructuredClone_findSlot = {"": "Closure;values_0,copies_1",
  call$1: function(value) {
    var t1, $length, i, t2;
    t1 = this.values_0;
    $length = t1.length;
    for (i = 0; i < $length; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    t1.push(value);
    this.copies_1.push(null);
    return $length;
  }
};

$$.convertNativeToDart_AcceptStructuredClone_readSlot = {"": "Closure;copies_2",
  call$1: function(i) {
    var t1 = this.copies_2;
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    return t1[i];
  }
};

$$.convertNativeToDart_AcceptStructuredClone_writeSlot = {"": "Closure;copies_3",
  call$2: function(i, x) {
    var t1 = this.copies_3;
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    t1[i] = x;
  }
};

$$.convertNativeToDart_AcceptStructuredClone_walk = {"": "Closure;mustCopy_4,findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var slot, copy, t1, t2, $length, i;
    if (typeof e !== "object" || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.$isJavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    if (e instanceof Date)
      throw $.$$throw($.UnimplementedError$("structured clone of DateTime"));
    if (e instanceof RegExp)
      throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
    if (Object.getPrototypeOf(e) === Object.prototype) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      copy = $.makeLiteralMap([]);
      this.writeSlot_7.call$2(slot, copy);
      for (t1 = $.JSArray_methods.get$iterator(Object.keys(e)); t1.moveNext$0();) {
        t2 = t1.get$current();
        copy.$indexSet(copy, t2, this.call$1(e[t2]));
      }
      return copy;
    }
    if (e instanceof Array) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      $length = e.length;
      if (this.mustCopy_4)
        copy = new Array($length);
      else
        copy = e;
      if (typeof copy !== "object" || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.$isJavaScriptIndexingBehavior())
        return this.call$1$bailout(2, e, $length, copy, $.JSArray_methods, slot);
      this.writeSlot_7.call$2(slot, copy);
      for (i = 0; i < $length; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        t1 = this.call$1(e[i]);
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
    }
    return e;
  },
  call$1$bailout: function(state0, e, $length, copy, t1, slot) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor(e);
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (e instanceof Date)
          throw $.$$throw($.UnimplementedError$("structured clone of DateTime"));
        if (e instanceof RegExp)
          throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
        if (Object.getPrototypeOf(e) === Object.prototype) {
          slot = this.findSlot_5.call$1(e);
          copy = this.readSlot_6.call$1(slot);
          if (copy != null)
            return copy;
          copy = $.makeLiteralMap([]);
          this.writeSlot_7.call$2(slot, copy);
          for (t1 = $.JSArray_methods.get$iterator(Object.keys(e)); t1.moveNext$0();) {
            t2 = t1.get$current();
            copy.$indexSet(copy, t2, this.call$1(e[t2]));
          }
          return copy;
        }
      case 2:
        var t2, i;
        if (state0 === 2 || state0 === 0 && e instanceof Array)
          switch (state0) {
            case 0:
              slot = this.findSlot_5.call$1(e);
              copy = this.readSlot_6.call$1(slot);
              if (copy != null)
                return copy;
              $length = t1.get$length(e);
              copy = this.mustCopy_4 ? new Array($length) : e;
            case 2:
              state0 = 0;
              this.writeSlot_7.call$2(slot, copy);
              for (t2 = $.getInterceptor$ax(copy), i = 0; $.JSNumber_methods.$lt(i, $length); ++i)
                t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
              return copy;
          }
        return e;
    }
  }
};

$$._AttributeClassSet = {"": "CssClassSet;_liblib4$_element",
  readClasses$0: function() {
    var t1, classname, s, trimmed;
    t1 = $.get$attributes$x(this._liblib4$_element);
    classname = t1.$index(t1, "class");
    s = $.LinkedHashSet$();
    if (classname == null)
      return s;
    for (t1 = $.JSArray_methods.get$iterator($.split$1$s(classname, " ")); t1.moveNext$0();) {
      trimmed = $.trim$0$s(t1.get$current());
      if (!$.JSString_methods.get$isEmpty(trimmed))
        s.add$1(s, trimmed);
    }
    return s;
  },
  writeClasses$1: function(s) {
    var t1 = $.get$attributes$x(this._liblib4$_element);
    t1.$indexSet(t1, "class", s.join$1(s, " "));
  }
};

$$.Game = {"": "Object;entities<,timer<,clockTick@,rect>,input<,renderer<,loop',bgStyle?",
  start$0: function(_) {
    var t1;
    $.Primitives_printString("starting game");
    t1 = this.input;
    t1.start$0(t1);
    $.start$1$x(this.loop, new $.Game_start_anon(this));
  },
  addEntity$1: function(entity) {
    this.entities.push(entity);
  },
  enableEntitiesByGroup$1: function(groupId) {
    var t1 = $.JSArray_methods.where$1(this.entities, new $.Game_enableEntitiesByGroup_anon(groupId));
    t1.forEach$1(t1, new $.Game_enableEntitiesByGroup_anon0());
  },
  disableEntitiesByGroup$1: function(groupId) {
    var t1 = $.JSArray_methods.where$1(this.entities, new $.Game_disableEntitiesByGroup_anon(groupId));
    t1.forEach$1(t1, new $.Game_disableEntitiesByGroup_anon0());
  },
  removeEntitiesByGroup$1: function(groupId) {
    var t1 = $.JSArray_methods.where$1(this.entities, new $.Game_removeEntitiesByGroup_anon(groupId));
    $.JSArray_methods.forEach$1(t1.toList$0(t1), new $.Game_removeEntitiesByGroup_anon0());
  },
  removeEntitiesByFilter$1: function(f) {
    var t1 = $.JSArray_methods.where$1(this.entities, new $.Game_removeEntitiesByFilter_anon(f));
    $.JSArray_methods.forEach$1(t1.toList$0(t1), new $.Game_removeEntitiesByFilter_anon0());
  },
  update$0: function() {
    var t1, t2, i;
    for (t1 = $.JSArray_methods.where$1(this.entities, new $.Game_update_anon()), t2 = $.JSArray_methods.get$iterator(t1.toList$0(t1)); t2.moveNext$0();)
      t2.get$current().update$0();
    for (i = this.entities.length - 1; i >= 0; --i) {
      t1 = this.entities;
      if (i >= t1.length)
        throw $.ioore(i);
      if (t1[i].get$_removeFromGame())
        $.JSArray_methods.removeRange$2(t1, i, 1);
    }
  },
  Game$withServices$3: function(input, renderer, loop) {
    var t1;
    this.timer = $.GameTimer$();
    this.entities = $.List_List($);
    this.sounds = $.List_List($);
    t1 = this.renderer;
    this.rect = t1.rect;
    this.input.game = this;
    t1.set$game(this);
  }
};

$$.Game_start_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.set$clockTick(t1.get$timer().tick$0());
    t1.update$0();
    t1.get$renderer().render$0();
    $.reset$0$x(t1.get$input());
  }
};

$$.Game_enableEntitiesByGroup_anon = {"": "Closure;groupId_0",
  call$1: function(e) {
    return $.$eq(e.get$groupId(), this.groupId_0);
  }
};

$$.Game_enableEntitiesByGroup_anon0 = {"": "Closure;",
  call$1: function(e) {
    e.set$enabled(true);
    return true;
  }
};

$$.Game_disableEntitiesByGroup_anon = {"": "Closure;groupId_0",
  call$1: function(e) {
    return $.$eq(e.get$groupId(), this.groupId_0);
  }
};

$$.Game_disableEntitiesByGroup_anon0 = {"": "Closure;",
  call$1: function(e) {
    e.set$enabled(false);
    return false;
  }
};

$$.Game_removeEntitiesByGroup_anon = {"": "Closure;groupId_0",
  call$1: function(e) {
    return $.$eq(e.get$groupId(), this.groupId_0);
  }
};

$$.Game_removeEntitiesByGroup_anon0 = {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  }
};

$$.Game_removeEntitiesByFilter_anon = {"": "Closure;f_0",
  call$1: function(e) {
    return this.f_0.call$1(e);
  }
};

$$.Game_removeEntitiesByFilter_anon0 = {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  }
};

$$.Game_update_anon = {"": "Closure;",
  call$1: function(e) {
    return !e.get$_removeFromGame();
  }
};

$$.GameButton = {"": "GameText;buttonAction,text,centered,font,size,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  buttonAction$0: function() {
    return this.buttonAction.call$0();
  },
  update$0: function() {
    var t1, t2;
    $.GameEntity.prototype.update$0.call(this);
    if (!this.enabled)
      return;
    t1 = $.get$click$x(this.game.get$input());
    if (t1 != null) {
      $.Primitives_printString("x: " + $.S($.get$x$x(t1)) + " y: " + $.S($.get$y$x($.get$click$x(this.game.get$input()))));
      t2 = this.box;
      $.Primitives_printString($.JSBool_methods.toString$0(t2.contains$1(t2, $.get$click$x(this.game.get$input()))));
    }
    t1 = this.game.get$input().get$mouse();
    if (t1 != null) {
      t2 = this.box;
      t1 = t2.contains$1(t2, t1);
    } else
      t1 = false;
    if (t1) {
      this.isHighlighted = true;
      this.opacity = 1;
    } else {
      this.isHighlighted = false;
      this.opacity = 0.5;
    }
    t1 = $.get$click$x(this.game.get$input());
    if (t1 != null) {
      t2 = this.box;
      t1 = t2.contains$1(t2, t1);
    } else
      t1 = false;
    if (t1) {
      this.opacity = 1;
      $.Timer_Timer($.CONSTANT15, new $.GameButton_update_anon(this));
      this.buttonAction$0();
    }
  },
  GameButton$12$buttonAction$centered$color$font$game$groupId$id$opacity$size$text$x$y: function(buttonAction, centered, color, font, game, groupId, id, opacity, size, text, x, y) {
  },
  $isGameButton: true
};

$$.GameButton_update_anon = {"": "Closure;this_0",
  call$0: function() {
    $.set$opacity$x(this.this_0, 0.5);
    return 0.5;
  }
};

$$.GameEntity = {"": "Object;game<,isHighlighted<,soundReady@,id*,groupId<,box<,_removeFromGame@,radius<,momentum<,enabled@,opacity*,color>,fill>",
  update$0: function() {
    var t1, t2;
    t1 = this.previousBox;
    t2 = this.box;
    if (t1 == null)
      this.previousBox = $.Rectangle$clone(t2);
    else
      t1.updateFrom$1(t2);
    if (!this.enabled)
      return;
    this.momentum.update$1(this.game.get$clockTick());
    this.set$x(this, $.$add$ns(this.get$x(this), $.$mul$n(this.momentum.xVel, this.game.get$clockTick())));
    this.set$y(this, $.$add$ns(this.get$y(this), $.$mul$n(this.momentum.yVel, this.game.get$clockTick())));
    this.updateBox$0();
  },
  get$x: function(_) {
    return this._x;
  },
  set$x: function(_, value) {
    this._x = value;
    this.updateBox$0();
  },
  get$y: function(_) {
    return this._y;
  },
  set$y: function(_, value) {
    this._y = value;
    this.updateBox$0();
  },
  get$width: function(_) {
    return this._width;
  },
  set$width: function(_, value) {
    this._width = value;
    this.updateBox$0();
  },
  get$height: function(_) {
    return this._height;
  },
  set$height: function(_, value) {
    this._height = value;
    this.updateBox$0();
  },
  updateBox$0: function() {
    if (this.box == null)
      this.box = $.Rectangle$(0, 0, 0, 0);
    var t1 = $.$sub$n(this.get$x(this), $.$div$n(this.get$width(this), 2));
    this.box.left = t1;
    t1 = $.$sub$n(this.get$y(this), $.$div$n(this.get$height(this), 2));
    this.box.top = t1;
    t1 = $.$add$ns(this.box.left, this.get$width(this));
    this.box.right = t1;
    t1 = $.$add$ns(this.box.top, this.get$height(this));
    this.box.bottom = t1;
  },
  removeFromGame$0: function() {
    this._removeFromGame = true;
  },
  collidesWith$1: function(entity) {
    if (!entity.get$enabled())
      return false;
    return entity.get$box().intersectsWith$1(this.box);
  },
  GameEntity$withPosition$7: function(game, x, y, width, height, id, groupId) {
    var t1;
    this.momentum = $.Momentum$(null, null, 0, null, null, 0);
    this.set$x(this, x);
    this.set$y(this, y);
    this.set$width(this, width);
    this.set$height(this, height);
    t1 = this.id;
    if (t1 == null || $.$eq($.get$length$asx(t1), 0) === true)
      this.id = $.toString$0(this.get$hashCode(this));
  }
};

$$.GameInput = {"": "Object;click*,mouse@,keyCode*,mouseDown?,game<",
  start$0: function(_) {
  },
  reset$0: function(_) {
    this.click = null;
    this.keyCode = -1;
  }
};

$$.GameLoop = {"": "Object;",
  start$1: function(_, callback) {
    $.Timer_Timer$periodic($.CONSTANT6, new $.GameLoop_start_anon(callback));
  }
};

$$.GameLoop_start_anon = {"": "Closure;callback_0",
  call$1: function(t) {
    return this.callback_0.call$0();
  }
};

$$.GameRenderer = {"": "Object;rect>",
  get$game: function() {
    return this._game;
  },
  set$game: function(value) {
    this._game = value;
    this.init$0();
  },
  init$0: function() {
  },
  render$0: function() {
  }
};

$$.GameSound = {"": "Object;enabled@,Id,Sound<,Volume<,Looping<,_rootDirectory",
  get$rootDirectory: function() {
    return this._rootDirectory;
  },
  play$3: function(_, sound, volume, looping) {
  },
  remove$0: function(_) {
  },
  GameSound$3: function(sound, volume, looping) {
    this.Sound = sound;
    this.Volume = volume;
    this.Looping = looping;
  }
};

$$.GameText = {"": "GameEntity;text>,centered,font>,size>,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  updateBox$0: function() {
    if (this.box == null)
      this.box = $.Rectangle$(0, 0, 0, 0);
    this._height = this.size;
    if (this.centered === true)
      $.GameEntity.prototype.updateBox$0.call(this);
    else {
      var t1 = this.get$x(this);
      this.box.left = t1;
      t1 = this.get$y(this);
      this.box.top = t1;
      t1 = $.$add$ns(this.box.left, this.get$width(this));
      this.box.right = t1;
      t1 = $.$add$ns(this.box.top, this.get$height(this));
      this.box.bottom = t1;
    }
  },
  GameText$11$centered$color$font$game$groupId$id$opacity$size$text$x$y: function(centered, color, font, game, groupId, id, opacity, size, text, x, y) {
    this.opacity = opacity;
  },
  $isGameText: true
};

$$.GameTimer = {"": "Object;gameTime,wallLastTimestamp,fps,fpsSampleRate,timeDecrease",
  tick$0: function() {
    var wallCurrent, wallDelta, t1, gameDelta, t2;
    wallCurrent = $.DateTime$_now().millisecondsSinceEpoch;
    wallDelta = $.$div$n($.$sub$n(wallCurrent, this.wallLastTimestamp), 1000);
    this.wallLastTimestamp = wallCurrent;
    t1 = this.fps;
    this.fps = t1 + (1 / wallDelta - t1) / this.fpsSampleRate;
    gameDelta = $.min(wallDelta, 0.05);
    t1 = this.timeDecrease;
    t2 = this.gameTime;
    if (!t1)
      this.gameTime = $.$add$ns(t2, gameDelta);
    else
      this.gameTime = $.$sub$n(t2, gameDelta);
    return gameDelta;
  }
};

$$.CanvasGameRenderer = {"": "GameRenderer;targetId@,ctx<",
  getRenderer$1: function(e) {
    if (typeof e === "object" && e !== null && !!e.$isGameText)
      return this.textRenderer;
    return this.defaultRenderer;
  },
  render$0: function() {
    var t1, t2, t3, r;
    t1 = this.ctx;
    t2 = t1.canvas;
    $.clearRect$4$x(t1, 0, 0, t2.width, t2.height);
    t1 = this.get$game().bgStyle;
    $.set$fillStyle$x(this.ctx, t1);
    t1 = this.ctx;
    t3 = t1.canvas;
    $.fillRect$4$x(t1, 0, 0, t3.width, t3.height);
    $.save$0$x(this.ctx);
    t1 = this.ctx;
    $.translate$2$x(t1, $.$div$n(t1.canvas.width, 2), $.$div$n(this.ctx.canvas.height, 2));
    for (t1 = $.JSArray_methods.get$iterator(this.get$game().entities); t1.moveNext$0();) {
      t2 = t1.get$current();
      if (!t2.get$enabled())
        continue;
      r = this.getRenderer$1(t2);
      if (r != null)
        r.render$1(t2);
    }
    this.drawBeforeCtxRestore$0();
    $.restore$0$x(this.ctx);
  },
  drawBeforeCtxRestore$0: function() {
    if ($.Game_debugMode === true)
      this.drawDebugInfo$0();
  },
  drawDebugInfo$0: function() {
    $.set$fillStyle$x(this.ctx, "rgba(255, 255, 255, 0.2)");
    $.set$font$x(this.ctx, "16px Verdana");
    $.fillText$3$x(this.ctx, "FPS: " + $.JSNumber_methods.toStringAsFixed$1(this.get$game().timer.fps, 1), this.rect.get$halfWidth() - 120, -(this.rect.get$halfHeight() - 30));
  },
  CanvasGameRenderer$1: function(targetId) {
    var t1, clientRect, t2, t3;
    this.canvas = $.query("#" + $.S(this.targetId));
    this.ctx = $.getContext$1$x(this.canvas, "2d");
    t1 = this.ctx.canvas;
    this.rect = $.Rectangle$(0, 0, t1.width, t1.height);
    clientRect = $.getBoundingClientRect$0$x(this.ctx.canvas);
    t2 = $.getInterceptor$x(clientRect);
    t3 = t2.get$top(clientRect);
    this.rect.top = t3;
    t3 = t2.get$left(clientRect);
    this.rect.left = t3;
    t3 = t2.get$right(clientRect);
    this.rect.right = t3;
    t2 = t2.get$bottom(clientRect);
    this.rect.bottom = t2;
    this.defaultRenderer = $.DefaultCanvasEntityRenderer$(this);
    this.textRenderer = $.TextRenderer$(this);
  }
};

$$.DefaultCanvasEntityRenderer = {"": "Object;gr",
  render$1: function(e) {
    var t1, t2, t3, t4, t5, t6;
    t1 = $.getInterceptor$x(e);
    if (t1.get$color(e) != null) {
      t2 = this.gr;
      if (t1.get$fill(e) === true) {
        t3 = "rgba(" + $.S(t1.get$color(e)) + ", " + $.S(t1.get$opacity(e)) + ")";
        $.set$fillStyle$x(t2.ctx, t3);
        t2 = t2.ctx;
        t3 = e.get$box();
        t4 = t3.left;
        t5 = t3.top;
        t3 = t3.get$width(t3);
        t6 = e.get$box();
        $.fillRect$4$x(t2, t4, t5, t3, t6.get$height(t6));
      } else {
        t3 = "rgba(" + $.S(t1.get$color(e)) + ", " + $.S(t1.get$opacity(e)) + ")";
        $.set$strokeStyle$x(t2.ctx, t3);
        t2 = t2.ctx;
        t3 = e.get$box();
        t4 = t3.left;
        t5 = t3.top;
        t3 = t3.get$width(t3);
        t6 = e.get$box();
        $.strokeRect$4$x(t2, t4, t5, t3, t6.get$height(t6));
      }
    }
    t2 = this.gr;
    if (t2.get$game().showOutlines) {
      $.beginPath$0$x(t2.ctx);
      $.set$strokeStyle$x(t2.ctx, "green");
      $.arc$6$x(t2.ctx, t1.get$x(e), t1.get$y(e), e.get$radius(), 0, 6.283185307179586, false);
      $.stroke$0$x(t2.ctx);
      $.closePath$0$x(t2.ctx);
    }
  }
};

$$.HtmlGameInput = {"": "GameInput;click,mouse,keyCode,mouseDown,game",
  start$0: function(_) {
    var t1;
    $.Primitives_printString("Starting input");
    t1 = new $.HtmlGameInput_start_getXandY(this);
    $.get$onClick$x(document).listen$1(new $.HtmlGameInput_start_anon(this, t1));
    $.get$onMouseMove$x(document).listen$1(new $.HtmlGameInput_start_anon0(this, t1));
    $.get$onTouchMove$x(document).listen$1(new $.HtmlGameInput_start_anon1(this, t1));
    $.get$onTouchStart$x(document).listen$1(new $.HtmlGameInput_start_anon2());
    $.get$onKeyDown$x(document).listen$1(new $.HtmlGameInput_start_anon3(this));
    $.get$onMouseDown$x(document).listen$1(new $.HtmlGameInput_start_anon4(this));
    $.get$onMouseUp$x(document).listen$1(new $.HtmlGameInput_start_anon5(this));
    $.Primitives_printString("Input started");
  }
};

$$.HtmlGameInput_start_getXandY = {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = $.getInterceptor$x(e);
    t2 = t1.get$clientX(e);
    t3 = this.this_0;
    return $.Vector$($.$sub$n($.$sub$n(t2, $.get$x$x($.get$rect$x(t3.get$game()))), $.get$rect$x(t3.get$game()).get$halfWidth()), $.$sub$n($.$sub$n(t1.get$clientY(e), $.get$y$x($.get$rect$x(t3.get$game()))), $.get$rect$x(t3.get$game()).get$halfHeight()));
  }
};

$$.HtmlGameInput_start_anon = {"": "Closure;this_1,getXandY_2",
  call$1: function(e) {
    var t1 = this.getXandY_2.call$1(e);
    $.set$click$x(this.this_1, t1);
  }
};

$$.HtmlGameInput_start_anon0 = {"": "Closure;this_3,getXandY_4",
  call$1: function(e) {
    var t1 = this.getXandY_4.call$1(e);
    this.this_3.set$mouse(t1);
  }
};

$$.HtmlGameInput_start_anon1 = {"": "Closure;this_5,getXandY_6",
  call$1: function(e) {
    var t1, t2;
    t1 = $.getInterceptor$x(e);
    t1.preventDefault$0(e);
    t2 = this.getXandY_6.call$1($.$index$asx(t1.get$touches(e), 0));
    this.this_5.set$mouse(t2);
    return false;
  }
};

$$.HtmlGameInput_start_anon2 = {"": "Closure;",
  call$1: function(e) {
    $.preventDefault$0$x(e);
    return false;
  }
};

$$.HtmlGameInput_start_anon3 = {"": "Closure;this_7",
  call$1: function(e) {
    var t1 = $.get$keyCode$x(e);
    $.set$keyCode$x(this.this_7, t1);
  }
};

$$.HtmlGameInput_start_anon4 = {"": "Closure;this_8",
  call$1: function(e) {
    this.this_8.set$mouseDown(true);
  }
};

$$.HtmlGameInput_start_anon5 = {"": "Closure;this_9",
  call$1: function(e) {
    this.this_9.set$mouseDown(false);
  }
};

$$.HtmlGameLoop = {"": "GameLoop;_callback",
  _callback$0: function() {
    return this._callback.call$0();
  },
  start$1: function(_, callback) {
    this._callback = callback;
    $.requestAnimationFrame$1$x(window, this.get$loop(this));
  },
  loop$1: function(_, time) {
    this._callback$0();
    $.requestAnimationFrame$1$x(window, this.get$loop(this));
  },
  get$loop: function(receiver) {
    return new $.BoundClosure$i1(this, "loop$1", receiver);
  }
};

$$.HtmlGameSound = {"": "GameSound;audioCopy<,enabled,Id,Sound,Volume,Looping,_rootDirectory",
  play$3: function(_, sound, volume, looping) {
    var t1, sourceAudio, s, t2, o;
    if (!this.enabled)
      return;
    if ($.Game_debugMode === true)
      $.Primitives_printString("Playing: " + $.S(sound));
    t1 = "#sound_" + $.S(sound);
    sourceAudio = $.query$1$x(document, t1);
    if (sourceAudio == null) {
      t1 = "#" + $.S(sound);
      sourceAudio = $.query$1$x(document, t1);
    }
    if (sourceAudio == null) {
      sourceAudio = $.AudioElement_AudioElement($);
      t1 = $.getInterceptor$x(sourceAudio);
      t1.set$id(sourceAudio, "sound_" + $.S(sound));
      t1.set$preload(sourceAudio, "auto");
      s = $.$$dom_createElement$1$x(document, "source");
      t2 = $.getInterceptor$x(s);
      t2.set$src(s, this.get$rootDirectory() + $.S(sound) + ".mp3");
      t2.set$type(s, "audio/mp3");
      t2 = t1.get$nodes(sourceAudio);
      t2.add$1(t2, s);
      s = $.$$dom_createElement$1$x(document, "source");
      t2 = $.getInterceptor$x(s);
      t2.set$src(s, this.get$rootDirectory() + $.S(sound) + ".ogg");
      t2.set$type(s, "audio/ogg");
      t1 = t1.get$nodes(sourceAudio);
      t1.add$1(t1, s);
      t1 = $.get$nodes$x($.get$body$x(document));
      t1.add$1(t1, sourceAudio);
    }
    this.audioCopy = $.callTypeCast($.clone$1$x(sourceAudio, true), "$isAudioElement");
    $.getInterceptor$x(this.audioCopy).id = "";
    t1 = $.get$nodes$x($.get$body$x(document));
    t1.add$1(t1, this.audioCopy);
    $.get$onEnded$x(this.audioCopy).listen$1(new $.HtmlGameSound_play_anon(this));
    if (!this.enabled)
      $.remove$0$ax(this.audioCopy);
    if (volume != null) {
      $.checkNum(10);
      $.checkNum(3);
      o = Math.pow(10, 3);
      t1 = $.$div$n($.round$0$nx($.$mul$n(volume, o)), o);
      $.getInterceptor$x(this.audioCopy).volume = t1;
    }
    if (looping === true)
      $.getInterceptor$x(this.audioCopy).loop = true;
    $.play$0$x(this.audioCopy);
    t1 = $.get$classes$x(this.audioCopy);
    t1.add$1(t1, "sound-clone");
  },
  remove$0: function(_) {
    $.getInterceptor$x(this.audioCopy).currentTime = 999;
    $.pause$0$x(this.audioCopy);
    $.getInterceptor$x(this.audioCopy).volume = 0;
    $.remove$0$ax(this.audioCopy);
    $.getInterceptor$x(this.audioCopy).loop = false;
  }
};

$$.HtmlGameSound_play_anon = {"": "Closure;this_0",
  call$1: function(e) {
    if ($.Game_debugMode === true)
      $.Primitives_printString("removed");
    $.remove$0$ax(this.this_0.get$audioCopy());
  }
};

$$.TextRenderer = {"": "DefaultCanvasEntityRenderer;gr",
  render$1: function(b) {
    var t1, t2, t3;
    t1 = $.getInterceptor$x(b);
    t2 = "rgba(" + $.S(t1.get$color(b)) + ", " + $.S(t1.get$opacity(b)) + ")";
    t3 = this.gr;
    $.set$fillStyle$x(t3.ctx, t2);
    t2 = $.S(t1.get$size(b)) + "px " + $.S(t1.get$font(b));
    $.set$font$x(t3.ctx, t2);
    t1.set$width(b, $.measureText$1$x(t3.ctx, t1.get$text(b)).width);
    t3 = t3.ctx;
    t1 = t1.get$text(b);
    t2 = b.get$box();
    $.fillText$3$x(t3, t1, t2.left, t2.bottom);
  }
};

$$.Momentum = {"": "Object;xVel,yVel,xAccel,yAccel,xMax,yMax",
  update$1: function(clockTick) {
    var t1, t2, t3;
    t1 = this.xAccel;
    if (t1 != null && $.JSNumber_methods.$lt($.abs$0$n(this.xVel), this.xMax)) {
      t2 = $.$gt$n(this.xVel, 0);
      t3 = this.xVel;
      if (t2 === true)
        this.xVel = $.$add$ns(t3, $.JSNull_methods.$mul(t1, clockTick));
      else
        this.xVel = $.$sub$n(t3, $.JSNull_methods.$mul(t1, clockTick));
    }
    t1 = this.yAccel;
    if (t1 != null && $.JSNumber_methods.$lt($.abs$0$n(this.yVel), this.yMax)) {
      t2 = $.$gt$n(this.yVel, 0);
      t3 = this.yVel;
      if (t2 === true)
        this.yVel = $.$add$ns(t3, $.JSNull_methods.$mul(t1, clockTick));
      else
        this.yVel = $.$sub$n(t3, $.JSNull_methods.$mul(t1, clockTick));
    }
    t1 = this.xVel;
    if (t1 != null) {
      t2 = this.xMax;
      t1 = t2 != null && $.JSNumber_methods.$gt($.abs$0$n(t1), t2);
    } else
      t1 = false;
    if (t1) {
      t1 = this.xMax;
      this.xVel = $.$gt$n(this.xVel, 0) === true ? t1 : $.JSNull_methods.$negate(t1);
    }
    t1 = this.yVel;
    if (t1 != null) {
      t2 = this.yMax;
      t1 = t2 != null && $.JSNumber_methods.$gt($.abs$0$n(t1), t2);
    } else
      t1 = false;
    if (t1) {
      t1 = this.yMax;
      this.yVel = $.$gt$n(this.yVel, 0) === true ? t1 : $.JSNull_methods.$negate(t1);
    }
  }
};

$$.Rectangle = {"": "Object;top,left,right,bottom",
  updateFrom$1: function(rect) {
    this.top = rect.top;
    this.left = rect.left;
    this.right = rect.right;
    this.bottom = rect.bottom;
  },
  intersectsWith$1: function(other) {
    return $.Rectangle_intersect(this, other);
  },
  contains$1: function(_, point) {
    var t1 = $.getInterceptor(point);
    if (point == null)
      return false;
    return $.$ge$n(t1.get$x(point), this.left) === true && $.$le$n(t1.get$x(point), this.right) === true && $.$ge$n(t1.get$y(point), this.top) === true && $.$le$n(t1.get$y(point), this.bottom) === true;
  },
  get$width: function(_) {
    return $.$sub$n(this.right, this.left);
  },
  get$height: function(_) {
    return $.$sub$n(this.bottom, this.top);
  },
  get$x: function(_) {
    return this.left;
  },
  get$y: function(_) {
    return this.top;
  },
  get$halfWidth: function() {
    return $.$div$n(this.get$width(this), 2);
  },
  get$halfHeight: function() {
    return $.$div$n(this.get$height(this), 2);
  }
};

$$.Vector = {"": "Object;x*,y>"};

$$.EventStream = {"": "Object;_controller",
  get$stream: function(_) {
    return this._controller.stream;
  },
  signal$1: function(value) {
    var t1, t2;
    t1 = $ === value;
    if (t1)
      value = null;
    t2 = this._controller;
    t2.add$1(t2, !t1 ? value : $.get$EventArgs_empty());
  },
  signal$0: function() {
    return this.signal$1($);
  }
};

$$.EventArgs = {"": "Object;"};

$$.GalagaGame = {"": "Game;score@,highScore,lastPowerUp,lastEnemy,lastStar,_liblib3$_state,Stats<,Options<,Controls,Highscores<,rank,pointMultiplier@,enemyX?,enemyY?,bulletCap,shipStartLives,colorCount@,enemyCount,enemyAmount@,defaultTimer,level@,p1Dead?,goingRight<,_countdownTimer,_waitingTimer,_waiting@,difficulty@,bonusCheck@,bonusStage@,soundEffectsOn@,tutorial?,visualLevel<,ship<,nextId,targetId@,menuSong<,optionSong,gameStart,gameSong,cursorMove<,cursorSelect<,cursorSelect2<,enemyFire<,enemyHit<,explosion,motherShipFire<,shipFire<,shipHit<,powerUp<,_statUpdateEvent<,_gameOverEvent<,_shipHitEvent<,_bossHitEvent<,_bossKilledEvent,_motherShipEvent<,_normalHitEvent<,entities,sounds,timer,clockTick,rect,input,renderer,loop,bgStyle,showOutlines",
  shipHit$0: function() {
    return this.shipHit.call$0();
  },
  get$state: function(_) {
    return this._liblib3$_state;
  },
  set$state: function(_, value) {
    var t1;
    if (this._liblib3$_state === value)
      return;
    this._liblib3$_state = value;
    this.disableEntitiesByGroup$1("welcome");
    this.disableEntitiesByGroup$1("gameOver");
    this.disableEntitiesByGroup$1("stats");
    this.disableEntitiesByGroup$1("paused");
    this.disableEntitiesByGroup$1("options");
    this.disableEntitiesByGroup$1("instructions");
    this.disableEntitiesByGroup$1("levelEnd");
    this.disableEntitiesByGroup$1("leaders");
    t1 = this._liblib3$_state;
    if (t1 === 1)
      this.enableEntitiesByGroup$1("welcome");
    else if (t1 === 4)
      this.enableEntitiesByGroup$1("gameOver");
    else if (t1 === 5)
      this.enableEntitiesByGroup$1("stats");
    else if (t1 === 2)
      this.enableEntitiesByGroup$1("paused");
    else if (t1 === 6)
      this.enableEntitiesByGroup$1("options");
    else if (t1 === 7)
      this.enableEntitiesByGroup$1("instructions");
    else if (t1 === 8)
      this.enableEntitiesByGroup$1("levelEnd");
    else if (t1 === 9)
      this.enableEntitiesByGroup$1("leaders");
  },
  set$waiting: function(value) {
    var t1;
    this._waiting = value;
    t1 = this._waitingTimer;
    if (t1 != null)
      t1.cancel$0();
    this.disableEntitiesByGroup$1("welcome");
    this.disableEntitiesByGroup$1("gameOver");
    this.disableEntitiesByGroup$1("stats");
    this.disableEntitiesByGroup$1("paused");
    this.disableEntitiesByGroup$1("options");
    this.disableEntitiesByGroup$1("instructions");
    this.disableEntitiesByGroup$1("leaders");
    this._waitingTimer = $.Timer_Timer$periodic($.CONSTANT16, new $.GalagaGame_waiting_anon(this));
  },
  start$0: function(_) {
    var t1, t2;
    t1 = this.Stats;
    if (!t1.containsKey$1(t1, "killed"))
      t1.$indexSet(t1, "killed", 0);
    if (!t1.containsKey$1(t1, "wins"))
      t1.$indexSet(t1, "wins", 0);
    if (!t1.containsKey$1(t1, "loses"))
      t1.$indexSet(t1, "loses", 0);
    if (!t1.containsKey$1(t1, "totalGames"))
      t1.$indexSet(t1, "totalGames", 0);
    if (!t1.containsKey$1(t1, "highscore"))
      t1.$indexSet(t1, "highscore", 0);
    if (!t1.containsKey$1(t1, "normalKills"))
      t1.$indexSet(t1, "normalKills", 0);
    if (!t1.containsKey$1(t1, "bossKills"))
      t1.$indexSet(t1, "bossKills", 0);
    if (!t1.containsKey$1(t1, "motherKills"))
      t1.$indexSet(t1, "motherKills", 0);
    if (!t1.containsKey$1(t1, "powerups"))
      t1.$indexSet(t1, "powerups", 0);
    t1 = this.Options;
    if (!t1.containsKey$1(t1, "startLives"))
      t1.$indexSet(t1, "startLives", 3);
    if (!t1.containsKey$1(t1, "bulletCap"))
      t1.$indexSet(t1, "bulletCap", 3);
    if (!t1.containsKey$1(t1, "time"))
      t1.$indexSet(t1, "time", 60);
    if (!t1.containsKey$1(t1, "difficulty"))
      t1.$indexSet(t1, "difficulty", 1);
    if (!t1.containsKey$1(t1, "powerups"))
      t1.$indexSet(t1, "powerups", 1);
    if (!t1.containsKey$1(t1, "soundeffects"))
      t1.$indexSet(t1, "soundeffects", 1);
    t2 = this.Controls;
    if (!t2.containsKey$1(t2, "left"))
      t2.$indexSet(t2, "left", "left");
    if (!t2.containsKey$1(t2, "right"))
      t2.$indexSet(t2, "right", "right");
    if (!t2.containsKey$1(t2, "fire"))
      t2.$indexSet(t2, "fire", "space");
    t2 = this.Highscores;
    if (!t2.containsKey$1(t2, 1))
      t2.$indexSet(t2, 1, 0);
    if (!t2.containsKey$1(t2, 2))
      t2.$indexSet(t2, 2, 0);
    if (!t2.containsKey$1(t2, 3))
      t2.$indexSet(t2, 3, 0);
    if (!t2.containsKey$1(t2, 4))
      t2.$indexSet(t2, 4, 0);
    if (!t2.containsKey$1(t2, 5))
      t2.$indexSet(t2, 5, 0);
    if (!t2.containsKey$1(t2, 6))
      t2.$indexSet(t2, 6, 0);
    if (!t2.containsKey$1(t2, 7))
      t2.$indexSet(t2, 7, 0);
    if (!t2.containsKey$1(t2, 8))
      t2.$indexSet(t2, 8, 0);
    if (!t2.containsKey$1(t2, 9))
      t2.$indexSet(t2, 9, 0);
    if (!t2.containsKey$1(t2, 10))
      t2.$indexSet(t2, 10, 0);
    if ($.$eq(t1.$index(t1, "soundeffects"), 1) === true)
      this.soundEffectsOn = true;
    else
      this.soundEffectsOn = false;
    this.resetStats$0();
    this.createWelcomeMenu$0();
    this.createGameOverMenu$0();
    this.createStatsMenu$0();
    this.createPausedMenu$0();
    this.createControlsMenu$0();
    this.createLeaderBoardMenu$0();
    if (this.soundEffectsOn) {
      t1 = this.menuSong;
      t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
    }
    t1 = this.menuSong;
    t1.remove$0(t1);
    this.set$state(this, 1);
    $.Game.prototype.start$0.call(this, this);
  },
  update$0: function() {
    var t1, t2;
    if (this.get$state(this) === 3 || this.get$state(this) === 2) {
      if (this.input.keyCode === 27)
        this.set$state(this, this.get$state(this) === 2 ? 3 : 2);
      if (this.enemyAmount <= 0) {
        t1 = this.Stats;
        t1.$indexSet(t1, "wins", $.$add$ns(t1.$index(t1, "wins"), 1));
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon0());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon1());
        if (this.soundEffectsOn) {
          t1 = this.cursorSelect2;
          t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
        }
        this.removeEntitiesByGroup$1("levelEnd");
        this.createLevelEnd$0();
        this.set$state(this, 8);
        this.set$waiting(1);
        if (!this.tutorial)
          this.level = this.level + 1;
        this.visualLevel = this.visualLevel + 1;
      }
      if (this.get$state(this) === 3) {
        t1 = this.Options;
        t2 = $.$eq(t1.$index(t1, "soundeffects"), 1) === true;
        t1 = t2;
      } else
        t1 = false;
      if (t1)
        this.newPowerUp$0();
      if (this.get$state(this) === 3)
        this.newMotherShip$0();
      if ($.$le$n(this.timer.gameTime, 0) === true && !this.bonusStage)
        this.gameOver$0();
      else if (this.bonusStage && $.$le$n(this.timer.gameTime, 0) === true) {
        t1 = this.Stats;
        t1.$indexSet(t1, "wins", $.$add$ns(t1.$index(t1, "wins"), 1));
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon2());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon3());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon4());
        if (this.soundEffectsOn) {
          t1 = this.cursorSelect2;
          t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
        }
        this.removeEntitiesByGroup$1("levelEnd");
        this.createLevelEnd$0();
        this.set$state(this, 8);
        this.set$waiting(1);
        this.level = this.level + 1;
        this.visualLevel = this.visualLevel + 1;
      }
    }
    t1 = this.colorCount;
    if (t1 < 7)
      this.colorCount = t1 + 1;
    else if (t1 >= 7)
      this.colorCount = 1;
    t1 = $.JSArray_methods.where$1(this.entities, new $.GalagaGame_update_anon5());
    t1.forEach$1(t1, new $.GalagaGame_update_anon6(this));
    this.newStar$0();
    $.Game.prototype.update$0.call(this);
  },
  startStars$0: function() {
    var w, star, t1;
    w = $.random(0.5, 3.5, false);
    star = $.Stars$(this, 0, 0, w, w, this.colorCount);
    do {
      star.set$x(star, $.random(-this.rect.get$halfWidth(), this.rect.get$halfWidth(), false));
      star.set$y(star, $.random(-this.rect.get$halfHeight(), this.rect.get$halfHeight(), false));
    } while (t1 = $.JSArray_methods.where$1(this.entities, new $.GalagaGame_startStars_anon()), t1.any$1(t1, new $.GalagaGame_startStars_anon0(star)));
    this.entities.push(star);
  },
  newParticle$4: function(x, y, xVel, yVel) {
    var w, particle;
    w = $.random(0.5, 3.5, false);
    particle = $.Particles$(this, x, y, w, w, this.colorCount, xVel, yVel);
    this.entities.push(particle);
  },
  newExplosion$2: function(x, y) {
    var yV, i, t1;
    for (yV = 80, i = 0; i < 3; ++i) {
      this.newParticle$4(x, y, 50, yV);
      yV -= 80;
    }
    for (yV = 80, i = 0; i < 3; ++i) {
      this.newParticle$4(x, y, -50, yV);
      yV -= 80;
    }
    this.newParticle$4(x, y, 0, 100);
    this.newParticle$4(x, y, 0, -100);
    if (this.soundEffectsOn) {
      t1 = this.explosion;
      t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
    }
  },
  newMiniExplosion$2: function(x, y) {
    var t1;
    this.newParticle$4(x, y, 50, 0);
    this.newParticle$4(x, y, -50, 0);
    this.newParticle$4(x, y, 0, 50);
    this.newParticle$4(x, y, 0, -50);
    if (this.soundEffectsOn) {
      t1 = this.explosion;
      t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
    }
  },
  newStar$0: function() {
    var w, star, t1;
    if ($.random(0, 1, false) > 0.09 || this.get$state(this) === 2)
      return;
    w = $.random(0.5, 3.5, false);
    star = $.Stars$(this, 0, 0, w, w, this.colorCount);
    do {
      star.set$x(star, $.random(-this.rect.get$halfWidth(), this.rect.get$halfWidth(), false));
      star.set$y(star, -this.rect.get$halfHeight());
    } while (t1 = $.JSArray_methods.where$1(this.entities, new $.GalagaGame_newStar_anon()), t1.any$1(t1, new $.GalagaGame_newStar_anon0(star)));
    this.lastStar = this.timer.gameTime;
    this.entities.push(star);
  },
  newBoss$0: function() {
    var enemy = $.Enemy$(this, 0, 0, this.difficulty, "Boss");
    enemy.idNum = this.nextId;
    this.nextId = this.nextId + 1;
    this.entities.push(enemy);
  },
  newBossDrone$2: function(x, y) {
    var t1, t2, enemy;
    t1 = {};
    t1.x_0 = 0;
    t2 = $.JSArray_methods.where$1(this.entities, new $.GalagaGame_newBossDrone_anon());
    t2.forEach$1(t2, new $.GalagaGame_newBossDrone_anon0(t1));
    if ($.$ge$n(t1.x_0, 6) === true)
      return;
    if ($.random(0, 1, false) < 0.01) {
      enemy = $.Enemy$(this, t1.x_0, y, this.difficulty, "Drone");
      enemy.idNum = this.nextId;
      this.nextId = this.nextId + 1;
      this.entities.push(enemy);
    }
  },
  newMotherShip$1$difficulty: function(difficulty) {
    var t1, t2, enemy;
    t1 = {};
    t1.x_0 = 0;
    t2 = $.JSArray_methods.where$1(this.entities, new $.GalagaGame_newMotherShip_anon());
    t2.forEach$1(t2, new $.GalagaGame_newMotherShip_anon0(t1));
    if ($.$ge$n(t1.x_0, 2) === true)
      return;
    if ($.random(0, 1, false) < 0.001) {
      enemy = $.Enemy$(this, -this.rect.get$halfWidth(), -225, difficulty, "MotherShip");
      enemy.idNum = this.nextId;
      this.nextId = this.nextId + 1;
      this.entities.push(enemy);
    }
  },
  newMotherShip$0: function() {
    return this.newMotherShip$1$difficulty(1);
  },
  newEnemy$1: function(difficulty) {
    var enemy = $.Enemy$(this, this.enemyX, this.enemyY, difficulty, "Normal");
    enemy.startY = this.enemyY;
    this.enemyX = this.enemyX + 70;
    this.enemyCount = this.enemyCount + 1;
    if (this.enemyCount > 10) {
      this.enemyY = this.enemyY + 65;
      this.enemyX = -400;
      this.enemyCount = 0;
    }
    enemy.idNum = this.nextId;
    this.nextId = this.nextId + 1;
    this.lastEnemy = this.timer.gameTime;
    this.entities.push(enemy);
  },
  newEnemy$0: function() {
    return this.newEnemy$1(1);
  },
  newBulletPowerUp$2: function(x, y) {
    var powerUp = $.PowerUp$(this, x, y, "bulletPower");
    this.entities.push(powerUp);
  },
  newPowerUp$0: function() {
    var t1, powerUp;
    if ($.random(0, 1, false) >= 0.1)
      return;
    t1 = $.JSArray_methods.where$1(this.entities, new $.GalagaGame_newPowerUp_anon());
    if (t1.get$length(t1) >= 5)
      return;
    if ($.$lt$n(this.timer.gameTime, 5) === true)
      return;
    if ($.$ge$n($.$add$ns(this.lastPowerUp, 5), this.timer.gameTime) === true)
      return;
    powerUp = $.PowerUp$(this, 0, 0, null);
    do {
      powerUp.set$x(powerUp, $.random(-this.rect.get$halfWidth() + 50, this.rect.get$halfWidth() - 50, false));
      powerUp.set$y(powerUp, -this.rect.get$halfHeight());
    } while (t1 = $.JSArray_methods.where$1(this.entities, new $.GalagaGame_newPowerUp_anon0()), t1.any$1(t1, new $.GalagaGame_newPowerUp_anon1(powerUp)));
    this.lastPowerUp = this.timer.gameTime;
    this.entities.push(powerUp);
  },
  getEnemyX$1: function(type) {
    var t1 = $.JSArray_methods.where$1(this.entities, new $.GalagaGame_getEnemyX_anon());
    t1.forEach$1(t1, new $.GalagaGame_getEnemyX_anon0(type));
    return 0;
  },
  getEnemyY$1: function(type) {
    var t1 = $.JSArray_methods.where$1(this.entities, new $.GalagaGame_getEnemyY_anon());
    $.JSArray_methods.forEach$1(t1.toList$0(t1), new $.GalagaGame_getEnemyY_anon0(type));
    return 0;
  },
  createLevelEnd$0: function() {
    var t1 = this.visualLevel;
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "levelEnd", "", 0.4, 56, t1 !== this.bonusCheck ? "Level " + $.S(t1) + " Complete!" : "Prepare for Bonus Stage!", 0, -97);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("levelEnd");
  },
  createWelcomeMenu$0: function() {
    var t1, t2;
    this._gameOverEvent.signal$0();
    t1 = this.rank;
    t2 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", t1 === 1 ? 0.8 : 0, 36, "You're a: Jew", 0, -275);
    this.entities.push(t2);
    t2 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", t1 === 2 ? 0.8 : 0, 36, "You're a: Jewish Priest", 0, -275);
    this.entities.push(t2);
    t2 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", t1 === 3 ? 0.8 : 0, 36, "You're a: Amish Mastermind", 0, -275);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", t1 === 4 ? 0.8 : 0, 36, "You're a: Road Warrior", 0, -275);
    this.entities.push(t2);
    t2 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", t1 === 5 ? 0.8 : 0, 36, "You're a: Space Recruit", 0, -275);
    this.entities.push(t2);
    t2 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", t1 === 6 ? 0.8 : 0, 36, "You're a: Space Cadet", 0, -275);
    this.entities.push(t2);
    t2 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", t1 === 7 ? 0.8 : 0, 36, "You're a: Space Captain", 0, -275);
    this.entities.push(t2);
    t2 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", t1 === 8 ? 0.8 : 0, 36, "You're a: Overlord of the Galaxy", 0, -275);
    this.entities.push(t2);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", t1 === 9 ? 0.8 : 0, 36, "You're a: Overlord of the Universe", 0, -275);
    this.entities.push(t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.4, 56, "Welcome to Galaga!", 0, -97);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_anon(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.4, 36, "Start Game", 0, -31);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_anon0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.4, 36, "Statistics", 0, 14);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_anon1(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.4, 36, "Options", 0, 48);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_anon2(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.4, 36, "Leaderboard", 0, 82);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("welcome");
  },
  createPausedMenu$0: function() {
    var t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "paused", "", 0.4, 56, "PAUSED", 0, -31);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createPausedMenu_anon(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "paused", "", 0.4, 36, "Quit", 0, 15);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("paused");
  },
  createLeaderBoardMenu$0: function() {
    var t1, t2;
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 56, "Leaderboard", 0, -240);
    this.entities.push(t1);
    t1 = this.Highscores;
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "1: " + $.S(t1.$index(t1, 1)), -145, -190);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "2: " + $.S(t1.$index(t1, 2)), -145, -150);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "3: " + $.S(t1.$index(t1, 3)), -145, -110);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "4: " + $.S(t1.$index(t1, 4)), -145, -70);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "5: " + $.S(t1.$index(t1, 5)), -145, -30);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "6: " + $.S(t1.$index(t1, 6)), -145, 10);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "7: " + $.S(t1.$index(t1, 7)), -145, 50);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "8: " + $.S(t1.$index(t1, 8)), -145, 90);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "9: " + $.S(t1.$index(t1, 9)), -145, 130);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "10: " + $.S(t1.$index(t1, 10)), -145, 170);
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createLeaderBoardMenu_anon(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 36, "Back", -420, -280);
    this.entities.push(t2);
    this.disableEntitiesByGroup$1("leaders");
  },
  createStatsMenu$0: function() {
    var t1, t2;
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 56, "Statistics", 0, -280);
    this.entities.push(t1);
    t1 = this.Stats;
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Total Killed: " + $.S(t1.$index(t1, "killed")), -400, -200);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Groupies Annihilated: " + $.S(t1.$index(t1, "normalKills")), -400, -155);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Big Bosses Denominated: " + $.S(t1.$index(t1, "bossKills")), -400, -110);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Mother Ships Deflowered: " + $.S(t1.$index(t1, "motherKills")), -400, -65);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Powerups Absorbed: " + $.S(t1.$index(t1, "powerups")), -400, -20);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Total Wins: " + $.S(t1.$index(t1, "wins")), -400, 25);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Total Loses: " + $.S(t1.$index(t1, "loses")), -400, 70);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Total Games: " + $.S(t1.$index(t1, "totalGames")), -400, 115);
    this.entities.push(t2);
    t2 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "High Score: " + $.S(t1.$index(t1, "highscore")), -400, 160);
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createStatsMenu_anon(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Back", -420, -280);
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createStatsMenu_anon0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "RESET", 0, 225);
    this.entities.push(t2);
    this.disableEntitiesByGroup$1("stats");
  },
  createOptionsMenu$0: function() {
    var t1, t2;
    this._gameOverEvent.signal$0();
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 56, "Options", 0, -160);
    this.entities.push(t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.6, 36, "Starting Lives:", 0, -60);
    this.entities.push(t1);
    t1 = this.Options;
    t2 = $.S(t1.$index(t1, "startLives"));
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, t2, 120, -60);
    this.entities.push(t2);
    t2 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.6, 36, "Bullet Cap:", 0, -30);
    this.entities.push(t2);
    t2 = $.S(t1.$index(t1, "bulletCap"));
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, t2, 120, -30);
    this.entities.push(t2);
    t2 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.6, 36, "Time:", 0, 0);
    this.entities.push(t2);
    t2 = $.S(t1.$index(t1, "time"));
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon1(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, t2, 120, 0);
    this.entities.push(t2);
    t2 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.6, 36, "Difficulty:", 0, 30);
    this.entities.push(t2);
    t2 = $.S(t1.$index(t1, "difficulty"));
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon2(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, t2, 120, 30);
    this.entities.push(t2);
    t2 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.6, 36, "Powerups Enabled:", -38, -94);
    this.entities.push(t2);
    t2 = $.$eq(t1.$index(t1, "powerups"), 1) === true ? "True" : "False";
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon3(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, t2, 150, -94);
    this.entities.push(t2);
    t2 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.6, 36, "Sound Effects Enabled:", -38, 60);
    this.entities.push(t2);
    t1 = $.$eq(t1.$index(t1, "soundeffects"), 1) === true ? "True" : "False";
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon4(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, t1, 170, 60);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon5(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.6, 36, "Set to Defaults", 10, 120);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon6(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, "Instructions", 380, -280);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon7(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, "Back", -420, -280);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("options");
  },
  createControlsMenu$0: function() {
    var t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.8, 56, "Instructions", 0, -160);
    this.entities.push(t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.6, 24, "Move left/right: Mouse swipe", 0, -94);
    this.entities.push(t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.6, 24, "Fire: Left Mouse Button", 0, -45);
    this.entities.push(t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.6, 24, "'S' PowerUp = You shoot 3 shots in 3 different directions, which move in a spiral formation.", 0, 0);
    this.entities.push(t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.6, 24, "'x2' PowerUp = Multiplies your score additions by 2.", 0, 45);
    this.entities.push(t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.6, 24, "'+' PowerUp = Increases the amount of bullets you can fire by 1.", 0, 90);
    this.entities.push(t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.6, 24, "'Life' PowerUp = Increases your total lives by 1.", 0, 135);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createControlsMenu_anon(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.4, 36, "Back", 0, 180);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("instructions");
  },
  createGameOverMenu$0: function() {
    var t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "gameOver", "", 0.4, 56, this.enemyAmount <= 0 ? "You Won!" : "You Lost!", 0, -97);
    this.entities.push(t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "gameOver", "", 0.4, 36, "Play again?", 0, -31);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createGameOverMenu_anon(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "gameOver", "", 0.4, 36, "Yes", 0, 15);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createGameOverMenu_anon0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "gameOver", "", 0.4, 36, "No", 0, 60);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("gameOver");
  },
  resetStats$0: function() {
    var t1 = this.Stats;
    t1.$indexSet(t1, "killed", 0);
    t1.$indexSet(t1, "wins", 0);
    t1.$indexSet(t1, "loses", 0);
    t1.$indexSet(t1, "totalGames", 0);
    t1.$indexSet(t1, "highscore", 0);
    this.set$state(this, 1);
    this.removeEntitiesByGroup$1("stats");
    this.createStatsMenu$0();
    this.set$state(this, 5);
  },
  resetOptions$0: function() {
    var t1 = this.Options;
    t1.$indexSet(t1, "startLives", 3);
    t1.$indexSet(t1, "bulletCap", 3);
    t1.$indexSet(t1, "time", 60);
    t1.$indexSet(t1, "difficulty", 1);
    t1.$indexSet(t1, "soundeffects", 1);
    this.set$state(this, 1);
    this.removeEntitiesByGroup$1("options");
    this.createOptionsMenu$0();
    this.set$state(this, 6);
  },
  newGame$0: function() {
    var t1, i, t2;
    t1 = $.JSArray_methods.where$1(this.entities, new $.GalagaGame_newGame_anon());
    t1.forEach$1(t1, new $.GalagaGame_newGame_anon0());
    for (i = 0; i < 50; ++i) {
      t1 = this.colorCount;
      if (t1 < 7)
        this.colorCount = t1 + 1;
      else if (t1 >= 7)
        this.colorCount = 1;
      this.startStars$0();
    }
    this.score = 0;
    t1 = this.ship;
    if (t1 != null)
      t1.removeFromGame$0();
    this.removeEntitiesByFilter$1(new $.GalagaGame_newGame_anon1());
    this.removeEntitiesByFilter$1(new $.GalagaGame_newGame_anon2());
    this.removeEntitiesByFilter$1(new $.GalagaGame_newGame_anon3());
    this.enemyX = -400;
    this.enemyY = -165;
    this.enemyAmount = 33;
    this.bonusCheck = 3;
    this.bonusStage = false;
    this.visualLevel = 2;
    this.level = 2;
    this.score = 0;
    this.pointMultiplier = 1;
    if (this.level >= this.bonusCheck) {
      this.bonusStage = true;
      this.bonusCheck = this.bonusCheck + 3;
    } else
      this.bonusStage = false;
    for (i = 0; i < 33; ++i)
      this.newEnemy$0();
    this.ship = $.Ship$(this, 0, this.rect.get$halfHeight() - 30);
    t1 = this.ship;
    this.entities.push(t1);
    this.p1Dead = false;
    this.ship.spiralShot = true;
    t1 = this.Options;
    t2 = t1.$index(t1, "startLives");
    this.ship.lives = t2;
    t2 = this.Stats;
    t2.$indexSet(t2, "totalGames", $.$add$ns(t2.$index(t2, "totalGames"), 1));
    this.set$state(this, 3);
    this.timer.timeDecrease = true;
    t1 = t1.$index(t1, "time");
    this.timer.gameTime = t1;
  },
  gameOver$0: function() {
    this.removeEntitiesByFilter$1(new $.GalagaGame_gameOver_anon());
    this.removeEntitiesByFilter$1(new $.GalagaGame_gameOver_anon0());
    this.removeEntitiesByFilter$1(new $.GalagaGame_gameOver_anon1());
    this.updateLeaderboard$0();
    var t1 = this.Stats;
    t1.$indexSet(t1, "loses", $.$add$ns(t1.$index(t1, "loses"), 1));
    this._gameOverEvent.signal$0();
    this._statUpdateEvent.signal$0();
    if (this.soundEffectsOn) {
      t1 = this.cursorSelect2;
      t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
    }
    this.removeEntitiesByGroup$1("gameOver");
    this.createGameOverMenu$0();
    this.set$state(this, 4);
  },
  switchDirection$0: function() {
    this.goingRight = !this.goingRight;
    var t1 = $.JSArray_methods.where$1(this.entities, new $.GalagaGame_switchDirection_anon());
    t1.forEach$1(t1, new $.GalagaGame_switchDirection_anon0());
  },
  canEnemyFall$0: function() {
    var t1, t2;
    t1 = {};
    t1.x_0 = 0;
    t2 = $.JSArray_methods.where$1(this.entities, new $.GalagaGame_canEnemyFall_anon());
    t2.forEach$1(t2, new $.GalagaGame_canEnemyFall_anon0(t1));
    if ($.$ge$n(t1.x_0, 3) === true)
      return false;
    else
      return true;
  },
  get$canEnemyFall: function() {
    return new $.BoundClosure$0(this, "canEnemyFall$0");
  },
  removeBullets$0: function() {
    this.removeEntitiesByFilter$1(new $.GalagaGame_removeBullets_anon());
  },
  updateLeaderboard$0: function() {
    var tempMap, t1, k, i, j, t2;
    tempMap = $.HashMap$();
    for (t1 = this.Highscores, k = 1; k < 11; ++k)
      tempMap.$indexSet(tempMap, k, t1.$index(t1, k));
    for (i = 1; i <= 10; ++i)
      if ($.JSNumber_methods.$gt(this.score, t1.$index(t1, i))) {
        for (j = i + 1; j < 10; ++j)
          t1.$indexSet(t1, j, tempMap.$index(tempMap, j - 1));
        t1.$indexSet(t1, i, this.score);
        t2 = this.Stats;
        t2.$indexSet(t2, "highScore", t1.$index(t1, i));
        break;
      }
  },
  get$onStatUpdate: function() {
    var t1 = this._statUpdateEvent;
    return t1.get$stream(t1);
  },
  get$onGameOver: function() {
    var t1 = this._gameOverEvent;
    return t1.get$stream(t1);
  },
  get$onShipHit: function() {
    var t1 = this._shipHitEvent;
    return t1.get$stream(t1);
  },
  get$onBossHit: function() {
    var t1 = this._bossHitEvent;
    return t1.get$stream(t1);
  },
  get$onMotherShipHit: function() {
    var t1 = this._motherShipEvent;
    return t1.get$stream(t1);
  },
  get$onNormalHit: function() {
    var t1 = this._normalHitEvent;
    return t1.get$stream(t1);
  }
};

$$.GalagaGame_waiting_anon = {"": "Closure;this_0",
  call$1: function(t) {
    var t1, t2, i;
    t1 = this.this_0;
    t1.set$_waiting(t1.get$_waiting() + 1);
    if (t1.get$_waiting() === 3) {
      t2 = $.JSArray_methods.where$1(t1.get$entities(), new $.GalagaGame_waiting__anon());
      $.JSArray_methods.forEach$1(t2.toList$0(t2), new $.GalagaGame_waiting__anon0());
      for (i = 0; i < 50; ++i) {
        t2 = t1.get$colorCount();
        if (t2 < 7)
          t1.set$colorCount(t2 + 1);
        else if (t2 >= 7)
          t1.set$colorCount(1);
        t1.startStars$0();
      }
      t1.set$enemyX(-400);
      t1.set$enemyY(-165);
      t1.set$enemyAmount(33);
      t2 = t1.get$difficulty();
      if (t2 < 5)
        t1.set$difficulty(t2 + 1);
      if (t1.get$visualLevel() >= t1.get$bonusCheck()) {
        t1.set$bonusStage(true);
        t1.set$tutorial(false);
        t1.set$bonusCheck(t1.get$bonusCheck() + 3);
      } else
        t1.set$bonusStage(false);
      if (t1.get$bonusStage())
        t1.newBoss$0();
      else
        for (i = 0; i < 33; ++i)
          t1.newEnemy$1(t1.get$difficulty());
      $.set$state$x(t1, 3);
      t1.get$timer().timeDecrease = true;
      t2 = t1.get$Options();
      t2 = t2.$index(t2, "time");
      t1.get$timer().gameTime = t2;
      t.cancel$0();
    }
  }
};

$$.GalagaGame_waiting__anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isStars;
  }
};

$$.GalagaGame_waiting__anon0 = {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  }
};

$$.GalagaGame_update_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  }
};

$$.GalagaGame_update_anon0 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  }
};

$$.GalagaGame_update_anon1 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaGame_update_anon2 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  }
};

$$.GalagaGame_update_anon3 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  }
};

$$.GalagaGame_update_anon4 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaGame_update_anon5 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isGameButton;
  }
};

$$.GalagaGame_update_anon6 = {"": "Closure;this_0",
  call$1: function(e) {
    var t1 = $.getInterceptor$x(e);
    if ($.$eq(t1.get$opacity(e), 1) === true && e.get$isHighlighted() && e.get$soundReady()) {
      t1 = this.this_0;
      if (t1.get$soundEffectsOn()) {
        t1 = t1.get$cursorMove();
        t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
      }
      e.set$soundReady(false);
    } else if ($.$lt$n(t1.get$opacity(e), 1) === true)
      e.set$soundReady(true);
  }
};

$$.GalagaGame_startStars_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isStars;
  }
};

$$.GalagaGame_startStars_anon0 = {"": "Closure;star_0",
  call$1: function(e) {
    return this.star_0.collidesWith$1(e);
  }
};

$$.GalagaGame_newStar_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isStars;
  }
};

$$.GalagaGame_newStar_anon0 = {"": "Closure;star_0",
  call$1: function(e) {
    return this.star_0.collidesWith$1(e);
  }
};

$$.GalagaGame_newBossDrone_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaGame_newBossDrone_anon0 = {"": "Closure;box_0",
  call$1: function(e) {
    var t1;
    if ($.propertyTypeCast(e, "$isEnemy").type === "Drone") {
      t1 = this.box_0;
      t1.x_0 = $.$add$ns(t1.x_0, 1);
    }
  }
};

$$.GalagaGame_newMotherShip_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaGame_newMotherShip_anon0 = {"": "Closure;box_0",
  call$1: function(e) {
    var t1;
    if ($.$eq($.get$type$x(e), "MotherShip") === true) {
      t1 = this.box_0;
      t1.x_0 = $.$add$ns(t1.x_0, 1);
    }
  }
};

$$.GalagaGame_newPowerUp_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  }
};

$$.GalagaGame_newPowerUp_anon0 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  }
};

$$.GalagaGame_newPowerUp_anon1 = {"": "Closure;powerUp_0",
  call$1: function(e) {
    return this.powerUp_0.collidesWith$1(e);
  }
};

$$.GalagaGame_getEnemyX_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaGame_getEnemyX_anon0 = {"": "Closure;type_0",
  call$1: function(e) {
    var t1 = $.getInterceptor$x(e);
    if ($.$eq(t1.get$type(e), this.type_0) === true && e.get$isFalling())
      return t1.get$x(e);
  }
};

$$.GalagaGame_getEnemyY_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaGame_getEnemyY_anon0 = {"": "Closure;type_0",
  call$1: function(e) {
    var t1 = $.getInterceptor$x(e);
    if ($.$eq(t1.get$type(e), this.type_0) === true && e.get$isFalling())
      return t1.get$y(e);
  }
};

$$.GalagaGame_createWelcomeMenu_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.newGame$0();
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn()) {
      t1 = t1.get$cursorSelect();
      t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
    }
  }
};

$$.GalagaGame_createWelcomeMenu_anon0 = {"": "Closure;this_1",
  call$0: function() {
    var t1 = this.this_1;
    t1.removeEntitiesByGroup$1("stats");
    t1.createStatsMenu$0();
    $.set$state$x(t1, 5);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn()) {
      t1 = t1.get$cursorSelect2();
      t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
    }
  }
};

$$.GalagaGame_createWelcomeMenu_anon1 = {"": "Closure;this_2",
  call$0: function() {
    var t1 = this.this_2;
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    $.set$state$x(t1, 6);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn()) {
      t1 = t1.get$cursorSelect2();
      t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
    }
  }
};

$$.GalagaGame_createWelcomeMenu_anon2 = {"": "Closure;this_3",
  call$0: function() {
    var t1 = this.this_3;
    t1.removeEntitiesByGroup$1("leaders");
    t1.createLeaderBoardMenu$0();
    $.set$state$x(t1, 9);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn()) {
      t1 = t1.get$cursorSelect2();
      t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
    }
  }
};

$$.GalagaGame_createPausedMenu_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1.get$ship();
    if (t2 != null)
      t2.removeFromGame$0();
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createPausedMenu__anon());
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createPausedMenu__anon0());
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createPausedMenu__anon1());
    t1.get$_statUpdateEvent().signal$0();
    t1.gameOver$0();
    $.set$state$x(t1, 1);
  }
};

$$.GalagaGame_createPausedMenu__anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  }
};

$$.GalagaGame_createPausedMenu__anon0 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  }
};

$$.GalagaGame_createPausedMenu__anon1 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaGame_createLeaderBoardMenu_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.set$state$x(t1, 1);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn()) {
      t1 = t1.get$cursorSelect2();
      t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
    }
  }
};

$$.GalagaGame_createStatsMenu_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.set$state$x(t1, 1);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn()) {
      t1 = t1.get$cursorSelect2();
      t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
    }
  }
};

$$.GalagaGame_createStatsMenu_anon0 = {"": "Closure;this_1",
  call$0: function() {
    return this.this_1.resetStats$0();
  }
};

$$.GalagaGame_createOptionsMenu_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1, t2, t3, t4;
    t1 = this.this_0;
    t2 = t1.get$Options();
    t3 = $.$ge$n(t2.$index(t2, "startLives"), 10);
    t4 = t1.get$Options();
    if (t3 === true)
      t4.$indexSet(t4, "startLives", 1);
    else
      t4.$indexSet(t4, "startLives", $.$add$ns(t4.$index(t4, "startLives"), 1));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
};

$$.GalagaGame_createOptionsMenu_anon0 = {"": "Closure;this_1",
  call$0: function() {
    var t1, t2, t3, t4;
    t1 = this.this_1;
    t2 = t1.get$Options();
    t3 = $.$ge$n(t2.$index(t2, "bulletCap"), 10);
    t4 = t1.get$Options();
    if (t3 === true)
      t4.$indexSet(t4, "bulletCap", 1);
    else
      t4.$indexSet(t4, "bulletCap", $.$add$ns(t4.$index(t4, "bulletCap"), 1));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
};

$$.GalagaGame_createOptionsMenu_anon1 = {"": "Closure;this_2",
  call$0: function() {
    var t1, t2, t3, t4;
    t1 = this.this_2;
    t2 = t1.get$Options();
    t3 = $.$ge$n(t2.$index(t2, "time"), 180);
    t4 = t1.get$Options();
    if (t3 === true)
      t4.$indexSet(t4, "time", 0);
    else
      t4.$indexSet(t4, "time", $.$add$ns(t4.$index(t4, "time"), 20));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
};

$$.GalagaGame_createOptionsMenu_anon2 = {"": "Closure;this_3",
  call$0: function() {
    var t1, t2, t3, t4;
    t1 = this.this_3;
    t2 = t1.get$Options();
    t3 = $.$ge$n(t2.$index(t2, "difficulty"), 5);
    t4 = t1.get$Options();
    if (t3 === true)
      t4.$indexSet(t4, "difficulty", 1);
    else
      t4.$indexSet(t4, "difficulty", $.$add$ns(t4.$index(t4, "difficulty"), 1));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
};

$$.GalagaGame_createOptionsMenu_anon3 = {"": "Closure;this_4",
  call$0: function() {
    var t1, t2, t3, t4;
    t1 = this.this_4;
    t2 = t1.get$Options();
    t3 = $.$ge$n(t2.$index(t2, "powerups"), 2);
    t4 = t1.get$Options();
    if (t3 === true)
      t4.$indexSet(t4, "powerups", 1);
    else
      t4.$indexSet(t4, "powerups", $.$add$ns(t4.$index(t4, "powerups"), 1));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
};

$$.GalagaGame_createOptionsMenu_anon4 = {"": "Closure;this_5",
  call$0: function() {
    var t1, t2, t3, t4;
    t1 = this.this_5;
    t2 = t1.get$Options();
    t3 = $.$ge$n(t2.$index(t2, "soundeffects"), 2);
    t4 = t1.get$Options();
    if (t3 === true)
      t4.$indexSet(t4, "soundeffects", 1);
    else
      t4.$indexSet(t4, "soundeffects", $.$add$ns(t4.$index(t4, "soundeffects"), 1));
    t2 = t1.get$Options();
    if ($.$eq(t2.$index(t2, "soundeffects"), 1) === true)
      t1.set$soundEffectsOn(true);
    else
      t1.set$soundEffectsOn(false);
    t2 = t1.get$menuSong();
    t2.remove$0(t2);
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
};

$$.GalagaGame_createOptionsMenu_anon5 = {"": "Closure;this_6",
  call$0: function() {
    return this.this_6.resetOptions$0();
  }
};

$$.GalagaGame_createOptionsMenu_anon6 = {"": "Closure;this_7",
  call$0: function() {
    var t1 = this.this_7;
    $.set$state$x(t1, 7);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn()) {
      t1 = t1.get$cursorSelect2();
      t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
    }
  }
};

$$.GalagaGame_createOptionsMenu_anon7 = {"": "Closure;this_8",
  call$0: function() {
    var t1 = this.this_8;
    $.set$state$x(t1, 1);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn()) {
      t1 = t1.get$cursorSelect2();
      t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
    }
  }
};

$$.GalagaGame_createControlsMenu_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.set$state$x(t1, 6);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn()) {
      t1 = t1.get$cursorSelect2();
      t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
    }
  }
};

$$.GalagaGame_createGameOverMenu_anon = {"": "Closure;this_0",
  call$0: function() {
    this.this_0.newGame$0();
  }
};

$$.GalagaGame_createGameOverMenu_anon0 = {"": "Closure;this_1",
  call$0: function() {
    var t1, t2;
    t1 = this.this_1;
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createGameOverMenu__anon());
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createGameOverMenu__anon0());
    t2 = t1.get$ship();
    if (t2 != null)
      t2.removeFromGame$0();
    $.set$state$x(t1, 1);
  }
};

$$.GalagaGame_createGameOverMenu__anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  }
};

$$.GalagaGame_createGameOverMenu__anon0 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  }
};

$$.GalagaGame_newGame_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isStars;
  }
};

$$.GalagaGame_newGame_anon0 = {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  }
};

$$.GalagaGame_newGame_anon1 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  }
};

$$.GalagaGame_newGame_anon2 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  }
};

$$.GalagaGame_newGame_anon3 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaGame_gameOver_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  }
};

$$.GalagaGame_gameOver_anon0 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  }
};

$$.GalagaGame_gameOver_anon1 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaGame_switchDirection_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaGame_switchDirection_anon0 = {"": "Closure;",
  call$1: function(e) {
    var t1, t2;
    t1 = $.getInterceptor$x(e);
    if ($.$eq(t1.get$type(e), "Normal") === true) {
      t2 = e.get$momentum();
      t2.xVel = $.$mul$n(t2.xVel, -1);
      if ($.$ge$n(e.get$momentum().xVel, 0) === true)
        t1.set$x(e, $.$add$ns(t1.get$x(e), 3));
      else
        t1.set$x(e, $.$sub$n(t1.get$x(e), 3));
    }
  }
};

$$.GalagaGame_canEnemyFall_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaGame_canEnemyFall_anon0 = {"": "Closure;box_0",
  call$1: function(e) {
    var t1;
    if ($.$eq($.get$type$x(e), "Normal") === true && e.get$isFalling()) {
      t1 = this.box_0;
      t1.x_0 = $.$add$ns(t1.x_0, 1);
    }
  }
};

$$.GalagaGame_removeBullets_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  }
};

$$.Bullet = {"": "GameEntity;temp,startX,Type,_deleteTimer,_waiting@,farRight,farLeft,right,left,straight,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    if ($.$eq($.get$state$x(this.game), 2) === true || $.$eq($.get$state$x(this.game), 4) === true || $.$eq($.get$state$x(this.game), 1) === true)
      return;
    $.GameEntity.prototype.update$0.call(this);
    if (this.Type === "exploding")
      this._deleteTimer = $.Timer_Timer$periodic($.CONSTANT16, new $.Bullet_update_anon(this));
    if (this.right === true)
      this.momentum.xVel = 40;
    else if (this.left === true)
      this.momentum.xVel = -40;
    else if (this.straight)
      this.momentum.xVel = 0;
    else if (this.farLeft)
      this.momentum.xVel = -60;
    else if (this.farRight)
      this.momentum.xVel = 60;
    if ($.$le$n(this.get$width(this), 0) === true || $.$le$n(this.get$height(this), 0) === true) {
      if ($.$gt$n(this.momentum.yVel, 0) === true) {
        var t1 = this.game;
        t1.set$score(t1.get$score() + 100);
      }
      this._removeFromGame = true;
    }
    if (this.game.get$ship().get$spiralShot() && this.right === true && $.$lt$n(this.startX, $.$sub$n($.$sub$n(this.get$x(this), $.$div$n(this.get$width(this), 2)), 25)) === true) {
      this.right = false;
      this.left = true;
    } else if (this.game.get$ship().get$spiralShot() && this.left === true && $.$gt$n(this.startX, $.$add$ns($.$add$ns(this.get$x(this), $.$div$n(this.get$width(this), 2)), 25)) === true) {
      this.left = false;
      this.right = true;
    } else if (this.game.get$ship().get$spiralShot() && this.farLeft && $.$gt$n(this.startX, $.$add$ns($.$add$ns(this.get$x(this), $.$div$n(this.get$width(this), 2)), 40)) === true) {
      this.farLeft = false;
      this.farRight = true;
    } else if (this.game.get$ship().get$spiralShot() && this.farRight && $.$gt$n(this.startX, $.$add$ns($.$add$ns(this.get$x(this), $.$div$n(this.get$width(this), 2)), 40)) === true) {
      this.farRight = false;
      this.farLeft = true;
    }
    if ($.$lt$n(this.get$y(this), -$.get$rect$x(this.game).get$halfHeight()) === true) {
      if ($.$lt$n(this.game.get$ship().get$bullet(), 3) === true) {
        t1 = this.game.get$ship();
        t1.set$bullet($.$add$ns(t1.get$bullet(), 1));
      }
      this._removeFromGame = true;
    }
    if ($.$eq(this.momentum.yVel, 0) !== true) {
      t1 = $.JSArray_methods.where$1(this.game.get$entities(), new $.Bullet_update_anon0(this));
      $.JSArray_methods.forEach$1(t1.toList$0(t1), new $.Bullet_update_anon1(this));
    }
    if ($.$lt$n(this.momentum.yVel, 0) === true) {
      t1 = $.JSArray_methods.where$1(this.game.get$entities(), new $.Bullet_update_anon2(this));
      $.JSArray_methods.forEach$1(t1.toList$0(t1), new $.Bullet_update_anon3(this));
    }
    if ($.$gt$n(this.momentum.yVel, 0) === true) {
      t1 = $.JSArray_methods.where$1(this.game.get$entities(), new $.Bullet_update_anon4(this));
      $.JSArray_methods.forEach$1(t1.toList$0(t1), new $.Bullet_update_anon5(this));
    }
  },
  Bullet$7: function(game, x, y, dir, yVel, size, type) {
    this.color = "255, 0, 0";
    this.momentum.yVel = yVel;
    this.startX = x;
    if (dir === "right")
      this.right = true;
    else if (dir === "left")
      this.left = true;
    else if (dir === "straight")
      this.straight = true;
    else if (dir === "farLeft")
      this.farLeft = true;
    else if (dir === "farRight")
      this.farRight = true;
    this.Type = type;
    if (size >= 36)
      ;
  },
  $isBullet: true
};

$$.Bullet_update_anon = {"": "Closure;this_0",
  call$1: function(t) {
    var t1, t2;
    t1 = this.this_0;
    t1.set$_waiting(t1.get$_waiting() + 1);
    if (t1.get$_waiting() === 1) {
      t2 = $.getInterceptor$x(t1);
      t1.get$game().newMiniExplosion$2(t2.get$x(t1), t2.get$y(t1));
      t1.get$game().addEntity$1($.Bullet$(t1.get$game(), t2.get$x(t1), $.$add$ns(t2.get$y(t1), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
      t1.get$game().addEntity$1($.Bullet$(t1.get$game(), t2.get$x(t1), $.$add$ns(t2.get$y(t1), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
      t1.get$game().addEntity$1($.Bullet$(t1.get$game(), t2.get$x(t1), $.$add$ns(t2.get$y(t1), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
      t1.get$game().addEntity$1($.Bullet$(t1.get$game(), t2.get$x(t1), $.$add$ns(t2.get$y(t1), 16), "farLeft", $.random(350, 400, false), $.random(8, 16, false), "normal"));
      t1.get$game().addEntity$1($.Bullet$(t1.get$game(), t2.get$x(t1), $.$add$ns(t2.get$y(t1), 16), "farRight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
      t1.set$_removeFromGame(true);
      t.cancel$0();
    }
  }
};

$$.Bullet_update_anon0 = {"": "Closure;this_1",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet && this.this_1.collidesWith$1(e);
  }
};

$$.Bullet_update_anon1 = {"": "Closure;this_2",
  call$1: function(e) {
    var t1, t2, t3, t4;
    t1 = this.this_2;
    t2 = $.getInterceptor$x(t1);
    t3 = $.getInterceptor$x(e);
    if ($.$gt$n(t2.get$width(t1), t3.get$width(e)) === true)
      if ($.$gt$n($.get$height$x(t1), t3.get$height(e)) === true) {
        t4 = $.getInterceptor$x(t1);
        t4 = $.$eq(t3.get$x(e), t4.get$x(t1)) !== true && $.$eq(t3.get$y(e), t4.get$y(t1)) !== true;
      } else
        t4 = false;
    else
      t4 = false;
    if (t4) {
      t2.set$width(t1, $.$sub$n(t2.get$width(t1), t3.get$width(e)));
      t2 = $.getInterceptor$x(t1);
      t2.set$height(t1, $.$sub$n(t2.get$height(t1), t3.get$height(e)));
      e.removeFromGame$0();
    }
  }
};

$$.Bullet_update_anon2 = {"": "Closure;this_3",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy && this.this_3.collidesWith$1(e);
  }
};

$$.Bullet_update_anon3 = {"": "Closure;this_4",
  call$1: function(enemy) {
    var t1, t2, t3;
    t1 = this.this_4;
    t2 = $.getInterceptor$x(t1);
    t3 = $.getInterceptor$x(enemy);
    if ($.$gt$n(t2.get$width(t1), t3.get$width(enemy)) === true && $.$gt$n($.get$height$x(t1), t3.get$height(enemy)) === true) {
      t2.set$width(t1, $.$sub$n(t2.get$width(t1), t3.get$width(enemy)));
      t2 = $.getInterceptor$x(t1);
      t2.set$height(t1, $.$sub$n(t2.get$height(t1), t3.get$height(enemy)));
    } else
      t1.set$_removeFromGame(true);
    t2 = enemy.get$idNum();
    t1.get$game().set$targetId(t2);
    if ($.$lt$n(t1.get$game().get$ship().get$bullet(), 3) === true) {
      t2 = t1.get$game().get$ship();
      t2.set$bullet($.$add$ns(t2.get$bullet(), 1));
    }
    if (t1.get$game().get$soundEffectsOn()) {
      t2 = t1.get$game().get$enemyHit();
      t2.play$3(t2, t1.get$game().get$enemyHit().Sound, t1.get$game().get$enemyHit().Volume, t1.get$game().get$enemyHit().Looping);
    }
    if ($.$eq(t3.get$type(enemy), "MotherShip") === true)
      t1.get$game().get$_motherShipEvent().signal$0();
    else if ($.$eq(t3.get$type(enemy), "Boss") === true)
      t1.get$game().get$_bossHitEvent().signal$0();
    else if ($.$eq(t3.get$type(enemy), "Normal") === true)
      t1.get$game().get$_normalHitEvent().signal$0();
    if ($.$eq(t3.get$type(enemy), "Boss") !== true) {
      t3.set$width(enemy, $.$sub$n(t3.get$width(enemy), 8));
      t3.set$height(enemy, $.$sub$n(t3.get$height(enemy), 8));
    }
    enemy.set$health(enemy.get$health() - 1);
  }
};

$$.Bullet_update_anon4 = {"": "Closure;this_5",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isShip && this.this_5.collidesWith$1(e);
  }
};

$$.Bullet_update_anon5 = {"": "Closure;this_6",
  call$1: function(e) {
    var t1, t2;
    t1 = this.this_6;
    t2 = t1.get$game().get$ship();
    t2.set$lives($.$sub$n(t2.get$lives(), 1));
    t1.get$game().get$_shipHitEvent().signal$0();
    if (t1.get$game().get$soundEffectsOn())
      $.play$3$x(t1.get$game().get$shipHit(), t1.get$game().get$shipHit().get$Sound(), t1.get$game().get$shipHit().get$Volume(), t1.get$game().get$shipHit().get$Looping());
    t1.get$game().removeBullets$0();
    t2 = t1.get$game().get$ship().get$maxBullet();
    t1.get$game().get$ship().set$bullet(t2);
  }
};

$$.Enemy = {"": "GameEntity;type>,yReset,isFalling<,creationTime,startY,difficulty@,bossDifficulty,health@,bossHealth,maxHp,bossMaxHp,belowHalfHp,flicker@,idNum<,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2;
    if ($.$eq($.get$state$x(this.game), 2) === true || $.$eq($.get$state$x(this.game), 4) === true || $.$eq($.get$state$x(this.game), 1) === true)
      return;
    if (this.health < this.maxHp / 2 || this.bossHealth < this.bossMaxHp / 2)
      this.belowHalfHp = true;
    if (this.type === "Drone") {
      if (this.health <= 0) {
        t1 = this.game;
        t1.set$score(t1.get$score() + 100 * t1.get$pointMultiplier());
        t1 = this.game.get$Stats();
        t1.$indexSet(t1, "killed", $.$add$ns(t1.$index(t1, "killed"), 1));
        if ($.random(0, 1, false) > 0.5)
          this.game.newBulletPowerUp$2(this.get$x(this), this.get$y(this));
        this.game.newMiniExplosion$2(this.get$x(this), this.get$y(this));
        this._removeFromGame = true;
      }
      if ($.random(0, 1, false) <= 0.01) {
        t1 = $.$eq(this.momentum.yVel, 0);
        t2 = this.momentum;
        if (t1 !== true)
          t2.yVel = $.$mul$n(t2.yVel, -1);
        else
          t2.yVel = 60;
      }
      if ($.random(0, 1, false) <= 0.01) {
        t1 = $.$eq(this.momentum.xVel, 0);
        t2 = this.momentum;
        if (t1 !== true)
          t2.xVel = $.$mul$n(t2.xVel, -1);
        else
          t2.xVel = 60;
      }
      if ($.$gt$n(this.get$y(this), $.get$rect$x(this.game).get$halfHeight() - 80) === true) {
        t1 = this.momentum;
        t1.yVel = $.$mul$n(t1.yVel, -1);
      }
      if ($.$lt$n(this.get$y(this), -$.get$rect$x(this.game).get$halfHeight() + 16) === true) {
        t1 = this.momentum;
        t1.yVel = $.$mul$n(t1.yVel, -1);
      }
      if ($.$gt$n(this.get$x(this), $.get$rect$x(this.game).get$halfWidth() - 16) === true) {
        t1 = this.momentum;
        t1.xVel = $.$mul$n(t1.xVel, -1);
      }
      if ($.$lt$n(this.get$x(this), -$.get$rect$x(this.game).get$halfWidth() + 16) === true) {
        t1 = this.momentum;
        t1.xVel = $.$mul$n(t1.xVel, -1);
      }
      if ($.$gt$n(this.get$x(this), this.game.getEnemyX$1("Boss")) === true)
        if ($.random(0, 1, false) <= 0.05) {
          t1 = this.momentum;
          t1.xVel = $.$mul$n(t1.xVel, -1);
        }
      if ($.$lt$n(this.get$x(this), this.game.getEnemyX$1("Boss")) === true)
        if ($.random(0, 1, false) <= 0.05) {
          t1 = this.momentum;
          t1.xVel = $.$mul$n(t1.xVel, -1);
        }
      if ($.$gt$n(this.get$y(this), this.game.getEnemyY$1("Boss")) === true)
        if ($.random(0, 1, false) <= 0.05) {
          t1 = this.momentum;
          t1.yVel = $.$mul$n(t1.yVel, -1);
        }
      if ($.$lt$n(this.get$y(this), this.game.getEnemyY$1("Boss")) === true)
        if ($.random(0, 1, false) <= 0.05) {
          t1 = this.momentum;
          t1.yVel = $.$mul$n(t1.yVel, -1);
        }
      t1 = this.bossDifficulty;
      if (t1 === 1) {
        if ($.random(0, 1, false) <= 0.01) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$enemyFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
      } else if (t1 === 2) {
        if ($.random(0, 1, false) <= 0.03) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$enemyFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
      } else if (t1 === 3) {
        if ($.random(0, 1, false) <= 0.07) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$enemyFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
      } else if (t1 === 4) {
        if ($.random(0, 1, false) <= 0.1) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.3) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else if ($.random(0, 1, false) <= 0.3) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$enemyFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
      } else if (t1 === 5)
        if ($.random(0, 1, false) <= 0.2) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.5) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else if ($.random(0, 1, false) <= 0.5) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$enemyFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
    }
    if (this.type === "Boss") {
      if (this.health <= 0) {
        t1 = this.game.get$Stats();
        t1.$indexSet(t1, "wins", $.$add$ns(t1.$index(t1, "wins"), 1));
        this.game.newExplosion$2(this.get$x(this), this.get$y(this));
        this.game.removeEntitiesByFilter$1(new $.Enemy_update_anon());
        this.game.removeEntitiesByFilter$1(new $.Enemy_update_anon0());
        this.game.removeEntitiesByFilter$1(new $.Enemy_update_anon1());
        t1 = this.game;
        if (t1.get$soundEffectsOn()) {
          t1 = t1.get$cursorSelect2();
          t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
        }
        this.game.removeEntitiesByGroup$1("levelEnd");
        this.game.createLevelEnd$0();
        $.set$state$x(this.game, 8);
        this.game.set$waiting(1);
        this.game.set$bonusCheck(3);
        this.game.set$bonusStage(false);
        t1 = this.game;
        t1.set$level(t1.get$level() + 1);
        this.bossHealth = this.bossHealth + 50;
        t1 = this.game;
        if (t1.get$level() >= t1.get$bonusCheck()) {
          t1.set$bonusStage(true);
          t1 = this.game;
          t1.set$bonusCheck(t1.get$bonusCheck() + 3);
        } else
          t1.set$bonusStage(false);
        t1 = this.game;
        t1.set$score(t1.get$score() + 10000 * t1.get$pointMultiplier());
        t1 = this.game.get$Stats();
        t1.$indexSet(t1, "killed", $.$add$ns(t1.$index(t1, "killed"), 1));
        this.game.set$bonusStage(false);
        this._removeFromGame = true;
      }
      if ($.random(0, 1, false) <= 0.01) {
        t1 = $.$eq(this.momentum.yVel, 0);
        t2 = this.momentum;
        if (t1 !== true)
          t2.yVel = $.$mul$n(t2.yVel, -1);
        else
          t2.yVel = 60;
      }
      if ($.random(0, 1, false) <= 0.01) {
        t1 = $.$eq(this.momentum.xVel, 0);
        t2 = this.momentum;
        if (t1 !== true)
          t2.xVel = $.$mul$n(t2.xVel, -1);
        else
          t2.xVel = 60;
      }
      if ($.$gt$n(this.get$y(this), $.get$rect$x(this.game).get$halfHeight() - 250) === true && $.random(0, 1, false) <= 0.07) {
        t1 = this.momentum;
        t1.yVel = $.$mul$n(t1.yVel, -1);
      }
      if ($.$gt$n(this.get$y(this), $.get$rect$x(this.game).get$halfHeight() - 115) === true) {
        t1 = this.momentum;
        t1.yVel = $.$mul$n(t1.yVel, -1);
      }
      if ($.$lt$n(this.get$y(this), -$.get$rect$x(this.game).get$halfHeight() + 72) === true) {
        t1 = this.momentum;
        t1.yVel = $.$mul$n(t1.yVel, -1);
      }
      if ($.$gt$n(this.get$x(this), $.get$rect$x(this.game).get$halfWidth() - 72) === true) {
        t1 = this.momentum;
        t1.xVel = $.$mul$n(t1.xVel, -1);
      }
      if ($.$lt$n(this.get$x(this), -$.get$rect$x(this.game).get$halfWidth() + 72) === true) {
        t1 = this.momentum;
        t1.xVel = $.$mul$n(t1.xVel, -1);
      }
      if (this.belowHalfHp) {
        t1 = this.bossDifficulty;
        if (t1 === 1) {
          if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            if (t1.get$soundEffectsOn()) {
              t1 = t1.get$enemyFire();
              t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
            }
          }
        } else if (t1 === 2) {
          if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            if (t1.get$soundEffectsOn()) {
              t1 = t1.get$enemyFire();
              t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
            }
          }
        } else if (t1 === 3) {
          if ($.random(0, 1, false) <= 0.07) {
            if ($.random(0, 1, false) <= 0.1) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            } else if ($.random(0, 1, false) <= 0.1) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
            t1 = this.game;
            if (t1.get$soundEffectsOn()) {
              t1 = t1.get$enemyFire();
              t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
            }
          }
        } else if (t1 === 4) {
          if ($.random(0, 1, false) <= 0.1) {
            if ($.random(0, 1, false) <= 0.3) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            } else if ($.random(0, 1, false) <= 0.3) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
            t1 = this.game;
            if (t1.get$soundEffectsOn()) {
              t1 = t1.get$enemyFire();
              t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
            }
          }
        } else if (t1 === 5)
          if ($.random(0, 1, false) <= 0.2) {
            if ($.random(0, 1, false) <= 0.5) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            } else if ($.random(0, 1, false) <= 0.5) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            if (t1.get$soundEffectsOn()) {
              t1 = t1.get$enemyFire();
              t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
            }
          }
      } else {
        t1 = this.bossDifficulty;
        if (t1 === 1) {
          if ($.random(0, 1, false) <= 0.01) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            if (t1.get$soundEffectsOn()) {
              t1 = t1.get$enemyFire();
              t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
            }
          }
        } else if (t1 === 2) {
          if ($.random(0, 1, false) <= 0.03) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            if (t1.get$soundEffectsOn()) {
              t1 = t1.get$enemyFire();
              t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
            }
          }
        } else if (t1 === 3) {
          if ($.random(0, 1, false) <= 0.07) {
            if ($.random(0, 1, false) <= 0.1) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(42, 54, false), "normal"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(42, 54, false), "normal"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(42, 54, false), "normal"));
            } else if ($.random(0, 1, false) <= 0.1) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            if (t1.get$soundEffectsOn()) {
              t1 = t1.get$enemyFire();
              t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
            }
          }
        } else if (t1 === 4) {
          if ($.random(0, 1, false) <= 0.1) {
            if ($.random(0, 1, false) <= 0.3) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(42, 54, false), "normal"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(42, 54, false), "normal"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(42, 54, false), "normal"));
            } else if ($.random(0, 1, false) <= 0.3) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            if (t1.get$soundEffectsOn()) {
              t1 = t1.get$enemyFire();
              t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
            }
          }
        } else if (t1 === 5)
          if ($.random(0, 1, false) <= 0.2) {
            if ($.random(0, 1, false) <= 0.5) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(42, 54, false), "normal"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(42, 54, false), "normal"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(42, 54, false), "normal"));
            } else if ($.random(0, 1, false) <= 0.5) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            if (t1.get$soundEffectsOn()) {
              t1 = t1.get$enemyFire();
              t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
            }
          }
      }
      t1 = $.random(0, 1, false);
      t2 = this.game;
      if (t1 <= 0.5)
        t2.newBossDrone$2(this.get$x(this), $.$sub$n(this.get$y(this), 50));
      else
        t2.newBossDrone$2($.$add$ns(this.get$x(this), 72), $.$sub$n(this.get$y(this), 50));
    }
    if (this.type === "MotherShip") {
      if ($.$gt$n(this.get$x(this), $.get$rect$x(this.game).get$halfWidth()) === true)
        this._removeFromGame = true;
      if (this.health <= 0) {
        t1 = this.game;
        t1.set$score(t1.get$score() + 1000 * t1.get$pointMultiplier());
        t1 = this.game.get$Stats();
        t1.$indexSet(t1, "killed", $.$add$ns(t1.$index(t1, "killed"), 1));
        if ($.random(0, 1, false) > 0.5)
          this.game.newBulletPowerUp$2(this.get$x(this), this.get$y(this));
        this.game.newMiniExplosion$2(this.get$x(this), this.get$y(this));
        this._removeFromGame = true;
      }
      t1 = this.difficulty;
      if (t1 === 1) {
        if ($.$ge$n($.$add$ns(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.$le$n($.$sub$n(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.random(0, 1, false) <= 0.01) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$motherShipFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
      } else if (t1 === 2) {
        if ($.$ge$n($.$add$ns(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.$le$n($.$sub$n(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.random(0, 1, false) <= 0.03) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$motherShipFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
      } else if (t1 === 3) {
        if ($.$ge$n($.$add$ns(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.$le$n($.$sub$n(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.random(0, 1, false) <= 0.07) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$motherShipFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
      } else if (t1 === 4) {
        if ($.$ge$n($.$add$ns(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.$le$n($.$sub$n(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.random(0, 1, false) <= 0.1) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.3) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else if ($.random(0, 1, false) <= 0.3) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$motherShipFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
      } else if (t1 === 5)
        if ($.$ge$n($.$add$ns(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.$le$n($.$sub$n(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.random(0, 1, false) <= 0.2) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.5) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else if ($.random(0, 1, false) <= 0.5) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$motherShipFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
    }
    if (this.type === "Normal") {
      if ($.random(0, 1, false) < 0.0002)
        this.game.get$canEnemyFall();
      if (this.health <= 0) {
        t1 = this.game;
        t1.set$score(t1.get$score() + 100 * t1.get$pointMultiplier());
        t1 = this.game;
        t1.set$enemyAmount(t1.get$enemyAmount() - 1);
        t1 = this.game.get$Stats();
        t1.$indexSet(t1, "killed", $.$add$ns(t1.$index(t1, "killed"), 1));
        if ($.random(0, 1, false) > 0.5)
          this.game.newBulletPowerUp$2(this.get$x(this), this.get$y(this));
        this.game.newMiniExplosion$2(this.get$x(this), this.get$y(this));
        this._removeFromGame = true;
      }
      if ($.$ge$n(this.get$y(this), 350) === true && !this.yReset) {
        this.set$y(this, -350);
        this.yReset = true;
      }
      if (this.yReset) {
        t1 = this.game.get$goingRight();
        t2 = this.momentum;
        if (t1)
          t2.xVel = 80;
        else
          t2.xVel = -80;
      }
      if ($.$ge$n(this.get$y(this), this.startY) === true && this.yReset) {
        this.momentum.yVel = 0;
        this.set$y(this, this.startY);
        this.yReset = false;
      }
      if ($.random(0, 1, false) <= 0.01 && this.game.canEnemyFall$0()) {
        t1 = this.momentum;
        t1.yVel = $.$mul$n(t1.yVel, -1);
        this.isFalling = true;
        this.yReset = false;
      }
      if ($.$gt$n($.$add$ns(this.get$x(this), 16), $.get$rect$x(this.game).get$halfWidth()) === true || $.$lt$n($.$sub$n(this.get$x(this), 16), -$.get$rect$x(this.game).get$halfWidth()) === true)
        this.game.switchDirection$0();
      if (this.collidesWith$1(this.game.get$ship())) {
        this.game.get$_gameOverEvent().signal$0();
        this._removeFromGame = true;
        t1 = this.game.get$ship();
        t1.set$lives($.$sub$n(t1.get$lives(), 1));
      }
      if ($.$lt$n(this.get$x(this), -$.get$rect$x(this.game).get$halfWidth()) === true)
        this.game.gameOver$0();
      t1 = this.difficulty;
      if (t1 === 1) {
        if ($.$ge$n($.$add$ns(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.$le$n($.$sub$n(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.random(0, 1, false) <= 0.01) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$enemyFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
      } else if (t1 === 2) {
        if ($.$ge$n($.$add$ns(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.$le$n($.$sub$n(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.random(0, 1, false) <= 0.03) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$enemyFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
      } else if (t1 === 3) {
        if ($.$ge$n($.$add$ns(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.$le$n($.$sub$n(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.random(0, 1, false) <= 0.07) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$enemyFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
      } else if (t1 === 4) {
        if ($.$ge$n($.$add$ns(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.$le$n($.$sub$n(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.random(0, 1, false) <= 0.1) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.3) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else if ($.random(0, 1, false) <= 0.3) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$enemyFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
      } else if (t1 === 5)
        if ($.$ge$n($.$add$ns(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.$le$n($.$sub$n(this.get$x(this), 16), $.get$x$x(this.game.get$ship())) === true && $.random(0, 1, false) <= 0.2) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.5) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else if ($.random(0, 1, false) <= 0.5) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this.get$x(this), $.$add$ns(this.get$y(this), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn()) {
            t1 = t1.get$enemyFire();
            t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
          }
        }
    }
    $.GameEntity.prototype.update$0.call(this);
  },
  Enemy$5: function(game, x, y, diff, Type) {
    $.random(0, 1, false);
    this.creationTime = game.timer.gameTime;
    this.type = Type;
    this.difficulty = diff;
    this.opacity = 0;
    if (this.type === "Normal")
      this.color = "255, 0, 255";
    if (this.type === "MotherShip")
      this.color = "0, 0, 255";
    if (this.type === "Normal")
      this.momentum.xVel = 80;
    if (this.type === "MotherShip")
      this.momentum.xVel = 40;
    if (this.type === "Boss")
      this.momentum.xVel = 0;
    if (this.type === "Drone")
      this.momentum.xVel = 80;
    if (this.type === "Normal")
      this.health = this.difficulty;
    if (this.type === "MotherShip")
      this.health = 3;
    if (this.type === "Boss") {
      this.set$width(this, 72);
      this.set$height(this, 72);
      this.health = this.bossHealth;
    }
    if (this.type === "Drone") {
      this.set$width(this, 16);
      this.set$height(this, 16);
      this.health = this.bossDifficulty;
    }
    this.maxHp = this.health;
    this.bossMaxHp = this.bossHealth;
    this.bossDifficulty = game.level / 3;
    this.startY = y;
  },
  $isEnemy: true
};

$$.Enemy_update_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  }
};

$$.Enemy_update_anon0 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  }
};

$$.Enemy_update_anon1 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.EnemyRenderer = {"": "DefaultCanvasEntityRenderer;gr",
  render$1: function(e) {
    var t1, t2;
    $.DefaultCanvasEntityRenderer.prototype.render$1.call(this, e);
    t1 = this.gr;
    $.set$fillStyle$x(t1.ctx, "rgba(0, 0, 0, .5)");
    $.set$font$x(t1.ctx, "36px Verdana");
    t2 = $.getInterceptor$x(e);
    switch (t2.get$type(e)) {
      case "Boss":
        $.fillText$3$x(t1.ctx, $.S(e.get$health()), $.$sub$n(t2.get$x(e), 30), $.$add$ns(t2.get$y(e), 8));
        break;
    }
  }
};

$$.GalagaRenderer = {"": "CanvasGameRenderer;timeLeft,powerUpRenderer,enemyRenderer,ship<,enemy<,boss<,mothership<,enemyFlicker,shipFlicker?,targetId,ctx,defaultRenderer,assetManager,textRenderer,canvas,_game,rect",
  init$0: function() {
    var t1 = this.get$game().get$Stats();
    t1.$indexSet(t1, "killed", $.containsKey$1$x(window.localStorage, "win1") ? $.int_parse($.$index$asx(window.localStorage, "win1"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    t1.$indexSet(t1, "wins", $.containsKey$1$x(window.localStorage, "win2") ? $.int_parse($.$index$asx(window.localStorage, "win2"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    t1.$indexSet(t1, "loses", $.containsKey$1$x(window.localStorage, "win3") ? $.int_parse($.$index$asx(window.localStorage, "win3"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    t1.$indexSet(t1, "totalGames", $.containsKey$1$x(window.localStorage, "win4") ? $.int_parse($.$index$asx(window.localStorage, "win4"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    t1.$indexSet(t1, "highscore", $.containsKey$1$x(window.localStorage, "win5") ? $.int_parse($.$index$asx(window.localStorage, "win5"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    t1.$indexSet(t1, "normalKills", $.containsKey$1$x(window.localStorage, "win12") ? $.int_parse($.$index$asx(window.localStorage, "win12"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    t1.$indexSet(t1, "bossKills", $.containsKey$1$x(window.localStorage, "win13") ? $.int_parse($.$index$asx(window.localStorage, "win13"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    t1.$indexSet(t1, "motherKills", $.containsKey$1$x(window.localStorage, "win14") ? $.int_parse($.$index$asx(window.localStorage, "win14"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    t1.$indexSet(t1, "powerups", $.containsKey$1$x(window.localStorage, "win15") ? $.int_parse($.$index$asx(window.localStorage, "win15"), null, null) : 0);
    t1 = this.get$game().get$Options();
    t1.$indexSet(t1, "startLives", $.containsKey$1$x(window.localStorage, "win6") ? $.int_parse($.$index$asx(window.localStorage, "win6"), null, null) : 3);
    t1 = this.get$game().get$Options();
    t1.$indexSet(t1, "bulletCap", $.containsKey$1$x(window.localStorage, "win7") ? $.int_parse($.$index$asx(window.localStorage, "win7"), null, null) : 3);
    t1 = this.get$game().get$Options();
    t1.$indexSet(t1, "time", $.containsKey$1$x(window.localStorage, "win8") ? $.int_parse($.$index$asx(window.localStorage, "win8"), null, null) : 60);
    t1 = this.get$game().get$Options();
    t1.$indexSet(t1, "difficulty", $.containsKey$1$x(window.localStorage, "win9") ? $.int_parse($.$index$asx(window.localStorage, "win9"), null, null) : 1);
    t1 = this.get$game().get$Options();
    t1.$indexSet(t1, "powerups", $.containsKey$1$x(window.localStorage, "win10") ? $.int_parse($.$index$asx(window.localStorage, "win10"), null, null) : 1);
    t1 = this.get$game().get$Options();
    t1.$indexSet(t1, "soundeffects", $.containsKey$1$x(window.localStorage, "win11") ? $.int_parse($.$index$asx(window.localStorage, "win11"), null, null) : 1);
    t1 = this.get$game().get$Highscores();
    t1.$indexSet(t1, 1, $.containsKey$1$x(window.localStorage, "win16") ? $.int_parse($.$index$asx(window.localStorage, "win16"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    t1.$indexSet(t1, 2, $.containsKey$1$x(window.localStorage, "win17") ? $.int_parse($.$index$asx(window.localStorage, "win17"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    t1.$indexSet(t1, 3, $.containsKey$1$x(window.localStorage, "win18") ? $.int_parse($.$index$asx(window.localStorage, "win18"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    t1.$indexSet(t1, 4, $.containsKey$1$x(window.localStorage, "win19") ? $.int_parse($.$index$asx(window.localStorage, "win19"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    t1.$indexSet(t1, 5, $.containsKey$1$x(window.localStorage, "win20") ? $.int_parse($.$index$asx(window.localStorage, "win20"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    t1.$indexSet(t1, 6, $.containsKey$1$x(window.localStorage, "win21") ? $.int_parse($.$index$asx(window.localStorage, "win21"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    t1.$indexSet(t1, 7, $.containsKey$1$x(window.localStorage, "win22") ? $.int_parse($.$index$asx(window.localStorage, "win22"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    t1.$indexSet(t1, 8, $.containsKey$1$x(window.localStorage, "win23") ? $.int_parse($.$index$asx(window.localStorage, "win23"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    t1.$indexSet(t1, 9, $.containsKey$1$x(window.localStorage, "win24") ? $.int_parse($.$index$asx(window.localStorage, "win24"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    t1.$indexSet(t1, 10, $.containsKey$1$x(window.localStorage, "win25") ? $.int_parse($.$index$asx(window.localStorage, "win25"), null, null) : 0);
    this.get$game().get$onGameOver().listen$1(new $.GalagaRenderer_init_anon(this));
    this.get$game().get$onShipHit().listen$1(new $.GalagaRenderer_init_anon0(this));
    this.get$game().get$onStatUpdate().listen$1(new $.GalagaRenderer_init_anon1(this));
    this.get$game().get$onMotherShipHit().listen$1(new $.GalagaRenderer_init_anon2(this));
    this.get$game().get$onBossHit().listen$1(new $.GalagaRenderer_init_anon3(this));
    this.get$game().get$onNormalHit().listen$1(new $.GalagaRenderer_init_anon4(this));
  },
  gameOver$0: function() {
    this.bgFade$0();
    this.updateStats$0();
  },
  drawDrone$0: function() {
    var t1 = $.JSArray_methods.where$1(this.get$game().entities, new $.GalagaRenderer_drawDrone_anon());
    t1.forEach$1(t1, new $.GalagaRenderer_drawDrone_anon0(this));
  },
  drawMotherShip$0: function() {
    var t1 = $.JSArray_methods.where$1(this.get$game().entities, new $.GalagaRenderer_drawMotherShip_anon());
    t1.forEach$1(t1, new $.GalagaRenderer_drawMotherShip_anon0(this));
  },
  drawShip$0: function() {
    var t1, t2, t3, t4, t5;
    $.set$strokeStyle$x(this.ctx, "rgba(255, 255, 255, 1.0)");
    $.set$lineWidth$x(this.ctx, 3);
    $.beginPath$0$x(this.ctx);
    t1 = this.ctx;
    t2 = this.ship;
    t3 = this.get$game().get$ship();
    t4 = $.$sub$n(t3.get$x(t3), 22);
    t5 = this.get$game().get$ship();
    $.drawImageScaled$5$x(t1, t2, t4, $.$sub$n(t5.get$y(t5), 25), 42, 42);
    $.stroke$0$x(this.ctx);
  },
  drawBoss$0: function() {
    var t1 = $.JSArray_methods.where$1(this.get$game().entities, new $.GalagaRenderer_drawBoss_anon());
    t1.forEach$1(t1, new $.GalagaRenderer_drawBoss_anon0(this));
  },
  drawEnemy$0: function() {
    var t1 = $.JSArray_methods.where$1(this.get$game().entities, new $.GalagaRenderer_drawEnemy_anon());
    t1.forEach$1(t1, new $.GalagaRenderer_drawEnemy_anon0(this));
  },
  subtleBgFade$0: function() {
    this.get$game().bgStyle = "rgba(0, 0, 0, 0.84)";
    $.Timer_Timer($.CONSTANT18, new $.GalagaRenderer_subtleBgFade_anon(this));
    $.Timer_Timer($.CONSTANT6, new $.GalagaRenderer_subtleBgFade_anon0(this));
    $.Timer_Timer($.CONSTANT19, new $.GalagaRenderer_subtleBgFade_anon1(this));
    $.Timer_Timer($.CONSTANT24, new $.GalagaRenderer_subtleBgFade_anon2(this));
    $.Timer_Timer($.CONSTANT25, new $.GalagaRenderer_subtleBgFade_anon3(this));
    $.Timer_Timer($.CONSTANT20, new $.GalagaRenderer_subtleBgFade_anon4(this));
    $.Timer_Timer($.CONSTANT26, new $.GalagaRenderer_subtleBgFade_anon5(this));
  },
  shipHit$0: function() {
    this.bgFade$0();
    $.Timer_Timer($.CONSTANT18, new $.GalagaRenderer_shipHit_anon(this));
    $.Timer_Timer($.CONSTANT19, new $.GalagaRenderer_shipHit_anon0(this));
    $.Timer_Timer($.CONSTANT20, new $.GalagaRenderer_shipHit_anon1(this));
    $.Timer_Timer($.CONSTANT21, new $.GalagaRenderer_shipHit_anon2(this));
    $.Timer_Timer($.CONSTANT22, new $.GalagaRenderer_shipHit_anon3(this));
    $.Timer_Timer($.CONSTANT23, new $.GalagaRenderer_shipHit_anon4(this));
    this.subtleBgFade$0();
  },
  get$shipHit: function() {
    return new $.BoundClosure$0(this, "shipHit$0");
  },
  updateStats$0: function() {
    var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26;
    t1 = window.localStorage;
    t2 = this.get$game().get$Stats();
    $.$indexSet$ax(t1, "win1", $.toString$0(t2.$index(t2, "killed")));
    t1 = window.localStorage;
    t3 = this.get$game().get$Stats();
    $.$indexSet$ax(t1, "win2", $.toString$0(t3.$index(t3, "wins")));
    t1 = window.localStorage;
    t4 = this.get$game().get$Stats();
    $.$indexSet$ax(t1, "win3", $.toString$0(t4.$index(t4, "loses")));
    t1 = window.localStorage;
    t5 = this.get$game().get$Stats();
    $.$indexSet$ax(t1, "win4", $.toString$0(t5.$index(t5, "totalGames")));
    t1 = window.localStorage;
    t6 = this.get$game().get$Stats();
    $.$indexSet$ax(t1, "win5", $.toString$0(t6.$index(t6, "highscore")));
    t1 = window.localStorage;
    t7 = this.get$game().get$Stats();
    $.$indexSet$ax(t1, "win12", $.toString$0(t7.$index(t7, "normalKills")));
    t1 = window.localStorage;
    t8 = this.get$game().get$Stats();
    $.$indexSet$ax(t1, "win13", $.toString$0(t8.$index(t8, "bossKills")));
    t1 = window.localStorage;
    t9 = this.get$game().get$Stats();
    $.$indexSet$ax(t1, "win14", $.toString$0(t9.$index(t9, "motherKills")));
    t1 = window.localStorage;
    t10 = this.get$game().get$Stats();
    $.$indexSet$ax(t1, "win15", $.toString$0(t10.$index(t10, "powerups")));
    t1 = window.localStorage;
    t11 = this.get$game().get$Options();
    $.$indexSet$ax(t1, "win6", $.toString$0(t11.$index(t11, "startLives")));
    t1 = window.localStorage;
    t12 = this.get$game().get$Options();
    $.$indexSet$ax(t1, "win7", $.toString$0(t12.$index(t12, "bulletCap")));
    t1 = window.localStorage;
    t13 = this.get$game().get$Options();
    $.$indexSet$ax(t1, "win8", $.toString$0(t13.$index(t13, "time")));
    t1 = window.localStorage;
    t14 = this.get$game().get$Options();
    $.$indexSet$ax(t1, "win9", $.toString$0(t14.$index(t14, "difficulty")));
    t1 = window.localStorage;
    t15 = this.get$game().get$Options();
    $.$indexSet$ax(t1, "win10", $.toString$0(t15.$index(t15, "powerups")));
    t1 = window.localStorage;
    t16 = this.get$game().get$Options();
    $.$indexSet$ax(t1, "win11", $.toString$0(t16.$index(t16, "soundeffects")));
    t1 = window.localStorage;
    t17 = this.get$game().get$Highscores();
    $.$indexSet$ax(t1, "win16", $.toString$0(t17.$index(t17, 1)));
    t1 = window.localStorage;
    t18 = this.get$game().get$Highscores();
    $.$indexSet$ax(t1, "win17", $.toString$0(t18.$index(t18, 2)));
    t1 = window.localStorage;
    t19 = this.get$game().get$Highscores();
    $.$indexSet$ax(t1, "win18", $.toString$0(t19.$index(t19, 3)));
    t1 = window.localStorage;
    t20 = this.get$game().get$Highscores();
    $.$indexSet$ax(t1, "win19", $.toString$0(t20.$index(t20, 4)));
    t1 = window.localStorage;
    t21 = this.get$game().get$Highscores();
    $.$indexSet$ax(t1, "win20", $.toString$0(t21.$index(t21, 5)));
    t1 = window.localStorage;
    t22 = this.get$game().get$Highscores();
    $.$indexSet$ax(t1, "win21", $.toString$0(t22.$index(t22, 6)));
    t1 = window.localStorage;
    t23 = this.get$game().get$Highscores();
    $.$indexSet$ax(t1, "win22", $.toString$0(t23.$index(t23, 7)));
    t1 = window.localStorage;
    t24 = this.get$game().get$Highscores();
    $.$indexSet$ax(t1, "win23", $.toString$0(t24.$index(t24, 8)));
    t1 = window.localStorage;
    t25 = this.get$game().get$Highscores();
    $.$indexSet$ax(t1, "win24", $.toString$0(t25.$index(t25, 9)));
    t1 = window.localStorage;
    t26 = this.get$game().get$Highscores();
    $.$indexSet$ax(t1, "win25", $.toString$0(t26.$index(t26, 10)));
  },
  bossHit$0: function() {
    var t1 = $.JSArray_methods.where$1(this.get$game().entities, new $.GalagaRenderer_bossHit_anon());
    t1.forEach$1(t1, new $.GalagaRenderer_bossHit_anon0(this));
  },
  motherShipHit$0: function() {
    var t1 = $.JSArray_methods.where$1(this.get$game().entities, new $.GalagaRenderer_motherShipHit_anon());
    t1.forEach$1(t1, new $.GalagaRenderer_motherShipHit_anon0(this));
  },
  normalShipHit$0: function() {
    var t1 = $.JSArray_methods.where$1(this.get$game().entities, new $.GalagaRenderer_normalShipHit_anon());
    t1.forEach$1(t1, new $.GalagaRenderer_normalShipHit_anon0(this));
  },
  getRenderer$1: function(e) {
    var t1, t2, t3;
    t1 = typeof e === "object" && e !== null && !!e.$isEnemy;
    if (t1) {
      t2 = this.get$game();
      t3 = t2.get$state(t2) === 4;
      t2 = t3;
    } else
      t2 = false;
    if (t2)
      return;
    if (typeof e === "object" && e !== null && !!e.$isPowerUp)
      return this.powerUpRenderer;
    if (t1)
      return this.enemyRenderer;
    return $.CanvasGameRenderer.prototype.getRenderer$1.call(this, e);
  },
  drawBeforeCtxRestore$0: function() {
    var t1, t2;
    t1 = this.get$game();
    if (t1.get$state(t1) !== 3) {
      t1 = this.get$game();
      t2 = t1.get$state(t1) === 2;
      t1 = t2;
    } else
      t1 = true;
    if (t1) {
      if (!this.shipFlicker)
        this.drawShip$0();
      this.drawEnemy$0();
      this.drawBoss$0();
      this.drawDrone$0();
      this.drawMotherShip$0();
      this.drawTime$0();
      this.drawScore$0();
      this.drawHighScore$0();
      this.drawLives$0();
      this.drawLevel$0();
    }
    $.CanvasGameRenderer.prototype.drawBeforeCtxRestore$0.call(this);
  },
  drawLevel$0: function() {
    $.set$fillStyle$x(this.ctx, "rgba(255, 255, 255, 1)");
    $.set$font$x(this.ctx, "32px cinnamoncake, Verdana");
    $.fillText$3$x(this.ctx, "Level: " + $.S(this.get$game().get$level()), 375, this.get$game().rect.get$halfHeight() - 5);
  },
  drawTime$0: function() {
    $.set$fillStyle$x(this.ctx, "rgba(255, 255, 255, 1)");
    $.set$font$x(this.ctx, "32px cinnamoncake, Verdana");
    $.fillText$3$x(this.ctx, "Time: " + $.S($.round$0$nx(this.get$game().timer.gameTime)) + " ", -100, -(this.get$game().rect.get$halfHeight() - 30));
  },
  drawLives$0: function() {
    $.set$fillStyle$x(this.ctx, "rgba(255, 255, 255, 1)");
    $.set$font$x(this.ctx, "32px cinnamoncake, Verdana");
    $.fillText$3$x(this.ctx, "Lives: " + $.S(this.get$game().get$ship().lives) + " ", -475, this.get$game().rect.get$halfHeight() - 5);
  },
  drawScore$0: function() {
    $.set$fillStyle$x(this.ctx, "rgba(255, 255, 255, 1)");
    $.set$font$x(this.ctx, "32px cinnamoncake, Verdana");
    $.fillText$3$x(this.ctx, "Score: " + $.S(this.get$game().get$score()) + " ", -475, -(this.get$game().rect.get$halfHeight() - 30));
  },
  drawHighScore$0: function() {
    var t1, t2;
    $.set$fillStyle$x(this.ctx, "rgba(255, 255, 255, 1)");
    $.set$font$x(this.ctx, "32px cinnamoncake, Verdana");
    t1 = this.ctx;
    t2 = this.get$game().get$Stats();
    $.fillText$3$x(t1, "High Score: " + $.S(t2.$index(t2, "highscore")) + " ", 225, -(this.get$game().rect.get$halfHeight() - 30));
  },
  bgFade$0: function() {
    this.get$game().bgStyle = "rgba(0, 0, 0, 0.8)";
    $.Timer_Timer($.CONSTANT18, new $.GalagaRenderer_bgFade_anon(this));
    $.Timer_Timer($.CONSTANT6, new $.GalagaRenderer_bgFade_anon0(this));
    $.Timer_Timer($.CONSTANT19, new $.GalagaRenderer_bgFade_anon1(this));
    $.Timer_Timer($.CONSTANT24, new $.GalagaRenderer_bgFade_anon2(this));
    $.Timer_Timer($.CONSTANT25, new $.GalagaRenderer_bgFade_anon3(this));
    $.Timer_Timer($.CONSTANT20, new $.GalagaRenderer_bgFade_anon4(this));
    $.Timer_Timer($.CONSTANT26, new $.GalagaRenderer_bgFade_anon5(this));
    $.Timer_Timer($.CONSTANT27, new $.GalagaRenderer_bgFade_anon6(this));
    $.Timer_Timer($.CONSTANT21, new $.GalagaRenderer_bgFade_anon7(this));
    $.Timer_Timer($.CONSTANT15, new $.GalagaRenderer_bgFade_anon8(this));
    $.Timer_Timer($.CONSTANT28, new $.GalagaRenderer_bgFade_anon9(this));
  },
  GalagaRenderer$1: function(targetId) {
    this.powerUpRenderer = $.PowerUpRenderer$(this);
    this.enemyRenderer = $.EnemyRenderer$(this);
    $.set$src$x(this.ship, "../web/images/Ship.png");
    $.set$src$x(this.enemy, "../web/images/enemy.png");
    $.set$src$x(this.boss, "../web/images/boss.png");
    $.set$src$x(this.mothership, "../web/images/mothership.png");
  }
};

$$.GalagaRenderer_init_anon = {"": "Closure;this_0",
  call$1: function(e) {
    var t1 = this.this_0;
    t1.bgFade$0();
    t1.updateStats$0();
    return;
  }
};

$$.GalagaRenderer_init_anon0 = {"": "Closure;this_1",
  call$1: function(e) {
    return this.this_1.shipHit$0();
  }
};

$$.GalagaRenderer_init_anon1 = {"": "Closure;this_2",
  call$1: function(e) {
    return this.this_2.updateStats$0();
  }
};

$$.GalagaRenderer_init_anon2 = {"": "Closure;this_3",
  call$1: function(e) {
    return this.this_3.motherShipHit$0();
  }
};

$$.GalagaRenderer_init_anon3 = {"": "Closure;this_4",
  call$1: function(e) {
    return this.this_4.bossHit$0();
  }
};

$$.GalagaRenderer_init_anon4 = {"": "Closure;this_5",
  call$1: function(e) {
    return this.this_5.normalShipHit$0();
  }
};

$$.GalagaRenderer_drawDrone_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaRenderer_drawDrone_anon0 = {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = $.getInterceptor$x(e);
    if ($.$eq(t1.get$type(e), "Drone") === true && !e.get$flicker()) {
      t2 = this.this_0;
      $.set$strokeStyle$x(t2.get$ctx(), "rgba(255, 255, 255, 1.0)");
      $.set$lineWidth$x(t2.get$ctx(), 3);
      $.beginPath$0$x(t2.get$ctx());
      $.drawImageScaled$5$x(t2.get$ctx(), t2.get$enemy(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 12, 12);
      $.stroke$0$x(t2.get$ctx());
    }
  }
};

$$.GalagaRenderer_drawMotherShip_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaRenderer_drawMotherShip_anon0 = {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = $.getInterceptor$x(e);
    if ($.$eq(t1.get$type(e), "MotherShip") === true && !e.get$flicker()) {
      t2 = this.this_0;
      $.set$strokeStyle$x(t2.get$ctx(), "rgba(255, 255, 255, 1.0)");
      $.set$lineWidth$x(t2.get$ctx(), 3);
      $.beginPath$0$x(t2.get$ctx());
      $.drawImageScaled$5$x(t2.get$ctx(), t2.get$mothership(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 42, 42);
      $.stroke$0$x(t2.get$ctx());
    }
  }
};

$$.GalagaRenderer_drawBoss_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaRenderer_drawBoss_anon0 = {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = $.getInterceptor$x(e);
    if ($.$eq(t1.get$type(e), "Boss") === true && !e.get$flicker()) {
      t2 = this.this_0;
      $.set$strokeStyle$x(t2.get$ctx(), "rgba(255, 255, 255, 1.0)");
      $.set$lineWidth$x(t2.get$ctx(), 3);
      $.beginPath$0$x(t2.get$ctx());
      $.drawImageScaled$5$x(t2.get$ctx(), t2.get$boss(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 72, 72);
      $.stroke$0$x(t2.get$ctx());
    }
  }
};

$$.GalagaRenderer_drawEnemy_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaRenderer_drawEnemy_anon0 = {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = $.getInterceptor$x(e);
    if ($.$eq(t1.get$type(e), "Normal") === true && !e.get$flicker()) {
      t2 = this.this_0;
      $.set$strokeStyle$x(t2.get$ctx(), "rgba(255, 255, 255, 1.0)");
      $.set$lineWidth$x(t2.get$ctx(), 3);
      $.beginPath$0$x(t2.get$ctx());
      $.drawImageScaled$5$x(t2.get$ctx(), t2.get$enemy(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 42, 42);
      $.stroke$0$x(t2.get$ctx());
    }
  }
};

$$.GalagaRenderer_subtleBgFade_anon = {"": "Closure;this_0",
  call$0: function() {
    this.this_0.get$game().set$bgStyle("rgba(0, 0, 0, 0.83)");
    return "rgba(0, 0, 0, 0.83)";
  }
};

$$.GalagaRenderer_subtleBgFade_anon0 = {"": "Closure;this_1",
  call$0: function() {
    this.this_1.get$game().set$bgStyle("rgba(0, 0, 0, 0.82)");
    return "rgba(0, 0, 0, 0.82)";
  }
};

$$.GalagaRenderer_subtleBgFade_anon1 = {"": "Closure;this_2",
  call$0: function() {
    this.this_2.get$game().set$bgStyle("rgba(0, 0, 0, 0.81)");
    return "rgba(0, 0, 0, 0.81)";
  }
};

$$.GalagaRenderer_subtleBgFade_anon2 = {"": "Closure;this_3",
  call$0: function() {
    this.this_3.get$game().set$bgStyle("rgba(0, 0, 0, 0.82)");
    return "rgba(0, 0, 0, 0.82)";
  }
};

$$.GalagaRenderer_subtleBgFade_anon3 = {"": "Closure;this_4",
  call$0: function() {
    this.this_4.get$game().set$bgStyle("rgba(0, 0, 0, 0.83)");
    return "rgba(0, 0, 0, 0.83)";
  }
};

$$.GalagaRenderer_subtleBgFade_anon4 = {"": "Closure;this_5",
  call$0: function() {
    this.this_5.get$game().set$bgStyle("rgba(0, 0, 0, 0.84)");
    return "rgba(0, 0, 0, 0.84)";
  }
};

$$.GalagaRenderer_subtleBgFade_anon5 = {"": "Closure;this_6",
  call$0: function() {
    this.this_6.get$game().set$bgStyle("rgba(0, 0, 0, 0.85)");
    return "rgba(0, 0, 0, 0.85)";
  }
};

$$.GalagaRenderer_shipHit_anon = {"": "Closure;this_0",
  call$0: function() {
    this.this_0.set$shipFlicker(true);
    return true;
  }
};

$$.GalagaRenderer_shipHit_anon0 = {"": "Closure;this_1",
  call$0: function() {
    this.this_1.set$shipFlicker(false);
    return false;
  }
};

$$.GalagaRenderer_shipHit_anon1 = {"": "Closure;this_2",
  call$0: function() {
    this.this_2.set$shipFlicker(true);
    return true;
  }
};

$$.GalagaRenderer_shipHit_anon2 = {"": "Closure;this_3",
  call$0: function() {
    this.this_3.set$shipFlicker(false);
    return false;
  }
};

$$.GalagaRenderer_shipHit_anon3 = {"": "Closure;this_4",
  call$0: function() {
    this.this_4.set$shipFlicker(true);
    return true;
  }
};

$$.GalagaRenderer_shipHit_anon4 = {"": "Closure;this_5",
  call$0: function() {
    this.this_5.set$shipFlicker(false);
    return false;
  }
};

$$.GalagaRenderer_bossHit_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaRenderer_bossHit_anon0 = {"": "Closure;this_0",
  call$1: function(e) {
    if ($.$eq($.get$type$x(e), "Boss") === true && e.get$idNum() === this.this_0.get$game().get$targetId()) {
      $.Timer_Timer($.CONSTANT18, new $.GalagaRenderer_bossHit__anon(e));
      $.Timer_Timer($.CONSTANT19, new $.GalagaRenderer_bossHit__anon0(e));
      this.this_0.subtleBgFade$0();
    }
  }
};

$$.GalagaRenderer_bossHit__anon = {"": "Closure;e_1",
  call$0: function() {
    this.e_1.set$flicker(true);
    return true;
  }
};

$$.GalagaRenderer_bossHit__anon0 = {"": "Closure;e_2",
  call$0: function() {
    this.e_2.set$flicker(false);
    return false;
  }
};

$$.GalagaRenderer_motherShipHit_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaRenderer_motherShipHit_anon0 = {"": "Closure;this_0",
  call$1: function(e) {
    if ($.$eq($.get$type$x(e), "MotherShip") === true && e.get$idNum() === this.this_0.get$game().get$targetId()) {
      $.Timer_Timer($.CONSTANT18, new $.GalagaRenderer_motherShipHit__anon(e));
      $.Timer_Timer($.CONSTANT19, new $.GalagaRenderer_motherShipHit__anon0(e));
      $.Timer_Timer($.CONSTANT20, new $.GalagaRenderer_motherShipHit__anon1(e));
      $.Timer_Timer($.CONSTANT21, new $.GalagaRenderer_motherShipHit__anon2(e));
      $.Timer_Timer($.CONSTANT22, new $.GalagaRenderer_motherShipHit__anon3(e));
      $.Timer_Timer($.CONSTANT23, new $.GalagaRenderer_motherShipHit__anon4(e));
      this.this_0.subtleBgFade$0();
    }
  }
};

$$.GalagaRenderer_motherShipHit__anon = {"": "Closure;e_1",
  call$0: function() {
    this.e_1.set$flicker(true);
    return true;
  }
};

$$.GalagaRenderer_motherShipHit__anon0 = {"": "Closure;e_2",
  call$0: function() {
    this.e_2.set$flicker(false);
    return false;
  }
};

$$.GalagaRenderer_motherShipHit__anon1 = {"": "Closure;e_3",
  call$0: function() {
    this.e_3.set$flicker(true);
    return true;
  }
};

$$.GalagaRenderer_motherShipHit__anon2 = {"": "Closure;e_4",
  call$0: function() {
    this.e_4.set$flicker(false);
    return false;
  }
};

$$.GalagaRenderer_motherShipHit__anon3 = {"": "Closure;e_5",
  call$0: function() {
    this.e_5.set$flicker(true);
    return true;
  }
};

$$.GalagaRenderer_motherShipHit__anon4 = {"": "Closure;e_6",
  call$0: function() {
    this.e_6.set$flicker(false);
    return false;
  }
};

$$.GalagaRenderer_normalShipHit_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  }
};

$$.GalagaRenderer_normalShipHit_anon0 = {"": "Closure;this_0",
  call$1: function(e) {
    if ($.$eq($.get$type$x(e), "Normal") === true && e.get$idNum() === this.this_0.get$game().get$targetId()) {
      $.Timer_Timer($.CONSTANT18, new $.GalagaRenderer_normalShipHit__anon(e));
      $.Timer_Timer($.CONSTANT19, new $.GalagaRenderer_normalShipHit__anon0(e));
      $.Timer_Timer($.CONSTANT20, new $.GalagaRenderer_normalShipHit__anon1(e));
      $.Timer_Timer($.CONSTANT21, new $.GalagaRenderer_normalShipHit__anon2(e));
      this.this_0.subtleBgFade$0();
    }
  }
};

$$.GalagaRenderer_normalShipHit__anon = {"": "Closure;e_1",
  call$0: function() {
    this.e_1.set$flicker(true);
    return true;
  }
};

$$.GalagaRenderer_normalShipHit__anon0 = {"": "Closure;e_2",
  call$0: function() {
    this.e_2.set$flicker(false);
    return false;
  }
};

$$.GalagaRenderer_normalShipHit__anon1 = {"": "Closure;e_3",
  call$0: function() {
    this.e_3.set$flicker(true);
    return true;
  }
};

$$.GalagaRenderer_normalShipHit__anon2 = {"": "Closure;e_4",
  call$0: function() {
    this.e_4.set$flicker(false);
    return false;
  }
};

$$.GalagaRenderer_bgFade_anon = {"": "Closure;this_0",
  call$0: function() {
    this.this_0.get$game().set$bgStyle("rgba(0, 0, 0, 0.75)");
    return "rgba(0, 0, 0, 0.75)";
  }
};

$$.GalagaRenderer_bgFade_anon0 = {"": "Closure;this_1",
  call$0: function() {
    this.this_1.get$game().set$bgStyle("rgba(0, 0, 0, 0.70)");
    return "rgba(0, 0, 0, 0.70)";
  }
};

$$.GalagaRenderer_bgFade_anon1 = {"": "Closure;this_2",
  call$0: function() {
    this.this_2.get$game().set$bgStyle("rgba(0, 0, 0, 0.65)");
    return "rgba(0, 0, 0, 0.65)";
  }
};

$$.GalagaRenderer_bgFade_anon2 = {"": "Closure;this_3",
  call$0: function() {
    this.this_3.get$game().set$bgStyle("rgba(0, 0, 0, 0.60)");
    return "rgba(0, 0, 0, 0.60)";
  }
};

$$.GalagaRenderer_bgFade_anon3 = {"": "Closure;this_4",
  call$0: function() {
    this.this_4.get$game().set$bgStyle("rgba(0, 0, 0, 0.55)");
    return "rgba(0, 0, 0, 0.55)";
  }
};

$$.GalagaRenderer_bgFade_anon4 = {"": "Closure;this_5",
  call$0: function() {
    this.this_5.get$game().set$bgStyle("rgba(0, 0, 0, 0.60)");
    return "rgba(0, 0, 0, 0.60)";
  }
};

$$.GalagaRenderer_bgFade_anon5 = {"": "Closure;this_6",
  call$0: function() {
    this.this_6.get$game().set$bgStyle("rgba(0, 0, 0, 0.65)");
    return "rgba(0, 0, 0, 0.65)";
  }
};

$$.GalagaRenderer_bgFade_anon6 = {"": "Closure;this_7",
  call$0: function() {
    this.this_7.get$game().set$bgStyle("rgba(0, 0, 0, 0.70)");
    return "rgba(0, 0, 0, 0.70)";
  }
};

$$.GalagaRenderer_bgFade_anon7 = {"": "Closure;this_8",
  call$0: function() {
    this.this_8.get$game().set$bgStyle("rgba(0, 0, 0, 0.75)");
    return "rgba(0, 0, 0, 0.75)";
  }
};

$$.GalagaRenderer_bgFade_anon8 = {"": "Closure;this_9",
  call$0: function() {
    this.this_9.get$game().set$bgStyle("rgba(0, 0, 0, 0.80)");
    return "rgba(0, 0, 0, 0.80)";
  }
};

$$.GalagaRenderer_bgFade_anon9 = {"": "Closure;this_10",
  call$0: function() {
    this.this_10.get$game().set$bgStyle("rgba(0, 0, 0, 0.85)");
    return "rgba(0, 0, 0, 0.85)";
  }
};

$$.PowerUpRenderer = {"": "DefaultCanvasEntityRenderer;gr",
  render$1: function(e) {
    var t1, t2;
    $.DefaultCanvasEntityRenderer.prototype.render$1.call(this, e);
    t1 = this.gr;
    $.set$fillStyle$x(t1.ctx, "rgba(0, 0, 0, .5)");
    $.set$font$x(t1.ctx, "24px Verdana");
    t2 = $.getInterceptor$x(e);
    switch (t2.get$type(e)) {
      case "SpiralShot":
        $.fillText$3$x(t1.ctx, "S", $.$sub$n(t2.get$x(e), 8), $.$add$ns(t2.get$y(e), 8));
        break;
      case "Multiplier":
        $.fillText$3$x(t1.ctx, "x2", $.$sub$n(t2.get$x(e), 12), $.$add$ns(t2.get$y(e), 8));
        break;
      case "BulletIncrease":
        $.set$font$x(t1.ctx, "36px Verdana");
        $.fillText$3$x(t1.ctx, "+", $.$sub$n(t2.get$x(e), 14), $.$add$ns(t2.get$y(e), 10));
        break;
      case "ExtraLife":
        $.set$font$x(t1.ctx, "12px Verdana");
        $.fillText$3$x(t1.ctx, "Life", $.$sub$n(t2.get$x(e), 10), $.$add$ns(t2.get$y(e), 8));
        break;
    }
  }
};

$$.Particles = {"": "GameEntity;_deleteTimer,_waiting@,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    if ($.$eq($.get$state$x(this.game), 2) === true)
      return;
    this._deleteTimer = $.Timer_Timer$periodic($.CONSTANT16, new $.Particles_update_anon(this));
    if ($.$gt$n(this.get$y(this), $.get$rect$x(this.game).get$halfHeight()) === true)
      this._removeFromGame = true;
    if ($.$lt$n(this.get$y(this), -$.get$rect$x(this.game).get$halfHeight()) === true)
      this._removeFromGame = true;
    if ($.$gt$n(this.get$x(this), $.get$rect$x(this.game).get$halfWidth()) === true)
      this._removeFromGame = true;
    if ($.$lt$n(this.get$x(this), -$.get$rect$x(this.game).get$halfWidth()) === true)
      this._removeFromGame = true;
    $.GameEntity.prototype.update$0.call(this);
  },
  Particles$8: function(game, x, y, h, w, col, xV, yV) {
    this.opacity = $.random(0.5, 1, false);
    if (col === 1)
      this.color = "204, 0, 51";
    if (col === 2)
      this.color = "102, 255, 51";
    if (col === 3)
      this.color = "51, 104, 204";
    if (col === 4)
      this.color = "105, 255, 105";
    if (col === 5)
      this.color = "204, 255, 51";
    if (col === 6)
      this.color = "255, 102, 153";
    if (col === 7)
      this.color = "255, 153, 51";
    this.momentum.yVel = yV;
    this.momentum.xVel = xV;
  }
};

$$.Particles_update_anon = {"": "Closure;this_0",
  call$1: function(t) {
    var t1 = this.this_0;
    t1.set$_waiting(t1.get$_waiting() + 1);
    if (t1.get$_waiting() === 1) {
      t1.set$_removeFromGame(true);
      t.cancel$0();
    }
  }
};

$$.PowerUp = {"": "GameEntity;type>,creationTime,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2;
    if ($.$eq($.get$state$x(this.game), 2) === true || $.$eq($.get$state$x(this.game), 4) === true || $.$eq($.get$state$x(this.game), 1) === true)
      return;
    if (this.type === "bulletPower") {
      t1 = $.$gt$n($.get$x$x(this.game.get$ship()), this.get$x(this));
      t2 = this.momentum;
      if (t1 === true)
        t2.xVel = 40;
      else
        t2.xVel = -40;
    }
    if (this.collidesWith$1(this.game.get$ship())) {
      switch (this.type) {
        case "SpiralShot":
          this.SpiralUpdate$0();
          break;
        case "Multiplier":
          t1 = this.game;
          t1.set$pointMultiplier(t1.get$pointMultiplier() * 2);
          break;
        case "BulletIncrease":
          t1 = this.game.get$ship();
          t1.set$maxBullet($.$add$ns(t1.get$maxBullet(), 1));
          break;
        case "ExtraLife":
          t1 = this.game.get$ship();
          t1.set$lives($.$add$ns(t1.get$lives(), 1));
          break;
        case "bulletPower":
          t1 = this.game;
          t1.set$score(t1.get$score() + 100);
          break;
      }
      t1 = this.game;
      if (t1.get$soundEffectsOn()) {
        t1 = t1.get$powerUp();
        t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
      }
      this._removeFromGame = true;
    }
    if ($.$gt$n(this.get$y(this), $.get$rect$x(this.game).get$halfHeight() + 20) === true)
      this._removeFromGame = true;
    $.GameEntity.prototype.update$0.call(this);
  },
  SpiralUpdate$0: function() {
    var t1 = this.game;
    t1.set$score(t1.get$score() + 100 * t1.get$pointMultiplier());
    t1 = this.game.get$ship();
    if (t1.get$spiralShot()) {
      t1.set$superSpiral(true);
      this.game.get$ship().set$spiralShot(false);
    }
    t1 = this.game.get$ship();
    if (!t1.get$spiralShot())
      t1.set$spiralShot(true);
  },
  PowerUp$4: function(game, x, y, Type) {
    var rType, rColor;
    rType = $.random(0, 1, false);
    this.creationTime = game.timer.gameTime;
    if (rType < 0.2) {
      this.color = "0, 255, 0";
      this.type = "SpiralShot";
    } else if (rType < 0.4) {
      this.color = "255, 0, 0";
      this.type = "Multiplier";
    } else if (rType < 0.6) {
      this.color = "0, 0, 255";
      this.type = "BulletIncrease";
    } else if (rType < 1) {
      this.color = "255, 255, 0";
      this.type = "ExtraLife";
    }
    if (Type != null) {
      this.type = Type;
      if (this.type === "bulletPower") {
        rColor = $.random(0, 1, false);
        if (rColor < 0.2)
          this.color = "0, 255, 0";
        else if (rColor < 0.4)
          this.color = "0, 255, 255";
        else if (rColor < 0.6)
          this.color = "0, 0, 255";
        else if (rColor < 0.1)
          this.color = "255, 255, 0";
        this.set$width(this, 12);
        this.set$height(this, 12);
      }
    }
    this.momentum.yVel = 65;
  },
  $isPowerUp: true
};

$$.Ship = {"": "GameEntity;bulletPower,bullet@,maxBullet@,lives@,soundLevel,isPoweringUp,spiralShot@,superSpiral?,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    if ($.$eq($.get$state$x(this.game), 2) === true || $.$eq($.get$state$x(this.game), 4) === true || $.$eq($.get$state$x(this.game), 1) === true)
      return;
    this.set$width(this, 32);
    this.set$height(this, 32);
    this.opacity = 0;
    if ($.$gt$n(this.get$width(this), 36) === true || $.$gt$n(this.get$height(this), 36) === true) {
      this.set$width(this, 36);
      this.set$height(this, 36);
    }
    if ($.$le$n(this.lives, 0) === true) {
      var t1 = this.game.get$Stats();
      t1.$indexSet(t1, "loses", $.$add$ns(t1.$index(t1, "loses"), 1));
      this.game.set$p1Dead(true);
      this._removeFromGame = true;
      this.game.gameOver$0();
    }
    if ($.$gt$n(this.bullet, this.maxBullet) === true)
      this.bullet = 3;
    if ($.$lt$n(this.bullet, 0) === true)
      this.bullet = 0;
    if ($.$eq($.get$state$x(this.game), 1) === true)
      return;
    t1 = this.game.get$input().get$mouse();
    if (t1 != null)
      this.set$x(this, t1.x);
    if ($.$gt$n($.$add$ns(this.get$x(this), 16), $.get$rect$x(this.game).get$halfWidth()) === true)
      this.set$x(this, $.get$rect$x(this.game).get$halfWidth() - 16);
    if ($.$lt$n($.$sub$n(this.get$x(this), 16), -$.get$rect$x(this.game).get$halfWidth()) === true)
      this.set$x(this, -$.get$rect$x(this.game).get$halfWidth() + 16);
    if ($.$gt$n(this.bullet, 0) === true)
      if ($.get$click$x(this.game.get$input()) != null)
        this.fire$0();
    $.GameEntity.prototype.update$0.call(this);
  },
  fire$0: function() {
    var t1, t2, t3;
    t1 = this.bulletPower;
    this.soundLevel = t1 * 0.02;
    if (this.soundLevel > 1)
      this.soundLevel = 1;
    if (this.superSpiral) {
      t2 = this.game;
      t2.addEntity$1($.Bullet$(t2, this.get$x(this), this.get$y(this), "straight", -350, t1, "normal"));
      t2 = this.game;
      t2.addEntity$1($.Bullet$(t2, this.get$x(this), this.get$y(this), "right", -350, t1, "normal"));
      t2 = this.game;
      t2.addEntity$1($.Bullet$(t2, this.get$x(this), this.get$y(this), "left", -350, t1, "normal"));
      t2 = this.game;
      t2.addEntity$1($.Bullet$(t2, this.get$x(this), this.get$y(this), "right", -350, t1, "normal"));
      t2 = this.game;
      t2.addEntity$1($.Bullet$(t2, this.get$x(this), this.get$y(this), "left", -350, t1, "normal"));
    }
    t2 = this.spiralShot;
    t3 = this.game;
    if (t2) {
      t3.addEntity$1($.Bullet$(t3, this.get$x(this), this.get$y(this), "straight", -350, t1, "normal"));
      t2 = this.game;
      t2.addEntity$1($.Bullet$(t2, this.get$x(this), this.get$y(this), "right", -350, t1, "normal"));
      t2 = this.game;
      t2.addEntity$1($.Bullet$(t2, this.get$x(this), this.get$y(this), "left", -350, t1, "normal"));
      t1 = this.game;
      if (t1.get$soundEffectsOn()) {
        t1 = t1.get$shipFire();
        t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
      }
    } else {
      t3.addEntity$1($.Bullet$(t3, this.get$x(this), this.get$y(this), "straight", -350, t1, "normal"));
      t1 = this.game;
      if (t1.get$soundEffectsOn()) {
        t1 = t1.get$shipFire();
        t1.play$3(t1, t1.Sound, t1.Volume, t1.Looping);
      }
    }
    if ($.$gt$n(this.bullet, 0) === true)
      this.bullet = $.$sub$n(this.bullet, 1);
  },
  Ship$3: function(game, x, y) {
    var t1;
    this.opacity = 0.2;
    t1 = this.game.get$Options();
    this.maxBullet = t1.$index(t1, "bulletCap");
    this.bullet = this.maxBullet;
  },
  $isShip: true
};

$$.Stars = {"": "GameEntity;game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    if ($.$eq($.get$state$x(this.game), 2) === true)
      return;
    if ($.$gt$n(this.get$y(this), $.get$rect$x(this.game).get$halfWidth()) === true)
      this._removeFromGame = true;
    $.GameEntity.prototype.update$0.call(this);
  },
  Stars$6: function(game, x, y, h, w, col) {
    var t1;
    this.opacity = $.random(0.5, 1, false);
    if (col === 1)
      this.color = "204, 0, 51";
    if (col === 2)
      this.color = "102, 255, 51";
    if (col === 3)
      this.color = "51, 104, 204";
    if (col === 4)
      this.color = "105, 255, 105";
    if (col === 5)
      this.color = "204, 255, 51";
    if (col === 6)
      this.color = "255, 102, 153";
    if (col === 7)
      this.color = "255, 153, 51";
    t1 = $.random(50, 75, false);
    this.momentum.yVel = t1;
  },
  $isStars: true
};

$$.Closure = {"": "Object;",
  toString$0: function(_) {
    return "Closure";
  }
};

// Bound closures
$$.Bound_fill_CanvasRenderingContext2D = {"": "Closure;self,target,receiver",
  call$1: function(p0) {
    return this.self[this.target](this.receiver, p0);
  },
  call$0: function() {
    return this.call$1(null);
  }
};

$$.BoundClosure$i4 = {"": "Closure;self,target,receiver",
  call$4: function(p0, p1, p2, p3) {
    return this.self[this.target](this.receiver, p0, p1, p2, p3);
  }
};

$$.BoundClosure$i0 = {"": "Closure;self,target,receiver",
  call$0: function() {
    return this.self[this.target](this.receiver);
  }
};

$$.BoundClosure$1 = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};

$$.BoundClosure$0 = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  }
};

$$.BoundClosure$i1 = {"": "Closure;self,target,receiver",
  call$1: function(p0) {
    return this.self[this.target](this.receiver, p0);
  }
};

Isolate.$finishClasses($$, $, null);
$$ = null;

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof src !== "string" && (typeof src !== "object" || src === null || src.constructor !== Array && !src.$isJavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.$isJavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dstStart !== "number")
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart) {
    if (typeof count !== "number")
      throw $.iae(count);
    i = srcStart + count - 1;
    j = dstStart + count - 1;
    t1 = src.length;
    t2 = dst.length;
    for (; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  } else {
    t1 = src.length;
    t2 = dst.length;
    j = dstStart;
    i = srcStart;
    while (true) {
      if (typeof count !== "number")
        throw $.iae(count);
      if (!(i < srcStart + count))
        break;
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
      ++i;
      ++j;
    }
  }
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j, t1;
  if ($.JSNumber_methods.$lt(srcStart, dstStart)) {
    if (typeof count !== "number")
      throw $.iae(count);
    i = srcStart + count - 1;
    j = $.$sub$n($.$add$ns(dstStart, count), 1);
    t1 = $.getInterceptor$asx(src);
    for (; i >= srcStart; --i, j = $.$sub$n(j, 1))
      $.JSArray_methods.$indexSet(dst, j, t1.$index(src, i));
  } else {
    t1 = $.getInterceptor$asx(src);
    j = dstStart;
    i = srcStart;
    while (true) {
      if (typeof count !== "number")
        throw $.iae(count);
      if (!(i < srcStart + count))
        break;
      $.JSArray_methods.$indexSet(dst, j, t1.$index(src, i));
      ++i;
      j = $.$add$ns(j, 1);
    }
  }
};

$.ListIterator$ = function(iterable) {
  return new $.ListIterator(iterable, iterable.length, 0, null);
};

$.WhereIterable$ = function(_iterable, _f) {
  return new $.WhereIterable(_iterable, _f);
};

$.WhereIterator$ = function(_iterator, _f) {
  return new $.WhereIterator(_iterator, _f);
};

$.ToString_collectionToString = function(c) {
  var result = $.StringBuffer$("");
  $.ToString__emitCollection(c, result, $.List_List($));
  return result.toString$0(result);
};

$.ToString__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, first, t3;
  t1 = $.getInterceptor$ax(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === "object" && c !== null && (c.constructor === Array || c.$isList());
  result.write$1(isList ? "[" : "{");
  for (t2 = $.get$iterator$ax(c), first = true; t2.moveNext$0(); first = false) {
    t3 = t2.get$current();
    if (!first)
      result.write$1(", ");
    $.ToString__emitObject(t3, result, visiting);
  }
  result.write$1(isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.ToString__emitObject = function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || o.$isCollection()))
    if ($.ToString__containsRef(visiting, o))
      result.write$1(typeof o === "object" && o !== null && (o.constructor === Array || o.$isList()) ? "[...]" : "{...}");
    else
      $.ToString__emitCollection(o, result, visiting);
  else if (typeof o === "object" && o !== null && o.$isMap())
    if ($.ToString__containsRef(visiting, o))
      result.write$1("{...}");
    else
      $.ToString__emitMap(o, result, visiting);
  else
    result.write$1(o);
};

$.ToString__containsRef = function(c, ref) {
  var t1;
  for (t1 = $.get$iterator$ax(c); t1.moveNext$0();)
    if (t1.get$current() === ref)
      return true;
  return false;
};

$.ToString_mapToString = function(m) {
  var result = $.StringBuffer$("");
  $.ToString__emitMap(m, result, $.List_List($));
  return result.toString$0(result);
};

$.ToString__emitMap = function(m, result, visiting) {
  var t1, t2;
  t1 = {};
  t2 = $.getInterceptor$ax(visiting);
  t2.add$1(visiting, m);
  result.write$1("{");
  t1.first_0 = true;
  $.forEach$1$ax(m, new $.ToString__emitMap_anon(t1, result, visiting));
  result.write$1("}");
  t2.removeLast$0(visiting);
};

$.JsIsolateSink$fromPort = function(_port) {
  return new $.JsIsolateSink(false, _port);
};

$._callInIsolate = function(isolate, $function) {
  isolate.eval$1($function);
  $globalState.topEventLoop.run$0();
};

$._currentIsolate = function() {
  return $globalState.currentContext;
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($globalState.isWorker === true)
    return;
  rootContext = $._IsolateContext$();
  $globalState.rootContext = rootContext;
  $globalState.currentContext = rootContext;
  rootContext.eval$1(entry);
  $globalState.topEventLoop.run$0();
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue(), 0);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.IsolateNatives_computeThisScript = function() {
  var currentScript, stack, matches;
  currentScript = $.$currentScript;
  if (currentScript != null)
    return String(currentScript.src);
  stack = new Error().stack;
  if (stack == null)
    stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
  matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
  if (matches != null)
    return matches[1];
  matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
  if (matches != null)
    return matches[1];
  throw $.$$throw($.UnsupportedError$("Cannot extract URI from \"" + $.S(stack) + "\""));
};

$.IsolateNatives_computeGlobalThis = function() {
  return function() { return this; }();
};

$.IsolateNatives__processWorkerMessage = function(sender, e) {
  var msg, t1, t2, entryPoint, replyTo, context;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$asx(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      t2 = t1.$index(msg, "id");
      $globalState.currentManagerId = t2;
      entryPoint = $[t1.$index(msg, "functionName")];
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = $._IsolateContext$();
      $globalState.topEventLoop.enqueue$3(context, new $.IsolateNatives__processWorkerMessage_function(entryPoint, replyTo), "worker-start");
      $globalState.currentContext = context;
      $globalState.topEventLoop.run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (t1.$index(msg, "port") != null)
        t1.$index(msg, "port").send$2(t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $globalState.topEventLoop.run$0();
      break;
    case "close":
      $.IsolateNatives__log("Closing Worker");
      t1 = $globalState.managers;
      t2 = $.getInterceptor$x(sender);
      t1.remove$1(t1, t2.get$id(sender));
      t2.terminate$0(sender);
      $globalState.topEventLoop.run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.isWorker === true) {
        t1 = $globalState.mainManager;
        t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg])));
      } else
        $.Primitives_printString($.toString$0(t1.$index(msg, "msg")));
      break;
    case "error":
      throw $.$$throw(t1.$index(msg, "msg"));
  }
};

$.IsolateNatives__log = function(msg) {
  var trace, t1, exception;
  if ($globalState.isWorker === true) {
    t1 = $globalState.mainManager;
    t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg])));
  } else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.$$throw($._ExceptionImplementation$(trace));
    }

};

$.IsolateNatives__startIsolate = function(topLevel, replyTo) {
  $.lazyPort = $.ReceivePortImpl$();
  replyTo.send$2("spawned", $._Isolate_port().toSendPort$0());
  topLevel.call$0();
};

$.IsolateNatives__spawnWorker = function(functionName, uri, replyPort) {
  var worker, t1, t2, workerId;
  if (functionName == null)
    functionName = "main";
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  t1 = $.getInterceptor$x(worker);
  t1.set$onmessage(worker, function(e) { $.IsolateNatives__processWorkerMessage.call$2(worker, e); });
  t2 = $globalState;
  workerId = t2.nextManagerId;
  t2.nextManagerId = workerId + 1;
  t1.set$id(worker, workerId);
  t2 = $globalState.managers;
  t2.$indexSet(t2, workerId, worker);
  t1.postMessage$1(worker, $._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.ReceivePortImpl$ = function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$add$ns(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $._FutureImpl__FutureImpl$wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._PendingSendPortFinder$ = function() {
  var t1 = new $._PendingSendPortFinder([], $._MessageTraverserVisitedMap$());
  t1._PendingSendPortFinder$0();
  return t1;
};

$._serializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.TimerImpl$ = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
};

$.TimerImpl$periodic = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(false, false, null);
  t1.TimerImpl$periodic$2(milliseconds, callback);
  return t1;
};

$.hasTimer = function() {
  return $.get$globalThis().setTimeout != null;
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number" && value !== 0 || typeof value === "boolean")
    return String(value);
  if (value == null)
    return "null";
  res = $.toString$0(value);
  if (!(typeof res === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.$add$ns($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw "Unable to print message: " + String(string);
};

$.Primitives__throwFormatException = function(string) {
  throw $.$$throw($.FormatException$(string));
};

$.Primitives_parseInt = function(source, radix, handleError) {
  var match, t1, maxCharCode, digitsPart, i;
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  $.checkString(source);
  match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
  if (radix == null) {
    t1 = $.getInterceptor(match);
    if (match != null) {
      if (t1.$index(match, 2) != null)
        return parseInt(source, 16);
      if (t1.$index(match, 3) != null)
        return parseInt(source, 10);
      return handleError.call$1(source);
    }
    radix = 10;
  } else {
    throw $.$$throw($.ArgumentError$("Radix is not an integer"));
    if ($.JSNull_methods.$lt(radix, 2) || $.JSNull_methods.$gt(radix, 36))
      throw $.$$throw($.RangeError$("Radix " + $.S(radix) + " not in range 2..36"));
    t1 = $.getInterceptor(match);
    if (match != null) {
      if (false)
        return parseInt(source, 10);
      if ($.JSNull_methods.$lt(radix, 10) || t1.$index(match, 3) == null) {
        if ($.JSNull_methods.$le(radix, 10)) {
          if (typeof radix !== "number")
            throw $.iae(radix);
          maxCharCode = 48 + radix - 1;
        } else {
          if (typeof radix !== "number")
            throw $.iae(radix);
          maxCharCode = 97 + radix - 10 - 1;
        }
        digitsPart = $.toLowerCase$0$s(t1.$index(match, 1));
        for (i = 0; i < digitsPart.length; ++i)
          if ($.JSString_methods.codeUnitAt$1(digitsPart, i) > maxCharCode)
            return handleError.call$1(source);
      }
    }
  }
  if (match == null)
    return handleError.call$1(source);
  return parseInt(source, radix);
};

$.Primitives_objectTypeName = function(object) {
  var $name, decompiled, t1;
  $name = $.constructorNameFallback(object);
  if ($.$eq($name, "Object") === true) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  t1 = $.getInterceptor$s($name);
  return t1.codeUnitAt$1($name, 0) === 36 ? t1.substring$1($name, 1) : $name;
};

$.Primitives_newFixedList = function($length) {
  var result = new Array($length);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === "number"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.CONSTANT;
  wrapper = $.DartError$(ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.$$throw);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
};

$.DartError$ = function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
};

$.DartError_toStringWrapper = function() {
  return $.toString$0(this);
};

$.unwrapException = function(ex) {
  var message, type, $name, t1, ieErrorCode, ieFacilityNumber, t2;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    $name = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") === -1) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") === true || t1.$eq(type, "called_non_callable") === true || t1.$eq(type, "non_object_property_call") === true || t1.$eq(type, "non_object_property_load") === true;
    } else
      t1 = true;
    if (t1)
      return $.NoSuchMethodError$(null, $name, [], $.makeLiteralMap([]), null);
    else if ($.$eq(type, "undefined_method") === true)
      return $.NoSuchMethodError$("", $name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1)
      if (message === "null has no properties" || message === "'null' is not an object" || message === "'undefined' is not an object" || $.JSString_methods.endsWith$1(message, "is null") || $.JSString_methods.endsWith$1(message, "is undefined") || $.JSString_methods.endsWith$1(message, "is null or undefined") || $.JSString_methods.endsWith$1(message, "of undefined") || $.JSString_methods.endsWith$1(message, "of null"))
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    t1 = t1 ? message : "";
    return $._ExceptionImplementation$(t1);
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == "function" && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, key;
  iterator = $.JSArray_methods.get$iterator(keyValuePairs);
  result = $.LinkedHashMap$();
  for (; iterator.moveNext$0();) {
    key = iterator.get$current();
    iterator.moveNext$0();
    result.$indexSet(result, key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if (t1.$eq(numberOfArguments, 1) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($._ExceptionImplementation$("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $function = (function ($2, $3) { return function($0, $1) { return $3(closure, $2, arity, $0, $1) }})($._currentIsolate(), $.invokeClosure.call$5);
  closure.$identity = $function;
  return $function;
};

$.propertyTypeCastError = function(value, property) {
  var t1 = $.getInterceptor$asx(property);
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.callTypeCast = function(value, property) {
  var t1;
  if (value != null)
    t1 = typeof value === "object" && value[property]();
  else
    t1 = true;
  if (t1)
    return value;
  $.propertyTypeCastError(value, property);
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation("CastError: Casting value of type " + $.S(actualType) + " to" + " incompatible type " + expectedType);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var $name = tag;
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "WebKitMutationObserver")
    return "MutationObserver";
  if ($name === "AudioChannelMerger")
    return "ChannelMergerNode";
  if ($name === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if ($name === "AudioGainNode")
    return "GainNode";
  if ($name === "AudioPannerNode")
    return "PannerNode";
  if ($name === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if ($name === "Oscillator")
    return "OscillatorNode";
  if ($name === "RealtimeAnalyserNode")
    return "AnalyserNode";
  if ($name === "IDBVersionChangeRequest")
    return "IDBOpenDBRequest";
  return $name;
};

$.typeNameInOpera = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "ApplicationCache")
    return "DOMApplicationCache";
  return $name;
};

$.typeNameInFirefox = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "CSS2Properties")
    return "CSSStyleDeclaration";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "GeoGeolocation")
    return "Geolocation";
  if ($name === "MouseScrollEvent")
    return "WheelEvent";
  if ($name === "OfflineResourceList")
    return "DOMApplicationCache";
  if ($name === "WorkerMessageEvent")
    return "MessageEvent";
  if ($name === "XMLDocument")
    return "Document";
  return $name;
};

$.typeNameInIE = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if ($name === "ApplicationCache")
    return "DOMApplicationCache";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "HTMLDDElement")
    return "HTMLElement";
  if ($name === "HTMLDTElement")
    return "HTMLElement";
  if ($name === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLPhraseElement")
    return "HTMLElement";
  if ($name === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if ($name === "MouseWheelEvent")
    return "WheelEvent";
  if ($name === "Position")
    return "Geoposition";
  if ($name === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return $name;
};

$.constructorNameFallback = function(object) {
  var $constructor, $name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof($constructor) === "function") {
    $name = $constructor.name;
    if (typeof $name === "string")
      t1 = $name !== "" && $name !== "Object" && $name !== "Function.prototype";
    else
      t1 = false;
    if (t1)
      return $name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function($function, object, property) {
  return $function.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (typeof(navigator) !== "object")
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, $name, methods, $arguments) {
  var hasOwnPropertyFunction, tag, method, secondTag, proto;
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  if (!$.isDartObject(obj)) {
    tag = $.getTypeNameOf(obj);
    method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
    if (method == null) {
      secondTag = $.alternateTag(obj, tag);
      if (secondTag != null)
        method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
    }
  } else
    method = null;
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT29));
  if (method == null)
    (function(){throw new TypeError($name + " is not a function");})();
  else {
    proto = Object.getPrototypeOf(obj);
    if (!$.callHasOwnProperty(hasOwnPropertyFunction, proto, $name))
      $.defineProperty(proto, $name, method);
  }
  return method.apply(obj, $arguments);
};

$.isDartObject = function(obj) {
  return ((obj) instanceof ($.Object));
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && $._dynamicMetadata0() != null)
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (method != null)
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function($name) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[$name];
  if (f != null && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT29)[$name];
  if (dartMethod != null)
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, $name, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, $name, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined")
    $._dynamicMetadata([]);
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace("$", "$$$$"));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, $length, i;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer$("");
      $length = receiver.length;
      result.write$1(to);
      for (i = 0; i < $length; ++i) {
        result.write$1(receiver[i]);
        result.write$1(to);
      }
      return result.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, new RegExp(from.replace(new RegExp("[-[\\]{}()*+?.,\\\\^$|#\\s]", 'g'), "\\$&"), 'g'), to);
};

$.AsyncError$ = function(error, stackTrace) {
  return new $.AsyncError(error, stackTrace, null);
};

$.AsyncError$withCause = function(error, stackTrace, cause) {
  return new $.AsyncError(error, stackTrace, cause);
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$(), false);
};

$._FutureListenerWrapper$ = function(future) {
  return new $._FutureListenerWrapper(future, null);
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(0, null);
};

$._FutureImpl$immediate = function(value) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediate$1(value);
  return t1;
};

$._FutureImpl__FutureImpl$wait = function(futures) {
  var t1, t2, t3, t4, pos;
  t1 = {};
  t1.completer_0 = null;
  t1.values_1 = null;
  t2 = new $._FutureImpl__FutureImpl$wait_handleError(t1);
  t1.remaining_2 = 0;
  for (t3 = $.JSArray_methods.get$iterator(futures); t3.moveNext$0();) {
    t4 = t3.get$current();
    pos = t1.remaining_2;
    t1.remaining_2 = $.$add$ns(pos, 1);
    t4.catchError$1(t2).then$1(new $._FutureImpl__FutureImpl$wait_anon(t1, pos));
  }
  if ($.$eq(t1.remaining_2, 0) === true)
    return $._FutureImpl$immediate($.CONSTANT3);
  t1.values_1 = $.List_List(t1.remaining_2);
  t1.completer_0 = $._CompleterImpl$();
  return t1.completer_0.future;
};

$._ThenFuture$ = function(_onValue) {
  return new $._ThenFuture(_onValue, null, 0, null);
};

$._CatchErrorFuture$ = function(_onError, _test) {
  return new $._CatchErrorFuture(_test, _onError, null, 0, null);
};

$._SubscribeFuture$ = function(onValue, _onError) {
  return new $._SubscribeFuture(_onError, onValue, null, 0, null);
};

$._WhenFuture$ = function(_action) {
  return new $._WhenFuture(_action, null, 0, null);
};

$._FutureWrapper$ = function(_future) {
  return new $._FutureWrapper(_future);
};

$.StreamController$broadcast = function(onPauseStateChange, onSubscriptionStateChange) {
  return new $.StreamController($._MultiControllerStream$(onSubscriptionStateChange, onPauseStateChange));
};

$._MultiControllerStream$ = function(_subscriptionHandler, _pauseHandler) {
  var t1 = new $._MultiControllerStream(_subscriptionHandler, _pauseHandler, null, null, 0, null);
  t1._MultiStreamImpl$0();
  return t1;
};

$._StreamSubscriptionImpl$ = function(source, _onData, _onError, _onDone, _unsubscribeOnError) {
  var t1 = new $._StreamSubscriptionImpl(_unsubscribeOnError, _onData, _onError, _onDone, source, 0, null, null);
  t1._InternalLink$0();
  return t1;
};

$._nullDataHandler = function(value) {
};

$._nullErrorHandler = function(error) {
  error.throwDelayed$0();
};

$._nullDoneHandler = function() {
};

$._DelayedData$ = function(value) {
  return new $._DelayedData(value, null);
};

$._InternalLink_unlink = function(element) {
  var next, previous;
  next = element.get$_nextLink();
  previous = element.get$_previousLink();
  next.set$_previousLink(previous);
  previous.set$_nextLink(next);
  element.set$_previousLink(element);
  element.set$_nextLink(element);
};

$._InternalLinkList_add = function(list, element) {
  var listEnd;
  if (element !== element._nextLink)
    $._InternalLink_unlink(element);
  listEnd = list._previousLink;
  listEnd.set$_nextLink(element);
  list._previousLink = element;
  element._previousLink = listEnd;
  element._nextLink = list;
};

$._InternalLinkList_isEmpty = function(list) {
  return list === list._nextLink;
};

$._StreamImplEvents$ = function() {
  return new $._StreamImplEvents(null, null, null);
};

$._DoneSubscription$ = function(_handler) {
  var t1 = new $._DoneSubscription(_handler, null, 0);
  t1._DoneSubscription$1(_handler);
  return t1;
};

$.Timer_Timer = function(duration, callback) {
  var milliseconds = duration.get$inMilliseconds();
  if (milliseconds < 0)
    milliseconds = 0;
  return $.TimerImpl$(milliseconds, callback);
};

$.Timer_Timer$periodic = function(duration, callback) {
  var milliseconds = duration.get$inMilliseconds();
  if (milliseconds < 0)
    milliseconds = 0;
  return $.TimerImpl$periodic(milliseconds, callback);
};

$.Timer_run = function(callback) {
  $.add$1$ax($.get$Timer__runCallbacks(), callback);
  if ($.$eq($.get$length$asx($.get$Timer__runCallbacks()), 1) === true)
    $.Timer_Timer($.CONSTANT4, new $.Timer_run_anon());
};

$.IterableMixinWorkaround_setRangeList = function(list, start, $length, from, startFrom) {
  var t1 = $.getInterceptor($length);
  if (t1.$eq($length, 0) === true)
    return;
  if (t1.$lt($length, 0) === true)
    throw $.$$throw($.ArgumentError$($length));
  t1 = $.getInterceptor$n(start);
  if (t1.$lt(start, 0) === true)
    throw $.$$throw($.RangeError$value(start));
  if ($.$gt$n(t1.$add(start, $length), list.length) === true)
    throw $.$$throw($.RangeError$value(t1.$add(start, $length)));
  $.Arrays_copy(from, startFrom, list, start, $length);
};

$._HashMapTable$ = function() {
  var t1 = new $._HashMapTable(null, 8, 0, 0, 0, null);
  t1._HashTable$1(8);
  return t1;
};

$.HashMap$ = function() {
  var t1 = new $.HashMap($._HashMapTable$());
  t1.HashMap$0();
  return t1;
};

$._HashTableKeyIterable$ = function(hashTable) {
  return new $._HashTableKeyIterable(hashTable);
};

$._HashTableKeyIterator$ = function(hashTable) {
  return new $._HashTableKeyIterator(hashTable, hashTable._modificationCount, 0, null);
};

$._HashTableValueIterable$ = function(hashTable, _entryIndex) {
  return new $._HashTableValueIterable(_entryIndex, hashTable);
};

$._HashTableValueIterator$ = function(hashTable, _entryIndex) {
  return new $._HashTableValueIterator(_entryIndex, hashTable, hashTable._modificationCount, 0, null);
};

$._LinkedHashMapTable$ = function() {
  var t1 = new $._LinkedHashMapTable(null, 8, 0, 0, 0, null);
  t1._HashTable$1(8);
  return t1;
};

$.LinkedHashMap$ = function() {
  var t1 = new $.LinkedHashMap($._LinkedHashMapTable$());
  t1.LinkedHashMap$0();
  return t1;
};

$.LinkedHashSet$ = function() {
  var t1 = new $.LinkedHashSet($._LinkedHashTable$(8));
  t1.LinkedHashSet$0();
  return t1;
};

$._LinkedHashTable$ = function(initialCapacity) {
  var t1 = new $._LinkedHashTable(null, initialCapacity, 0, 0, 0, null);
  t1._HashTable$1(initialCapacity);
  return t1;
};

$._LinkedHashTableKeyIterable$ = function(_table) {
  return new $._LinkedHashTableKeyIterable(_table);
};

$._LinkedHashTableKeyIterator$ = function(hashTable) {
  return new $._LinkedHashTableKeyIterator(hashTable, hashTable._modificationCount, hashTable._next$1(0), null);
};

$._LinkedHashTableValueIterable$ = function(_hashTable, _valueIndex) {
  return new $._LinkedHashTableValueIterable(_hashTable, _valueIndex);
};

$._LinkedHashTableValueIterator$ = function(hashTable, _valueIndex) {
  return new $._LinkedHashTableValueIterator(_valueIndex, hashTable, hashTable._modificationCount, hashTable._next$1(0), null);
};

$.Queue_Queue = function() {
  return $.ListQueue$(null);
};

$.ListQueue$ = function(initialCapacity) {
  var t1 = new $.ListQueue(null, 0, 0, 0);
  t1.ListQueue$1(initialCapacity);
  return t1;
};

$.ListQueue__isPowerOf2 = function(number) {
  return $.JSNull_methods.$and(number, $.JSNull_methods.$sub(number, 1)) === 0;
};

$.ListQueue__nextPowerOf2 = function(number) {
  var number0, nextNumber;
  number0 = $.$shl$n(number, 2) - 1;
  for (number = number0; true; number = nextNumber) {
    nextNumber = (number & number - 1) >>> 0;
    if (nextNumber === 0)
      return number;
  }
};

$._ListQueueIterator$ = function(queue) {
  return new $._ListQueueIterator(queue, queue._tail, queue._modificationCount, queue._head, null);
};

$.DateTime$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateTime(millisecondsSinceEpoch, isUtc);
  t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.DateTime$_now = function() {
  var t1 = new $.DateTime($.Primitives_dateNow(), false);
  t1.DateTime$_now$0();
  return t1;
};

$.Duration$ = function(days, hours, microseconds, milliseconds, minutes, seconds) {
  if (typeof microseconds !== "number")
    throw $.iae(microseconds);
  return new $.Duration(days * 86400000000 + hours * 3600000000 + minutes * 60000000 + seconds * 1000000 + milliseconds * 1000 + microseconds);
};

$.Error_safeToString = function(object) {
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString$0(object);
  if (typeof object === "string")
    return "\"" + $.JSString_methods.replaceAll$2($.JSString_methods.replaceAll$2($.JSString_methods.replaceAll$2($.JSString_methods.replaceAll$2(object, "\\", "\\\\"), "\n", "\\n"), "\r", "\\r"), "\"", "\\\"") + "\"";
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$ = function(message) {
  return new $.RangeError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.RangeError$range = function(value, start, end) {
  return new $.RangeError("value " + $.S(value) + " not in range " + $.S(start) + ".." + $.S(end));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.ConcurrentModificationError$ = function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.int_parse = function(source, onError, radix) {
  return $.Primitives_parseInt(source, radix, onError);
};

$.List_List = function($length) {
  var t1 = $ === $length;
  if (t1)
    $length = null;
  if (t1)
    return new Array(0);
  if (!(typeof $length === "number" && Math.floor($length) === $length) || $length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  return $.Primitives_newFixedList($length);
};

$.List_List$from = function(other, growable) {
  var list, t1, $length, fixedList, i;
  list = $.List_List($);
  for (t1 = $.get$iterator$ax(other); t1.moveNext$0();)
    list.push(t1.get$current());
  if (growable === true)
    return list;
  $length = list.length;
  fixedList = $.List_List($length);
  for (t1 = list.length, i = 0; i < $length; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    fixedList[i] = list[i];
  }
  return fixedList;
};

$.Map_Map = function() {
  return $.HashMap$();
};

$.StringBuffer$ = function($content) {
  var t1 = new $.StringBuffer("");
  t1.StringBuffer$1($content);
  return t1;
};

$.document = function() {
  return document;
};

$.query = function(selector) {
  return $.query$1$x(document, selector);
};

$.AudioElement_AudioElement = function(src) {
  var t1 = $ === src;
  if (t1)
    src = null;
  if (!t1)
    return new Audio(src);
  return new Audio();
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$.ImageElement_ImageElement = function(height, src, width) {
  var e = $.$$dom_createElement$1$x(document, "img");
  if (src != null)
    $.set$src$x(e, src);
  if (width != null)
    $.set$width$x(e, width);
  if (height != null)
    $.set$height$x(e, height);
  return e;
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$._EventStream$ = function(_target, _eventType, _useCapture) {
  return new $._EventStream(_target, _eventType, _useCapture);
};

$._EventStreamSubscription$ = function(_target, _eventType, _onData, _useCapture) {
  var t1 = new $._EventStreamSubscription(0, _target, _eventType, _onData, _useCapture);
  t1._EventStreamSubscription$4(_target, _eventType, _onData, _useCapture);
  return t1;
};

$.Point$ = function(x, y) {
  return new $.Point(x, y);
};

$.Rect$ = function(left, $top, width, height) {
  return new $.Rect(left, $top, width, height);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator(array, $.get$length$asx(array), -1, null);
};

$.convertDartToNative_Dictionary = function(dict) {
  var object;
  if (dict == null)
    return;
  object = {};
  $.JSNull_methods.forEach$1(dict, new $.convertDartToNative_Dictionary_anon(object));
  return object;
};

$.convertNativeToDart_SerializedScriptValue = function(object) {
  return $.convertNativeToDart_AcceptStructuredClone(object, true);
};

$.convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var copies = [];
  return new $.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $.convertNativeToDart_AcceptStructuredClone_findSlot([], copies), new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
};

$.Lists_getRange = function(a, start, end, accumulator) {
  var i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_getRange$bailout(1, a, start, end, accumulator);
  if (end !== (end | 0))
    return $.Lists_getRange$bailout(1, a, start, end, accumulator);
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (end < start)
    throw $.$$throw($.RangeError$value(end));
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.Lists_getRange$bailout = function(state0, a, start, end, accumulator) {
  var t1, t2, i;
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  t1 = $.getInterceptor$n(end);
  if (t1.$lt(end, start))
    throw $.$$throw($.RangeError$value(end));
  t2 = $.getInterceptor$asx(a);
  if (t1.$gt(end, t2.get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; $.JSNumber_methods.$lt(i, end); ++i)
    accumulator.push(t2.$index(a, i));
  return accumulator;
};

$.ReceivePort_ReceivePort = function() {
  return $.ReceivePortImpl$();
};

$._Isolate_port = function() {
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  return $.lazyPort;
};

$.min = function(a, b) {
  if (a > b)
    return b;
  if (a < b)
    return a;
  if (typeof a === "number")
    if (a === 0)
      return (a + b) * a * b;
  if (a === 0 && $.JSDouble_methods.get$isNegative(b) || $.JSDouble_methods.get$isNaN(b))
    return b;
  return a;
  return a;
  throw $.$$throw($.ArgumentError$(b));
  throw $.$$throw($.ArgumentError$(a));
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$.main = function() {
  $.HtmlGameSound$("", 1, false);
  var game = $.GalagaGame$withServices($.HtmlGameInput$(), $.GalagaRenderer$("surface"), $.HtmlGameLoop$());
  $.Game_debugMode = false;
  game.start$0(game);
};

$.GameButton$ = function(buttonAction, centered, color, font, game, groupId, id, opacity, size, text, x, y) {
  var t1 = new $.GameButton(buttonAction, text, centered, font, size, game, 0, 0, 1, 1, false, false, id, groupId, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 10, 10, id, groupId);
  t1.GameText$11$centered$color$font$game$groupId$id$opacity$size$text$x$y(centered, color, font, game, groupId, id, opacity, size, text, x, y);
  t1.GameButton$12$buttonAction$centered$color$font$game$groupId$id$opacity$size$text$x$y(buttonAction, centered, color, font, game, groupId, id, opacity, size, text, x, y);
  return t1;
};

$.GameSound$ = function(sound, volume, looping) {
  var t1 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t1.GameSound$3(sound, volume, looping);
  return t1;
};

$.GameText$ = function(centered, color, font, game, groupId, id, opacity, size, text, x, y) {
  var t1 = new $.GameText(text, centered, font, size, game, 0, 0, 1, 1, false, false, id, groupId, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 10, 10, id, groupId);
  t1.GameText$11$centered$color$font$game$groupId$id$opacity$size$text$x$y(centered, color, font, game, groupId, id, opacity, size, text, x, y);
  return t1;
};

$.GameTimer$ = function() {
  return new $.GameTimer(0, 0, 0, 60, false);
};

$.DefaultCanvasEntityRenderer$ = function(gr) {
  return new $.DefaultCanvasEntityRenderer(gr);
};

$.HtmlGameInput$ = function() {
  return new $.HtmlGameInput(null, null, null, false, null);
};

$.HtmlGameLoop$ = function() {
  return new $.HtmlGameLoop(null);
};

$.HtmlGameSound$ = function(sound, volume, looping) {
  var t1 = new $.HtmlGameSound(null, true, null, null, null, null, "Sounds/");
  t1.GameSound$3(sound, volume, looping);
  return t1;
};

$.TextRenderer$ = function(gr) {
  return new $.TextRenderer(gr);
};

$.random = function(min, max, wholeNumbers) {
  var value = min + $.CONSTANT14.nextDouble$0() * (max - min);
  return wholeNumbers ? $.JSNumber_methods.round$0(value) : value;
};

$.Momentum$ = function(xAccel, xMax, xVel, yAccel, yMax, yVel) {
  return new $.Momentum(xVel, yVel, xAccel, yAccel, xMax, yMax);
};

$.Rectangle$ = function($top, left, right, bottom) {
  return new $.Rectangle($top, left, right, bottom);
};

$.Rectangle$clone = function(rect) {
  return new $.Rectangle(rect.top, rect.left, rect.right, rect.bottom);
};

$.Rectangle_intersect = function(r1, r2) {
  return !($.$gt$n(r1.left, r2.right) === true || $.$lt$n(r1.right, r2.left) === true || $.$gt$n(r1.top, r2.bottom) === true || $.$lt$n(r1.bottom, r2.top) === true);
};

$.Vector$ = function(x, y) {
  return new $.Vector(x, y);
};

$.EventStream$ = function() {
  return new $.EventStream($.StreamController$broadcast(null, null));
};

$.EventArgs$ = function() {
  return new $.EventArgs();
};

$.GalagaGame$withServices = function(input, renderer, loop) {
  var t1 = new $.GalagaGame(0, 0, 5, 5, 0, null, $.Map_Map(), $.Map_Map(), $.Map_Map(), $.Map_Map(), 1, 1, -400, -165, 3, 3, 1, 0, 33, 60, 1, null, true, null, null, 0, 1, 3, false, true, true, 1, null, 1, 0, $.GameSound$("Menu", 1, false), $.GameSound$("Options", 1, true), $.GameSound$("GameStart", 1, false), $.GameSound$("Game", 1, true), $.GameSound$("cursorMove", 0.3, false), $.GameSound$("cursorSelect", 0.3, false), $.GameSound$("cursorSelect2", 0.3, false), $.GameSound$("enemyFire", 0.3, false), $.GameSound$("enemyHit", 0.3, false), $.GameSound$("explosion", 0.3, false), $.GameSound$("mothershipfire", 0.3, false), $.GameSound$("shipFire", 0.3, false), $.GameSound$("shipHit", 0.3, false), $.GameSound$("powerUp", 0.3, false), $.EventStream$(), $.EventStream$(), $.EventStream$(), $.EventStream$(), $.EventStream$(), $.EventStream$(), $.EventStream$(), null, null, null, null, null, input, renderer, loop, "rgba(0, 0, 0, .85)", false);
  t1.Game$withServices$3(input, renderer, loop);
  return t1;
};

$.Bullet$ = function(game, x, y, dir, yVel, size, type) {
  var t1 = new $.Bullet(0, 0, null, null, 0, false, false, false, false, false, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, size, size, null, null);
  t1.Bullet$7(game, x, y, dir, yVel, size, type);
  return t1;
};

$.Enemy$ = function(game, x, y, diff, Type) {
  var t1 = new $.Enemy(null, false, false, 0, 0, 1, 1, 1, 100, 1, 100, false, false, 1, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 36, 36, null, null);
  t1.Enemy$5(game, x, y, diff, Type);
  return t1;
};

$.EnemyRenderer$ = function(gr) {
  return new $.EnemyRenderer(gr);
};

$.GalagaRenderer$ = function(targetId) {
  var t1 = new $.GalagaRenderer(0, null, null, $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), false, false, targetId, null, null, null, null, null, null, null);
  t1.CanvasGameRenderer$1(targetId);
  t1.GalagaRenderer$1(targetId);
  return t1;
};

$.PowerUpRenderer$ = function(gr) {
  return new $.PowerUpRenderer(gr);
};

$.Particles$ = function(game, x, y, h, w, col, xV, yV) {
  var t1 = new $.Particles(null, 0, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, h, w, null, null);
  t1.Particles$8(game, x, y, h, w, col, xV, yV);
  return t1;
};

$.PowerUp$ = function(game, x, y, Type) {
  var t1 = new $.PowerUp(null, 0, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 36, 36, null, null);
  t1.PowerUp$4(game, x, y, Type);
  return t1;
};

$.Ship$ = function(game, x, y) {
  var t1 = new $.Ship(8, 3, 3, 3, 0, false, false, false, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 36, 36, null, null);
  t1.Ship$3(game, x, y);
  return t1;
};

$.Stars$ = function(game, x, y, h, w, col) {
  var t1 = new $.Stars(game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, h, w, null, null);
  t1.Stars$6(game, x, y, h, w, col);
  return t1;
};

$.IsolateNatives__processWorkerMessage.call$2 = $.IsolateNatives__processWorkerMessage;
$.IsolateNatives__processWorkerMessage.$name = "IsolateNatives__processWorkerMessage";
$.Primitives__throwFormatException.call$1 = $.Primitives__throwFormatException;
$.Primitives__throwFormatException.$name = "Primitives__throwFormatException";
$.$$throw.call$1 = $.$$throw;
$.$$throw.$name = "$$throw";
$.DartError_toStringWrapper.call$0 = $.DartError_toStringWrapper;
$.DartError_toStringWrapper.$name = "DartError_toStringWrapper";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$._nullDataHandler.call$1 = $._nullDataHandler;
$._nullDataHandler.$name = "_nullDataHandler";
$._nullErrorHandler.call$1 = $._nullErrorHandler;
$._nullErrorHandler.$name = "_nullErrorHandler";
$._nullDoneHandler.call$0 = $._nullDoneHandler;
$._nullDoneHandler.$name = "_nullDoneHandler";
$.num = {builtin$cls: "num"};
$.TextTrack = {builtin$cls: "TextTrack"};
$.String = {builtin$cls: "String"};
$.Touch = {builtin$cls: "Touch"};
$.Node = {builtin$cls: "Node"};
$.ReceivePort = {builtin$cls: "ReceivePort"};
$.$int = {builtin$cls: "$int"};
$._ManagerStub = {builtin$cls: "_ManagerStub"};
$.$double = {builtin$cls: "$double"};
$.List = {builtin$cls: "List"};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT3 = Isolate.makeConstantList([]);
$.CONSTANT29 = new $.Object();
$.CONSTANT1 = new $._NullKey();
$.CONSTANT24 = new $.Duration(100000);
$.CONSTANT23 = new $.Duration(375000);
$.CONSTANT26 = new $.Duration(175000);
$.CONSTANT9 = new $.EventStreamProvider("keydown");
$.CONSTANT17 = new $.EventStreamProvider("ended");
$.CONSTANT2 = new $._LinkedHashTableHeadMarker();
$.JSNull_methods = $.JSNull.prototype;
$.JSNumber_methods = $.JSNumber.prototype;
$.CONSTANT6 = new $.Duration(50000);
$.JSString_methods = $.JSString.prototype;
$.CONSTANT15 = new $.Duration(250000);
$.CONSTANT11 = new $.EventStreamProvider("touchmove");
$.CONSTANT25 = new $.Duration(125000);
$.CONSTANT13 = new $.EventStreamProvider("click");
$.CONSTANT16 = new $.Duration(1000000);
$.CONSTANT8 = new $.EventStreamProvider("mousedown");
$.JSBool_methods = $.JSBool.prototype;
$.CONSTANT4 = new $.Duration(0);
$.CONSTANT = new $.NullThrownError();
$.CONSTANT10 = new $.EventStreamProvider("touchstart");
$.CONSTANT14 = new $._Random();
$.CONSTANT19 = new $.Duration(75000);
$.CONSTANT27 = new $.Duration(200000);
$.CONSTANT28 = new $.Duration(275000);
$.JSDouble_methods = $.JSDouble.prototype;
$.CONSTANT20 = new $.Duration(150000);
$.CONSTANT7 = new $.EventStreamProvider("mouseup");
$.CONSTANT5 = new $.CloseToken();
$.CONSTANT18 = new $.Duration(25000);
$.JSInt_methods = $.JSInt.prototype;
$.CONSTANT21 = new $.Duration(225000);
$.JSArray_methods = $.JSArray.prototype;
$.CONSTANT22 = new $.Duration(300000);
$.CONSTANT0 = new $._DeadEntry();
$.CONSTANT12 = new $.EventStreamProvider("mousemove");
$.lazyPort = null;
$.ReceivePortImpl__nextFreeId = 1;
$.Primitives_hashCodeSeed = 0;
$._getTypeNameOf = null;
$.Game_debugMode = false;
$.$$dom_addEventListener$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).$$dom_addEventListener$3(receiver, a0, a1, a2);
};
$.$$dom_createElement$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).$$dom_createElement$1(receiver, a0);
};
$.$$dom_getAttribute$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).$$dom_getAttribute$1(receiver, a0);
};
$.$$dom_removeChild$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).$$dom_removeChild$1(receiver, a0);
};
$.$$dom_removeEventListener$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).$$dom_removeEventListener$3(receiver, a0, a1, a2);
};
$.$$dom_replaceChild$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).$$dom_replaceChild$2(receiver, a0, a1);
};
$.$$dom_setAttribute$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).$$dom_setAttribute$2(receiver, a0, a1);
};
$.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return $.getInterceptor$ns(receiver).$add(receiver, a0);
};
$.$and$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver & a0) >>> 0;
  return $.getInterceptor$n(receiver).$and(receiver, a0);
};
$.$div$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver / a0;
  return $.getInterceptor$n(receiver).$div(receiver, a0);
};
$.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (!(typeof receiver == "object"))
    return !(a0 == null) && receiver === a0;
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return $.getInterceptor$n(receiver).$ge(receiver, a0);
};
$.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return $.getInterceptor$n(receiver).$gt(receiver, a0);
};
$.$index$asx = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string")
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return $.getInterceptor$asx(receiver).$index(receiver, a0);
};
$.$indexSet$ax = function(receiver, a0, a1) {
  if (receiver.constructor == Array && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return $.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
};
$.$le$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver <= a0;
  return $.getInterceptor$n(receiver).$le(receiver, a0);
};
$.$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return $.getInterceptor$n(receiver).$lt(receiver, a0);
};
$.$mul$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return $.getInterceptor$n(receiver).$mul(receiver, a0);
};
$.$negate$n = function(receiver) {
  if (typeof receiver == "number")
    return -receiver;
  return $.getInterceptor$n(receiver).$negate(receiver);
};
$.$or$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver | a0) >>> 0;
  return $.getInterceptor$n(receiver).$or(receiver, a0);
};
$.$shl$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).$shl(receiver, a0);
};
$.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return $.getInterceptor$n(receiver).$sub(receiver, a0);
};
$.$xor$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver ^ a0) >>> 0;
  return $.getInterceptor$n(receiver).$xor(receiver, a0);
};
$.abs$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).abs$0(receiver);
};
$.add$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).add$1(receiver, a0);
};
$.addAll$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).addAll$1(receiver, a0);
};
$.append$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).append$1(receiver, a0);
};
$.arc$6$x = function(receiver, a0, a1, a2, a3, a4, a5) {
  return $.getInterceptor$x(receiver).arc$6(receiver, a0, a1, a2, a3, a4, a5);
};
$.beginPath$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).beginPath$0(receiver);
};
$.clearRect$4$x = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$x(receiver).clearRect$4(receiver, a0, a1, a2, a3);
};
$.clone$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).clone$1(receiver, a0);
};
$.closePath$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).closePath$0(receiver);
};
$.containsKey$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).containsKey$1(receiver, a0);
};
$.drawImageScaled$5$x = function(receiver, a0, a1, a2, a3, a4) {
  return $.getInterceptor$x(receiver).drawImageScaled$5(receiver, a0, a1, a2, a3, a4);
};
$.fillRect$4$x = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$x(receiver).fillRect$4(receiver, a0, a1, a2, a3);
};
$.fillText$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).fillText$3(receiver, a0, a1, a2);
};
$.forEach$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).forEach$1(receiver, a0);
};
$.get$$$dom_body$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$$$dom_body(receiver);
};
$.get$attributes$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$attributes(receiver);
};
$.get$body$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$body(receiver);
};
$.get$classes$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$classes(receiver);
};
$.get$click$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$click(receiver);
};
$.get$error$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$error(receiver);
};
$.get$hashCode$ = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.get$height$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$height(receiver);
};
$.get$id$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$id(receiver);
};
$.get$iterator$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).get$iterator(receiver);
};
$.get$keyCode$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$keyCode(receiver);
};
$.get$length$asx = function(receiver) {
  return $.getInterceptor$asx(receiver).get$length(receiver);
};
$.get$nodes$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$nodes(receiver);
};
$.get$onClick$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onClick(receiver);
};
$.get$onEnded$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onEnded(receiver);
};
$.get$onKeyDown$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onKeyDown(receiver);
};
$.get$onMouseDown$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onMouseDown(receiver);
};
$.get$onMouseMove$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onMouseMove(receiver);
};
$.get$onMouseUp$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onMouseUp(receiver);
};
$.get$onTouchMove$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onTouchMove(receiver);
};
$.get$onTouchStart$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onTouchStart(receiver);
};
$.get$rect$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$rect(receiver);
};
$.get$state$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$state(receiver);
};
$.get$type$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$type(receiver);
};
$.get$value$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$value(receiver);
};
$.get$values$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$values(receiver);
};
$.get$x$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$x(receiver);
};
$.get$y$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$y(receiver);
};
$.getBoundingClientRect$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).getBoundingClientRect$0(receiver);
};
$.getContext$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).getContext$1(receiver, a0);
};
$.measureText$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).measureText$1(receiver, a0);
};
$.pause$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).pause$0(receiver);
};
$.play$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).play$0(receiver);
};
$.play$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).play$3(receiver, a0, a1, a2);
};
$.postMessage$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).postMessage$1(receiver, a0);
};
$.preventDefault$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).preventDefault$0(receiver);
};
$.query$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).query$1(receiver, a0);
};
$.remove$0$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).remove$0(receiver);
};
$.requestAnimationFrame$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).requestAnimationFrame$1(receiver, a0);
};
$.reset$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).reset$0(receiver);
};
$.restore$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).restore$0(receiver);
};
$.round$0$nx = function(receiver) {
  return $.getInterceptor$nx(receiver).round$0(receiver);
};
$.save$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).save$0(receiver);
};
$.set$click$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$click(receiver, value);
};
$.set$currentTime$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$currentTime(receiver, value);
};
$.set$fillStyle$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$fillStyle(receiver, value);
};
$.set$font$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$font(receiver, value);
};
$.set$height$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$height(receiver, value);
};
$.set$id$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$id(receiver, value);
};
$.set$keyCode$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$keyCode(receiver, value);
};
$.set$lineWidth$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$lineWidth(receiver, value);
};
$.set$loop$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$loop(receiver, value);
};
$.set$opacity$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$opacity(receiver, value);
};
$.set$src$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$src(receiver, value);
};
$.set$state$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$state(receiver, value);
};
$.set$strokeStyle$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$strokeStyle(receiver, value);
};
$.set$volume$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$volume(receiver, value);
};
$.set$width$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$width(receiver, value);
};
$.split$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).split$1(receiver, a0);
};
$.start$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).start$0(receiver);
};
$.start$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).start$1(receiver, a0);
};
$.stroke$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).stroke$0(receiver);
};
$.strokeRect$4$x = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$x(receiver).strokeRect$4(receiver, a0, a1, a2, a3);
};
$.sublist$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).sublist$1(receiver, a0);
};
$.toList$0$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).toList$0(receiver);
};
$.toLowerCase$0$s = function(receiver) {
  return $.getInterceptor$s(receiver).toLowerCase$0(receiver);
};
$.toString$0 = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.translate$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).translate$2(receiver, a0, a1);
};
$.trim$0$s = function(receiver) {
  return $.getInterceptor$s(receiver).trim$0(receiver);
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return receiver;
};
$.getInterceptor$asx = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return receiver;
};
$.getInterceptor$ax = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return receiver;
};
$.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return receiver;
};
$.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return receiver;
};
$.getInterceptor$nx = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return receiver;
};
$.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return receiver;
};
$.getInterceptor$x = function(receiver) {
  if (receiver == null)
    return void 0;
  return receiver;
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== (void 0);
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "_runCallbacks", "Timer__runCallbacks", "get$Timer__runCallbacks", function() {
  return [];
});
Isolate.$lazy($, "empty", "EventArgs_empty", "get$EventArgs_empty", function() {
  return $.EventArgs$();
});
var $ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
// Native classes
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table)
    $.defineProperty(Object.prototype, key, table[key]);
})({
  $isJavaScriptIndexingBehavior: function() {
    return false;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  },
  $isCollection: function() {
    return false;
  },
  $asCollection: function() {
    return null;
  },
  $isList: function() {
    return false;
  },
  $asList: function() {
    return null;
  },
  $isMap: function() {
    return false;
  },
  $asMap: function() {
    return null;
  },
  $isAudioElement: function() {
    return false;
  },
  $asAudioElement: function() {
    return null;
  },
  $isRect: function() {
    return false;
  },
  $asRect: function() {
    return null;
  },
  toString$0: function(_) {
    return $.toStringForNativeObject(this);
  },
  get$hashCode: function(_) {
    return $.hashCodeForNativeObject(this);
  },
  $eq: function(_, a) {
    return this === a;
  }
});

$.$defineNativeClass("Worker", {
  get$id: function(receiver) {
    return receiver.id;
  },
  set$id: function(receiver, i) {
    receiver.id = i;
  },
  set$onmessage: function(receiver, f) {
    receiver.onmessage = f;
  },
  postMessage$1: function(receiver, msg) {
    receiver.postMessage(msg);
  },
  terminate$0: function(receiver) {
    receiver.terminate();
  }
});

$.$defineNativeClass("HTMLAnchorElement", {"": "type%",
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("HTMLAudioElement", {
  $isAudioElement: function() {
    return true;
  },
  $asAudioElement: function() {
    return null;
  }
});

$.$defineNativeClass("Blob", {"": "size=,type="});

$.$defineNativeClass("HTMLButtonElement", {"": "type%,value="});

$.$defineNativeClass("HTMLCanvasElement", {"": "height%,width%",
  getContext$2: function(receiver, contextId, attrs) {
    var t1 = $ === attrs;
    if (t1)
      attrs = null;
    if (!t1)
      return this._getContext_1$2(receiver, contextId, $.convertDartToNative_Dictionary(attrs));
    return this._getContext_2$1(receiver, contextId);
  },
  getContext$1: function($receiver, contextId) {
    return this.getContext$2($receiver, contextId, $);
  },
  _getContext_1$2: function(receiver, contextId, attrs) {
    return receiver.getContext(contextId,attrs);
  },
  _getContext_2$1: function(receiver, contextId) {
    return receiver.getContext(contextId);
  }
});

$.$defineNativeClass("CanvasRenderingContext2D", {"": "fillStyle},font%,lineWidth},strokeStyle}",
  $$dom_arc$6: function(receiver, x, y, radius, startAngle, endAngle, anticlockwise) {
    return receiver.arc(x,y,radius,startAngle,endAngle,anticlockwise);
  },
  beginPath$0: function(receiver) {
    return receiver.beginPath();
  },
  clearRect$4: function(receiver, x, y, width, height) {
    return receiver.clearRect(x,y,width,height);
  },
  closePath$0: function(receiver) {
    return receiver.closePath();
  },
  fill$1: function(receiver, winding) {
    return receiver.fill(winding);
  },
  get$fill: function(receiver) {
    return new $.Bound_fill_CanvasRenderingContext2D(this, "fill$1", receiver);
  },
  fillRect$4: function(receiver, x, y, width, height) {
    return receiver.fillRect(x,y,width,height);
  },
  fillText$4: function(receiver, text, x, y, maxWidth) {
    return receiver.fillText(text,x,y,maxWidth);
  },
  fillText$3: function($receiver, text, x, y) {
    return $receiver.fillText(text, x, y);
  },
  measureText$1: function(receiver, text) {
    return receiver.measureText(text);
  },
  rect$4: function(receiver, x, y, width, height) {
    return receiver.rect(x,y,width,height);
  },
  get$rect: function(receiver) {
    return new $.BoundClosure$i4(this, "rect$4", receiver);
  },
  restore$0: function(receiver) {
    return receiver.restore();
  },
  save$0: function(receiver) {
    return receiver.save();
  },
  stroke$0: function(receiver) {
    return receiver.stroke();
  },
  strokeRect$5: function(receiver, x, y, width, height, lineWidth) {
    return receiver.strokeRect(x,y,width,height,lineWidth);
  },
  strokeRect$4: function($receiver, x, y, width, height) {
    return $receiver.strokeRect(x, y, width, height);
  },
  translate$2: function(receiver, tx, ty) {
    return receiver.translate(tx,ty);
  },
  arc$6: function(receiver, x, y, radius, startAngle, endAngle, anticlockwise) {
    this.$$dom_arc$6(receiver, x, y, radius, startAngle, endAngle, anticlockwise);
  },
  drawImageScaled$5: function(receiver, source, destX, destY, destWidth, destHeight) {
    return receiver.drawImage(source,destX,destY,destWidth,destHeight);
  }
});

$.$defineNativeClass("CharacterData", {"": "length="});

$.$defineNativeClass("CSSStyleDeclaration", {"": "length=",
  _getPropertyValue$1: function(receiver, propertyName) {
    return receiver.getPropertyValue(propertyName);
  },
  getPropertyValue$1: function(receiver, propertyName) {
    var propValue = this._getPropertyValue$1(receiver, propertyName);
    return propValue != null ? propValue : "";
  },
  setProperty$3: function(receiver, propertyName, value, priority) {
    var exception;
    try {
      receiver.setProperty(propertyName, value, priority);
      if (!!receiver.setAttribute)
        receiver.setAttribute(propertyName, value);
    } catch (exception) {
      $.unwrapException(exception);
    }

  },
  get$color: function(receiver) {
    return this.getPropertyValue$1(receiver, "color");
  },
  get$font: function(receiver) {
    return this.getPropertyValue$1(receiver, "font");
  },
  get$height: function(receiver) {
    return this.getPropertyValue$1(receiver, "height");
  },
  set$height: function(receiver, value) {
    this.setProperty$3(receiver, "height", value, "");
  },
  get$opacity: function(receiver) {
    return this.getPropertyValue$1(receiver, "opacity");
  },
  set$opacity: function(receiver, value) {
    this.setProperty$3(receiver, "opacity", value, "");
  },
  get$size: function(receiver) {
    return this.getPropertyValue$1(receiver, "size");
  },
  get$width: function(receiver) {
    return this.getPropertyValue$1(receiver, "width");
  },
  set$width: function(receiver, value) {
    this.setProperty$3(receiver, "width", value, "");
  }
});

$.$defineNativeClass("Document", {"": "$$dom_body:body=",
  $$dom_createElement$1: function(receiver, tagName) {
    return receiver.createElement(tagName);
  },
  query$1: function(receiver, selectors) {
    return receiver.querySelector(selectors);
  },
  get$onClick: function(receiver) {
    return $.CONSTANT13.forTarget$1(receiver);
  },
  get$onKeyDown: function(receiver) {
    return $.CONSTANT9.forTarget$1(receiver);
  },
  get$onMouseDown: function(receiver) {
    return $.CONSTANT8.forTarget$1(receiver);
  },
  get$onMouseMove: function(receiver) {
    return $.CONSTANT12.forTarget$1(receiver);
  },
  get$onMouseUp: function(receiver) {
    return $.CONSTANT7.forTarget$1(receiver);
  },
  get$onTouchMove: function(receiver) {
    return $.CONSTANT11.forTarget$1(receiver);
  },
  get$onTouchStart: function(receiver) {
    return $.CONSTANT10.forTarget$1(receiver);
  }
});

$.$defineNativeClass("DOMException", {
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("Element", {"": "id%",
  get$attributes: function(receiver) {
    return $._ElementAttributeMap$(receiver);
  },
  get$classes: function(receiver) {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$classes")) {
      return $._ElementCssClassSet$(receiver);
    } else
      return Object.prototype.get$classes.call(this, receiver);
  },
  click$0: function(receiver) {
    if (Object.getPrototypeOf(this).hasOwnProperty("click$0")) {
      return receiver.click();
    } else
      return Object.prototype.click$0.call(this, receiver);
  },
  get$click: function(receiver) {
    return new $.BoundClosure$i0(this, "click$0", receiver);
  },
  $$dom_getAttribute$1: function(receiver, $name) {
    return receiver.getAttribute($name);
  },
  getBoundingClientRect$0: function(receiver) {
    return receiver.getBoundingClientRect();
  },
  $$dom_setAttribute$2: function(receiver, $name, value) {
    return receiver.setAttribute($name,value);
  }
});

$.$defineNativeClass("HTMLEmbedElement", {"": "height%,src},type%,width%"});

$.$defineNativeClass("Event", {"": "type=",
  preventDefault$0: function(receiver) {
    return receiver.preventDefault();
  }
});

$.$defineNativeClass("EventException", {
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("EventTarget", {
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_addEventListener$3")) {
      return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_addEventListener$3.call(this, receiver, type, listener, useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_removeEventListener$3")) {
      return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_removeEventListener$3.call(this, receiver, type, listener, useCapture);
  }
});

$.$defineNativeClass("HTMLFieldSetElement", {"": "type="});

$.$defineNativeClass("FileException", {
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("Float32Array", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$double]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$double]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Float64Array", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$double]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$double]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLFormElement", {"": "length=",
  reset$0: function(receiver) {
    return receiver.reset();
  }
});

$.$defineNativeClass("HTMLCollection", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLDocument", {
  get$body: function(receiver) {
    return $.get$$$dom_body$x($.document());
  }
});

$.$defineNativeClass("XMLHttpRequestException", {
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("HTMLIFrameElement", {"": "height%,src},width%"});

$.$defineNativeClass("HTMLImageElement", {"": "height%,src},width%,x=,y="});

$.$defineNativeClass("HTMLInputElement", {"": "height%,size=,src},type%,value=,width%"});

$.$defineNativeClass("Int16Array", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Int32Array", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Int8Array", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("KeyboardEvent", {
  get$keyCode: function(receiver) {
    return this.keyCode;
  }
});

$.$defineNativeClass("HTMLKeygenElement", {"": "type="});

$.$defineNativeClass("HTMLLIElement", {"": "type%,value="});

$.$defineNativeClass("HTMLLinkElement", {"": "type%"});

$.$defineNativeClass("MediaController", {"": "currentTime},volume}",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  pause$0: function(receiver) {
    return receiver.pause();
  },
  play$0: function(receiver) {
    return receiver.play();
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("HTMLMediaElement", {"": "currentTime},error=,loop},preload},src},volume}",
  pause$0: function(receiver) {
    return receiver.pause();
  },
  play$0: function(receiver) {
    return receiver.play();
  },
  get$onEnded: function(receiver) {
    return $.CONSTANT17.forTarget$1(receiver);
  }
});

$.$defineNativeClass("MediaStream", {"": "id=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  get$onEnded: function(receiver) {
    return $.CONSTANT17.forTarget$1(receiver);
  }
});

$.$defineNativeClass("HTMLMeterElement", {"": "value="});

$.$defineNativeClass("MouseEvent", {
  get$clientX: function(receiver) {
    return this.get$client(receiver).x;
  },
  get$clientY: function(receiver) {
    return this.get$client(receiver).y;
  },
  get$client: function(receiver) {
    return $.Point$(this.clientX, this.clientY);
  }
});

$.$defineNativeClass("Node", {"": "text:textContent=",
  get$nodes: function(receiver) {
    return $._ChildNodeListLazy$(receiver);
  },
  remove$0: function(receiver) {
    var t1 = this.parentNode;
    if (t1 != null)
      $.$$dom_removeChild$1$x(t1, receiver);
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  append$1: function(receiver, newChild) {
    return receiver.appendChild(newChild);
  },
  clone$1: function(receiver, deep) {
    if (Object.getPrototypeOf(this).hasOwnProperty("clone$1")) {
      return receiver.cloneNode(deep);
    } else
      return Object.prototype.clone$1.call(this, receiver, deep);
  },
  $$dom_removeChild$1: function(receiver, oldChild) {
    return receiver.removeChild(oldChild);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_replaceChild$2: function(receiver, newChild, oldChild) {
    return receiver.replaceChild(newChild,oldChild);
  }
});

$.$defineNativeClass("NodeList", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLOListElement", {"": "type%",
  start$0: function($receiver) {
    return this.start.call$0();
  },
  start$1: function($receiver, arg0) {
    return this.start.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLObjectElement", {"": "height%,type%,width%"});

$.$defineNativeClass("HTMLOptionElement", {"": "value="});

$.$defineNativeClass("HTMLOutputElement", {"": "type=,value="});

$.$defineNativeClass("HTMLParamElement", {"": "value="});

$.$defineNativeClass("PopStateEvent", {
  get$state: function(receiver) {
    return $.convertNativeToDart_SerializedScriptValue(this.state);
  }
});

$.$defineNativeClass("HTMLProgressElement", {"": "value="});

$.$defineNativeClass("RangeException", {
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("HTMLScriptElement", {"": "src},type%"});

$.$defineNativeClass("HTMLSelectElement", {"": "length=,size=,type=,value="});

$.$defineNativeClass("ShadowRoot", {
  clone$1: function(receiver, deep) {
    return receiver.cloneNode(deep);
  }
});

$.$defineNativeClass("HTMLSourceElement", {"": "src},type%"});

$.$defineNativeClass("SpeechRecognitionError", {"": "error="});

$.$defineNativeClass("Storage", {
  containsKey$1: function(receiver, key) {
    return this.$$dom_getItem$1(receiver, key) != null;
  },
  $index: function(receiver, key) {
    return this.$$dom_getItem$1(receiver, key);
  },
  $indexSet: function(receiver, key, value) {
    this.$$dom_setItem$2(receiver, key, value);
  },
  forEach$1: function(receiver, f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = this.$$dom_key$1(receiver, i);
      if (key == null)
        return;
      f.call$2(key, this.$$dom_getItem$1(receiver, key));
    }
  },
  get$keys: function(receiver) {
    var keys = [];
    this.forEach$1(receiver, new $.Storage_keys_anon(keys));
    return keys;
  },
  get$values: function(receiver) {
    var values = [];
    this.forEach$1(receiver, new $.Storage_values_anon(values));
    return values;
  },
  get$length: function(receiver) {
    return this.length;
  },
  $$dom_getItem$1: function(receiver, key) {
    return receiver.getItem(key);
  },
  $$dom_key$1: function(receiver, index) {
    return receiver.key(index);
  },
  $$dom_setItem$2: function(receiver, key, data) {
    return receiver.setItem(key,data);
  },
  $isMap: function() {
    return true;
  },
  $asMap: function() {
    return function () { return [$.String, $.String]; };
  }
});

$.$defineNativeClass("HTMLStyleElement", {"": "type%"});

$.$defineNativeClass("HTMLTextAreaElement", {"": "type=,value="});

$.$defineNativeClass("TextMetrics", {"": "width="});

$.$defineNativeClass("TextTrack", {
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("TextTrackList", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.TextTrack]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.TextTrack]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("TimeRanges", {"": "length=",
  start$1: function(receiver, index) {
    return receiver.start(index);
  }
});

$.$defineNativeClass("TouchEvent", {"": "touches="});

$.$defineNativeClass("TouchList", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Touch]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Touch]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLTrackElement", {"": "src}"});

$.$defineNativeClass("Uint16Array", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint32Array", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint8Array", {
  get$length: function(receiver) {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$length")) {
      return receiver.length;
    } else
      return Object.prototype.get$length.call(this, receiver);
  },
  $index: function(receiver, index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$index")) {
      return receiver[index];
    } else
      return Object.prototype.$index.call(this, receiver, index);
  },
  $indexSet: function(receiver, index, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$indexSet")) {
      receiver[index] = value;
    } else
      return Object.prototype.$indexSet.call(this, receiver, index, value);
  },
  get$iterator: function(receiver) {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$iterator")) {
      return $.FixedSizeListIterator$(receiver);
    } else
      return Object.prototype.get$iterator.call(this, receiver);
  },
  forEach$1: function(receiver, f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("forEach$1")) {
      var t1;
      for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
        f.call$1(t1.get$current());
      return;
    } else
      return Object.prototype.forEach$1.call(this, receiver, f);
  },
  toList$1$growable: function(receiver, growable) {
    if (Object.getPrototypeOf(this).hasOwnProperty("toList$1$growable")) {
      return $.List_List$from(receiver, growable);
    } else
      return Object.prototype.toList$1$growable.call(this, receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("add$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.add$1.call(this, receiver, value);
  },
  addAll$1: function(receiver, iterable) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addAll$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addAll$1.call(this, receiver, iterable);
  },
  removeLast$0: function(receiver) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeLast$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeLast$0.call(this, receiver);
  },
  sublist$2: function(receiver, start, end) {
    if (Object.getPrototypeOf(this).hasOwnProperty("sublist$2")) {
      if (end == null)
        end = this.get$length(receiver);
      return $.Lists_getRange(receiver, start, end, []);
    } else
      return Object.prototype.sublist$2.call(this, receiver, start, end);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint8ClampedArray", {
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLVideoElement", {"": "height%,width%"});

$.$defineNativeClass("DOMWindow", {
  requestAnimationFrame$1: function(receiver, callback) {
    this._ensureRequestAnimationFrame$0(receiver);
    return this._requestAnimationFrame$1(receiver, callback);
  },
  _requestAnimationFrame$1: function(receiver, callback) {
    return receiver.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function(receiver) {
    if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(receiver);
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("XPathException", {
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("ClientRect", {"": "bottom=,height=,left=,right=,top=,width=",
  toString$0: function(receiver) {
    return "(" + $.S(this.left) + ", " + $.S(this.top) + ", " + $.S(this.width) + ", " + $.S(this.height) + ")";
  },
  $eq: function(receiver, other) {
    var t1, t2, t3;
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && other.$isRect()))
      return false;
    t1 = this.left;
    t2 = $.getInterceptor$x(other);
    t3 = t2.get$left(other);
    if (t1 == null ? t3 == null : t1 === t3) {
      t1 = this.top;
      t3 = t2.get$top(other);
      if (t1 == null ? t3 == null : t1 === t3) {
        t1 = this.width;
        t3 = t2.get$width(other);
        if (t1 == null ? t3 == null : t1 === t3) {
          t1 = this.height;
          t2 = t2.get$height(other);
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
      } else
        t1 = false;
    } else
      t1 = false;
    return t1;
  },
  round$0: function(receiver) {
    return $.Rect$($.round$0$nx(this.left), $.round$0$nx(this.top), $.round$0$nx(this.width), $.round$0$nx(this.height));
  },
  $isRect: function() {
    return true;
  },
  $asRect: function() {
    return null;
  }
});

$.$defineNativeClass("NamedNodeMap", {
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  sublist$2: function(receiver, start, end) {
    if (end == null)
      end = this.get$length(receiver);
    return $.Lists_getRange(receiver, start, end, []);
  },
  sublist$1: function($receiver, start) {
    return this.sublist$2($receiver, start, null);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("SVGFEBlendElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEColorMatrixElement", {"": "type=,height=,width=,x=,y="});

$.$defineNativeClass("SVGFEComponentTransferElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFECompositeElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEConvolveMatrixElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEDiffuseLightingElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEDisplacementMapElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEFloodElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEGaussianBlurElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEImageElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEMergeElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEMorphologyElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEOffsetElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFEPointLightElement", {"": "x=,y="});

$.$defineNativeClass("SVGFESpecularLightingElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFESpotLightElement", {"": "x=,y="});

$.$defineNativeClass("SVGFETileElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGFETurbulenceElement", {"": "type=,height=,width=,x=,y="});

$.$defineNativeClass("SVGFilterElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGForeignObjectElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGImageElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGMaskElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGPatternElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGRectElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGScriptElement", {"": "type%"});

$.$defineNativeClass("SVGStyleElement", {"": "type%"});

$.$defineNativeClass("SVGElement", {
  get$classes: function(receiver) {
    if (this._cssClassSet == null)
      this._cssClassSet = $._AttributeClassSet$(receiver);
    return this._cssClassSet;
  },
  click$0: function(receiver) {
    throw $.$$throw($.UnsupportedError$("Cannot invoke click SVG."));
  },
  get$click: function(receiver) {
    return new $.BoundClosure$i0(this, "click$0", receiver);
  },
  get$id: function(receiver) {
    return receiver.id;
  },
  set$id: function(receiver, value) {
    receiver.id = value;
  }
});

$.$defineNativeClass("SVGException", {
  toString$0: function(receiver) {
    return receiver.toString();
  }
});

$.$defineNativeClass("SVGSVGElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGTextPositioningElement", {"": "x=,y="});

$.$defineNativeClass("SVGUseElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGComponentTransferFunctionElement", {"": "type="});

$.$defineNativeClass("SVGCursorElement", {"": "x=,y="});

$.$defineNativeClass("SVGFEDropShadowElement", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGGlyphRefElement", {"": "x%,y="});

// 108 dynamic classes.
// 254 classes
// 24 !leaf
(function() {
  var v0_TextPositioningElement = "SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement|SVGTextPositioningElement", v1__SVGComponentTransferFunctionElement = "SVGComponentTransferFunctionElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement", v2_MediaElement = "HTMLAudioElement|HTMLMediaElement|HTMLVideoElement", v3_SvgElement = [v0_TextPositioningElement, v1__SVGComponentTransferFunctionElement, "SVGAElement|SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimationElement|SVGCircleElement|SVGClipPathElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFESpotLightElement|SVGFETileElement|SVGFETurbulenceElement|SVGFilterElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGHKernElement|SVGImageElement|SVGLineElement|SVGLinearGradientElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGPathElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRadialGradientElement|SVGRectElement|SVGSVGElement|SVGScriptElement|SVGSetElement|SVGStopElement|SVGStyleElement|SVGStyledElement|SVGSwitchElement|SVGSymbolElement|SVGTextContentElement|SVGTextPathElement|SVGTitleElement|SVGUseElement|SVGVKernElement|SVGViewElement"].join("|"), v4_MouseEvent = "MouseEvent|WheelEvent", v5_Element = [v2_MediaElement, v3_SvgElement, "Element|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement"].join("|"), v6_CharacterData = "CDATASection|CharacterData|Comment|Text", v7_Document = "Document|HTMLDocument|SVGDocument", v8_Node = [v5_Element, v6_CharacterData, v7_Document, "Attr|DocumentFragment|DocumentType|EntityReference|Node|Notation|ProcessingInstruction|ShadowRoot"].join("|"), v9_MediaStream = "LocalMediaStream|MediaStream";
  $.dynamicSetMetadata([["Blob", "Blob|File"], ["CharacterData", v6_CharacterData], ["Document", v7_Document], ["HTMLMediaElement", v2_MediaElement], ["SVGTextPositioningElement", v0_TextPositioningElement], ["SVGComponentTransferFunctionElement", v1__SVGComponentTransferFunctionElement], ["SVGElement", v3_SvgElement], ["Element", v5_Element], ["MouseEvent", v4_MouseEvent], ["Event", [v4_MouseEvent, "AudioProcessingEvent|BeforeLoadEvent|CloseEvent|CompositionEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|Event|FocusEvent|HashChangeEvent|IDBVersionChangeEvent|KeyboardEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|ProgressEvent|RTCDTMFToneChangeEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SVGZoomEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|TextEvent|TouchEvent|TrackEvent|TransitionEvent|UIEvent|WebGLContextEvent|WebKitAnimationEvent|WebKitTransitionEvent|XMLHttpRequestProgressEvent"].join("|")], ["Node", v8_Node], ["MediaStream", v9_MediaStream], ["EventTarget", [v8_Node, v9_MediaStream, "DOMWindow|EventTarget|MediaController|TextTrack|TextTrackList"].join("|")], ["HTMLCollection", "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"], ["NodeList", "NodeList|RadioNodeList"], ["Uint8Array", "Uint8Array|Uint8ClampedArray"]]);
})();

$.main.call$0 = $.main;
// BEGIN invoke [main].
if (typeof document !== "undefined" && document.readyState !== "complete") {
  document.addEventListener("readystatechange", function () {
    if (document.readyState == "complete") {
      if (typeof dartMainRunner === "function") {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(field, prototype) {
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        prototype["get$" + accessorName] = new Function(args, body);
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        prototype["set$" + accessorName] = new Function(args, body);
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(cls, fields, prototype) {
    var constructor;
    if (typeof fields == "function") {
      constructor = fields;
    } else {
      var str = "function " + cls + "(";
      var body = "";
      for (var i = 0; i < fields.length; i++) {
        if (i != 0)
          str += ", ";
        var field = fields[i];
        field = generateAccessor(field, prototype);
        str += field;
        body += "this." + field + " = " + field + ";\n";
      }
      str += ") {" + body + "}\nreturn " + cls;
      constructor = new Function(str)();
    }
    constructor.prototype = prototype;
    constructor.builtin$cls = cls;
    return constructor;
  }
  var supportsProto = false;
  var tmp = defineClass("c", ["f?"], {}).prototype;
  if (tmp.__proto__) {
    tmp.__proto__ = {};
    if (typeof tmp.get$f != "undefined")
      supportsProto = true;
  }
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        var fields = desc[""], supr;
        if (typeof fields == "string") {
          var s = fields.split(";");
          supr = s[0];
          fields = s[1] == "" ? [] : s[1].split(",");
        } else {
          supr = desc.super;
        }
        isolateProperties[cls] = defineClass(cls, fields, desc);
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    var finishedClasses = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if ((!superclass || typeof superclass) != "string")
        return;
      finishClass(superclass);
      var constructor = isolateProperties[cls];
      var superConstructor = isolateProperties[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = constructor.prototype;
      if (supportsProto) {
        prototype.__proto__ = superConstructor.prototype;
        prototype.constructor = constructor;
      } else {
        function tmp() {
        }
        tmp.prototype = superConstructor.prototype;
        var newPrototype = new tmp();
        constructor.prototype = newPrototype;
        newPrototype.constructor = constructor;
        for (var member in prototype) {
          if (!member)
            continue;
          if (hasOwnProperty.call(prototype, member)) {
            newPrototype[member] = prototype[member];
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var getter = new Function("{ return $." + fieldName + ";}");
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            $.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = getter;
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    isolateProperties.$currentScript = typeof document == "object" ? document.currentScript || document.scripts[document.scripts.length - 1] : null;
    var isolatePrototype = oldIsolate.prototype;
    var str = "{\n";
    str += "var properties = Isolate.$isolateProperties;\n";
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var staticName in isolateProperties) {
      if (hasOwnProperty.call(isolateProperties, staticName)) {
        str += "this." + staticName + "= properties." + staticName + ";\n";
      }
    }
    str += "}\n";
    var newIsolate = new Function(str);
    newIsolate.prototype = isolatePrototype;
    isolatePrototype.constructor = newIsolate;
    newIsolate.$isolateProperties = isolateProperties;
    newIsolate.$finishClasses = oldIsolate.$finishClasses;
    return newIsolate;
  };
}
//@ sourceMappingURL=galaga.dart.js.map
