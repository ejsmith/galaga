// Generated by dart2js, the Dart to JavaScript compiler version: 0.5.20.3_r24216.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $ = Isolate.$isolateProperties;
var $$ = {};

// Native classes
$$._HTMLElement = {"": "Element;"};

$$.AnchorElement = {"": "_HTMLElement;type=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.AnimationEvent = {"": "Event;"};

$$.AreaElement = {"": "_HTMLElement;"};

$$.AudioElement = {"": "MediaElement;"};

$$.AutocompleteErrorEvent = {"": "Event;"};

$$.BRElement = {"": "_HTMLElement;"};

$$.BaseElement = {"": "_HTMLElement;"};

$$.BeforeLoadEvent = {"": "Event;"};

$$.Blob = {"": "Interceptor;size=,type="};

$$.BodyElement = {"": "_HTMLElement;"};

$$.ButtonElement = {"": "_HTMLElement;type="};

$$.CDataSection = {"": "Text;"};

$$.CanvasElement = {"": "_HTMLElement;height%,width%",
  get$context2d: function(receiver) {
    return receiver.getContext("2d");
  }
};

$$.CanvasGradient = {"": "Interceptor;"};

$$.CanvasPattern = {"": "Interceptor;"};

$$.CanvasRenderingContext = {"": "Interceptor;"};

$$.CanvasRenderingContext2D = {"": "CanvasRenderingContext;font=",
  fill$1: function(receiver, winding) {
    return receiver.fill(winding);
  },
  get$fill: function(_receiver) {
    return new $.Bound_fill_CanvasRenderingContext2D(this, "fill$1", _receiver);
  },
  rect$4: function(receiver, x, y, width, height) {
    return receiver.rect(x, y, width, height);
  },
  get$rect: function(_receiver) {
    return new $.BoundClosure$i4(this, "rect$4", _receiver);
  }
};

$$.CharacterData = {"": "Node;length="};

$$.CloseEvent = {"": "Event;"};

$$.Comment = {"": "CharacterData;"};

$$.CompositionEvent = {"": "UIEvent;"};

$$.ContentElement = {"": "_HTMLElement;"};

$$.CssFontFaceLoadEvent = {"": "Event;"};

$$.CustomElementConstructor = {"": "Interceptor;"};

$$.CustomEvent = {"": "Event;"};

$$.DListElement = {"": "_HTMLElement;"};

$$.DataListElement = {"": "_HTMLElement;"};

$$.DetailsElement = {"": "_HTMLElement;"};

$$.DeviceMotionEvent = {"": "Event;"};

$$.DeviceOrientationEvent = {"": "Event;"};

$$.DialogElement = {"": "_HTMLElement;"};

$$.DivElement = {"": "_HTMLElement;"};

$$.Document = {"": "Node;",
  register$2: function(receiver, $name, options) {
    return receiver.webkitRegister($name, $.convertDartToNative_Dictionary(options));
    return receiver.webkitRegister($name);
  }
};

$$.DocumentFragment = {"": "Node;"};

$$.DocumentType = {"": "Node;"};

$$.DomError = {"": "Interceptor;"};

$$.DomException = {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.Element = {"": "Node;id=",
  toString$0: function(receiver) {
    return receiver.localName;
  },
  click$0: function(receiver) {
    return receiver.click();
  },
  get$click: function(_receiver) {
    return new $.BoundClosure$i0(this, "click$0", _receiver);
  }
};

$$.EmbedElement = {"": "_HTMLElement;height%,src},type=,width%"};

$$.ErrorEvent = {"": "Event;"};

$$.Event = {"": "Interceptor;type=",
  preventDefault$0: function(receiver) {
    return receiver.preventDefault();
  }
};

$$.EventException = {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.EventTarget = {"": "Interceptor;"};

$$.FieldSetElement = {"": "_HTMLElement;type="};

$$.File = {"": "Blob;"};

$$.FileError = {"": "Interceptor;"};

$$.FileException = {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.FocusEvent = {"": "UIEvent;"};

$$.FormElement = {"": "_HTMLElement;length=",
  reset$0: function(receiver) {
    return receiver.reset();
  }
};

$$.HRElement = {"": "_HTMLElement;"};

$$.HashChangeEvent = {"": "Event;"};

$$.HeadElement = {"": "_HTMLElement;"};

$$.HeadingElement = {"": "_HTMLElement;"};

$$.HtmlDocument = {"": "Document;"};

$$.HtmlElement = {"": "_HTMLElement;"};

$$.HttpRequestProgressEvent = {"": "ProgressEvent;"};

$$.IFrameElement = {"": "_HTMLElement;height%,src},width%"};

$$.ImageElement = {"": "_HTMLElement;height%,src},width%,x=,y="};

$$.InputElement = {"": "_HTMLElement;height%,size=,src},type=,width%"};

$$.KeyboardEvent = {"": "UIEvent;altKey=,ctrlKey=,shiftKey=",
  get$keyCode: function(receiver) {
    return receiver.keyCode;
  }
};

$$.KeygenElement = {"": "_HTMLElement;type="};

$$.LIElement = {"": "_HTMLElement;type="};

$$.LabelElement = {"": "_HTMLElement;"};

$$.LegendElement = {"": "_HTMLElement;"};

$$.LinkElement = {"": "_HTMLElement;type="};

$$.MapElement = {"": "_HTMLElement;"};

$$.MediaElement = {"": "_HTMLElement;src}"};

$$.MediaError = {"": "Interceptor;"};

$$.MediaKeyError = {"": "Interceptor;"};

$$.MediaKeyEvent = {"": "Event;"};

$$.MediaKeyMessageEvent = {"": "Event;"};

$$.MediaKeyNeededEvent = {"": "Event;"};

$$.MediaStream = {"": "EventTarget;id=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.MediaStreamEvent = {"": "Event;"};

$$.MediaStreamTrackEvent = {"": "Event;"};

$$.MenuElement = {"": "_HTMLElement;"};

$$.MessageEvent = {"": "Event;"};

$$.MetaElement = {"": "_HTMLElement;"};

$$.MeterElement = {"": "_HTMLElement;"};

$$.MidiConnectionEvent = {"": "Event;"};

$$.MidiMessageEvent = {"": "Event;"};

$$.ModElement = {"": "_HTMLElement;"};

$$.MouseEvent = {"": "UIEvent;altKey=,ctrlKey=,shiftKey=",
  get$clientX: function(receiver) {
    return new $.Point(receiver.clientX, receiver.clientY).x;
  },
  get$clientY: function(receiver) {
    return new $.Point(receiver.clientX, receiver.clientY).y;
  }
};

$$.MutationEvent = {"": "Event;"};

$$.Navigator = {"": "Interceptor;"};

$$.NavigatorUserMediaError = {"": "Interceptor;"};

$$.Node = {"": "EventTarget;text:textContent=",
  toString$0: function(receiver) {
    var t1 = receiver.nodeValue;
    return t1 == null ? $.Interceptor.prototype.toString$0.call(this, receiver) : t1;
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.NodeList = {"": "Interceptor_ListMixin_ImmutableListMixin;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function() { return [$.Node]; },
  $isIterable: true,
  $asIterable: function() { return [$.Node]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Notation = {"": "Node;"};

$$.OListElement = {"": "_HTMLElement;type=",
  start$0: function($receiver) {
    return this.start.call$0();
  },
  start$1: function($receiver, arg0) {
    return this.start.call$1(arg0);
  }
};

$$.ObjectElement = {"": "_HTMLElement;height%,type=,width%"};

$$.OptGroupElement = {"": "_HTMLElement;"};

$$.OptionElement = {"": "_HTMLElement;"};

$$.OutputElement = {"": "_HTMLElement;type="};

$$.OverflowEvent = {"": "Event;"};

$$.PageTransitionEvent = {"": "Event;"};

$$.ParagraphElement = {"": "_HTMLElement;"};

$$.ParamElement = {"": "_HTMLElement;"};

$$.PopStateEvent = {"": "Event;",
  get$state: function(receiver) {
    return $.convertNativeToDart_AcceptStructuredClone(receiver.state, true);
  }
};

$$.PositionError = {"": "Interceptor;"};

$$.PreElement = {"": "_HTMLElement;"};

$$.ProcessingInstruction = {"": "Node;"};

$$.ProgressElement = {"": "_HTMLElement;"};

$$.ProgressEvent = {"": "Event;"};

$$.QuoteElement = {"": "_HTMLElement;"};

$$.ResourceProgressEvent = {"": "ProgressEvent;"};

$$.RtcDataChannelEvent = {"": "Event;"};

$$.RtcDtmfToneChangeEvent = {"": "Event;"};

$$.RtcIceCandidateEvent = {"": "Event;"};

$$.ScriptElement = {"": "_HTMLElement;src},type="};

$$.SecurityPolicyViolationEvent = {"": "Event;"};

$$.SelectElement = {"": "_HTMLElement;length=,size=,type="};

$$.ShadowElement = {"": "_HTMLElement;"};

$$.ShadowRoot = {"": "DocumentFragment;"};

$$.SourceElement = {"": "_HTMLElement;src},type="};

$$.SpanElement = {"": "_HTMLElement;"};

$$.SpeechInputEvent = {"": "Event;"};

$$.SpeechRecognitionError = {"": "Event;"};

$$.SpeechRecognitionEvent = {"": "Event;"};

$$.SpeechSynthesisEvent = {"": "Event;"};

$$.Storage = {"": "Interceptor;",
  $index: function(receiver, key) {
    return receiver.getItem(key);
  },
  $indexSet: function(receiver, key, value) {
    receiver.setItem(key, value);
  },
  forEach$1: function(receiver, f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = receiver.key(i);
      if (key == null)
        return;
      f.call$2(key, receiver.getItem(key));
    }
  },
  get$keys: function(receiver) {
    var keys = [];
    this.forEach$1(receiver, new $.Storage_keys_closure(keys));
    return keys;
  },
  get$values: function(receiver) {
    var values = [];
    this.forEach$1(receiver, new $.Storage_values_closure(values));
    return values;
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  get$isEmpty: function(receiver) {
    return receiver.key(0) == null;
  },
  $isMap: true,
  $asMap: function() { return [$.JSString, $.JSString]; }
};

$$.StorageEvent = {"": "Event;"};

$$.StyleElement = {"": "_HTMLElement;type="};

$$.TableCaptionElement = {"": "_HTMLElement;"};

$$.TableCellElement = {"": "_HTMLElement;"};

$$.TableColElement = {"": "_HTMLElement;"};

$$.TableElement = {"": "_HTMLElement;"};

$$.TableRowElement = {"": "_HTMLElement;"};

$$.TableSectionElement = {"": "_HTMLElement;"};

$$.TemplateElement = {"": "_HTMLElement;"};

$$.Text = {"": "CharacterData;"};

$$.TextAreaElement = {"": "_HTMLElement;type="};

$$.TextEvent = {"": "UIEvent;"};

$$.TextMetrics = {"": "Interceptor;width="};

$$.TitleElement = {"": "_HTMLElement;"};

$$.Touch = {"": "Interceptor;"};

$$.TouchEvent = {"": "UIEvent;altKey=,ctrlKey=,shiftKey=,touches="};

$$.TouchList = {"": "Interceptor_ListMixin_ImmutableListMixin0;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function() { return [$.Touch]; },
  $isIterable: true,
  $asIterable: function() { return [$.Touch]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.TrackElement = {"": "_HTMLElement;src}"};

$$.TrackEvent = {"": "Event;"};

$$.TransitionEvent = {"": "Event;"};

$$.UIEvent = {"": "Event;"};

$$.UListElement = {"": "_HTMLElement;"};

$$.UnknownElement = {"": "_HTMLElement;"};

$$.VideoElement = {"": "MediaElement;height%,width%"};

$$.WheelEvent = {"": "MouseEvent;"};

$$.Window = {"": "EventTarget;",
  _requestAnimationFrame$1: function(receiver, callback) {
    return receiver.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function(receiver) {
    if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(receiver);
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.XPathException = {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$._Attr = {"": "Node;"};

$$._ClientRect = {"": "Interceptor;bottom=,height=,left=,right=,top=,width=",
  toString$0: function(receiver) {
    return "(" + $.S(receiver.left) + ", " + $.S(receiver.top) + ", " + $.S(receiver.width) + ", " + $.S(receiver.height) + ")";
  },
  $eq: function(receiver, other) {
    var t1, t2, t3;
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isRect)
      return false;
    t1 = receiver.left;
    t2 = $.getInterceptor$x(other);
    t3 = t2.get$left(other);
    if (t1 == null ? t3 == null : t1 === t3) {
      t1 = receiver.top;
      t3 = t2.get$top(other);
      if (t1 == null ? t3 == null : t1 === t3) {
        t1 = receiver.width;
        t3 = t2.get$width(other);
        if (t1 == null ? t3 == null : t1 === t3) {
          t1 = receiver.height;
          t2 = t2.get$height(other);
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
      } else
        t1 = false;
    } else
      t1 = false;
    return t1;
  },
  ceil$0: function(receiver) {
    return new $.Rect($.ceil$0$nx(receiver.left), $.ceil$0$nx(receiver.top), $.ceil$0$nx(receiver.width), $.ceil$0$nx(receiver.height));
  },
  round$0: function(receiver) {
    return new $.Rect($.round$0$nx(receiver.left), $.round$0$nx(receiver.top), $.round$0$nx(receiver.width), $.round$0$nx(receiver.height));
  },
  $isRect: true,
  $asRect: null
};

$$._Entity = {"": "Node;"};

$$._NamedNodeMap = {"": "Interceptor_ListMixin_ImmutableListMixin1;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function() { return [$.Node]; },
  $isIterable: true,
  $asIterable: function() { return [$.Node]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.VersionChangeEvent = {"": "Event;"};

$$.AElement = {"": "StyledElement;"};

$$.AltGlyphElement = {"": "TextPositioningElement;"};

$$.AnimateElement = {"": "AnimationElement;"};

$$.AnimateMotionElement = {"": "AnimationElement;"};

$$.AnimateTransformElement = {"": "AnimationElement;"};

$$.AnimatedEnumeration = {"": "Interceptor;"};

$$.AnimatedLength = {"": "Interceptor;"};

$$.AnimatedLengthList = {"": "Interceptor;"};

$$.AnimatedNumber = {"": "Interceptor;"};

$$.AnimatedNumberList = {"": "Interceptor;"};

$$.AnimationElement = {"": "SvgElement;"};

$$.CircleElement = {"": "StyledElement;"};

$$.ClipPathElement = {"": "StyledElement;"};

$$.DefsElement = {"": "StyledElement;"};

$$.DescElement = {"": "StyledElement;"};

$$.EllipseElement = {"": "StyledElement;"};

$$.FEBlendElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEColorMatrixElement = {"": "StyledElement;type=,height=,width=,x=,y="};

$$.FEComponentTransferElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FECompositeElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEConvolveMatrixElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEDiffuseLightingElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEDisplacementMapElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEDistantLightElement = {"": "SvgElement;"};

$$.FEFloodElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEFuncAElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEFuncBElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEFuncGElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEFuncRElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEGaussianBlurElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEImageElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEMergeElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEMergeNodeElement = {"": "SvgElement;"};

$$.FEMorphologyElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEOffsetElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEPointLightElement = {"": "SvgElement;x=,y="};

$$.FESpecularLightingElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FESpotLightElement = {"": "SvgElement;x=,y="};

$$.FETileElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FETurbulenceElement = {"": "StyledElement;type=,height=,width=,x=,y="};

$$.FilterElement = {"": "StyledElement;height=,width=,x=,y="};

$$.ForeignObjectElement = {"": "StyledElement;height=,width=,x=,y="};

$$.GElement = {"": "StyledElement;"};

$$.ImageElement0 = {"": "StyledElement;height=,width=,x=,y="};

$$.LineElement = {"": "StyledElement;"};

$$.LinearGradientElement = {"": "_GradientElement;"};

$$.MarkerElement = {"": "StyledElement;"};

$$.MaskElement = {"": "StyledElement;height=,width=,x=,y="};

$$.MetadataElement = {"": "SvgElement;"};

$$.PathElement = {"": "StyledElement;"};

$$.PatternElement = {"": "StyledElement;height=,width=,x=,y="};

$$.PolygonElement = {"": "StyledElement;"};

$$.PolylineElement = {"": "StyledElement;"};

$$.RadialGradientElement = {"": "_GradientElement;"};

$$.RectElement = {"": "StyledElement;height=,width=,x=,y="};

$$.ScriptElement0 = {"": "SvgElement;type="};

$$.SetElement = {"": "AnimationElement;"};

$$.StopElement = {"": "StyledElement;"};

$$.StyleElement0 = {"": "SvgElement;type="};

$$.StyledElement = {"": "SvgElement;"};

$$.SvgDocument = {"": "Document;"};

$$.SvgElement = {"": "Element;",
  click$0: function(receiver) {
    throw $.wrapException(new $.UnsupportedError("Cannot invoke click SVG."));
  },
  get$click: function(_receiver) {
    return new $.BoundClosure$i0(this, "click$0", _receiver);
  },
  get$id: function(receiver) {
    return receiver.id;
  }
};

$$.SvgException = {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.SvgSvgElement = {"": "StyledElement;height=,width=,x=,y="};

$$.SwitchElement = {"": "StyledElement;"};

$$.SymbolElement = {"": "StyledElement;"};

$$.TSpanElement = {"": "TextPositioningElement;"};

$$.TextContentElement = {"": "StyledElement;"};

$$.TextElement = {"": "TextPositioningElement;"};

$$.TextPathElement = {"": "TextContentElement;"};

$$.TextPositioningElement = {"": "TextContentElement;x=,y="};

$$.TitleElement0 = {"": "StyledElement;"};

$$.UseElement = {"": "StyledElement;height=,width=,x=,y="};

$$.ViewElement = {"": "SvgElement;"};

$$.ZoomEvent = {"": "UIEvent;"};

$$._GradientElement = {"": "StyledElement;"};

$$._SVGComponentTransferFunctionElement = {"": "SvgElement;"};

$$.AudioProcessingEvent = {"": "Event;"};

$$.OfflineAudioCompletionEvent = {"": "Event;"};

$$.ContextEvent = {"": "Event;"};

$$.SqlError = {"": "Interceptor;"};

$$.SqlException = {"": "Interceptor;"};

$$.ByteBuffer = {"": "Interceptor;"};

$$.TypedData = {"": "Interceptor;"};

$$.ByteData = {"": "TypedData;"};

$$.Float32List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return new $.ListIterator(receiver, receiver.length, 0, null);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException(new $.UnsupportedError("Cannot remove from immutable List."));
  },
  toString$0: function(receiver) {
    var buffer = new $.StringBuffer("");
    buffer._contents = "[";
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSDouble]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSDouble]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Float64List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return new $.ListIterator(receiver, receiver.length, 0, null);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException(new $.UnsupportedError("Cannot remove from immutable List."));
  },
  toString$0: function(receiver) {
    var buffer = new $.StringBuffer("");
    buffer._contents = "[";
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSDouble]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSDouble]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Int16List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return new $.ListIterator(receiver, receiver.length, 0, null);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException(new $.UnsupportedError("Cannot remove from immutable List."));
  },
  toString$0: function(receiver) {
    var buffer = new $.StringBuffer("");
    buffer._contents = "[";
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Int32List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return new $.ListIterator(receiver, receiver.length, 0, null);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException(new $.UnsupportedError("Cannot remove from immutable List."));
  },
  toString$0: function(receiver) {
    var buffer = new $.StringBuffer("");
    buffer._contents = "[";
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Int8List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return new $.ListIterator(receiver, receiver.length, 0, null);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException(new $.UnsupportedError("Cannot remove from immutable List."));
  },
  toString$0: function(receiver) {
    var buffer = new $.StringBuffer("");
    buffer._contents = "[";
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Uint16List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return new $.ListIterator(receiver, receiver.length, 0, null);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException(new $.UnsupportedError("Cannot remove from immutable List."));
  },
  toString$0: function(receiver) {
    var buffer = new $.StringBuffer("");
    buffer._contents = "[";
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Uint32List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return new $.ListIterator(receiver, receiver.length, 0, null);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException(new $.UnsupportedError("Cannot remove from immutable List."));
  },
  toString$0: function(receiver) {
    var buffer = new $.StringBuffer("");
    buffer._contents = "[";
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Uint8ClampedList = {"": "Uint8List;",
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout1(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout1: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout1(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout1: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return new $.ListIterator(receiver, receiver.length, 0, null);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException(new $.UnsupportedError("Cannot remove from immutable List."));
  },
  toString$0: function(receiver) {
    var buffer = new $.StringBuffer("");
    buffer._contents = "[";
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Uint8List = {"": "TypedData;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      if (index < 0 || index >= t1)
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1, t2;
    t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1)) {
      t2 = $.getInterceptor$n(index);
      if (t2.$lt(index, 0) || t2.$ge(index, t1))
        $.throwExpression(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
      else
        $.throwExpression(new $.ArgumentError("Invalid list index " + $.S(index)));
    }
    receiver[index] = value;
  },
  get$iterator: function(receiver) {
    return new $.ListIterator(receiver, receiver.length, 0, null);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  add$1: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException(new $.UnsupportedError("Cannot remove from immutable List."));
  },
  toString$0: function(receiver) {
    var buffer = new $.StringBuffer("");
    buffer._contents = "[";
    buffer.writeAll$2(receiver, ", ");
    buffer._contents = buffer._contents + "]";
    return buffer._contents;
  },
  $isList: true,
  $asList: function() { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function() { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

// Bound closures
$$.BoundClosure$1 = {"": "BoundClosure;_self,_target,_receiver",
  call$1: function(p0) {
    return this._self[this._target](p0);
  }
};

$$.BoundClosure$i1 = {"": "BoundClosure;_self,_target,_receiver",
  call$1: function(p0) {
    return this._self[this._target](this._receiver, p0);
  }
};

$$.Bound_addError__AsBroadcastStreamController = {"": "BoundClosure;_self,_target,_receiver",
  call$2: function(p0, p1) {
    return this._self[this._target](p0, p1);
  },
  call$1: function(error) {
    return this.call$2(error, null);
  }
};

$$.BoundClosure$i0 = {"": "BoundClosure;_self,_target,_receiver",
  call$0: function() {
    return this._self[this._target](this._receiver);
  }
};

$$.BoundClosure$0 = {"": "BoundClosure;_self,_target,_receiver",
  call$0: function() {
    return this._self[this._target]();
  }
};

$$.Bound_fill_CanvasRenderingContext2D = {"": "BoundClosure;_self,_target,_receiver",
  call$1: function(p0) {
    return this._self[this._target](this._receiver, p0);
  },
  call$0: function() {
    return this.call$1(null);
  }
};

$$.BoundClosure$i4 = {"": "BoundClosure;_self,_target,_receiver",
  call$4: function(p0, p1, p2, p3) {
    return this._self[this._target](this._receiver, p0, p1, p2, p3);
  }
};

$$.Closure$_processWorkerMessage = {"": "Closure;call$2,$name"};

$$.Closure$_throwFormatException = {"": "Closure;call$1,$name"};

$$.Closure$wrapException = {"": "Closure;call$1,$name"};

$$.Closure$toStringWrapper = {"": "Closure;call$0,$name"};

$$.Closure$invokeClosure = {"": "Closure;call$5,$name"};

$$.Closure$typeNameInChrome = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInSafari = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInOpera = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInFirefox = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInIE = {"": "Closure;call$1,$name"};

$$.Closure$constructorNameFallback = {"": "Closure;call$1,$name"};

$$.Closure$_asyncRunCallback = {"": "Closure;call$0,$name"};

$$.Closure$_nullDataHandler = {"": "Closure;call$1,$name"};

$$.Closure$_nullErrorHandler = {"": "Closure;call$1,$name"};

$$.Closure$_nullDoneHandler = {"": "Closure;call$0,$name"};

$$.Closure$main = {"": "Closure;call$0,$name"};

(function (reflectionData) {
  if (!init.libraries) init.libraries = [];
  if (!init.mangledNames) init.mangledNames = {};
  var libraries = init.libraries;
  var mangledNames = init.mangledNames;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var length = reflectionData.length;
  for (var i = 0; i < length; i++) {
    var data = reflectionData[i];
    var name = data[0];
    var uri = data[1];
    var metadata = data[2];
    var descriptor = data[3];
    var classes = [];
    var functions = [];
    for (var property in descriptor) {
      if (!hasOwnProperty.call(descriptor, property)) continue;
      var element = descriptor[property];
      if (property.substring(0, 1) == "@") {
        property = property.substring(1);
        $[property]["@"] = element;
      } else if (typeof element === "function") {
        $[property] = element;
        functions.push(property);
      } else {
        var newDesc = {};
        var previousProp;
        for (var prop in element) {
          if (!hasOwnProperty.call(element, prop)) continue;
          var firstChar = prop.substring(0, 1);
          if (firstChar == "+") {
            mangledNames[previousProp] = prop.substring(1);
          } else if (firstChar == "@" && prop != "@") {
            newDesc[prop.substring(1)]["@"] =element[prop];
          } else {
            newDesc[previousProp = prop] = element[prop];
          }
        }
        $$[property] = newDesc;
        classes.push(property);
      }
    }
    libraries.push([name, uri, classes, functions, metadata]);
  }
})([
["_interceptors", "dart:_interceptors", , {
Interceptor: {"": "Object;",
  $eq: function(receiver, other) {
    return receiver === other;
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  toString$0: function(receiver) {
    return "Instance of '" + $.Primitives_objectTypeName(receiver) + "'";
  }
},

JSBool: {"": "bool/Interceptor;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true
},

JSNull: {"": "Interceptor;",
  $eq: function(receiver, other) {
    return null == other;
  },
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  }
},

JSUnknown: {"": "Interceptor;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return 0;
  }
},

JSArray: {"": "List/Interceptor;",
  add$1: function(receiver, value) {
    if (!!receiver.fixed$length)
      $.throwExpression(new $.UnsupportedError("add"));
    receiver.push(value);
  },
  removeLast$0: function(receiver) {
    if (!!receiver.fixed$length)
      $.throwExpression(new $.UnsupportedError("removeLast"));
    if (receiver.length === 0)
      throw $.wrapException(new $.RangeError("value -1"));
    return receiver.pop();
  },
  remove$1: function(receiver, element) {
    var i;
    if (!!receiver.fixed$length)
      $.throwExpression(new $.UnsupportedError("remove"));
    for (i = 0; i < receiver.length; ++i)
      if ($.$eq(receiver[i], element)) {
        receiver.splice(i, 1);
        return true;
      }
    return false;
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    var result = new $.StringBuffer("");
    result._contents = "";
    $.ToString__emitValue(receiver, result, $.List_List($));
    return result._contents;
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$iterator: function(receiver) {
    return new $.ListIterator(receiver, receiver.length, 0, null);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException(new $.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException(new $.RangeError("value " + index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    if (!!receiver.immutable$list)
      $.throwExpression(new $.UnsupportedError("indexed set"));
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException(new $.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException(new $.RangeError("value " + index));
    receiver[index] = value;
  },
  $isList: true,
  $asList: null,
  $asIterable: null,
  $isList: true,
  $isIterable: true
},

JSMutableArray: {"": "JSArray;", $isJSMutableArray: true, $asJSArray: function() { return [null]; }, $asList: function() { return [null]; }, $asIterable: function() { return [null]; }},

JSFixedArray: {"": "JSMutableArray;"},

JSExtendableArray: {"": "JSMutableArray;", $isJSExtendableArray: true},

JSNumber: {"": "num/Interceptor;",
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  ceil$0: function(receiver) {
    var t1, truncated;
    t1 = Math.ceil(receiver);
    if (isNaN(t1))
      $.throwExpression(new $.UnsupportedError("NaN"));
    if (t1 == Infinity || t1 == -Infinity)
      $.throwExpression(new $.UnsupportedError("Infinity"));
    truncated = t1 < 0 ? Math.ceil(t1) : Math.floor(t1);
    return truncated == -0.0 ? 0 : truncated;
  },
  round$0: function(receiver) {
    var t1, truncated;
    t1 = this.roundToDouble$0(receiver);
    if (isNaN(t1))
      $.throwExpression(new $.UnsupportedError("NaN"));
    if (t1 == Infinity || t1 == -Infinity)
      $.throwExpression(new $.UnsupportedError("Infinity"));
    truncated = t1 < 0 ? Math.ceil(t1) : Math.floor(t1);
    return truncated == -0.0 ? 0 : truncated;
  },
  roundToDouble$0: function(receiver) {
    if (receiver < 0)
      return -Math.round(-receiver);
    else
      return Math.round(receiver);
  },
  toStringAsFixed$1: function(receiver, fractionDigits) {
    var result, t1;
    if (fractionDigits < 0 || fractionDigits > 20)
      throw $.wrapException(new $.RangeError(fractionDigits));
    result = receiver.toFixed(fractionDigits);
    t1 = receiver === 0;
    if (t1)
      t1 = t1 ? 1 / receiver < 0 : receiver < 0;
    else
      t1 = false;
    if (t1)
      return "-" + result;
    return result;
  },
  toString$0: function(receiver) {
    if (receiver === 0 && 1 / receiver < 0)
      return "-0.0";
    else
      return "" + receiver;
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $add: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver - other;
  },
  $mul: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver * other;
  },
  $tdiv: function(receiver, other) {
    var t1, truncated;
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    t1 = receiver / other;
    if (isNaN(t1))
      $.throwExpression(new $.UnsupportedError("NaN"));
    if (t1 == Infinity || t1 == -Infinity)
      $.throwExpression(new $.UnsupportedError("Infinity"));
    truncated = t1 < 0 ? Math.ceil(t1) : Math.floor(t1);
    return truncated == -0.0 ? 0 : truncated;
  },
  $and: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return (receiver & other) >>> 0;
  },
  $or: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return (receiver | other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver >= other;
  },
  $isnum: true
},

JSInt: {"": "int/JSNumber;", $isdouble: true, $isnum: true, $isint: true},

JSDouble: {"": "double/JSNumber;", $isdouble: true, $isnum: true},

JSString: {"": "String/Interceptor;",
  codeUnitAt$1: function(receiver, index) {
    if (index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    if (index >= receiver.length)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    return receiver.charCodeAt(index);
  },
  $add: function(receiver, other) {
    if (typeof other !== "string")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver + other;
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    if (endIndex == null)
      endIndex = receiver.length;
    if (typeof endIndex !== "number")
      $.throwExpression(new $.ArgumentError(endIndex));
    if (startIndex < 0)
      throw $.wrapException(new $.RangeError("value " + startIndex));
    if (typeof endIndex !== "number")
      throw $.iae(endIndex);
    if (startIndex > endIndex)
      throw $.wrapException(new $.RangeError("value " + startIndex));
    if (endIndex > receiver.length)
      throw $.wrapException(new $.RangeError("value " + $.S(endIndex)));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var t1, hash, i;
    for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
      hash = 536870911 & hash + receiver.charCodeAt(i);
      hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
      hash ^= hash >> 6;
    }
    hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash ^= hash >> 11;
    return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException(new $.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException(new $.RangeError("value " + index));
    return receiver[index];
  },
  $isString: true
},

getInterceptor: function(object) {
  return $.getInterceptor(object);
},

getDispatchProperty: function(object) {
  return object[$.dispatchPropertyName];
},

setDispatchProperty: function(object, value) {
  Object.defineProperty(object, $.dispatchPropertyName, {value: value, enumerable: false, writable: true, configurable: true});
},

makeDispatchRecord: function(interceptor, proto, extension, indexability) {
  return {i: interceptor, p: proto, e: extension, x: indexability};
},

getNativeInterceptor: function(object) {
  var record, proto, objectProto;
  record = $.getDispatchProperty(object);
  if (record != null) {
    proto = record.p;
    if (false === proto)
      return record.i;
    if (true === proto)
      return object;
    objectProto = Object.getPrototypeOf(object);
    if (proto === objectProto)
      return record.i;
    if (record.e === objectProto)
      return proto(object, record);
  }
  record = $.lookupDispatchRecord(object);
  if (record == null)
    return $.C_JSUnknown;
  $.setDispatchProperty(Object.getPrototypeOf(object), record);
  return $.getNativeInterceptor(object);
},

initializeDispatchProperty: function(setGetDispatchPropertyFn, rootProperty, jsObjectInterceptor) {
  var objectProto, i, property;
  if (typeof rootProperty !== "string")
    return $.initializeDispatchProperty$bailout(1, setGetDispatchPropertyFn, rootProperty, jsObjectInterceptor);
  objectProto = Object.prototype;
  for (i = 0; true; ++i) {
    if (i > 0)
      property = rootProperty + "_" + i;
    else
      property = rootProperty;
    if (typeof objectProto[property] === "undefined") {
      $.dispatchPropertyName = property;
      setGetDispatchPropertyFn(new Function("a", "return a." + property));
      $.setDispatchProperty(objectProto, $.makeDispatchRecord(jsObjectInterceptor, objectProto, null, null));
      return;
    }
  }
},

initializeDispatchProperty$bailout: function(state0, setGetDispatchPropertyFn, rootProperty, jsObjectInterceptor) {
  var objectProto, i, property;
  objectProto = Object.prototype;
  for (i = 0; true; ++i) {
    property = i > 0 ? rootProperty + "_" + i : rootProperty;
    if (typeof objectProto[property] === "undefined") {
      $.dispatchPropertyName = property;
      setGetDispatchPropertyFn(new Function("a", "return a." + property));
      $.setDispatchProperty(objectProto, $.makeDispatchRecord(jsObjectInterceptor, objectProto, null, null));
      return;
    }
  }
}}],
["_isolate_helper", "dart:_isolate_helper", , {
CloseToken: {"": "Object;", $isCloseToken: true},

JsIsolateSink: {"": "EventSink;_isClosed,_port<",
  add$1: function(_, message) {
    this._port.send$1(message);
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!$.getInterceptor(other).$isIsolateSink && $.$eq(this._port, other.get$_port());
  },
  get$hashCode: function(_) {
    return $.$add$ns($.get$hashCode$(this._port), 499);
  },
  $isJsIsolateSink: true,
  $asIsolateSink: null,
  $isIsolateSink: true
},

_Manager: {"": "Object;nextIsolateId,currentManagerId,nextManagerId,currentContext,rootContext,topEventLoop,fromCommandLine,isWorker,supportsWorkers,isolates,mainManager,managers,entry",
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    t2 = $.get$globalWorker();
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      if (t2 != null) {
        $.get$IsolateNatives_thisScript();
        t2 = true;
      } else
        t2 = false;
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _Manager$1: function(entry) {
    var $function;
    this._nativeDetectEnvironment$0();
    this.topEventLoop = new $._EventLoop($.ListQueue$(null), 0);
    this.isolates = new $.HashMap(0, null, null, null, null);
    this.managers = new $.HashMap(0, null, null, null, null);
    if (this.isWorker === true) {
      this.mainManager = new $._MainManagerStub();
      $function = function (e) { $.IsolateNatives__processWorkerMessage$closure.call$2(this.mainManager, e); };
      $.get$globalThis().onmessage = $function;
      $.get$globalThis().dartPrint = function (object) {};
    }
  }
},

_IsolateContext: {"": "Object;id>,ports,isolateStatics",
  eval$1: function(code) {
    var old, result;
    old = $globalState.currentContext;
    $globalState.currentContext = this;
    $ = this.isolateStatics;
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.currentContext = old;
      if (old != null)
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    var t1 = this.ports;
    return t1.$index(t1, portId);
  },
  register$2: function(_, portId, port) {
    var t1 = this.ports;
    if (t1.containsKey$1(t1, portId))
      throw $.wrapException(new $._ExceptionImplementation("Registry: ports must be registered only once."));
    t1 = this.ports;
    t1.$indexSet(t1, portId, port);
    t1 = $globalState.isolates;
    t1.$indexSet(t1, this.id, this);
  },
  unregister$1: function(portId) {
    var t1 = this.ports;
    t1.remove$1(t1, portId);
    if (this.ports._length === 0) {
      t1 = $globalState.isolates;
      t1.remove$1(t1, this.id);
    }
  }
},

_EventLoop: {"": "Object;events,activeTimerCount",
  dequeue$0: function() {
    var t1 = this.events;
    if (t1._head === t1._tail)
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if ($globalState.rootContext != null) {
      var t1 = $globalState.isolates;
      t1 = t1.containsKey$1(t1, $globalState.rootContext.id) && $globalState.fromCommandLine === true && $globalState.rootContext.ports._length === 0;
    } else
      t1 = false;
    if (t1)
      throw $.wrapException(new $._ExceptionImplementation("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event, t1, t2;
    $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      t1 = $globalState;
      if (t1.isWorker === true) {
        t2 = t1.isolates;
        t2.get$isEmpty;
        t2 = t2._length === 0 && t1.topEventLoop.activeTimerCount === 0;
      } else
        t2 = false;
      if (t2) {
        t1 = t1.mainManager;
        t2 = $._serializeMessage($.makeLiteralMap(["command", "close"]));
        t1.postMessage$1;
        self.postMessage(t2);
      }
      return false;
    }
    $event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if ($.get$globalWindow() != null)
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0();)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1, t2;
    if ($globalState.isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        t1 = $globalState.mainManager;
        t2 = $._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)]));
        t1.postMessage$1;
        self.postMessage(t2);
      }

  }
},

_EventLoop__runHelper_next: {"": "Closure;this_0",
  call$0: function() {
    if (!this.this_0.runIteration$0())
      return;
    $.get$_Zone__current().createTimer$2($.Duration_0, this);
  }
},

_IsolateEvent: {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
},

_MainManagerStub: {"": "Object;"},

IsolateNatives__processWorkerMessage_closure: {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    var t1 = $.ReceivePortImpl__nextFreeId;
    $.ReceivePortImpl__nextFreeId = $.$add$ns(t1, 1);
    t1 = new $.ReceivePortImpl(t1, null);
    $.register$2$x($._globalState().currentContext, t1._id, t1);
    $.lazyPort = t1;
    if ($.lazyPort == null)
      $.lazyPort = $.ReceivePortImpl$();
    t1 = $.lazyPort;
    t1.toSendPort$0;
    this.replyTo_1.send$2("spawned", new $._NativeJsSendPort(t1, $.get$id$x($globalState.currentContext)));
    this.entryPoint_0.call$0();
  }
},

_BaseSendPort: {"": "Object;_isolateId<",
  _checkReplyTo$1: function(replyTo) {
    if (replyTo != null && (typeof replyTo !== "object" || replyTo === null || !$.getInterceptor(replyTo).$is_NativeJsSendPort) && (typeof replyTo !== "object" || replyTo === null || !$.getInterceptor(replyTo).$is_WorkerSendPort) && true)
      throw $.wrapException(new $._ExceptionImplementation("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, futureImpl, t1, port;
    completer = new $._AsyncCompleter(new $._FutureImpl(0, $.get$_Zone__current().fork$0(), null), false);
    futureImpl = completer.future;
    t1 = futureImpl._zone;
    t1._openCallbacks = t1._openCallbacks + 1;
    t1 = $.ReceivePortImpl__nextFreeId;
    $.ReceivePortImpl__nextFreeId = $.$add$ns(t1, 1);
    port = new $.ReceivePortImpl(t1, null);
    $.register$2$x($globalState.currentContext, port._id, port);
    this.send$2(message, new $._NativeJsSendPort(port, $.get$id$x($globalState.currentContext)));
    port._liblib3$_callback = new $._BaseSendPort_call_closure(completer, port);
    return futureImpl;
  },
  $isSendPort: true
},

_BaseSendPort_call_closure: {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1, t2;
    t1 = this.port_1;
    t1._liblib3$_callback = null;
    $globalState.currentContext.unregister$1(t1._id);
    t1 = this.completer_0;
    if (typeof value === "object" && value !== null && !!$.getInterceptor(value).$isException)
      t1.completeError$1(value);
    else {
      if (t1._isComplete)
        $.throwExpression(new $.StateError("Future already completed"));
      t1._isComplete = true;
      t2 = t1.future._zone;
      t2._openCallbacks = t2._openCallbacks - 1;
      if (t2._isExecutingCallback !== true && t2._openCallbacks === 0 && t2._children.length === 0)
        ;
      t1._setFutureValue$1(value);
    }
  }
},

_NativeJsSendPort: {"": "_BaseSendPort;_receivePort<,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_closure(this, message, replyTo));
  },
  send$1: function(message) {
    return this.send$2(message, null);
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!$.getInterceptor(other).$is_NativeJsSendPort && $.$eq(this._receivePort, other._receivePort);
  },
  get$hashCode: function(_) {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
},

_NativeJsSendPort_send_closure: {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, t4, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    t4 = $globalState.isolates;
    isolate = t4.$index(t4, t2.get$_isolateId());
    if (isolate == null)
      return;
    if (t2.get$_receivePort().get$_liblib3$_callback() == null)
      return;
    shouldSerialize = $globalState.currentContext != null && !$.$eq($.get$id$x($globalState.currentContext), t2.get$_isolateId());
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    t3 = $globalState.topEventLoop;
    t4 = "receive " + $.S(msg);
    t3.enqueue$3;
    t3.events._add$1(new $._IsolateEvent(isolate, new $._NativeJsSendPort_send__closure(t1, t2, shouldSerialize), t4));
  }
},

_NativeJsSendPort_send__closure: {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (t1.get$_receivePort().get$_liblib3$_callback() != null) {
      if (this.shouldSerialize_5) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t2 = this.box_0;
      t1.get$_receivePort()._liblib3$_callback$2(t2.msg_0, t2.reply_1);
    }
  }
},

_WorkerSendPort: {"": "_BaseSendPort;_workerId<,_receivePortId,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_closure(this, message, replyTo));
  },
  send$1: function(message) {
    return this.send$2(message, null);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other === "object" && other !== null && !!$.getInterceptor(other).$is_WorkerSendPort)
      t1 = $.$eq(this._workerId, other._workerId) && $.$eq(this._isolateId, other._isolateId) && $.$eq(this._receivePortId, other._receivePortId);
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function(_) {
    var t1, t2, t3;
    t1 = this._workerId;
    if (typeof t1 !== "number")
      throw t1.$shl();
    t2 = this._isolateId;
    if (typeof t2 !== "number")
      throw t2.$shl();
    t3 = this._receivePortId;
    if (typeof t3 !== "number")
      throw $.iae(t3);
    return (t1 << 16 ^ t2 << 8 ^ t3) >>> 0;
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
},

_WorkerSendPort_send_closure: {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage, manager;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($globalState.isWorker === true) {
      $globalState.mainManager.postMessage$1;
      self.postMessage(workerMessage);
    } else {
      t2 = $globalState.managers;
      manager = t2.$index(t2, t1.get$_workerId());
      if (manager != null)
        manager.postMessage(workerMessage);
    }
  }
},

ReceivePortImpl: {"": "Object;_id<,_liblib3$_callback<",
  _liblib3$_callback$2: function(arg0, arg1) {
    return this._liblib3$_callback.call$2(arg0, arg1);
  }
},

_waitForPendingPorts_closure: {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  }
},

_PendingSendPortFinder: {"": "_MessageTraverser;ports,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    var t1 = this._visited;
    if (t1.$index(t1, list) != null)
      return;
    t1.$indexSet(t1, list, true);
    $.forEach$1$ax(list, new $._PendingSendPortFinder_visitList_closure(this));
  },
  visitMap$1: function(map) {
    var t1 = this._visited;
    if (t1.$index(t1, map) != null)
      return;
    t1.$indexSet(t1, map, true);
    $.forEach$1$ax($.get$values$x(map), new $._PendingSendPortFinder_visitMap_closure(this));
  },
  visitSendPort$1: function(port) {
    if (false)
      this.ports.push(port.get$_futurePort());
  },
  visitIsolateSink$1: function(sink) {
    var t1 = sink._port;
    if (false)
      this.ports.push(t1.get$_futurePort());
  },
  visitCloseToken$1: function(token) {
  }
},

_PendingSendPortFinder_visitList_closure: {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
},

_PendingSendPortFinder_visitMap_closure: {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
},

_JsSerializer: {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_NativeJsSendPort)
      return ["sendport", $globalState.currentManagerId, x._isolateId, x._receivePort.get$_id()];
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    throw $.wrapException("Illegal underlying port " + $.S(x));
  },
  visitIsolateSink$1: function(sink) {
    var isClosed = sink._isClosed;
    return ["isolateSink", this.visitSendPort$1(sink._port), isClosed];
  },
  visitCloseToken$1: function(token) {
    return ["closeToken"];
  }
},

_JsCopier: {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_NativeJsSendPort)
      return new $._NativeJsSendPort(x._receivePort, x._isolateId);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_WorkerSendPort)
      return new $._WorkerSendPort(x._workerId, x._receivePortId, x._isolateId);
    throw $.wrapException("Illegal underlying port " + $.S(x));
  },
  visitIsolateSink$1: function(sink) {
    var result = new $.JsIsolateSink(false, this.visitSendPort$1(sink._port));
    result._isClosed = sink._isClosed;
    return result;
  },
  visitCloseToken$1: function(token) {
    return token;
  }
},

_JsDeserializer: {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(list) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = $.getInterceptor$asx(list);
    managerId = t1.$index(list, 1);
    isolateId = t1.$index(list, 2);
    receivePortId = t1.$index(list, 3);
    if ($.$eq(managerId, $globalState.currentManagerId)) {
      t1 = $globalState.isolates;
      isolate = t1.$index(t1, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return new $._NativeJsSendPort(receivePort, isolateId);
    } else
      return new $._WorkerSendPort(managerId, receivePortId, isolateId);
  },
  deserializeIsolateSink$1: function(list) {
    var t1, port, result;
    t1 = $.getInterceptor$asx(list);
    port = this.deserializeSendPort$1(t1.$index(list, 1));
    result = new $.JsIsolateSink(false, port);
    result._isClosed = t1.$index(list, 2);
    return result;
  },
  deserializeCloseToken$1: function(list) {
    return $.C_CloseToken;
  }
},

_JsVisitedMap: {"": "Object;tagged",
  $index: function(_, object) {
    return object.__MessageTraverser__attached_info__;
  },
  $indexSet: function(_, object, info) {
    this.tagged.push(object);
    object.__MessageTraverser__attached_info__ = info;
  },
  reset$0: function(_) {
    this.tagged = $.List_List($);
  },
  cleanup$0: function() {
    var $length, i, t1;
    for ($length = this.tagged.length, i = 0; i < $length; ++i) {
      t1 = this.tagged;
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i].__MessageTraverser__attached_info__ = null;
    }
    this.tagged = null;
  }
},

_MessageTraverserVisitedMap: {"": "Object;",
  $index: function(_, object) {
    return;
  },
  $indexSet: function(_, object, info) {
  },
  reset$0: function(_) {
  },
  cleanup$0: function() {
  }
},

_MessageTraverser: {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    t1 = x;
    if (t1 == null || typeof t1 === "string" || typeof t1 === "number" || typeof t1 === "boolean")
      return this.visitPrimitive$1(x);
    t1 = this._visited;
    t1.reset$0(t1);
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || !!$.getInterceptor(x).$isList))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isMap)
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isJsIsolateSink)
      return this.visitIsolateSink$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isCloseToken)
      return this.visitCloseToken$1(x);
    $.throwExpression("Message serialization: Illegal value " + $.S(x) + " passed");
    return;
  }
},

_Copier: {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copy, len, i;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !$.isJsIndexable(list, list[$.dispatchPropertyName])))
      return this.visitList$1$bailout1(1, list);
    t1 = this._visited;
    copy = t1.$index(t1, list);
    if (copy != null)
      return copy;
    len = list.length;
    copy = $.List_List(len);
    t1 = this._visited;
    t1.$indexSet(t1, list, copy);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      copy[i] = this._dispatch$1(list[i]);
    }
    return copy;
  },
  visitList$1$bailout1: function(state0, list) {
    var t1, copy, len, t2, i, t3;
    t1 = this._visited;
    copy = t1.$index(t1, list);
    if (copy != null)
      return copy;
    t1 = $.getInterceptor$asx(list);
    len = t1.get$length(list);
    copy = $.List_List(len);
    t2 = this._visited;
    t2.$indexSet(t2, list, copy);
    if (typeof len !== "number")
      throw $.iae(len);
    t2 = copy.length;
    i = 0;
    for (; i < len; ++i) {
      t3 = this._dispatch$1(t1.$index(list, i));
      if (i >= t2)
        throw $.ioore(i);
      copy[i] = t3;
    }
    return copy;
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t2 = this._visited;
    t1.copy_0 = t2.$index(t2, map);
    t2 = t1.copy_0;
    if (t2 != null)
      return t2;
    t1.copy_0 = new $.HashMap(0, null, null, null, null);
    t2 = this._visited;
    t2.$indexSet(t2, map, t1.copy_0);
    $.forEach$1$ax(map, new $._Copier_visitMap_closure(t1, this));
    return t1.copy_0;
  }
},

_Copier_visitMap_closure: {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1 = this.this_1;
    $.$indexSet$ax(this.box_0.copy_0, t1._dispatch$1(key), t1._dispatch$1(val));
  }
},

_Serializer: {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, list);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, map);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, map, id);
    t1 = $.getInterceptor$x(map);
    return ["map", id, this._serializeList$1($.toList$0$ax(t1.get$keys(map))), this._serializeList$1($.toList$0$ax(t1.get$values(map)))];
  },
  _serializeList$1: function(list) {
    var len, result, i;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !$.isJsIndexable(list, list[$.dispatchPropertyName])))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      result[i] = this._dispatch$1(list[i]);
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, list) {
    var t1, len, result, t2, i, t3;
    t1 = $.getInterceptor$asx(list);
    len = t1.get$length(list);
    result = $.List_List(len);
    if (typeof len !== "number")
      throw $.iae(len);
    t2 = result.length;
    i = 0;
    for (; i < len; ++i) {
      t3 = this._dispatch$1(t1.$index(list, i));
      if (i >= t2)
        throw $.ioore(i);
      result[i] = t3;
    }
    return result;
  }
},

_Deserializer: {"": "Object;",
  deserialize$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    this._deserialized = new $.HashMap(0, null, null, null, null);
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    var t1, id;
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    t1 = $.getInterceptor$asx(x);
    switch (t1.$index(x, 0)) {
      case "ref":
        id = t1.$index(x, 1);
        t1 = this._deserialized;
        return t1.$index(t1, id);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      case "isolateSink":
        return this.deserializeIsolateSink$1(x);
      case "closeToken":
        return this.deserializeCloseToken$1(x);
      default:
        $.throwExpression("Unexpected serialized object");
        return;
    }
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = $.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !$.isJsIndexable(dartList, dartList[$.dispatchPropertyName]))
      return this._deserializeList$1$bailout(1, dartList, id);
    t1 = this._deserialized;
    t1.$indexSet(t1, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id) {
    var t1, len, i;
    t1 = this._deserialized;
    t1.$indexSet(t1, id, dartList);
    t1 = $.getInterceptor$asx(dartList);
    len = t1.get$length(dartList);
    if (typeof len !== "number")
      throw $.iae(len);
    i = 0;
    for (; i < len; ++i)
      t1.$indexSet(dartList, i, this._deserializeHelper$1(t1.$index(dartList, i)));
    return dartList;
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, t2, keys, values, len, i, key;
    result = new $.HashMap(0, null, null, null, null);
    t1 = $.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    t2 = this._deserialized;
    t2.$indexSet(t2, id, result);
    keys = t1.$index(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !$.isJsIndexable(keys, keys[$.dispatchPropertyName])))
      return this._deserializeMap$1$bailout(1, x, result, keys, t1);
    values = t1.$index(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !$.isJsIndexable(values, values[$.dispatchPropertyName])))
      return this._deserializeMap$1$bailout(2, 0, result, keys, 0, values);
    len = keys.length;
    for (i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      result.$indexSet(result, key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, x, result, keys, t1, values) {
    switch (state0) {
      case 0:
        result = new $.HashMap(0, null, null, null, null);
        t1 = $.getInterceptor$asx(x);
        id = t1.$index(x, 1);
        t2 = this._deserialized;
        t2.$indexSet(t2, id, result);
        keys = t1.$index(x, 2);
      case 1:
        state0 = 0;
        values = t1.$index(x, 3);
      case 2:
        var id, t2, len, i;
        state0 = 0;
        t1 = $.getInterceptor$asx(keys);
        len = t1.get$length(keys);
        if (typeof len !== "number")
          throw $.iae(len);
        t2 = $.getInterceptor$asx(values);
        i = 0;
        for (; i < len; ++i)
          result.$indexSet(result, this._deserializeHelper$1(t1.$index(keys, i)), this._deserializeHelper$1(t2.$index(values, i)));
        return result;
    }
  }
},

TimerImpl: {"": "Object;_once,_inEventLoop,_handle?",
  cancel$0: function() {
    if ($.get$globalThis().setTimeout != null) {
      if (this._inEventLoop)
        throw $.wrapException(new $.UnsupportedError("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      var t1 = $globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount - 1;
      if (this._once)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw $.wrapException(new $.UnsupportedError("Canceling a timer."));
  },
  TimerImpl$periodic$2: function(milliseconds, callback) {
    var t1;
    if ($.get$globalThis().setTimeout != null) {
      t1 = $globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount + 1;
      this._handle = $.get$globalThis().setInterval($.convertDartClosureToJS(new $.TimerImpl$periodic_closure(this, callback), 0), milliseconds);
    } else
      throw $.wrapException(new $.UnsupportedError("Periodic timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1, t2;
    if (milliseconds === 0)
      t1 = $.get$globalThis().setTimeout == null || $globalState.isWorker === true;
    else
      t1 = false;
    if (t1) {
      t1 = $globalState.topEventLoop;
      t2 = $globalState.currentContext;
      t1.enqueue$3;
      t1.events._add$1(new $._IsolateEvent(t2, callback, "timer"));
      this._inEventLoop = true;
    } else if ($.get$globalThis().setTimeout != null) {
      t1 = $globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount + 1;
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(new $.TimerImpl_internalCallback(this, callback), 0), milliseconds);
    } else
      throw $.wrapException(new $.UnsupportedError("Timer greater than 0."));
  }
},

TimerImpl_internalCallback: {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$0();
    this.this_0.set$_handle(null);
    var t1 = $globalState.topEventLoop;
    t1.activeTimerCount = t1.activeTimerCount - 1;
  }
},

TimerImpl$periodic_closure: {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$1(this.this_0);
  }
},

startRootIsolate: function(entry) {
  var rootContext, t1, t2;
  $globalState = $._Manager$(entry);
  if ($globalState.isWorker === true)
    return;
  rootContext = new $._IsolateContext(null, null, null);
  t1 = $globalState;
  t2 = t1.nextIsolateId;
  t1.nextIsolateId = t2 + 1;
  rootContext.id = t2;
  rootContext.ports = new $.HashMap(0, null, null, null, null);
  rootContext.isolateStatics = new Isolate();
  $globalState.rootContext = rootContext;
  $globalState.currentContext = rootContext;
  rootContext.eval$1(entry);
  $globalState.topEventLoop.run$0();
},

_globalState: function() {
  return $globalState;
},

_Manager$: function(entry) {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null, entry);
  t1._Manager$1(entry);
  return t1;
},

IsolateNatives_computeThisScript: function() {
  var currentScript, stack, matches;
  currentScript = $.$currentScript;
  if (currentScript != null)
    return String(currentScript.src);
  stack = new Error().stack;
  if (stack == null)
    stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
  matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
  if (matches != null)
    return matches[1];
  matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
  if (matches != null)
    return matches[1];
  throw $.wrapException(new $.UnsupportedError("Cannot extract URI from \"" + stack + "\""));
},

IsolateNatives__processWorkerMessage: function(sender, e) {
  var msg, t1, functionName, entryPoint, replyTo, context, t2, values;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$asx(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      $globalState.currentManagerId = t1.$index(msg, "id");
      functionName = t1.$index(msg, "functionName");
      entryPoint = functionName == null ? $globalState.entry : $[functionName];
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = new $._IsolateContext(null, null, null);
      t1 = $globalState;
      t2 = t1.nextIsolateId;
      t1.nextIsolateId = t2 + 1;
      context.id = t2;
      context.ports = new $.HashMap(0, null, null, null, null);
      context.isolateStatics = new Isolate();
      t2 = $globalState.topEventLoop;
      t2.enqueue$3;
      t2.events._add$1(new $._IsolateEvent(context, new $.IsolateNatives__processWorkerMessage_closure(entryPoint, replyTo), "worker-start"));
      $globalState.currentContext = context;
      $globalState.topEventLoop.run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (t1.$index(msg, "port") != null)
        t1.$index(msg, "port").send$2(t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $globalState.topEventLoop.run$0();
      break;
    case "close":
      t1 = $globalState.managers;
      t2 = $.get$IsolateNatives_workerIds();
      values = $.Primitives_getProperty(sender, "expando$values");
      t1.remove$1(t1, values == null ? null : $.Primitives_getProperty(values, t2._getKey$0()));
      sender.terminate();
      $globalState.topEventLoop.run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.isWorker === true) {
        t1 = $globalState.mainManager;
        t2 = $._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg]));
        t1.postMessage$1;
        self.postMessage(t2);
      } else
        $.Primitives_printString($.toString$0(t1.$index(msg, "msg")));
      break;
    case "error":
      throw $.wrapException(t1.$index(msg, "msg"));
  }
},

IsolateNatives__log: function(msg) {
  var trace, t1, t2, exception;
  if ($globalState.isWorker === true) {
    t1 = $globalState.mainManager;
    t2 = $._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg]));
    t1.postMessage$1;
    self.postMessage(t2);
  } else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.wrapException(new $._ExceptionImplementation(trace));
    }

},

IsolateNatives__spawnWorker: function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.onmessage = function(e) { $.IsolateNatives__processWorkerMessage$closure.call$2(worker, e); };
  t1 = $globalState;
  workerId = t1.nextManagerId;
  t1.nextManagerId = workerId + 1;
  t1 = $.get$IsolateNatives_workerIds();
  t1.$indexSet(t1, worker, workerId);
  t1 = $globalState.managers;
  t1.$indexSet(t1, workerId, worker);
  worker.postMessage($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
},

ReceivePortImpl$: function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$add$ns(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  $.register$2$x($globalState.currentContext, t1._id, t1);
  return t1;
},

_waitForPendingPorts: function(message, callback) {
  var finder = new $._PendingSendPortFinder([], new $._MessageTraverserVisitedMap());
  finder._visited = new $._JsVisitedMap(null);
  finder.traverse$1(message);
  $._FutureImpl__FutureImpl$wait(finder.ports).then$1(new $._waitForPendingPorts_closure(callback));
},

_serializeMessage: function(message) {
  var t1;
  if ($globalState.supportsWorkers === true) {
    t1 = new $._JsSerializer(0, new $._MessageTraverserVisitedMap());
    t1._visited = new $._JsVisitedMap(null);
    return t1.traverse$1(message);
  } else {
    t1 = new $._JsCopier(new $._MessageTraverserVisitedMap());
    t1._visited = new $._JsVisitedMap(null);
    return t1.traverse$1(message);
  }
},

_deserializeMessage: function(message) {
  if ($globalState.supportsWorkers === true)
    return new $._JsDeserializer(null).deserialize$1(message);
  else
    return message;
},

TimerImpl$: function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
},

TimerImpl$periodic: function(milliseconds, callback) {
  var t1 = new $.TimerImpl(false, false, null);
  t1.TimerImpl$periodic$2(milliseconds, callback);
  return t1;
}}],
["_js_helper", "dart:_js_helper", , {
DartError: {"": "Object;",
  toString$0: function(_) {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.stack == null)
      return $.toString$0(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.stack);
  }
},

_StackTrace: {"": "Object;_stack",
  toString$0: function(_) {
    var t1 = this._stack;
    return t1 != null ? t1 : "";
  }
},

invokeClosure_closure: {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
},

invokeClosure_closure0: {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
},

invokeClosure_closure1: {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
},

Closure: {"": "Object;",
  toString$0: function(_) {
    return "Closure";
  }
},

BoundClosure: {"": "Closure;_self,_target,_receiver",
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (this === other)
      return true;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isBoundClosure)
      return false;
    return this._self === other._self && this._target === other._target && this._receiver === other._receiver;
  },
  get$hashCode: function(_) {
    return $.get$hashCode$(this._self) + $.get$hashCode$(this._target) + $.get$hashCode$(this._receiver) & 0x3ffffff;
  },
  $isBoundClosure: true
},

Null: {"": "Object;"},

CastErrorImplementation: {"": "Object;message",
  toString$0: function(_) {
    return this.message;
  }
},

isJsIndexable: function(object, record) {
  var result;
  if (record != null) {
    result = record.x;
    if (result != null)
      return result;
  }
  return typeof object === "object" && object !== null && !!$.getInterceptor(object).$isJavaScriptIndexingBehavior;
},

S: function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number") {
    if (value !== 0)
      return "" + value;
  } else if (true === value)
    return "true";
  else if (false === value)
    return "false";
  else if (value == null)
    return "null";
  res = $.toString$0(value);
  if (typeof res !== "string")
    throw $.wrapException(new $.ArgumentError(value));
  return res;
},

Primitives_objectHashCode: function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = Math.random() * 0x3fffffff | 0;
    object.$identityHash = hash;
  }
  return hash;
},

Primitives_printString: function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw "Unable to print message: " + String(string);
},

Primitives__throwFormatException: function(string) {
  throw $.wrapException(new $.FormatException(string));
},

Primitives_parseInt: function(source, radix, handleError) {
  var match, t1;
  handleError = $.Primitives__throwFormatException$closure;
  if (typeof source !== "string")
    $.throwExpression(new $.ArgumentError(source));
  match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
  if (match != null) {
    t1 = match.length;
    if (2 >= t1)
      throw $.ioore(2);
    if (match[2] != null)
      return parseInt(source, 16);
    if (3 >= t1)
      throw $.ioore(3);
    if (match[3] != null)
      return parseInt(source, 10);
    return handleError.call$1(source);
  }
  radix = 10;
  if (match == null)
    return handleError.call$1(source);
  return parseInt(source, radix);
},

Primitives_objectTypeName: function(object) {
  var $name, decompiled, t1;
  $name = $.constructorNameFallback($.getInterceptor(object));
  if ($.$eq($name, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  t1 = $.getInterceptor$s($name);
  if (t1.codeUnitAt$1($name, 0) === 36)
    $name = t1.substring$1($name, 1);
  t1 = $.getRuntimeTypeInfo(object);
  return $.S($name) + $.joinArguments(t1, 0);
},

Primitives_getProperty: function(object, key) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw $.wrapException(new $.ArgumentError(object));
  return object[key];
},

Primitives_setProperty: function(object, key, value) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw $.wrapException(new $.ArgumentError(object));
  object[key] = value;
},

iae: function(argument) {
  throw $.wrapException(new $.ArgumentError(argument));
},

ioore: function(index) {
  if (typeof index !== "number" || Math.floor(index) !== index)
    $.throwExpression(new $.ArgumentError(index));
  throw $.wrapException(new $.RangeError("value " + $.S(index)));
},

wrapException: function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.C_NullThrownError;
  wrapper = new $.DartError();
  wrapper.dartException = ex;
  wrapper.toString = $.DartError_toStringWrapper$closure.call$0;
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.wrapException$closure);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
},

throwExpression: function(ex) {
  throw $.wrapException(ex);
},

DartError_toStringWrapper: function() {
  return $.toString$0(this);
},

unwrapException: function(ex) {
  var message, type, $name, t1, ieErrorCode, ieFacilityNumber, t2;
  if (ex == null)
    return;
  if (typeof ex !== "object")
    return ex;
  if ("dartException" in ex)
    return ex.dartException;
  else if (!("message" in ex))
    return ex;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    $name = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") === -1) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") || t1.$eq(type, "called_non_callable") || t1.$eq(type, "non_object_property_call") || t1.$eq(type, "non_object_property_load");
    } else
      t1 = true;
    if (t1)
      return new $.NoSuchMethodError(null, $name, [], $.makeLiteralMap([]), null);
    else if ($.$eq(type, "undefined_method"))
      return new $.NoSuchMethodError("", $name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number >> 16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1)
      if (message === "null has no properties" || message === "'null' is not an object" || message === "'undefined' is not an object" || $.JSString_methods.endsWith$1(message, "is null") || $.JSString_methods.endsWith$1(message, "is undefined") || $.JSString_methods.endsWith$1(message, "is null or undefined") || $.JSString_methods.endsWith$1(message, "of undefined") || $.JSString_methods.endsWith$1(message, "of null"))
        return new $.NoSuchMethodError(null, message, [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return new $.NoSuchMethodError("", message, [], $.makeLiteralMap([]), null);
      }
    t1 = t1 ? message : "";
    return new $._ExceptionImplementation(t1);
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return new $.StackOverflowError();
    return new $.ArgumentError(null);
  }
  if (typeof InternalError == "function" && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return new $.StackOverflowError();
  return ex;
},

getTraceFromException: function(exception) {
  if (exception == null)
    return;
  if (typeof exception !== "object")
    return;
  if ("stack" in exception)
    return new $._StackTrace(exception.stack);
  else
    return;
},

makeLiteralMap: function(keyValuePairs) {
  var iterator, result, key;
  iterator = $.get$iterator$ax(keyValuePairs);
  result = new $.LinkedHashMap(0, null, null, null, null, null, 0);
  for (; iterator.moveNext$0() === true;) {
    key = iterator.get$current();
    iterator.moveNext$0();
    result.$indexSet(result, key, iterator.get$current());
  }
  return result;
},

invokeClosure: function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1, result;
  t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0)) {
    result = isolate.eval$1(new $.invokeClosure_closure(closure));
    $globalState.topEventLoop.run$0();
    return result;
  } else if (t1.$eq(numberOfArguments, 1)) {
    result = isolate.eval$1(new $.invokeClosure_closure0(closure, arg1));
    $globalState.topEventLoop.run$0();
    return result;
  } else if (t1.$eq(numberOfArguments, 2)) {
    result = isolate.eval$1(new $.invokeClosure_closure1(closure, arg1, arg2));
    $globalState.topEventLoop.run$0();
    return result;
  } else
    throw $.wrapException(new $._ExceptionImplementation("Unsupported number of arguments for wrapped closure"));
},

convertDartClosureToJS: function(closure, arity) {
  var $function = closure.$identity;
  if (!!$function)
    return $function;
  $function = (function ($2, $3) { return function($0, $1) { return $3(closure, $2, arity, $0, $1) }})($globalState.currentContext, $.invokeClosure$closure.call$5);
  closure.$identity = $function;
  return $function;
},

propertyTypeCast: function(value, property) {
  var actualType, t1, expectedType;
  if (value == null || !!value[property])
    return value;
  actualType = $.Primitives_objectTypeName(value);
  t1 = $.getInterceptor$asx(property);
  expectedType = t1.substring$2(property, 3, t1.get$length(property));
  $.throwExpression(new $.CastErrorImplementation("CastError: Casting value of type " + actualType + " to incompatible type " + expectedType));
},

throwCyclicInit: function(staticName) {
  throw $.wrapException(new $.CyclicInitializationError("Cyclic initialization for static " + $.S(staticName)));
},

getRuntimeTypeInfo: function(target) {
  if (target == null)
    return;
  return target.$builtinTypeInfo;
},

runtimeTypeToString: function(type) {
  if (type == null)
    return "dynamic";
  else if (typeof type === "object" && type !== null && type.constructor === Array) {
    if (0 >= type.length)
      throw $.ioore(0);
    return type[0].builtin$cls + $.joinArguments(type, 1);
  } else
    return type.builtin$cls;
},

joinArguments: function(types, startIndex) {
  var buffer, index, firstArgument, allDynamic, argument, t1;
  if (typeof types !== "string" && (typeof types !== "object" || types === null || types.constructor !== Array && !$.isJsIndexable(types, types[$.dispatchPropertyName])))
    return $.joinArguments$bailout(1, types, startIndex);
  buffer = new $.StringBuffer("");
  buffer._contents = "";
  for (index = startIndex, firstArgument = true, allDynamic = true; index < types.length; ++index) {
    if (firstArgument)
      firstArgument = false;
    else
      buffer._contents = buffer._contents + ", ";
    if (index < 0 || index >= types.length)
      throw $.ioore(index);
    argument = types[index];
    if (argument != null)
      allDynamic = false;
    t1 = $.runtimeTypeToString(argument);
    buffer._contents = buffer._contents + t1;
  }
  return allDynamic ? "" : "<" + $.S(buffer) + ">";
},

joinArguments$bailout: function(state0, types, startIndex) {
  var buffer, t1, index, firstArgument, allDynamic, t2, argument;
  if (types == null)
    return "";
  buffer = new $.StringBuffer("");
  buffer._contents = "";
  t1 = $.getInterceptor$asx(types);
  index = startIndex;
  firstArgument = true;
  allDynamic = true;
  while (true) {
    t2 = t1.get$length(types);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    if (!(index < t2))
      break;
    if (firstArgument)
      firstArgument = false;
    else
      buffer._contents = buffer._contents + ", ";
    argument = t1.$index(types, index);
    if (argument != null)
      allDynamic = false;
    t2 = $.runtimeTypeToString(argument);
    buffer._contents = buffer._contents + t2;
    ++index;
  }
  return allDynamic ? "" : "<" + $.S(buffer) + ">";
},

typeNameInChrome: function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
},

typeNameInSafari: function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
},

typeNameInWebKitCommon: function(tag) {
  var $name = tag;
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "AudioChannelMerger")
    return "ChannelMergerNode";
  if ($name === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if ($name === "AudioGainNode")
    return "GainNode";
  if ($name === "AudioPannerNode")
    return "PannerNode";
  if ($name === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if ($name === "Oscillator")
    return "OscillatorNode";
  if ($name === "RealtimeAnalyserNode")
    return "AnalyserNode";
  if ($name === "IDBVersionChangeRequest")
    return "IDBOpenDBRequest";
  return $name;
},

typeNameInOpera: function(obj) {
  return $.constructorNameFallback(obj);
},

typeNameInFirefox: function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "BeforeUnloadEvent")
    return "Event";
  if ($name === "CSS2Properties")
    return "CSSStyleDeclaration";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "GeoGeolocation")
    return "Geolocation";
  if ($name === "WorkerMessageEvent")
    return "MessageEvent";
  if ($name === "XMLDocument")
    return "Document";
  return $name;
},

typeNameInIE: function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if ($name === "BeforeUnloadEvent")
    return "Event";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "HTMLDDElement")
    return "HTMLElement";
  if ($name === "HTMLDTElement")
    return "HTMLElement";
  if ($name === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLPhraseElement")
    return "HTMLElement";
  if ($name === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if ($name === "Position")
    return "Geoposition";
  if ($name === "Object")
    if (window.DataView && obj instanceof window.DataView)
      return "DataView";
  return $name;
},

constructorNameFallback: function(object) {
  var $constructor, $name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof $constructor === "function") {
    $name = $constructor.builtin$cls;
    if ($name != null)
      return $name;
    $name = $constructor.name;
    if (typeof $name === "string")
      t1 = $name !== "" && $name !== "Object" && $name !== "Function.prototype";
    else
      t1 = false;
    if (t1)
      return $name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
},

alternateTag: function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
},

getFunctionForTypeNameOf: function() {
  if (typeof navigator !== "object")
    return $.typeNameInChrome$closure;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome$closure;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox$closure;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE$closure;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera$closure;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari$closure;
  else
    return $.constructorNameFallback$closure;
},

toStringForNativeObject: function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return "Instance of " + $._getTypeNameOf.call$1(obj);
},

hashCodeForNativeObject: function(object) {
  return $.Primitives_objectHashCode(object);
},

defineProperty: function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
},

defineNativeMethods: function(tags, interceptorClass) {
  $.defineNativeMethodsCommon(tags, interceptorClass, true);
},

defineNativeMethodsNonleaf: function(tags, interceptorClass) {
  $.defineNativeMethodsCommon(tags, interceptorClass, false);
},

defineNativeMethodsCommon: function(tags, interceptorClass, isLeaf) {
  var methods, tagsList, i, tag;
  methods = interceptorClass.prototype;
  if ($.interceptorsByTag == null)
    $.interceptorsByTag = {};
  if ($.leafTags == null)
    $.leafTags = {};
  tagsList = tags.split("|");
  for (i = 0; i < tagsList.length; ++i) {
    tag = tagsList[i];
    $.interceptorsByTag[tag] = methods;
    $.leafTags[tag] = isLeaf;
  }
},

defineNativeMethodsFinish: function() {
},

lookupInterceptor: function(hasOwnPropertyFunction, tag) {
  var map = $.interceptorsByTag;
  if (map == null)
    return;
  return hasOwnPropertyFunction.call(map, tag) ? map[tag] : null;
},

lookupDispatchRecord: function(obj) {
  var hasOwnPropertyFunction, tag, interceptor, secondTag, t1;
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  tag = $._getTypeNameOf.call$1(obj);
  interceptor = $.lookupInterceptor(hasOwnPropertyFunction, tag);
  if (interceptor == null) {
    secondTag = $.alternateTag(obj, tag);
    if (secondTag != null)
      interceptor = $.lookupInterceptor(hasOwnPropertyFunction, secondTag);
  }
  if (interceptor == null)
    return;
  t1 = $.leafTags;
  if (t1 != null && t1[tag] === true)
    return $.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
  else
    return $.makeDispatchRecord(interceptor, Object.getPrototypeOf(obj), null, null);
},

stringReplaceAllUnchecked: function(receiver, from, to) {
  var result, $length, i, t1;
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = new $.StringBuffer("");
      result._contents = "";
      $length = receiver.length;
      result._contents = result._contents + to;
      for (i = 0; i < $length; ++i) {
        t1 = receiver[i];
        result._contents = result._contents + t1;
        result._contents = result._contents + to;
      }
      return result._contents;
    }
  else
    return receiver.replace(new RegExp(from.replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), "\\$&"), 'g'), to.replace("$", "$$$$"));
}}],
["dart._collection.dev", "dart:_collection-dev", , {
ListIterator: {"": "Object;_iterable,_liblib0$_length,_index,_liblib0$_current",
  get$current: function() {
    return this._liblib0$_current;
  },
  moveNext$0: function() {
    var t1, t2, $length, t3;
    t1 = this._iterable;
    t2 = $.getInterceptor$asx(t1);
    $length = t2.get$length(t1);
    if (!$.$eq(this._liblib0$_length, $length))
      throw $.wrapException(new $.ConcurrentModificationError(t1));
    t3 = this._index;
    if (typeof $length !== "number")
      throw $.iae($length);
    if (t3 >= $length) {
      this._liblib0$_current = null;
      return false;
    }
    this._liblib0$_current = t2.elementAt$1(t1, t3);
    this._index = this._index + 1;
    return true;
  }
},

MappedIterable: {"": "IterableBase;_iterable,_f",
  get$iterator: function(_) {
    var t1 = this._iterable;
    return new $.MappedIterator(null, t1.get$iterator(t1), this._f);
  },
  get$length: function(_) {
    var t1 = this._iterable;
    return t1.get$length(t1);
  },
  get$isEmpty: function(_) {
    var t1 = this._iterable;
    return t1.get$isEmpty(t1);
  },
  $asIterable: function (S, T) { return [T]; }
},

MappedIterator: {"": "Iterator;_liblib0$_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0() === true) {
      this._liblib0$_current = this._f$1(t1.get$current());
      return true;
    }
    this._liblib0$_current = null;
    return false;
  },
  get$current: function() {
    return this._liblib0$_current;
  }
},

WhereIterable: {"": "IterableBase;_iterable,_f",
  get$iterator: function(_) {
    return new $.WhereIterator($.get$iterator$ax(this._iterable), this._f);
  },
  $asIterable: null
},

WhereIterator: {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0() === true;)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  }
},

ToString__emitPair_closure: {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (!t1.first_0)
      this.result_1.write$1(", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.ToString__emitObject(k, t1, t2);
    t1.write$1(": ");
    $.ToString__emitObject(v, t1, t2);
  }
},

Arrays_copy: function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3, t4;
  if (typeof src !== "string" && (typeof src !== "object" || src === null || src.constructor !== Array && !$.isJsIndexable(src, src[$.dispatchPropertyName])))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !$.isJsIndexable(dst, dst[$.dispatchPropertyName]))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = srcStart + count, t2 = src.length, t3 = dst.length, j = dstStart, i = srcStart; i < t1; ++i, ++j) {
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      t4 = src[i];
      if (j < 0 || j >= t3)
        throw $.ioore(j);
      dst[j] = t4;
    }
},

Arrays_copy$bailout: function(state0, src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = $.getInterceptor$asx(src), t2 = $.getInterceptor$ax(dst); i >= srcStart; --i, --j)
      t2.$indexSet(dst, j, t1.$index(src, i));
  else
    for (t1 = srcStart + count, t2 = $.getInterceptor$asx(src), t3 = $.getInterceptor$ax(dst), j = dstStart, i = srcStart; i < t1; ++i, ++j)
      t3.$indexSet(dst, j, t2.$index(src, i));
},

IterableMixinWorkaround_forEach: function(iterable, f) {
  var t1;
  for (t1 = $.get$iterator$ax(iterable); t1.moveNext$0();)
    f.call$1(t1._liblib0$_current);
},

IterableMixinWorkaround__rangeCheck: function(list, start, end) {
  var t1;
  if (start < 0 || start > list.length) {
    t1 = list.length;
    throw $.wrapException(new $.RangeError("value " + start + " not in range 0.." + t1));
  }
  if (end < start || end > list.length) {
    t1 = list.length;
    throw $.wrapException(new $.RangeError("value " + end + " not in range " + start + ".." + t1));
  }
},

IterableMixinWorkaround_setRangeList: function(list, start, end, from, skipCount) {
  var $length, otherStart, otherList, t1;
  $.IterableMixinWorkaround__rangeCheck(list, start, end);
  $length = end - start;
  if ($length === 0)
    return;
  if (skipCount < 0)
    throw $.wrapException(new $.ArgumentError(skipCount));
  otherStart = skipCount;
  otherList = from;
  t1 = $.get$length$asx(otherList);
  if (typeof t1 !== "number")
    throw $.iae(t1);
  if (otherStart + $length > t1)
    throw $.wrapException(new $.StateError("Not enough elements"));
  $.Arrays_copy(otherList, otherStart, list, start, $length);
},

ToString__emitValue: function(i, result, visiting) {
  var t1, isList, t2, first, e;
  t1 = $.getInterceptor$ax(visiting);
  t1.add$1(visiting, i);
  isList = typeof i === "object" && i !== null && (i.constructor === Array || !!$.getInterceptor(i).$isList);
  result.write$1(isList ? "[" : "{");
  for (t2 = $.get$iterator$ax(i), first = true; t2.moveNext$0() === true; first = false) {
    e = t2.get$current();
    if (!first)
      result.write$1(", ");
    $.ToString__emitObject(e, result, visiting);
  }
  result.write$1(isList ? "]" : "}");
  t1.removeLast$0(visiting);
},

ToString__emitObject: function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || !!$.getInterceptor(o).$isIterable))
    if ($.ToString__containsRef(visiting, o))
      result.write$1(typeof o === "object" && o !== null && (o.constructor === Array || !!$.getInterceptor(o).$isList) ? "[...]" : "{...}");
    else
      $.ToString__emitValue(o, result, visiting);
  else if (typeof o === "object" && o !== null && !!$.getInterceptor(o).$isMap)
    if ($.ToString__containsRef(visiting, o))
      result.write$1("{...}");
    else
      $.ToString__emitPair(o, result, visiting);
  else
    result.write$1(o);
},

ToString__containsRef: function(i, ref) {
  var t1;
  for (t1 = $.get$iterator$ax(i); t1.moveNext$0() === true;)
    if (t1.get$current() === ref)
      return true;
  return false;
},

ToString__emitPair: function(m, result, visiting) {
  var t1, t2;
  t1 = {};
  t2 = $.getInterceptor$ax(visiting);
  t2.add$1(visiting, m);
  result.write$1("{");
  t1.first_0 = true;
  $.forEach$1$ax(m, new $.ToString__emitPair_closure(t1, result, visiting));
  result.write$1("}");
  t2.removeLast$0(visiting);
}}],
["dart.async", "dart:async", , {
_Completer: {"": "Object;",
  completeError$2: function(error, stackTrace) {
    var t1, t2;
    if (this._isComplete)
      throw $.wrapException(new $.StateError("Future already completed"));
    this._isComplete = true;
    t1 = $.get$_Zone__current();
    t2 = this.future._zone;
    if ($.$eq(t2.get$_errorZone(), t1.get$_errorZone())) {
      t2._openCallbacks = t2._openCallbacks - 1;
      if (t2._isExecutingCallback !== true && t2._openCallbacks === 0 && t2._children.length === 0)
        ;
      this._setFutureError$1(error);
    } else
      $.get$_Zone__current().handleUncaughtError$1(error);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  }
},

_AsyncCompleter: {"": "_Completer;future,_isComplete",
  _setFutureValue$1: function(value) {
    $.get$_Zone__current().runAsync$1(new $._AsyncCompleter__setFutureValue_closure(value, this.future));
  },
  _setFutureError$1: function(error) {
    $.get$_Zone__current().runAsync$1(new $._AsyncCompleter__setFutureError_closure(error, this.future));
  }
},

_AsyncCompleter__setFutureValue_closure: {"": "Closure;value_0,future_1",
  call$0: function() {
    this.future_1._setValue$1(this.value_0);
  }
},

_AsyncCompleter__setFutureError_closure: {"": "Closure;error_0,future_1",
  call$0: function() {
    this.future_1._setError$1(this.error_0);
  }
},

_FutureListenerWrapper: {"": "Object;future,_nextListener@",
  _sendValue$1: function(value) {
    this.future._setValue$1(value);
  },
  _sendError$1: function(error) {
    this.future._setError$1(error);
  },
  _inSameErrorZone$1: function(otherZone) {
    return $.$eq(this.future._zone.get$_errorZone(), otherZone.get$_errorZone());
  }
},

_ErrorZoneBoundaryListener: {"": "Object;_nextListener@,_listener",
  _inSameErrorZone$1: function(otherZone) {
    throw $.wrapException(new $.UnsupportedError("A Zone boundary doesn't support the inSameErrorZone test."));
  },
  _sendValue$1: function(value) {
    this._listener._sendValue$1(value);
  },
  _sendError$1: function(error) {
    $.get$_Zone__current().handleUncaughtError$1(error);
  }
},

_FutureImpl: {"": "Object;_state@,_zone<,_resultOrListeners<",
  get$_isChained: function() {
    return (this._state & 1) !== 0;
  },
  then$2$onError: function(f, onError) {
    var t1, t2;
    if (onError == null) {
      t1 = new $._ThenFuture(f, null, 0, $.get$_Zone__current().fork$0(), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t1._subscribeTo$1(this);
      return t1;
    }
    t1 = new $._SubscribeFuture(onError, f, null, 0, $.get$_Zone__current().fork$0(), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._subscribeTo$1(this);
    return t1;
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1, t2;
    t1 = new $._CatchErrorFuture(test, f, null, 0, $.get$_Zone__current().fork$0(), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._subscribeTo$1(this);
    return t1;
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  _inSameErrorZone$1: function(otherZone) {
    return $.$eq(this._zone.get$_errorZone(), otherZone.get$_errorZone());
  },
  _setValue$1: function(value) {
    var t1, listeners, listeners0;
    t1 = this._state;
    if (t1 >= 4)
      throw $.wrapException(new $.StateError("Future already completed"));
    listeners = (t1 & 1) !== 0 ? null : this._removeListeners$0();
    this._state = 4;
    this._resultOrListeners = value;
    for (; listeners != null; listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  get$_setValue: function() {
    return new $.BoundClosure$1(this, "_setValue$1", null);
  },
  _setError$1: function(error) {
    var t1, hasListeners, listeners, listeners0;
    t1 = this._state;
    if (t1 >= 4)
      throw $.wrapException(new $.StateError("Future already completed"));
    if ((t1 & 1) !== 0) {
      hasListeners = t1 === 1;
      listeners = null;
    } else {
      listeners = this._removeListeners$0();
      hasListeners = listeners != null;
    }
    this._state = 6;
    this._resultOrListeners = error;
    if (!hasListeners) {
      this._scheduleUnhandledError$0();
      return;
    }
    for (; listeners != null; listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
    }
  },
  get$_setError: function() {
    return new $.BoundClosure$1(this, "_setError$1", null);
  },
  _scheduleUnhandledError$0: function() {
    this._state = 14;
    $.get$_Zone__current().runAsync$1(new $._FutureImpl__scheduleUnhandledError_closure(this));
  },
  _addListener$1: function(listener) {
    var t1, t2, future;
    t1 = {};
    t1.listener_0 = listener;
    if (t1.listener_0._inSameErrorZone$1(this._zone) !== true)
      t1.listener_0 = new $._ErrorZoneBoundaryListener(null, t1.listener_0);
    t2 = this._state;
    if ((t2 & 1) !== 0) {
      this._state = 1;
      future = this._resultOrListeners;
      if (future.get$_isChained()) {
        future = future.get$_chainSource();
        this._resultOrListeners = future;
      }
      future._addListener$1(t1.listener_0);
      return;
    }
    if (t2 >= 4) {
      this._state = (t2 & 4294967287) >>> 0;
      $.get$_Zone__current().runAsync$1(new $._FutureImpl__addListener_closure(t1, this));
    } else {
      t1.listener_0.set$_nextListener(this._resultOrListeners);
      this._resultOrListeners = t1.listener_0;
    }
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; current != null; prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    var t1 = this._state;
    if (t1 < 4)
      future._chainFromFuture$1(this);
    else if (t1 === 4)
      future._setValue$1(this._resultOrListeners);
    else {
      this._state = (t1 & 4294967287) >>> 0;
      future._setError$1(this._resultOrListeners);
    }
  },
  get$_chainSource: function() {
    var future = this._resultOrListeners;
    if (future.get$_isChained()) {
      future = future.get$_chainSource();
      this._resultOrListeners = future;
    }
    return future;
  },
  _chainFromFuture$1: function(resultSource) {
    var future, cursor, cursor0, cursor1;
    if ((resultSource._state & 1) !== 0) {
      future = resultSource._resultOrListeners;
      if (future.get$_isChained()) {
        future = future.get$_chainSource();
        resultSource._resultOrListeners = future;
      }
      resultSource = future;
    }
    if (this === resultSource) {
      this._setError$1(new $.StateError("Cyclic future dependency."));
      return;
    }
    cursor = this._removeListeners$0();
    for (cursor0 = cursor; cursor0 != null; cursor0 = cursor1) {
      cursor1 = cursor0.get$_nextListener();
      cursor0.set$_nextListener(null);
      resultSource._addListener$1(cursor0);
    }
    resultSource._addListener$1(new $._FutureListenerWrapper(this, null));
    this._resultOrListeners = resultSource;
    this._state = cursor != null ? 1 : 3;
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!$.getInterceptor(result).$isFuture)
      if (!!$.getInterceptor(result).$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_setValue(), this.get$_setError());
        return;
      }
    else
      this._setValue$1(result);
  },
  $is_FutureImpl: true,
  $isFuture: true
},

_FutureImpl__FutureImpl$wait_handleError: {"": "Closure;box_0",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.values_1 != null) {
      t1.values_1 = null;
      t1.completer_0.completeError$1(error);
    }
  }
},

_FutureImpl__FutureImpl$wait_closure: {"": "Closure;box_0,pos_1",
  call$1: function(value) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = t1.values_1;
    if (t2 == null)
      return;
    t3 = this.pos_1;
    if (t3 >>> 0 !== t3 || t3 >= t2.length)
      throw $.ioore(t3);
    t2[t3] = value;
    t1.remaining_2 = $.$sub$n(t1.remaining_2, 1);
    if ($.$eq(t1.remaining_2, 0)) {
      t2 = t1.completer_0;
      t1 = t1.values_1;
      t2.complete$1;
      if (t2._isComplete)
        $.throwExpression(new $.StateError("Future already completed"));
      t2._isComplete = true;
      t3 = t2.future._zone;
      t3._openCallbacks = t3._openCallbacks - 1;
      if (t3._isExecutingCallback !== true && t3._openCallbacks === 0 && t3._children.length === 0)
        ;
      t2._setFutureValue$1(t1);
    }
  }
},

_FutureImpl__scheduleUnhandledError_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2, error;
    t1 = this.this_0;
    t2 = t1.get$_state();
    if (t2 >= 8) {
      t1.set$_state((t2 & 4294967287) >>> 0);
      error = t1.get$_resultOrListeners();
      t1.get$_zone().handleUncaughtError$1(error);
    }
  }
},

_FutureImpl__addListener_closure: {"": "Closure;box_0,this_1",
  call$0: function() {
    var t1, t2, value;
    t1 = this.this_1;
    t2 = t1.get$_state();
    value = t1.get$_resultOrListeners();
    t1 = this.box_0;
    if (t2 === 4)
      t1.listener_0._sendValue$1(value);
    else
      t1.listener_0._sendError$1(value);
  }
},

_TransformFuture: {"": "_FutureImpl;_nextListener@",
  _sendValue$1: function(value) {
    var t1 = this._zone;
    t1._openCallbacks = t1._openCallbacks - 1;
    t1._runInZone$2(new $._TransformFuture__sendValue_closure(this, value), false);
  },
  _sendError$1: function(error) {
    var t1 = this._zone;
    t1._openCallbacks = t1._openCallbacks - 1;
    t1._runInZone$2(new $._TransformFuture__sendError_closure(this, error), false);
  },
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
},

_TransformFuture__sendValue_closure: {"": "Closure;this_0,value_1",
  call$0: function() {
    return this.this_0._zonedSendValue$1(this.value_1);
  }
},

_TransformFuture__sendError_closure: {"": "Closure;this_0,error_1",
  call$0: function() {
    return this.this_0._zonedSendError$1(this.error_1);
  }
},

_ThenFuture: {"": "_TransformFuture;_onValue,_nextListener,_state,_zone,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _zonedSendValue$1: function(value) {
    var result, e, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      this._setError$1($._asyncError(e, s));
      return;
    }

    this._setOrChainValue$1(result);
  },
  _zonedSendError$1: function(error) {
    this._setError$1(error);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
},

_CatchErrorFuture: {"": "_TransformFuture;_test,_onError,_nextListener,_state,_zone,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _zonedSendValue$1: function(value) {
    this._setValue$1(value);
  },
  _zonedSendError$1: function(error) {
    var matchesTest, e, s, result, e0, s0, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e0 = t1;
      s0 = $.getTraceFromException(exception);
      this._setError$1($._asyncError(e0, s0));
      return;
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: null,
  $asFuture: null
},

_SubscribeFuture: {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_zone,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _zonedSendError$1: function(error) {
    var result, e, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      this._setError$1($._asyncError(e, s));
      return;
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
},

Stream: {"": "Object;",
  get$isBroadcast: function() {
    return false;
  },
  asBroadcastStream$0: function() {
    var t1, t2;
    if (this.get$isBroadcast() === true)
      return this;
    t1 = new $._AsBroadcastStream(this, null, null);
    t2 = new $._AsBroadcastStreamController(null, null, t1.get$_onCancel(), 0, null, null);
    t2._liblib4$_previous = t2;
    t2._liblib4$_next = t2;
    t1._liblib4$_controller = t2;
    return t1;
  },
  get$length: function(_) {
    var t1, future;
    t1 = {};
    future = new $._FutureImpl(0, $.get$_Zone__current().fork$0(), null);
    t1.count_0 = 0;
    this.listen$4$cancelOnError$onDone$onError(new $.Stream_length_closure(t1), true, new $.Stream_length_closure0(t1, future), future.get$_setError());
    return future;
  },
  get$isEmpty: function(_) {
    var t1, future;
    t1 = {};
    future = new $._FutureImpl(0, $.get$_Zone__current().fork$0(), null);
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new $.Stream_isEmpty_closure(t1, future), true, new $.Stream_isEmpty_closure0(future), future.get$_setError());
    return future;
  }
},

Stream_length_closure: {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$add$ns(t1.count_0, 1);
  }
},

Stream_length_closure0: {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._setValue$1(this.box_0.count_0);
  }
},

Stream_isEmpty_closure: {"": "Closure;box_0,future_1",
  call$1: function(_) {
    this.box_0.subscription_0.cancel$0();
    this.future_1._setValue$1(false);
  }
},

Stream_isEmpty_closure0: {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setValue$1(true);
  }
},

StreamSubscription: {"": "Object;"},

EventSink: {"": "Object;"},

_StreamController: {"": "Object;_onListen<,_state@",
  add$1: function(_, value) {
    var t1 = this._state;
    if ((t1 & 2) !== 0)
      throw $.wrapException(new $.StateError("Adding event after close"));
    if (this._subscription != null)
      this._sendData$1(value);
    else if ((t1 & 1) === 0)
      this._addPendingEvent$1(new $._DelayedData(value, null));
  },
  _addPendingEvent$1: function($event) {
    var events, t1;
    if ((this._state & 1) !== 0)
      return;
    events = this._pendingEvents;
    if (events == null) {
      events = new $._StreamImplEvents(null, null, 0);
      this._pendingEvents = events;
    }
    events.add$1;
    t1 = events.lastPendingEvent;
    if (t1 == null) {
      events.lastPendingEvent = $event;
      events.firstPendingEvent = $event;
    } else {
      t1.set$next($event);
      events.lastPendingEvent = $event;
    }
  },
  _recordListen$1: function(subscription) {
    this._subscription = subscription;
    subscription._setPendingEvents$1(this._pendingEvents);
    this._pendingEvents = null;
    subscription._guardCallback$1(new $._StreamController__recordListen_closure(this));
  },
  _recordCancel$1: function(subscription) {
    this._subscription = null;
    this._state = (this._state | 1) >>> 0;
    $._runGuarded(this._onCancel);
  },
  _recordPause$1: function(subscription) {
    $._runGuarded(this._onPause);
  },
  _recordResume$1: function(subscription) {
    $._runGuarded(this._onResume);
  },
  _StreamController$4: function(_onListen, _onPause, _onResume, _onCancel) {
    this._stream = new $._ControllerStream(this, false);
  }
},

_StreamController__recordListen_closure: {"": "Closure;this_0",
  call$0: function() {
    $._runGuarded(this.this_0.get$_onListen());
  }
},

_AsyncStreamController: {"": "_StreamController;_onListen,_onPause,_onResume,_onCancel,_stream,_subscription,_state,_pendingEvents",
  _sendData$1: function(data) {
    this._subscription._addPending$1(new $._DelayedData(data, null));
  },
  _sendError$1: function(error) {
    this._subscription._addPending$1(new $._DelayedError(error, null));
  }
},

_ControllerStream: {"": "_StreamImpl;_liblib4$_controller,_hasListener",
  _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
    var t1, t2, t3;
    if (this._hasListener)
      throw $.wrapException(new $.StateError("The stream has already been listened to."));
    this._hasListener = true;
    t1 = this._liblib4$_controller;
    t2 = $.get$_Zone__current();
    t3 = cancelOnError ? 1 : 0;
    t3 = new $._ControllerSubscription(t1, onData, onError, onDone, t2, t3, null);
    t3._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError);
    return t3;
  },
  _onListen$1: function(subscription) {
    this._liblib4$_controller._recordListen$1(subscription);
  },
  get$_onListen: function() {
    return new $.BoundClosure$1(this, "_onListen$1", null);
  }
},

_ControllerSubscription: {"": "_BufferingStreamSubscription;_liblib4$_controller<,_liblib4$_onData,_onError,_onDone,_zone,_state,_pending",
  _onCancel$0: function() {
    this.get$_liblib4$_controller()._recordCancel$1(this);
  },
  _onPause$0: function() {
    this.get$_liblib4$_controller()._recordPause$1(this);
  },
  _onResume$0: function() {
    this.get$_liblib4$_controller()._recordResume$1(this);
  }
},

_BroadcastStream: {"": "_StreamImpl;_liblib4$_controller",
  get$isBroadcast: function() {
    return true;
  },
  _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
    var t1, t2, t3;
    t1 = this._liblib4$_controller;
    t2 = $.get$_Zone__current();
    t3 = cancelOnError ? 1 : 0;
    t3 = new $._BroadcastSubscription(null, null, null, t1, onData, onError, onDone, t2, t3, null);
    t3._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError);
    t3._liblib4$_previous = t3;
    t3._liblib4$_next = t3;
    return t3;
  },
  _onListen$1: function(subscription) {
    var t1, t2, t3;
    t1 = this._liblib4$_controller;
    t1._addListener$1(subscription);
    t2 = t1._liblib4$_next;
    t3 = t1._liblib4$_previous;
    if (t2 == null ? t3 == null : t2 === t3)
      $._runGuarded(t1._onListen);
  },
  get$_onListen: function() {
    return new $.BoundClosure$1(this, "_onListen$1", null);
  }
},

_BroadcastSubscription: {"": "_ControllerSubscription;_eventState@,_liblib4$_next@,_liblib4$_previous@,_liblib4$_controller,_liblib4$_onData,_onError,_onDone,_zone,_state,_pending",
  get$_liblib4$_controller: function() {
    return this._liblib4$_controller;
  },
  _expectsEvent$1: function(eventId) {
    var t1 = this._eventState;
    if (t1 == null)
      throw t1.$and();
    return (t1 & 1) === eventId;
  },
  _toggleEventId$0: function() {
    var t1 = this._eventState;
    if (t1 == null)
      throw t1.$xor();
    this._eventState = (t1 ^ 1) >>> 0;
  },
  get$_isFiring: function() {
    var t1 = this._eventState;
    if (t1 == null)
      throw t1.$and();
    return (t1 & 2) !== 0;
  },
  _setRemoveAfterFiring$0: function() {
    var t1 = this._eventState;
    if (t1 == null)
      throw t1.$or();
    this._eventState = (t1 | 4) >>> 0;
  },
  get$_removeAfterFiring: function() {
    var t1 = this._eventState;
    if (t1 == null)
      throw t1.$and();
    return (t1 & 4) !== 0;
  }
},

_BroadcastStreamController: {"": "Object;_onListen<,_state@,_liblib4$_next@,_liblib4$_previous@",
  _addListener$1: function(subscription) {
    var previous = this._liblib4$_previous;
    previous.set$_liblib4$_next(subscription);
    this._liblib4$_previous = subscription.get$_liblib4$_previous();
    subscription.get$_liblib4$_previous().set$_liblib4$_next(this);
    subscription.set$_liblib4$_previous(previous);
    subscription.set$_eventState(this._state & 1);
  },
  _removeListener$1: function(subscription) {
    subscription.get$_liblib4$_previous().set$_liblib4$_next(subscription.get$_liblib4$_next());
    subscription.get$_liblib4$_next().set$_liblib4$_previous(subscription.get$_liblib4$_previous());
    subscription.set$_liblib4$_previous(subscription);
    subscription.set$_liblib4$_next(subscription);
  },
  _recordCancel$1: function(subscription) {
    if (subscription.get$_isFiring())
      subscription._setRemoveAfterFiring$0();
    else {
      this._removeListener$1(subscription);
      if ((this._state & 2) === 0 && this._liblib4$_next === this)
        this._callOnCancel$0();
    }
  },
  _recordPause$1: function(subscription) {
  },
  _recordResume$1: function(subscription) {
  },
  add$1: function(_, data) {
    if ((this._state & 4) !== 0)
      throw $.wrapException(new $.StateError("Cannot add new events after calling close()"));
    this._sendData$1(data);
  },
  addError$2: function(error, stackTrace) {
    if ((this._state & 4) !== 0)
      throw $.wrapException(new $.StateError("Cannot add new events after calling close()"));
    if (stackTrace != null)
      $._attachStackTrace(error, stackTrace);
    this._sendError$1(error);
  },
  close$0: function(_) {
    var t1 = this._state;
    if ((t1 & 4) !== 0)
      throw $.wrapException(new $.StateError("Cannot add new events after calling close()"));
    this._state = (t1 | 4) >>> 0;
    this._sendDone$0();
  },
  _forEachListener$1: function(action) {
    var t1, id, link, link0;
    t1 = this._state;
    if ((t1 & 2) !== 0)
      throw $.wrapException(new $.StateError("Cannot fire new event. Controller is already firing an event"));
    if (this._liblib4$_next === this)
      return;
    id = t1 & 1;
    this._state = (t1 ^ 3) >>> 0;
    link = this._liblib4$_next;
    for (; link !== this;)
      if (link._expectsEvent$1(id)) {
        t1 = link.get$_eventState();
        if (t1 == null)
          throw t1.$or();
        link.set$_eventState((t1 | 2) >>> 0);
        action.call$1(link);
        link._toggleEventId$0();
        link0 = link.get$_liblib4$_next();
        if (link.get$_removeAfterFiring())
          this._removeListener$1(link);
        t1 = link.get$_eventState();
        if (t1 == null)
          throw t1.$and();
        link.set$_eventState((t1 & 4294967293) >>> 0);
        link = link0;
      } else
        link = link.get$_liblib4$_next();
    this._state = (this._state & 4294967293) >>> 0;
    if (this._liblib4$_next === this)
      this._callOnCancel$0();
  },
  _callOnCancel$0: function() {
    $._runGuarded(this._onCancel);
  }
},

_SyncBroadcastStreamController: {"": "_BroadcastStreamController;",
  _sendData$1: function(data) {
    if (this._liblib4$_next === this)
      return;
    this._forEachListener$1(new $._SyncBroadcastStreamController__sendData_closure(this, data));
  },
  _sendError$1: function(error) {
    if (this._liblib4$_next === this)
      return;
    this._forEachListener$1(new $._SyncBroadcastStreamController__sendError_closure(this, error));
  },
  _sendDone$0: function() {
    if (this._liblib4$_next === this)
      return;
    this._forEachListener$1(new $._SyncBroadcastStreamController__sendDone_closure(this));
  }
},

_SyncBroadcastStreamController__sendData_closure: {"": "Closure;this_0,data_1",
  call$1: function(subscription) {
    subscription._liblib4$_add$1(this.data_1);
  }
},

_SyncBroadcastStreamController__sendError_closure: {"": "Closure;this_0,error_1",
  call$1: function(subscription) {
    subscription._addError$1(this.error_1);
  }
},

_SyncBroadcastStreamController__sendDone_closure: {"": "Closure;this_0",
  call$1: function(subscription) {
    var t1;
    subscription._close$0();
    t1 = subscription.get$_eventState();
    if (t1 == null)
      throw t1.$or();
    subscription.set$_eventState((t1 | 4) >>> 0);
  }
},

_AsBroadcastStreamController: {"": "_SyncBroadcastStreamController;_pending,_onListen,_onCancel,_state,_liblib4$_next,_liblib4$_previous",
  add$1: function(_, data) {
    var t1, t2, t3;
    if ((this._state & 2) !== 0) {
      t1 = new $._DelayedData(data, null);
      if (this._pending == null)
        this._pending = new $._StreamImplEvents(null, null, 0);
      t2 = this._pending;
      t2.add$1;
      t3 = t2.lastPendingEvent;
      if (t3 == null) {
        t2.lastPendingEvent = t1;
        t2.firstPendingEvent = t1;
      } else {
        t3.set$next(t1);
        t2.lastPendingEvent = t1;
      }
      return;
    }
    $._BroadcastStreamController.prototype.add$1.call(this, this, data);
    while (true) {
      t1 = this._pending;
      if (t1 != null) {
        t1.get$isEmpty;
        t2 = t1.lastPendingEvent != null;
      } else
        t2 = false;
      if (!t2)
        break;
      t1.handleNext$1(this);
    }
  },
  get$add: function(_receiver) {
    return new $.BoundClosure$i1(this, "add$1", _receiver);
  },
  addError$2: function(error, stackTrace) {
    var t1, t2, t3;
    if ((this._state & 2) !== 0) {
      t1 = new $._DelayedError(error, null);
      if (this._pending == null)
        this._pending = new $._StreamImplEvents(null, null, 0);
      t2 = this._pending;
      t2.add$1;
      t3 = t2.lastPendingEvent;
      if (t3 == null) {
        t2.lastPendingEvent = t1;
        t2.firstPendingEvent = t1;
      } else {
        t3.set$next(t1);
        t2.lastPendingEvent = t1;
      }
      return;
    }
    $._BroadcastStreamController.prototype.addError$2.call(this, error, stackTrace);
    while (true) {
      t1 = this._pending;
      if (t1 != null) {
        t1.get$isEmpty;
        t2 = t1.lastPendingEvent != null;
      } else
        t2 = false;
      if (!t2)
        break;
      t1.handleNext$1(this);
    }
  },
  get$addError: function() {
    return new $.Bound_addError__AsBroadcastStreamController(this, "addError$2", null);
  },
  close$0: function(_) {
    var t1, t2;
    if ((this._state & 2) !== 0) {
      if (this._pending == null)
        this._pending = new $._StreamImplEvents(null, null, 0);
      t1 = this._pending;
      t1.add$1;
      t2 = t1.lastPendingEvent;
      if (t2 == null) {
        t1.lastPendingEvent = $.C__DelayedDone;
        t1.firstPendingEvent = $.C__DelayedDone;
      } else {
        t2.set$next($.C__DelayedDone);
        t1.lastPendingEvent = $.C__DelayedDone;
      }
      t1 = this._state;
      t2 = this.get$_STATE_CLOSED();
      if (typeof t2 !== "number")
        throw $.iae(t2);
      this._state = $.JSInt_methods.$or(t1, t2);
      return;
    }
    $._BroadcastStreamController.prototype.close$0.call(this, this);
  },
  get$close: function(_receiver) {
    return new $.BoundClosure$i0(this, "close$0", _receiver);
  },
  _callOnCancel$0: function() {
    var t1, t2;
    t1 = this._pending;
    if (t1 != null) {
      t1.get$isEmpty;
      t2 = t1.lastPendingEvent != null;
    } else
      t2 = false;
    if (t2) {
      t1.clear$0;
      t2 = t1._state === 1;
      if (t2)
        if (t2)
          t1._state = 3;
      t1.lastPendingEvent = null;
      t1.firstPendingEvent = null;
      this._pending = null;
    }
    $._BroadcastStreamController.prototype._callOnCancel$0.call(this);
  }
},

_BufferingStreamSubscription: {"": "Object;_liblib4$_onData,_onError,_onDone,_zone<,_state@,_pending",
  _liblib4$_onData$1: function(arg0) {
    return this._liblib4$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _setPendingEvents$1: function(pendingEvents) {
    if (pendingEvents == null)
      return;
    this._pending = pendingEvents;
    pendingEvents.get$isEmpty;
    if (pendingEvents.lastPendingEvent != null) {
      this._state = (this._state | 32) >>> 0;
      this._pending.schedule$1(this);
    }
  },
  cancel$0: function() {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    this._state = (t1 | 8) >>> 0;
    this._zone.cancelCallbackExpectation$0();
    if ((this._state & 32) !== 0) {
      t1 = this._pending;
      t1.cancelSchedule$0;
      if (t1._state === 1)
        t1._state = 3;
    }
    t1 = this._state;
    if ((t1 & 16) === 0) {
      this._state = (t1 | 16) >>> 0;
      this._onCancel$0();
      this._pending = null;
      this._state = (this._state & 4294967279) >>> 0;
    }
  },
  _liblib4$_add$1: function(data) {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    if (t1 < 16)
      this._sendData$1(data);
    else
      this._addPending$1(new $._DelayedData(data, null));
  },
  _addError$1: function(error) {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    if (t1 < 16)
      this._sendError$1(error);
    else
      this._addPending$1(new $._DelayedError(error, null));
  },
  _close$0: function() {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    this._state = (t1 | 2) >>> 0;
    if (this._state < 16)
      this._sendDone$0();
    else
      this._addPending$1($.C__DelayedDone);
  },
  _onPause$0: function() {
  },
  _onResume$0: function() {
  },
  _onCancel$0: function() {
  },
  _addPending$1: function($event) {
    var pending, t1;
    pending = this._pending;
    if (pending == null) {
      pending = new $._StreamImplEvents(null, null, 0);
      this._pending = pending;
    }
    pending.add$1;
    t1 = pending.lastPendingEvent;
    if (t1 == null) {
      pending.lastPendingEvent = $event;
      pending.firstPendingEvent = $event;
    } else {
      t1.set$next($event);
      pending.lastPendingEvent = $event;
    }
    t1 = this._state;
    if ((t1 & 32) === 0) {
      this._state = (t1 | 32) >>> 0;
      if (!(this._state >= 64))
        this._pending.schedule$1(this);
    }
  },
  _sendData$1: function(data) {
    var t1 = this._state;
    this._state = (t1 | 16) >>> 0;
    this._zone.executePeriodicCallbackGuarded$1(new $._BufferingStreamSubscription__sendData_closure(this, data));
    this._state = (this._state & 4294967279) >>> 0;
    this._checkState$1((t1 & 4) !== 0);
  },
  _sendError$1: function(error) {
    var t1, t2, t3;
    t1 = this._state;
    this._state = (t1 | 16) >>> 0;
    t2 = this._zone;
    if (!t2.inSameErrorZone$1($.get$_Zone__current()))
      $.get$_Zone__current().handleUncaughtError$1(error);
    else
      t2.executePeriodicCallbackGuarded$1(new $._BufferingStreamSubscription__sendError_closure(this, error));
    this._state = (this._state & 4294967279) >>> 0;
    t3 = this._state;
    if ((t3 & 1) !== 0) {
      this._state = (t3 | 8) >>> 0;
      t2.cancelCallbackExpectation$0();
      if ((this._state & 32) !== 0) {
        t2 = this._pending;
        t2.cancelSchedule$0;
        if (t2._state === 1)
          t2._state = 3;
      }
    }
    this._checkState$1((t1 & 4) !== 0);
  },
  _sendDone$0: function() {
    this._state = (this._state | 26) >>> 0;
    this._zone.executeCallbackGuarded$1(this._onDone);
    this._onCancel$0();
    this._state = (this._state & 4294967279) >>> 0;
  },
  _guardCallback$1: function(callback) {
    var t1 = this._state;
    this._state = (t1 | 16) >>> 0;
    callback.call$0();
    this._state = (this._state & 4294967279) >>> 0;
    this._checkState$1((t1 & 4) !== 0);
  },
  _checkState$1: function(wasInputPaused) {
    var t1, t2, isInputPaused;
    t1 = this._state;
    if ((t1 & 32) !== 0) {
      t2 = this._pending;
      t2.get$isEmpty;
      t2 = t2.lastPendingEvent == null;
    } else
      t2 = false;
    if (t2) {
      this._state = (t1 & 4294967263) >>> 0;
      t1 = this._state;
      if ((t1 & 4) !== 0)
        if (!(t1 >= 64)) {
          t2 = this._pending;
          if (t2 != null) {
            t2.get$isEmpty;
            t2 = t2.lastPendingEvent == null;
          } else
            t2 = true;
        } else
          t2 = false;
      else
        t2 = false;
      if (t2)
        this._state = (t1 & 4294967291) >>> 0;
    }
    for (; true; wasInputPaused = isInputPaused) {
      t1 = this._state;
      if ((t1 & 8) !== 0) {
        this._onCancel$0();
        this._pending = null;
        return;
      }
      isInputPaused = (t1 & 4) !== 0;
      if (wasInputPaused === isInputPaused)
        break;
      this._state = (t1 ^ 16) >>> 0;
      if (isInputPaused)
        this._onPause$0();
      else
        this._onResume$0();
      this._state = (this._state & 4294967279) >>> 0;
    }
    t1 = this._state;
    if ((t1 & 32) !== 0 && !(t1 >= 64))
      this._pending.schedule$1(this);
  },
  _BufferingStreamSubscription$4: function(_onData, _onError, _onDone, cancelOnError) {
    this._zone.expectCallback$0();
  }
},

_BufferingStreamSubscription__sendData_closure: {"": "Closure;this_0,data_1",
  call$0: function() {
    return this.this_0._liblib4$_onData$1(this.data_1);
  }
},

_BufferingStreamSubscription__sendError_closure: {"": "Closure;this_0,error_1",
  call$0: function() {
    return this.this_0._onError$1(this.error_1);
  }
},

_StreamImpl: {"": "Stream;",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var subscription;
    if (onError == null)
      onError = $._nullErrorHandler$closure;
    if (onDone == null)
      onDone = $._nullDoneHandler$closure;
    subscription = this._createSubscription$4(onData, onError, onDone, true === cancelOnError);
    this._onListen$1(subscription);
    return subscription;
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
  },
  listen$1: function(onData) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
  },
  _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
    return $._BufferingStreamSubscription$(onData, onError, onDone, cancelOnError);
  },
  _onListen$1: function(subscription) {
  },
  get$_onListen: function() {
    return new $.BoundClosure$1(this, "_onListen$1", null);
  }
},

_DelayedEvent: {"": "Object;next@"},

_DelayedData: {"": "_DelayedEvent;value,next",
  perform$1: function(dispatch) {
    dispatch._sendData$1(this.value);
  }
},

_DelayedError: {"": "_DelayedEvent;error,next",
  perform$1: function(dispatch) {
    dispatch._sendError$1(this.error);
  }
},

_DelayedDone: {"": "Object;",
  perform$1: function(dispatch) {
    dispatch._sendDone$0();
  },
  get$next: function() {
    return;
  },
  set$next: function(_) {
    throw $.wrapException(new $.StateError("No events after a done."));
  }
},

_PendingEvents: {"": "Object;_state@",
  schedule$1: function(dispatch) {
    var t1 = this._state;
    if (t1 === 1)
      return;
    if (t1 >= 1) {
      this._state = 1;
      return;
    }
    $.get$_Zone__current().runAsync$1(new $._PendingEvents_schedule_closure(this, dispatch));
    this._state = 1;
  }
},

_PendingEvents_schedule_closure: {"": "Closure;this_0,dispatch_1",
  call$0: function() {
    var t1, oldState;
    t1 = this.this_0;
    oldState = t1.get$_state();
    t1.set$_state(0);
    if (oldState === 3)
      return;
    t1.handleNext$1(this.dispatch_1);
  }
},

_StreamImplEvents: {"": "_PendingEvents;firstPendingEvent,lastPendingEvent,_state",
  get$isEmpty: function(_) {
    return this.lastPendingEvent == null;
  },
  add$1: function(_, $event) {
    var t1 = this.lastPendingEvent;
    if (t1 == null) {
      this.lastPendingEvent = $event;
      this.firstPendingEvent = $event;
    } else {
      t1.set$next($event);
      this.lastPendingEvent = $event;
    }
  },
  handleNext$1: function(dispatch) {
    var $event = this.firstPendingEvent;
    this.firstPendingEvent = $event.get$next();
    if (this.firstPendingEvent == null)
      this.lastPendingEvent = null;
    $event.perform$1(dispatch);
  }
},

_AsBroadcastStream: {"": "Stream;_source,_liblib4$_controller,_subscription",
  get$isBroadcast: function() {
    return true;
  },
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var t1, t2, t3;
    t1 = this._liblib4$_controller;
    if (t1 == null)
      throw $.wrapException(new $.StateError("Source stream has been closed."));
    if (this._subscription == null) {
      t2 = t1.get$add(t1);
      t3 = t1.get$addError();
      this._subscription = this._source.listen$3$onDone$onError(t2, t1.get$close(t1), t3);
    }
    t1 = this._liblib4$_controller;
    t1.get$stream;
    return new $._BroadcastStream(t1).listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
  },
  listen$1: function(onData) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
  },
  _onCancel$0: function() {
    var subscription = this._subscription;
    this._subscription = null;
    this._liblib4$_controller = null;
    subscription.cancel$0();
  },
  get$_onCancel: function() {
    return new $.BoundClosure$0(this, "_onCancel$0", null);
  }
},

_ZoneBase: {"": "Object;_openCallbacks@",
  get$_errorZone: function() {
    return this._parentZone.get$_errorZone();
  },
  handleUncaughtError$1: function(error) {
    this._parentZone.handleUncaughtError$1(error);
  },
  inSameErrorZone$1: function(otherZone) {
    return $.$eq(this.get$_errorZone(), otherZone.get$_errorZone());
  },
  fork$0: function() {
    return this;
  },
  expectCallback$0: function() {
    var t1 = this._openCallbacks;
    this._openCallbacks = t1 + 1;
    return t1;
  },
  cancelCallbackExpectation$0: function() {
    this._openCallbacks = this._openCallbacks - 1;
    if (this._isExecutingCallback !== true && this._openCallbacks === 0 && this._children.length === 0)
      ;
  },
  executeCallbackGuarded$1: function(fun) {
    this._openCallbacks = this._openCallbacks - 1;
    this._runInZone$2(fun, true);
  },
  executePeriodicCallbackGuarded$1: function(fun) {
    this._runInZone$2(fun, true);
  },
  _runInZone$2: function(fun, handleUncaught) {
    var oldZone, oldIsExecuting, e, s, t1, exception;
    if ($.get$_Zone__current() === this && handleUncaught !== true && this._isExecutingCallback === true)
      return fun.call$0();
    oldZone = $.get$_Zone__current();
    $._Zone__current = this;
    oldIsExecuting = this._isExecutingCallback;
    this._isExecutingCallback = true;
    try {
      try {
        t1 = fun.call$0();
        return t1;
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        if (handleUncaught === true)
          this.handleUncaughtError$1($._asyncError(e, s));
        else
          throw exception;
      }

    } finally {
      this._isExecutingCallback = oldIsExecuting;
      $._Zone__current = oldZone;
      if (this._isExecutingCallback !== true)
        if (this._openCallbacks === 0)
          t1 = this._children.length === 0;
        else
          t1 = false;
      else
        t1 = false;
      if (t1)
        ;
    }
  },
  runAsync$1: function(fun) {
    var milliseconds;
    this._openCallbacks = this._openCallbacks + 1;
    $.get$_asyncCallbacks()._add$1(new $._ZoneBase_runAsync_closure(this, fun));
    if (!$._callbacksAreEnqueued) {
      milliseconds = $.JSNumber_methods.$tdiv($.Duration_0._duration, 1000);
      $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, $._asyncRunCallback$closure);
      $._callbacksAreEnqueued = true;
    }
  },
  createTimer$2: function(duration, callback) {
    var t1, t2, milliseconds;
    t1 = new $._ZoneTimer(this, callback, null, false);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t2 = t1.get$run();
    milliseconds = $.JSNumber_methods.$tdiv(duration._duration, 1000);
    t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
    return t1;
  },
  createPeriodicTimer$2: function(duration, callback) {
    var t1, t2, milliseconds;
    t1 = new $._PeriodicZoneTimer(this, callback, null, false);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t2 = t1.get$run();
    milliseconds = $.JSNumber_methods.$tdiv(duration._duration, 1000);
    t1._timer = $.TimerImpl$periodic(milliseconds < 0 ? 0 : milliseconds, t2);
    return t1;
  }
},

_ZoneBase_runAsync_closure: {"": "Closure;this_0,fun_1",
  call$0: function() {
    var t1 = this.this_0;
    t1.set$_openCallbacks(t1.get$_openCallbacks() - 1);
    t1._runInZone$2(this.fun_1, true);
  }
},

_DefaultZone: {"": "_ZoneBase;_parentZone,_children,_openCallbacks,_isExecutingCallback",
  get$_errorZone: function() {
    return this;
  },
  handleUncaughtError$1: function(error) {
    var milliseconds;
    $.get$_asyncCallbacks()._add$1(new $._DefaultZone_handleUncaughtError_closure(error));
    if (!$._callbacksAreEnqueued) {
      milliseconds = $.JSNumber_methods.$tdiv($.Duration_0._duration, 1000);
      $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, $._asyncRunCallback$closure);
      $._callbacksAreEnqueued = true;
    }
  }
},

_DefaultZone_handleUncaughtError_closure: {"": "Closure;error_0",
  call$0: function() {
    var t1, trace;
    t1 = this.error_0;
    $.Primitives_printString("Uncaught Error: " + $.S(t1));
    trace = $.getAttachedStackTrace(t1);
    $._attachStackTrace(t1, null);
    if (trace != null)
      $.Primitives_printString("Stack Trace:\n" + $.S(trace) + "\n");
    throw $.wrapException(t1);
  }
},

_ZoneTimer: {"": "Object;_zone<,_liblib4$_callback,_timer,_isDone",
  _liblib4$_callback$1: function(arg0) {
    return this._liblib4$_callback.call$1(arg0);
  },
  run$0: function() {
    this._isDone = true;
    var t1 = this._zone;
    t1._openCallbacks = t1._openCallbacks - 1;
    t1._runInZone$2(this._liblib4$_callback, true);
  },
  get$run: function() {
    return new $.BoundClosure$0(this, "run$0", null);
  },
  cancel$0: function() {
    if (!this._isDone) {
      var t1 = this._zone;
      t1._openCallbacks = t1._openCallbacks - 1;
      if (t1._isExecutingCallback !== true && t1._openCallbacks === 0 && t1._children.length === 0)
        ;
    }
    this._isDone = true;
    this._timer.cancel$0();
  }
},

_PeriodicZoneTimer: {"": "Object;_zone<,_liblib4$_callback,_timer,_isDone",
  _liblib4$_callback$1: function(arg0) {
    return this._liblib4$_callback.call$1(arg0);
  },
  run$1: function(timer) {
    this._zone._runInZone$2(new $._PeriodicZoneTimer_run_closure(this), true);
  },
  get$run: function() {
    return new $.BoundClosure$1(this, "run$1", null);
  },
  cancel$0: function() {
    if (!this._isDone) {
      var t1 = this._zone;
      t1._openCallbacks = t1._openCallbacks - 1;
      if (t1._isExecutingCallback !== true && t1._openCallbacks === 0 && t1._children.length === 0)
        ;
    }
    this._isDone = true;
    this._timer.cancel$0();
  }
},

_PeriodicZoneTimer_run_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1._liblib4$_callback$1(t1);
  }
},

_attachStackTrace: function(o, st) {
  var t1;
  if (o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string")
    return;
  t1 = $.get$_stackTraceExpando();
  t1.$indexSet(t1, o, st);
},

getAttachedStackTrace: function(o) {
  var t1, values;
  if (o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string")
    return;
  t1 = $.get$_stackTraceExpando();
  values = $.Primitives_getProperty(o, "expando$values");
  return values == null ? null : $.Primitives_getProperty(values, t1._getKey$0());
},

_asyncRunCallback: function() {
  var callback, t1, exception, milliseconds;
  for (; t1 = $.get$_asyncCallbacks(), t1._head !== t1._tail;) {
    callback = $.get$_asyncCallbacks().removeFirst$0();
    try {
      callback.call$0();
    } catch (exception) {
      $.unwrapException(exception);
      milliseconds = $.JSNumber_methods.$tdiv($.Duration_0._duration, 1000);
      $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, $._asyncRunCallback$closure);
      throw exception;
    }

  }
  $._callbacksAreEnqueued = false;
},

_FutureImpl__FutureImpl$wait: function(futures) {
  var t1, t2, t3, future, pos, completer;
  t1 = {};
  t1.completer_0 = null;
  t1.values_1 = null;
  t2 = new $._FutureImpl__FutureImpl$wait_handleError(t1);
  t1.remaining_2 = 0;
  for (t3 = new $.ListIterator(futures, futures.length, 0, null); t3.moveNext$0();) {
    future = t3._liblib0$_current;
    pos = t1.remaining_2;
    t1.remaining_2 = $.$add$ns(pos, 1);
    future.catchError$1(t2).then$1(new $._FutureImpl__FutureImpl$wait_closure(t1, pos));
  }
  if ($.$eq(t1.remaining_2, 0)) {
    t1 = new $._FutureImpl(0, $.get$_Zone__current().fork$0(), null);
    t1._state = 4;
    t1._resultOrListeners = $.List_empty;
    return t1;
  }
  t1.values_1 = $.List_List(t1.remaining_2);
  completer = new $._AsyncCompleter(new $._FutureImpl(0, $.get$_Zone__current().fork$0(), null), false);
  t2 = completer.future._zone;
  t2._openCallbacks = t2._openCallbacks + 1;
  t1.completer_0 = completer;
  return t1.completer_0.future;
},

_runGuarded: function(notificationHandler) {
  var e, s, exception, t1;
  if (notificationHandler == null)
    return;
  try {
    notificationHandler.call$0();
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    s = $.getTraceFromException(exception);
    $.get$_Zone__current().handleUncaughtError$1($._asyncError(e, s));
  }

},

_BufferingStreamSubscription$: function(_onData, _onError, _onDone, cancelOnError) {
  var t1, t2;
  t1 = $.get$_Zone__current();
  t2 = cancelOnError ? 1 : 0;
  t2 = new $._BufferingStreamSubscription(_onData, _onError, _onDone, t1, t2, null);
  t2._BufferingStreamSubscription$4(_onData, _onError, _onDone, cancelOnError);
  return t2;
},

_nullDataHandler: function(value) {
},

_nullErrorHandler: function(error) {
  $.get$_Zone__current().handleUncaughtError$1(error);
},

_nullDoneHandler: function() {
},

_asyncError: function(error, stackTrace) {
  if (stackTrace == null)
    return error;
  if ($.getAttachedStackTrace(error) != null)
    return error;
  $._attachStackTrace(error, stackTrace);
  return error;
}}],
["dart.collection", "dart:collection", , {
HashMap_values_closure: {"": "Closure;this_0",
  call$1: function(each) {
    return $.$index$asx(this.this_0, each);
  }
},

HashMapKeyIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._length;
  },
  get$isEmpty: function(_) {
    return this._map._length === 0;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    return new $.HashMapKeyIterator(t1, t1._computeKeys$0(), 0, null);
  },
  $asIterable: null
},

HashMapKeyIterator: {"": "Object;_map,_keys,_offset,_current",
  get$current: function() {
    return this._current;
  },
  moveNext$0: function() {
    var keys, offset, t1;
    keys = this._keys;
    offset = this._offset;
    t1 = this._map;
    if (keys !== t1._keys)
      throw $.wrapException(new $.ConcurrentModificationError(t1));
    else if (offset >= keys.length) {
      this._current = null;
      return false;
    } else {
      this._current = keys[offset];
      this._offset = offset + 1;
      return true;
    }
  }
},

LinkedHashMap_values_closure: {"": "Closure;this_0",
  call$1: function(each) {
    return $.$index$asx(this.this_0, each);
  }
},

LinkedHashMapCell: {"": "Object;_key<,_value@,_next@,_previous"},

LinkedHashMapKeyIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._length;
  },
  get$isEmpty: function(_) {
    return this._map._length === 0;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    t1 = new $.LinkedHashMapKeyIterator(t1, t1._modifications, null, null);
    t1._cell = t1._map._first;
    return t1;
  },
  $asIterable: null
},

LinkedHashMapKeyIterator: {"": "Object;_map,_modifications,_cell,_current",
  get$current: function() {
    return this._current;
  },
  moveNext$0: function() {
    var t1 = this._map;
    if (this._modifications !== t1._modifications)
      throw $.wrapException(new $.ConcurrentModificationError(t1));
    else {
      t1 = this._cell;
      if (t1 == null) {
        this._current = null;
        return false;
      } else {
        this._current = t1.get$_key();
        this._cell = this._cell.get$_next();
        return true;
      }
    }
  }
},

HashSetIterator: {"": "Object;_set,_elements,_offset,_current",
  get$current: function() {
    return this._current;
  },
  moveNext$0: function() {
    var elements, offset, t1;
    elements = this._elements;
    offset = this._offset;
    t1 = this._set;
    if (elements !== t1._elements)
      throw $.wrapException(new $.ConcurrentModificationError(t1));
    else if (offset >= elements.length) {
      this._current = null;
      return false;
    } else {
      this._current = elements[offset];
      this._offset = offset + 1;
      return true;
    }
  }
},

HashMap: {"": "Object;_length,_strings,_nums,_rest,_keys",
  get$length: function(_) {
    return this._length;
  },
  get$isEmpty: function(_) {
    return this._length === 0;
  },
  get$keys: function(_) {
    return new $.HashMapKeyIterable(this);
  },
  get$values: function(_) {
    return new $.MappedIterable(new $.HashMapKeyIterable(this), new $.HashMap_values_closure(this));
  },
  containsKey$1: function(_, key) {
    var strings, nums, rest;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      return strings == null ? false : strings[key] != null;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      return nums == null ? false : nums[key] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return $.HashMap__findBucketIndex(rest[$.get$hashCode$(key) & 0x3ffffff], key) >= 0;
    }
  },
  $index: function(_, key) {
    var strings, t1, entry, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        t1 = null;
      else {
        entry = strings[key];
        t1 = entry === strings ? null : entry;
      }
      return t1;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        t1 = null;
      else {
        entry = nums[key];
        t1 = entry === nums ? null : entry;
      }
      return t1;
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[$.get$hashCode$(key) & 0x3ffffff];
      index = $.HashMap__findBucketIndex(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    }
  },
  $indexSet: function(_, key, value) {
    var strings, table, nums, rest, hash, bucket, t1, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        if (table == null)
          table["<non-identifier-key>"] = table;
        else
          table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._strings = table;
        strings = table;
      }
      if (strings[key] == null) {
        this._length = this._length + 1;
        this._keys = null;
      }
      if (value == null)
        strings[key] = strings;
      else
        strings[key] = value;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        if (table == null)
          table["<non-identifier-key>"] = table;
        else
          table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._nums = table;
        nums = table;
      }
      if (nums[key] == null) {
        this._length = this._length + 1;
        this._keys = null;
      }
      if (value == null)
        nums[key] = nums;
      else
        nums[key] = value;
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        if (table == null)
          table["<non-identifier-key>"] = table;
        else
          table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._rest = table;
        rest = table;
      }
      hash = $.get$hashCode$(key) & 0x3ffffff;
      bucket = rest[hash];
      if (bucket == null) {
        t1 = [key, value];
        if (t1 == null)
          rest[hash] = rest;
        else
          rest[hash] = t1;
        this._length = this._length + 1;
        this._keys = null;
      } else {
        index = $.HashMap__findBucketIndex(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          this._length = this._length + 1;
          this._keys = null;
        }
      }
    }
  },
  remove$1: function(_, key) {
    var rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__")
      return this._removeHashTableEntry$2(this._strings, key);
    else if (typeof key === "number" && (key & 0x3ffffff) === key)
      return this._removeHashTableEntry$2(this._nums, key);
    else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[$.get$hashCode$(key) & 0x3ffffff];
      index = $.HashMap__findBucketIndex(bucket, key);
      if (index < 0)
        return;
      this._length = this._length - 1;
      this._keys = null;
      return bucket.splice(index, 2)[1];
    }
  },
  forEach$1: function(_, action) {
    var keys, $length, i, key;
    keys = this._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      key = keys[i];
      action.call$2(key, this.$index(this, key));
      if (keys !== this._keys)
        throw $.wrapException(new $.ConcurrentModificationError(this));
    }
  },
  toString$0: function(_) {
    var result = new $.StringBuffer("");
    result._contents = "";
    $.ToString__emitPair(this, result, $.List_List($));
    return result._contents;
  },
  _computeKeys$0: function() {
    var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
    t1 = this._keys;
    if (t1 != null)
      return t1;
    result = $.List_List(this._length);
    strings = this._strings;
    if (strings != null) {
      names = Object.getOwnPropertyNames(strings);
      entries = names.length;
      for (index = 0, i = 0; i < entries; ++i) {
        result[index] = names[i];
        ++index;
      }
    } else
      index = 0;
    nums = this._nums;
    if (nums != null) {
      names = Object.getOwnPropertyNames(nums);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        result[index] = +names[i];
        ++index;
      }
    }
    rest = this._rest;
    if (rest != null) {
      names = Object.getOwnPropertyNames(rest);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        bucket = rest[names[i]];
        $length = bucket.length;
        for (i0 = 0; i0 < $length; i0 += 2) {
          result[index] = bucket[i0];
          ++index;
        }
      }
    }
    this._keys = result;
    return result;
  },
  _removeHashTableEntry$2: function(table, key) {
    var entry, value;
    if (table != null && table[key] != null) {
      entry = table[key];
      value = entry === table ? null : entry;
      delete table[key];
      this._length = this._length - 1;
      this._keys = null;
      return value;
    } else
      return;
  },
  $isMap: true,
  $asMap: null
},

_HashSetBase: {"": "IterableBase;",
  toString$0: function(_) {
    var result = new $.StringBuffer("");
    result._contents = "";
    $.ToString__emitValue(this, result, $.List_List($));
    return result._contents;
  },
  $asIterable: null,
  $isIterable: true
},

HashSet: {"": "_HashSetBase;_length,_strings,_nums,_rest,_elements",
  get$iterator: function(_) {
    return new $.HashSetIterator(this, this._computeElements$0(), 0, null);
  },
  get$length: function(_) {
    return this._length;
  },
  get$isEmpty: function(_) {
    return this._length === 0;
  },
  contains$1: function(_, object) {
    var strings, nums, rest;
    if (false) {
      strings = this._strings;
      return strings == null ? false : strings[object] != null;
    } else if ((object & 0x3ffffff) === object) {
      nums = this._nums;
      return nums == null ? false : nums[object] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return $.HashSet__findBucketIndex(rest[$.JSInt_methods.get$hashCode(object) & 0x3ffffff], object) >= 0;
    }
  },
  add$1: function(_, element) {
    var strings, table, nums, rest, hash, bucket;
    if (typeof element === "string" && element !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._strings = table;
        strings = table;
      }
      this._addHashTableEntry$2(strings, element);
    } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._nums = table;
        nums = table;
      }
      this._addHashTableEntry$2(nums, element);
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._rest = table;
        rest = table;
      }
      hash = $.get$hashCode$(element) & 0x3ffffff;
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if ($.HashSet__findBucketIndex(bucket, element) >= 0)
          return;
        bucket.push(element);
      }
      this._length = this._length + 1;
      this._elements = null;
    }
  },
  remove$1: function(_, object) {
    var rest, bucket, index;
    if (typeof object === "string" && object !== "__proto__")
      return this._removeHashTableEntry$2(this._strings, object);
    else if (typeof object === "number" && (object & 0x3ffffff) === object)
      return this._removeHashTableEntry$2(this._nums, object);
    else {
      rest = this._rest;
      if (rest == null)
        return false;
      bucket = rest[$.get$hashCode$(object) & 0x3ffffff];
      index = $.HashSet__findBucketIndex(bucket, object);
      if (index < 0)
        return false;
      this._length = this._length - 1;
      this._elements = null;
      bucket.splice(index, 1);
      return true;
    }
  },
  _computeElements$0: function() {
    var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
    t1 = this._elements;
    if (t1 != null)
      return t1;
    result = $.List_List(this._length);
    strings = this._strings;
    if (strings != null) {
      names = Object.getOwnPropertyNames(strings);
      entries = names.length;
      for (index = 0, i = 0; i < entries; ++i) {
        result[index] = names[i];
        ++index;
      }
    } else
      index = 0;
    nums = this._nums;
    if (nums != null) {
      names = Object.getOwnPropertyNames(nums);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        result[index] = +names[i];
        ++index;
      }
    }
    rest = this._rest;
    if (rest != null) {
      names = Object.getOwnPropertyNames(rest);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        bucket = rest[names[i]];
        $length = bucket.length;
        for (i0 = 0; i0 < $length; ++i0) {
          result[index] = bucket[i0];
          ++index;
        }
      }
    }
    this._elements = result;
    return result;
  },
  _addHashTableEntry$2: function(table, element) {
    if (table[element] != null)
      return;
    table[element] = 0;
    this._length = this._length + 1;
    this._elements = null;
  },
  _removeHashTableEntry$2: function(table, element) {
    if (table != null && table[element] != null) {
      delete table[element];
      this._length = this._length - 1;
      this._elements = null;
      return true;
    } else
      return false;
  },
  $asIterable: null
},

IterableBase: {"": "Object;",
  forEach$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  any$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) === true)
        return true;
    return false;
  },
  toList$1$growable: function(_, growable) {
    return $.List_List$from(this, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$length: function(_) {
    var it, count;
    it = this.get$iterator(this);
    for (count = 0; it.moveNext$0() === true;)
      ++count;
    return count;
  },
  get$isEmpty: function(_) {
    return this.get$iterator(this).moveNext$0() !== true;
  },
  elementAt$1: function(_, index) {
    var t1, remaining, element;
    if (typeof index !== "number")
      return this.elementAt$1$bailout(1, index);
    if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0() === true;) {
      element = t1.get$current();
      if (remaining === 0)
        return element;
      --remaining;
    }
    throw $.wrapException(new $.RangeError("value " + $.S(index)));
  },
  elementAt$1$bailout: function(state0, index) {
    var t1, remaining, element, t2;
    if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0() === true;) {
      element = t1.get$current();
      t2 = $.getInterceptor(remaining);
      if (t2.$eq(remaining, 0))
        return element;
      remaining = t2.$sub(remaining, 1);
    }
    throw $.wrapException(new $.RangeError("value " + $.S(index)));
  },
  $isIterable: true,
  $asIterable: null
},

LinkedHashMap: {"": "Object;_length,_strings,_nums,_rest,_first,_last,_modifications",
  $index: function(_, key) {
    var strings, cell, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        return;
      cell = strings[key];
      return cell == null ? null : cell.get$_value();
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return;
      cell = nums[key];
      return cell == null ? null : cell.get$_value();
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[$.get$hashCode$(key) & 0x3ffffff];
      index = $.LinkedHashMap__findBucketIndex(bucket, key);
      if (index < 0)
        return;
      return bucket[index].get$_value();
    }
  },
  $indexSet: function(_, key, value) {
    var strings, table, nums, rest, hash, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._strings = table;
        strings = table;
      }
      this._addHashTableEntry$3(strings, key, value);
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._nums = table;
        nums = table;
      }
      this._addHashTableEntry$3(nums, key, value);
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._rest = table;
        rest = table;
      }
      hash = $.get$hashCode$(key) & 0x3ffffff;
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [this._newLinkedCell$2(key, value)];
      else {
        index = $.LinkedHashMap__findBucketIndex(bucket, key);
        if (index >= 0)
          bucket[index].set$_value(value);
        else
          bucket.push(this._newLinkedCell$2(key, value));
      }
    }
  },
  forEach$1: function(_, action) {
    var cell, modifications;
    cell = this._first;
    modifications = this._modifications;
    for (; cell != null;) {
      action.call$2(cell.get$_key(), cell.get$_value());
      if (modifications !== this._modifications)
        throw $.wrapException(new $.ConcurrentModificationError(this));
      cell = cell.get$_next();
    }
  },
  get$keys: function(_) {
    return new $.LinkedHashMapKeyIterable(this);
  },
  get$values: function(_) {
    return new $.MappedIterable(new $.LinkedHashMapKeyIterable(this), new $.LinkedHashMap_values_closure(this));
  },
  get$length: function(_) {
    return this._length;
  },
  get$isEmpty: function(_) {
    return this._length === 0;
  },
  toString$0: function(_) {
    var result = new $.StringBuffer("");
    result._contents = "";
    $.ToString__emitPair(this, result, $.List_List($));
    return result._contents;
  },
  _addHashTableEntry$3: function(table, key, value) {
    var cell = table[key];
    if (cell == null)
      table[key] = this._newLinkedCell$2(key, value);
    else
      cell.set$_value(value);
  },
  _newLinkedCell$2: function(key, value) {
    var cell, last;
    cell = new $.LinkedHashMapCell(key, value, null, null);
    if (this._first == null) {
      this._last = cell;
      this._first = cell;
    } else {
      last = this._last;
      cell._previous = last;
      last.set$_next(cell);
      this._last = cell;
    }
    this._length = this._length + 1;
    this._modifications = this._modifications + 1 & 67108863;
    return cell;
  },
  $isMap: true,
  $asMap: null
},

ListMixin: {"": "Object;",
  get$iterator: function(receiver) {
    return new $.ListIterator(receiver, this.get$length(receiver), 0, null);
  },
  elementAt$1: function(receiver, index) {
    return this.$index(receiver, index);
  },
  forEach$1: function(receiver, action) {
    var $length, i;
    if (typeof receiver !== "string" && (typeof receiver !== "object" || receiver === null || receiver.constructor !== Array && !$.isJsIndexable(receiver, receiver[$.dispatchPropertyName])))
      return this.forEach$1$bailout(1, action, receiver);
    $length = receiver.length;
    for (i = 0; i < $length; ++i) {
      if (i >= receiver.length)
        throw $.ioore(i);
      action.call$1(receiver[i]);
      if ($length !== receiver.length)
        throw $.wrapException(new $.ConcurrentModificationError(receiver));
    }
  },
  forEach$1$bailout: function(state0, action, receiver) {
    var $length, i;
    $length = this.get$length(receiver);
    if (typeof $length !== "number")
      throw $.iae($length);
    i = 0;
    for (; i < $length; ++i) {
      action.call$1(this.$index(receiver, i));
      if ($length !== this.get$length(receiver))
        throw $.wrapException(new $.ConcurrentModificationError(receiver));
    }
  },
  get$isEmpty: function(receiver) {
    return $.$eq(this.get$length(receiver), 0);
  },
  add$1: function(receiver, element) {
    var t1 = this.get$length(receiver);
    this.set$length(receiver, $.$add$ns(t1, 1));
    this.$indexSet(receiver, t1, element);
  },
  removeLast$0: function(receiver) {
    var result;
    if ($.$eq(this.get$length(receiver), 0))
      throw $.wrapException(new $.StateError("No elements"));
    result = this.$index(receiver, $.$sub$n(this.get$length(receiver), 1));
    this.set$length(receiver, $.$sub$n(this.get$length(receiver), 1));
    return result;
  },
  toString$0: function(receiver) {
    var result = new $.StringBuffer("");
    result._contents = "";
    $.ToString__emitValue(receiver, result, $.List_List($));
    return result._contents;
  },
  $isList: true,
  $asList: null,
  $isIterable: true,
  $asIterable: null
},

ListQueue: {"": "IterableBase;_table,_head,_tail,_modificationCount",
  get$iterator: function(_) {
    return new $._ListQueueIterator(this, this._tail, this._modificationCount, this._head, null);
  },
  get$isEmpty: function(_) {
    return this._head === this._tail;
  },
  get$length: function(_) {
    return (this._tail - this._head & this._table.length - 1) >>> 0;
  },
  add$1: function(_, element) {
    this._add$1(element);
  },
  toString$0: function(_) {
    var result = new $.StringBuffer("");
    result._contents = "";
    $.ToString__emitValue(this, result, $.List_List($));
    return result._contents;
  },
  removeFirst$0: function() {
    var t1, t2, t3, result;
    if (this._head === this._tail)
      throw $.wrapException(new $.StateError("No elements"));
    this._modificationCount = this._modificationCount + 1;
    t1 = this._table;
    t2 = this._head;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw $.ioore(t2);
    result = t1[t2];
    this._head = (t2 + 1 & t3 - 1) >>> 0;
    return result;
  },
  removeLast$0: function(_) {
    var t1, t2;
    if (this._head === this._tail)
      throw $.wrapException(new $.StateError("No elements"));
    this._modificationCount = this._modificationCount + 1;
    this._tail = (this._tail - 1 & this._table.length - 1) >>> 0;
    t1 = this._table;
    t2 = this._tail;
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  _add$1: function(element) {
    var t1, t2, t3;
    t1 = this._table;
    t2 = this._tail;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw $.ioore(t2);
    t1[t2] = element;
    this._tail = (t2 + 1 & t3 - 1) >>> 0;
    if (this._head === this._tail)
      this._grow$0();
    this._modificationCount = this._modificationCount + 1;
  },
  _grow$0: function() {
    var newTable, t1, t2, split;
    newTable = $.List_List(this._table.length * 2);
    t1 = this._table;
    t2 = this._head;
    split = t1.length - t2;
    $.IterableMixinWorkaround_setRangeList(newTable, 0, split, t1, t2);
    t1 = this._head;
    t2 = this._table;
    $.IterableMixinWorkaround_setRangeList(newTable, split, split + t1, t2, 0);
    this._head = 0;
    this._tail = this._table.length;
    this._table = newTable;
  },
  ListQueue$1: function(initialCapacity) {
    var t1;
    if (true)
      initialCapacity = 8;
    else {
      t1 = $.JSNull_methods.$sub(initialCapacity, 1);
      if (typeof initialCapacity !== "number")
        throw initialCapacity.$and();
      if (typeof t1 !== "number")
        throw $.iae(t1);
      if ($.JSNull_methods.$and(initialCapacity, t1) !== 0)
        initialCapacity = $.ListQueue__nextPowerOf2(initialCapacity);
    }
    this._table = $.List_List(initialCapacity);
  },
  $asIterable: null,
  $isIterable: true
},

_ListQueueIterator: {"": "Object;_queue,_end,_modificationCount,_liblib2$_position,_current",
  get$current: function() {
    return this._current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._queue;
    if (this._modificationCount !== t1._modificationCount)
      $.throwExpression(new $.ConcurrentModificationError(t1));
    t2 = this._liblib2$_position;
    if (t2 === this._end) {
      this._current = null;
      return false;
    }
    t3 = t1._table;
    if (t2 < 0 || t2 >= t3.length)
      throw $.ioore(t2);
    this._current = t3[t2];
    this._liblib2$_position = (this._liblib2$_position + 1 & t1._table.length - 1) >>> 0;
    return true;
  }
},

HashMap__findBucketIndex: function(bucket, key) {
  var $length, i;
  if (bucket == null)
    return -1;
  $length = bucket.length;
  for (i = 0; i < $length; i += 2)
    if ($.$eq(bucket[i], key))
      return i;
  return -1;
},

LinkedHashMap__findBucketIndex: function(bucket, key) {
  var $length, i;
  if (bucket == null)
    return -1;
  $length = bucket.length;
  for (i = 0; i < $length; ++i)
    if ($.$eq(bucket[i].get$_key(), key))
      return i;
  return -1;
},

HashSet__findBucketIndex: function(bucket, element) {
  var $length, i;
  if (bucket == null)
    return -1;
  $length = bucket.length;
  for (i = 0; i < $length; ++i)
    if ($.$eq(bucket[i], element))
      return i;
  return -1;
},

ListQueue$: function(initialCapacity) {
  var t1 = new $.ListQueue(null, 0, 0, 0);
  t1.ListQueue$1(initialCapacity);
  return t1;
},

ListQueue__nextPowerOf2: function(number) {
  var nextNumber;
  number = $.JSNull_methods.$shl(number, 2) - 1;
  for (; true; number = nextNumber) {
    nextNumber = (number & number - 1) >>> 0;
    if (nextNumber === 0)
      return number;
  }
}}],
["dart.core", "dart:core", , {
NoSuchMethodError_toString_closure: {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1, t2, str, t3;
    t1 = this.box_0;
    if ($.$gt$n(t1.i_1, 0)) {
      t2 = t1.sb_0;
      t2._contents = t2._contents + ", ";
    }
    t2 = t1.sb_0;
    str = typeof key === "string" ? key : $.S(key);
    t2._contents = t2._contents + str;
    t2 = t1.sb_0;
    t2._contents = t2._contents + ": ";
    t2 = t1.sb_0;
    t3 = $.Error_safeToString(value);
    t2._contents = t2._contents + t3;
    t1.i_1 = $.$add$ns(t1.i_1, 1);
  }
},

DateTime: {"": "Object;millisecondsSinceEpoch,isUtc",
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isDateTime)
      return false;
    return $.$eq(this.millisecondsSinceEpoch, other.millisecondsSinceEpoch) && $.$eq(this.isUtc, other.isUtc);
  },
  get$hashCode: function(_) {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function(_) {
    var t1, t2, t3, y, m, d, h, min, sec, ms;
    t1 = new $.DateTime_toString_twoDigits();
    t2 = this.isUtc === true;
    if (t2) {
      if (this.date === void 0)
        this.date = new Date(this.millisecondsSinceEpoch);
      t3 = this.date.getUTCFullYear() + 0;
    } else {
      if (this.date === void 0)
        this.date = new Date(this.millisecondsSinceEpoch);
      t3 = this.date.getFullYear() + 0;
    }
    y = new $.DateTime_toString_fourDigits().call$1(t3);
    if (t2) {
      if (this.date === void 0)
        this.date = new Date(this.millisecondsSinceEpoch);
      t3 = this.date.getUTCMonth() + 1;
    } else {
      if (this.date === void 0)
        this.date = new Date(this.millisecondsSinceEpoch);
      t3 = this.date.getMonth() + 1;
    }
    m = t1.call$1(t3);
    if (t2) {
      if (this.date === void 0)
        this.date = new Date(this.millisecondsSinceEpoch);
      t3 = this.date.getUTCDate() + 0;
    } else {
      if (this.date === void 0)
        this.date = new Date(this.millisecondsSinceEpoch);
      t3 = this.date.getDate() + 0;
    }
    d = t1.call$1(t3);
    if (t2) {
      if (this.date === void 0)
        this.date = new Date(this.millisecondsSinceEpoch);
      t3 = this.date.getUTCHours() + 0;
    } else {
      if (this.date === void 0)
        this.date = new Date(this.millisecondsSinceEpoch);
      t3 = this.date.getHours() + 0;
    }
    h = t1.call$1(t3);
    if (t2) {
      if (this.date === void 0)
        this.date = new Date(this.millisecondsSinceEpoch);
      t3 = this.date.getUTCMinutes() + 0;
    } else {
      if (this.date === void 0)
        this.date = new Date(this.millisecondsSinceEpoch);
      t3 = this.date.getMinutes() + 0;
    }
    min = t1.call$1(t3);
    if (t2) {
      if (this.date === void 0)
        this.date = new Date(this.millisecondsSinceEpoch);
      t3 = this.date.getUTCSeconds() + 0;
    } else {
      if (this.date === void 0)
        this.date = new Date(this.millisecondsSinceEpoch);
      t3 = this.date.getSeconds() + 0;
    }
    sec = t1.call$1(t3);
    if (t2) {
      if (this.date === void 0)
        this.date = new Date(this.millisecondsSinceEpoch);
      t1 = this.date.getUTCMilliseconds() + 0;
    } else {
      if (this.date === void 0)
        this.date = new Date(this.millisecondsSinceEpoch);
      t1 = this.date.getMilliseconds() + 0;
    }
    ms = new $.DateTime_toString_threeDigits().call$1(t1);
    if (t2)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(_, duration) {
    var t1, t2;
    t1 = $.$add$ns(this.millisecondsSinceEpoch, duration.get$inMilliseconds());
    t2 = this.isUtc;
    if ($.abs$0$n(t1) > 8640000000000000)
      $.throwExpression(new $.ArgumentError(t1));
    if (t2 == null)
      $.throwExpression(new $.ArgumentError(t2));
    return new $.DateTime(t1, t2);
  },
  $isDateTime: true
},

DateTime_toString_fourDigits: {"": "Closure;",
  call$1: function(n) {
    var t1, absN, sign;
    t1 = $.getInterceptor$n(n);
    absN = t1.abs$0(n);
    sign = t1.$lt(n, 0) ? "-" : "";
    if (absN >= 1000)
      return $.S(n);
    if (absN >= 100)
      return sign + "0" + $.S(absN);
    if (absN >= 10)
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  }
},

DateTime_toString_threeDigits: {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100))
      return $.S(n);
    if (t1.$ge(n, 10))
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
},

DateTime_toString_twoDigits: {"": "Closure;",
  call$1: function(n) {
    if ($.$ge$n(n, 10))
      return $.S(n);
    return "0" + $.S(n);
  }
},

Duration: {"": "Object;_duration<",
  $add: function(_, other) {
    return $.Duration$(0, 0, this._duration + other.get$_duration(), 0, 0, 0);
  },
  $sub: function(_, other) {
    return $.Duration$(0, 0, this._duration - other.get$_duration(), 0, 0, 0);
  },
  $mul: function(_, factor) {
    if (typeof factor !== "number")
      throw $.iae(factor);
    return $.Duration$(0, 0, this._duration * factor, 0, 0, 0);
  },
  $lt: function(_, other) {
    return this._duration < other.get$_duration();
  },
  $gt: function(_, other) {
    return this._duration > other.get$_duration();
  },
  $le: function(_, other) {
    return this._duration <= other.get$_duration();
  },
  $ge: function(_, other) {
    return this._duration >= other.get$_duration();
  },
  get$inMilliseconds: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 1000);
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isDuration)
      return false;
    return this._duration === other._duration;
  },
  get$hashCode: function(_) {
    return this._duration & 0x1FFFFFFF;
  },
  toString$0: function(_) {
    var t1, t2, t3, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
    t1 = new $.Duration_toString_twoDigits();
    t2 = this._duration;
    if (t2 < 0)
      return "-" + $.S($.Duration$(0, 0, -t2, 0, 0, 0));
    t3 = $.JSNumber_methods.$tdiv(t2, 60000000);
    twoDigitMinutes = t1.call$1(t3 % 60);
    t3 = $.JSNumber_methods.$tdiv(t2, 1000000);
    twoDigitSeconds = t1.call$1(t3 % 60);
    sixDigitUs = new $.Duration_toString_sixDigits().call$1(t2 % 1000000);
    return $.S($.JSNumber_methods.$tdiv(t2, 3600000000)) + ":" + $.S(twoDigitMinutes) + ":" + $.S(twoDigitSeconds) + "." + $.S(sixDigitUs);
  },
  $isDuration: true
},

Duration_toString_sixDigits: {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100000))
      return $.S(n);
    if (t1.$ge(n, 10000))
      return "0" + $.S(n);
    if (t1.$ge(n, 1000))
      return "00" + $.S(n);
    if (t1.$ge(n, 100))
      return "000" + $.S(n);
    if (t1.$gt(n, 10))
      return "0000" + $.S(n);
    return "00000" + $.S(n);
  }
},

Duration_toString_twoDigits: {"": "Closure;",
  call$1: function(n) {
    if ($.$ge$n(n, 10))
      return $.S(n);
    return "0" + $.S(n);
  }
},

NullThrownError: {"": "Object;",
  toString$0: function(_) {
    return "Throw of null.";
  }
},

ArgumentError: {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 != null)
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
},

RangeError: {"": "ArgumentError;message",
  toString$0: function(_) {
    return "RangeError: " + $.S(this.message);
  }
},

NoSuchMethodError: {"": "Object;_liblib1$_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function(_) {
    var t1, sb, t2, t3, t4;
    t1 = {};
    sb = new $.StringBuffer("");
    sb._contents = "";
    t1.sb_0 = sb;
    t1.i_1 = 0;
    for (t2 = this._arguments; t3 = t1.i_1, t4 = $.getInterceptor$n(t3), t4.$lt(t3, t2.length); t1.i_1 = $.$add$ns(t1.i_1, 1)) {
      if (t4.$gt(t3, 0)) {
        t3 = t1.sb_0;
        t3._contents = t3._contents + ", ";
      }
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 >>> 0 !== t4 || t4 >= t2.length)
        throw $.ioore(t4);
      t4 = $.Error_safeToString(t2[t4]);
      t3._contents = t3._contents + t4;
    }
    t2 = this._namedArguments;
    t2.forEach$1(t2, new $.NoSuchMethodError_toString_closure(t1));
    return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\nReceiver: " + $.Error_safeToString(this._liblib1$_receiver) + "\nArguments: [" + $.S(t1.sb_0) + "]";
  }
},

UnsupportedError: {"": "Object;message",
  toString$0: function(_) {
    return "Unsupported operation: " + this.message;
  }
},

UnimplementedError: {"": "Object;message",
  toString$0: function(_) {
    return "UnimplementedError: " + this.message;
  }
},

StateError: {"": "Object;message",
  toString$0: function(_) {
    return "Bad state: " + this.message;
  }
},

ConcurrentModificationError: {"": "Object;modifiedObject",
  toString$0: function(_) {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.Error_safeToString(t1) + ".";
  }
},

StackOverflowError: {"": "Object;",
  toString$0: function(_) {
    return "Stack Overflow";
  }
},

CyclicInitializationError: {"": "Object;variableName",
  toString$0: function(_) {
    return "Reading static variable '" + this.variableName + "' during its initialization";
  }
},

_ExceptionImplementation: {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
},

FormatException: {"": "Object;message",
  toString$0: function(_) {
    return "FormatException: " + $.S(this.message);
  },
  $isException: true
},

Expando: {"": "Object;name",
  toString$0: function(_) {
    return "Expando:" + this.name;
  },
  $index: function(_, object) {
    var values = $.Primitives_getProperty(object, "expando$values");
    return values == null ? null : $.Primitives_getProperty(values, this._getKey$0());
  },
  $indexSet: function(_, object, value) {
    var values = $.Primitives_getProperty(object, "expando$values");
    if (values == null) {
      values = new $.Object();
      $.Primitives_setProperty(object, "expando$values", values);
    }
    $.Primitives_setProperty(values, this._getKey$0(), value);
  },
  _getKey$0: function() {
    var key, t1;
    key = $.Primitives_getProperty(this, "expando$key");
    if (key == null) {
      t1 = $.Expando__keyCount;
      $.Expando__keyCount = $.$add$ns(t1, 1);
      key = "expando$key$" + $.S(t1);
      $.Primitives_setProperty(this, "expando$key", key);
    }
    return key;
  }
},

Iterator: {"": "Object;"},

Object: {"": ";",
  $eq: function(_, other) {
    return this === other;
  },
  get$hashCode: function(_) {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function(_) {
    return "Instance of '" + $.Primitives_objectTypeName(this) + "'";
  }
},

StringBuffer: {"": "Object;_contents",
  get$length: function(_) {
    return this._contents.length;
  },
  get$isEmpty: function(_) {
    return this._contents.length === 0;
  },
  write$1: function(obj) {
    if (typeof obj !== "string")
      return this.write$1$bailout(1, obj);
    this._contents = this._contents + obj;
  },
  write$1$bailout: function(state0, obj) {
    var str = typeof obj === "string" ? obj : $.S(obj);
    this._contents = this._contents + str;
  },
  writeAll$2: function(objects, separator) {
    var iterator, str;
    if (typeof separator !== "string")
      return this.writeAll$2$bailout(1, objects, separator);
    iterator = $.get$iterator$ax(objects);
    if (iterator.moveNext$0() !== true)
      return;
    if ($.JSString_methods.get$isEmpty(separator))
      do {
        str = iterator.get$current();
        str = typeof str === "string" ? str : $.S(str);
        this._contents = this._contents + str;
      } while (iterator.moveNext$0() === true);
    else {
      str = iterator.get$current();
      str = typeof str === "string" ? str : $.S(str);
      this._contents = this._contents + str;
      for (; iterator.moveNext$0() === true;) {
        this._contents = this._contents + separator;
        str = iterator.get$current();
        str = typeof str === "string" ? str : $.S(str);
        this._contents = this._contents + str;
      }
    }
  },
  writeAll$2$bailout: function(state0, objects, separator) {
    var iterator, str, t1;
    iterator = $.get$iterator$ax(objects);
    if (iterator.moveNext$0() !== true)
      return;
    if ($.get$isEmpty$asx(separator) === true)
      do {
        str = iterator.get$current();
        str = typeof str === "string" ? str : $.S(str);
        this._contents = this._contents + str;
      } while (iterator.moveNext$0() === true);
    else {
      str = iterator.get$current();
      str = typeof str === "string" ? str : $.S(str);
      this._contents = this._contents + str;
      for (t1 = typeof separator === "string"; iterator.moveNext$0() === true;) {
        str = t1 ? separator : $.S(separator);
        this._contents = this._contents + str;
        str = iterator.get$current();
        str = typeof str === "string" ? str : $.S(str);
        this._contents = this._contents + str;
      }
    }
  },
  toString$0: function(_) {
    return this._contents;
  }
},

Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
  if (typeof microseconds !== "number")
    throw $.iae(microseconds);
  return new $.Duration(days * 86400000000 + hours * 3600000000 + minutes * 60000000 + seconds * 1000000 + milliseconds * 1000 + microseconds);
},

Error_safeToString: function(object) {
  var t1;
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString$0(object);
  if (typeof object === "string") {
    t1 = $.JSString_methods.replaceAll$2(object, "\\", "\\\\");
    t1 = $.stringReplaceAllUnchecked(t1, "\n", "\\n");
    t1 = $.stringReplaceAllUnchecked(t1, "\r", "\\r");
    return "\"" + $.stringReplaceAllUnchecked(t1, "\"", "\\\"") + "\"";
  }
  return "Instance of '" + $.Primitives_objectTypeName(object) + "'";
},

List_List: function($length) {
  var t1, result;
  t1 = $ === $length;
  if (t1)
    $length = null;
  if (t1)
    return new Array(0);
  if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
    throw $.wrapException(new $.ArgumentError("Length must be a positive integer: " + $.S($length) + "."));
  result = new Array($length);
  result.fixed$length = true;
  return result;
},

List_List$from: function(other, growable) {
  var list, t1, $length, fixedList, i;
  list = $.List_List($);
  for (t1 = $.get$iterator$ax(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  if (growable === true)
    return list;
  $length = list.length;
  fixedList = $.List_List($length);
  for (t1 = list.length, i = 0; i < $length; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    fixedList[i] = list[i];
  }
  return fixedList;
}}],
["dart.dom.html", "dart:html", , {
Interceptor_ListMixin: {"": "Interceptor+ListMixin;", $isList: true, $asList: function() { return [$.Node]; }, $isIterable: true, $asIterable: function() { return [$.Node]; }},

Interceptor_ListMixin_ImmutableListMixin: {"": "Interceptor_ListMixin+ImmutableListMixin;", $isList: true, $asList: function() { return [$.Node]; }, $isIterable: true, $asIterable: function() { return [$.Node]; }},

Storage_keys_closure: {"": "Closure;keys_0",
  call$2: function(k, v) {
    return this.keys_0.push(k);
  }
},

Storage_values_closure: {"": "Closure;values_0",
  call$2: function(k, v) {
    return this.values_0.push(v);
  }
},

Interceptor_ListMixin0: {"": "Interceptor+ListMixin;", $isList: true, $asList: function() { return [$.Touch]; }, $isIterable: true, $asIterable: function() { return [$.Touch]; }},

Interceptor_ListMixin_ImmutableListMixin0: {"": "Interceptor_ListMixin0+ImmutableListMixin;", $isList: true, $asList: function() { return [$.Touch]; }, $isIterable: true, $asIterable: function() { return [$.Touch]; }},

Interceptor_ListMixin1: {"": "Interceptor+ListMixin;", $isList: true, $asList: function() { return [$.Node]; }, $isIterable: true, $asIterable: function() { return [$.Node]; }},

Interceptor_ListMixin_ImmutableListMixin1: {"": "Interceptor_ListMixin1+ImmutableListMixin;", $isList: true, $asList: function() { return [$.Node]; }, $isIterable: true, $asIterable: function() { return [$.Node]; }},

_EventStream: {"": "Stream;_liblib$_target,_eventType,_useCapture",
  get$isBroadcast: function() {
    return true;
  },
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var t1, t2;
    t1 = new $._EventStreamSubscription(0, this._liblib$_target, this._eventType, onData, this._useCapture);
    t2 = t1._onData;
    if (t2 != null && !(t1._pauseCount > 0))
      $.$$dom_addEventListener$3$x(t1._liblib$_target, t1._eventType, t2, t1._useCapture);
    return t1;
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
  },
  listen$1: function(onData) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
  }
},

_EventStreamSubscription: {"": "StreamSubscription;_pauseCount,_liblib$_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    var t1, t2;
    t1 = this._liblib$_target;
    if (t1 == null)
      return;
    t2 = this._onData;
    if (t2 != null)
      $.$$dom_removeEventListener$3$x(t1, this._eventType, t2, this._useCapture);
    this._liblib$_target = null;
    this._onData = null;
  },
  get$isPaused: function() {
    return this._pauseCount > 0;
  }
},

EventStreamProvider: {"": "Object;_eventType"},

ImmutableListMixin: {"": "Object;",
  get$iterator: function(receiver) {
    return new $.FixedSizeListIterator(receiver, this.get$length(receiver), -1, null);
  },
  add$1: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException(new $.UnsupportedError("Cannot remove from immutable List."));
  },
  $isList: true,
  $asList: null,
  $isIterable: true,
  $asIterable: null
},

Point: {"": "Object;x>,y>",
  toString$0: function(_) {
    return "(" + $.S(this.x) + ", " + $.S(this.y) + ")";
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isPoint)
      return false;
    return $.$eq(this.x, other.x) && $.$eq(this.y, other.y);
  },
  $add: function(_, other) {
    var t1, t2, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.$$add$bailout(1, other, t1);
    t2 = $.getInterceptor$x(other);
    t3 = t2.get$x(other);
    if (typeof t3 !== "number")
      return this.$$add$bailout(2, other, t1, t2, t3);
    t3 = t1 + t3;
    t1 = this.y;
    if (typeof t1 !== "number")
      return this.$$add$bailout(3, other, t1, t2, t3);
    t2 = t2.get$y(other);
    if (typeof t2 !== "number")
      return this.$$add$bailout(4, 0, t1, t2, t3);
    return new $.Point(t3, t1 + t2);
  },
  $$add$bailout: function(state0, other, t1, t2, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t2 = $.getInterceptor$x(other);
        t3 = t2.get$x(other);
      case 2:
        state0 = 0;
        t3 = $.$add$ns(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t2 = t2.get$y(other);
      case 4:
        state0 = 0;
        return new $.Point(t3, $.$add$ns(t1, t2));
    }
  },
  $sub: function(_, other) {
    var t1, t2, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.$$sub$bailout(1, other, t1);
    t2 = $.getInterceptor$x(other);
    t3 = t2.get$x(other);
    if (typeof t3 !== "number")
      return this.$$sub$bailout(2, other, t1, t2, t3);
    t3 = t1 - t3;
    t1 = this.y;
    if (typeof t1 !== "number")
      return this.$$sub$bailout(3, other, t1, t2, t3);
    t2 = t2.get$y(other);
    if (typeof t2 !== "number")
      return this.$$sub$bailout(4, 0, t1, t2, t3);
    return new $.Point(t3, t1 - t2);
  },
  $$sub$bailout: function(state0, other, t1, t2, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t2 = $.getInterceptor$x(other);
        t3 = t2.get$x(other);
      case 2:
        state0 = 0;
        t3 = $.$sub$n(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t2 = t2.get$y(other);
      case 4:
        state0 = 0;
        return new $.Point(t3, $.$sub$n(t1, t2));
    }
  },
  $mul: function(_, factor) {
    return new $.Point($.$mul$n(this.x, factor), $.$mul$n(this.y, factor));
  },
  ceil$0: function(_) {
    return new $.Point($.ceil$0$nx(this.x), $.ceil$0$nx(this.y));
  },
  round$0: function(_) {
    return new $.Point($.round$0$nx(this.x), $.round$0$nx(this.y));
  },
  $isPoint: true
},

Rect: {"": "Object;left>,top>,width>,height>",
  get$right: function(_) {
    return $.$add$ns(this.left, this.width);
  },
  get$bottom: function(_) {
    return $.$add$ns(this.top, this.height);
  },
  toString$0: function(_) {
    return "(" + $.S(this.left) + ", " + $.S(this.top) + ", " + $.S(this.width) + ", " + $.S(this.height) + ")";
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isRect)
      return false;
    t1 = $.getInterceptor$x(other);
    return $.$eq(this.left, t1.get$left(other)) && $.$eq(this.top, t1.get$top(other)) && $.$eq(this.width, t1.get$width(other)) && $.$eq(this.height, t1.get$height(other));
  },
  ceil$0: function(_) {
    return new $.Rect($.ceil$0$nx(this.left), $.ceil$0$nx(this.top), $.ceil$0$nx(this.width), $.ceil$0$nx(this.height));
  },
  round$0: function(_) {
    return new $.Rect($.round$0$nx(this.left), $.round$0$nx(this.top), $.round$0$nx(this.width), $.round$0$nx(this.height));
  },
  $isRect: true,
  $asRect: null
},

FixedSizeListIterator: {"": "Object;_array,_liblib$_length,_position,_liblib$_current",
  moveNext$0: function() {
    var t1, nextPosition;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    nextPosition = t1 + 1;
    t1 = this._liblib$_length;
    if (nextPosition < t1) {
      t1 = this._array;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !$.isJsIndexable(t1, t1[$.dispatchPropertyName])))
        return this.moveNext$0$bailout(2, t1, nextPosition);
      if (nextPosition >>> 0 !== nextPosition || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._liblib$_current = t1[nextPosition];
      this._position = nextPosition;
      return true;
    }
    this._liblib$_current = null;
    this._position = t1;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, nextPosition) {
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        nextPosition = $.$add$ns(t1, 1);
        t1 = this._liblib$_length;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$lt$n(nextPosition, t1))
          switch (state0) {
            case 0:
              t1 = this._array;
            case 2:
              state0 = 0;
              this._liblib$_current = $.$index$asx(t1, nextPosition);
              this._position = nextPosition;
              return true;
          }
        this._liblib$_current = null;
        this._position = t1;
        return false;
    }
  },
  get$current: function() {
    return this._liblib$_current;
  }
},

ImageElement_ImageElement: function(height, src, width) {
  var e = document.createElement("img");
  return e;
}}],
["dart.isolate", "dart:isolate", , {
ReceivePort: {"": "Object;"}}],
["dart.math", "dart:math", , {
_Random: {"": "Object;"},

min: function(a, b) {
  var t1;
  if (a > b)
    return b;
  if (a < b)
    return a;
  if (typeof a === "number")
    if (a === 0)
      return (a + b) * a * b;
  if (a === 0)
    t1 = b === 0 ? 1 / b < 0 : b < 0;
  else
    t1 = false;
  if (t1 || isNaN(b))
    return b;
  return a;
  return a;
  throw $.wrapException(new $.ArgumentError(b));
  throw $.wrapException(new $.ArgumentError(a));
}}],
["dgame", "package:dgame/dgame.dart", , {
Game: {"": "Object;entities<,timer<,clockTick@,rect>,input<,renderer<",
  start$0: function(_) {
    $.Primitives_printString("starting game");
    $.start$0$x(this.input);
    $.start$1$x(this.loop, new $.Game_start_closure(this));
  },
  addEntity$1: function(entity) {
    this.entities.push(entity);
  },
  enableEntitiesByGroup$1: function(groupId) {
    var t1 = new $.WhereIterable(this.entities, new $.Game_enableEntitiesByGroup_closure(groupId));
    t1.forEach$1(t1, new $.Game_enableEntitiesByGroup_closure0());
  },
  disableEntitiesByGroup$1: function(groupId) {
    var t1 = new $.WhereIterable(this.entities, new $.Game_disableEntitiesByGroup_closure(groupId));
    t1.forEach$1(t1, new $.Game_disableEntitiesByGroup_closure0());
  },
  removeEntitiesByGroup$1: function(groupId) {
    $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.entities, new $.Game_removeEntitiesByGroup_closure(groupId)), true), new $.Game_removeEntitiesByGroup_closure0());
  },
  removeEntitiesByFilter$1: function(f) {
    $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.entities, new $.Game_removeEntitiesByFilter_closure(f)), true), new $.Game_removeEntitiesByFilter_closure0());
  },
  update$0: function() {
    var t1, entity;
    for (t1 = $.List_List$from(new $.WhereIterable(this.entities, new $.Game_update_closure()), true), t1 = new $.ListIterator(t1, $.get$length$asx(t1), 0, null); t1.moveNext$0();)
      t1._liblib0$_current.update$0();
    for (t1 = $.List_List$from(new $.WhereIterable(this.entities, new $.Game_update_closure0()), true), t1 = new $.ListIterator(t1, $.get$length$asx(t1), 0, null); t1.moveNext$0();) {
      entity = t1._liblib0$_current;
      $.JSArray_methods.remove$1(this.entities, entity);
    }
  },
  Game$withServices$3: function(input, renderer, loop) {
    var t1;
    this.timer = new $.GameTimer(0, 0, 0, 60, false, false);
    this.entities = $.List_List($);
    this.sounds = $.List_List($);
    t1 = this.renderer;
    this.rect = $.get$rect$x(t1);
    this.input.set$game(this);
    t1.set$game(this);
  }
},

Game_start_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.set$clockTick(t1.get$timer().tick$0());
    t1.update$0();
    t1.get$renderer().render$0();
    $.reset$0$x(t1.get$input());
  }
},

Game_enableEntitiesByGroup_closure: {"": "Closure;groupId_0",
  call$1: function(e) {
    return $.$eq(e.get$groupId(), this.groupId_0);
  }
},

Game_enableEntitiesByGroup_closure0: {"": "Closure;",
  call$1: function(e) {
    e.set$enabled(true);
    return true;
  }
},

Game_disableEntitiesByGroup_closure: {"": "Closure;groupId_0",
  call$1: function(e) {
    return $.$eq(e.get$groupId(), this.groupId_0);
  }
},

Game_disableEntitiesByGroup_closure0: {"": "Closure;",
  call$1: function(e) {
    e.set$enabled(false);
    return false;
  }
},

Game_removeEntitiesByGroup_closure: {"": "Closure;groupId_0",
  call$1: function(e) {
    return $.$eq(e.get$groupId(), this.groupId_0);
  }
},

Game_removeEntitiesByGroup_closure0: {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  }
},

Game_removeEntitiesByFilter_closure: {"": "Closure;f_0",
  call$1: function(e) {
    return this.f_0.call$1(e);
  }
},

Game_removeEntitiesByFilter_closure0: {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  }
},

Game_update_closure: {"": "Closure;",
  call$1: function(e) {
    return !e.get$_removeFromGame();
  }
},

Game_update_closure0: {"": "Closure;",
  call$1: function(e) {
    return e.get$_removeFromGame();
  }
},

GameButton: {"": "GameText;buttonAction,text,centered,font,size,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  buttonAction$0: function() {
    return this.buttonAction.call$0();
  },
  update$0: function() {
    var t1, t2;
    $.GameEntity.prototype.update$0.call(this);
    if (!this.enabled)
      return;
    t1 = this.game.get$input();
    if ($.get$click$x(t1) != null)
      ;
    t1 = t1.get$mouse();
    if (t1 != null) {
      t2 = this.box;
      t1 = t2.contains$1(t2, t1);
    } else
      t1 = false;
    if (t1) {
      this.isHighlighted = true;
      this.opacity = 1;
    } else {
      this.isHighlighted = false;
      this.opacity = 0.7;
    }
    t1 = $.get$click$x(this.game.get$input());
    if (t1 != null) {
      t2 = this.box;
      t1 = t2.contains$1(t2, t1);
    } else
      t1 = false;
    if (t1) {
      this.opacity = 1;
      $.get$_Zone__current().createTimer$2($.Duration_250000, new $.GameButton_update_closure(this));
      this.buttonAction$0();
    }
  },
  GameButton$12$buttonAction$centered$color$font$game$groupId$id$opacity$size$text$x$y: function(buttonAction, centered, color, font, game, groupId, id, opacity, size, text, x, y) {
  },
  $isGameButton: true
},

GameButton_update_closure: {"": "Closure;this_0",
  call$0: function() {
    this.this_0.set$opacity(0.5);
    return 0.5;
  }
},

GameEntity: {"": "Object;game@,_x<,_y<,_width@,_height@,isHighlighted<,soundReady@,id>,groupId<,box<,_removeFromGame@,radius<,momentum<,enabled@,opacity@,color<,fill>",
  update$0: function() {
    var t1, t2;
    t1 = this.previousBox;
    t2 = this.box;
    if (t1 == null)
      this.previousBox = new $.Rectangle(t2.top, t2.left, t2.right, t2.bottom);
    else {
      t1.updateFrom$1;
      t1.top = t2.top;
      t1.left = t2.left;
      t1.right = t2.right;
      t1.bottom = t2.bottom;
    }
    if (!this.enabled)
      return;
    this.momentum.update$1(this.game.get$clockTick());
    this._x = $.$add$ns(this._x, $.$mul$n(this.momentum.xVel, this.game.get$clockTick()));
    this.updateBox$0();
    this._y = $.$add$ns(this._y, $.$mul$n(this.momentum.yVel, this.game.get$clockTick()));
    this.updateBox$0();
    this.updateBox$0();
  },
  get$x: function(_) {
    return this._x;
  },
  set$x: function(_, value) {
    this._x = value;
    this.updateBox$0();
  },
  get$y: function(_) {
    return this._y;
  },
  set$y: function(_, value) {
    this._y = value;
    this.updateBox$0();
  },
  get$width: function(_) {
    return this._width;
  },
  set$width: function(_, value) {
    this._width = value;
    this.updateBox$0();
  },
  get$height: function(_) {
    return this._height;
  },
  set$height: function(_, value) {
    this._height = value;
    this.updateBox$0();
  },
  updateBox$0: function() {
    var t1, t2, t3;
    if (this.box == null)
      this.box = new $.Rectangle(0, 0, 0, 0);
    t1 = this.box;
    t2 = this._x;
    t3 = this._width;
    if (typeof t3 !== "number")
      throw t3.$div();
    t1.left = $.$sub$n(t2, t3 / 2);
    t3 = this.box;
    t2 = this._y;
    t1 = this._height;
    if (typeof t1 !== "number")
      throw t1.$div();
    t3.top = $.$sub$n(t2, t1 / 2);
    t1 = this.box;
    t1.right = $.$add$ns(t1.left, this._width);
    t1 = this.box;
    t1.bottom = $.$add$ns(t1.top, this._height);
  },
  removeFromGame$0: function() {
    this._removeFromGame = true;
  },
  collidesWith$1: function(entity) {
    var t1, t2;
    if (!entity.get$enabled())
      return false;
    t1 = entity.get$box();
    t2 = this.box;
    t1.intersectsWith$1;
    return $.Rectangle_intersect(t1, t2);
  },
  GameEntity$withPosition$7: function(game, x, y, width, height, id, groupId) {
    var t1;
    this.momentum = new $.Momentum(0, 0, null, null, null, null);
    this._x = x;
    this.updateBox$0();
    this._y = y;
    this.updateBox$0();
    this._width = width;
    this.updateBox$0();
    this._height = height;
    this.updateBox$0();
    t1 = this.id;
    if (t1 == null || $.$eq($.get$length$asx(t1), 0))
      this.id = $.JSInt_methods.toString$0($.Primitives_objectHashCode(this));
  }
},

GameInput: {"": "Object;_downKeys<,_justPressedKeys<,click*,mouse@,mouseDown?,game@,keyDownEventStream<,keyUpEventStream<",
  isKeyDown$1: function(keyCode) {
    var t1 = this._downKeys;
    return t1.contains$1(t1, keyCode);
  },
  isKeyJustPressed$1: function(keyCode) {
    var t1 = this._justPressedKeys;
    return t1.contains$1(t1, keyCode);
  },
  start$0: function(_) {
  },
  reset$0: function(_) {
    var t1;
    this.click = null;
    t1 = this._justPressedKeys;
    if (t1._length > 0) {
      t1._elements = null;
      t1._rest = null;
      t1._nums = null;
      t1._strings = null;
      t1._length = 0;
    }
  },
  GameInput$0: function() {
    this.keyDownEventStream.stream.listen$1(new $.GameInput_closure(this));
    this.keyUpEventStream.stream.listen$1(new $.GameInput_closure0(this));
  }
},

GameInput_closure: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = this.this_0;
    t2 = t1.get$_downKeys();
    t3 = $.getInterceptor$x(e);
    t2.add$1(t2, t3.get$keyCode(e));
    t1 = t1.get$_justPressedKeys();
    t1.add$1(t1, t3.get$keyCode(e));
  }
},

GameInput_closure0: {"": "Closure;this_1",
  call$1: function(e) {
    var t1 = this.this_1.get$_downKeys();
    return t1.remove$1(t1, $.get$keyCode$x(e));
  }
},

GameKeyboardEvent: {"": "Object;keyCode>,altKey>,ctrlKey>,shiftKey>"},

GameLoop: {"": "Object;",
  start$1: function(_, callback) {
    $.get$_Zone__current().createPeriodicTimer$2($.Duration_50000, new $.GameLoop_start_closure(callback));
  }
},

GameLoop_start_closure: {"": "Closure;callback_0",
  call$1: function(t) {
    return this.callback_0.call$0();
  }
},

GameRenderer: {"": "Object;_game<,rect>",
  get$game: function() {
    return this._game;
  },
  set$game: function(value) {
    this._game = value;
    this.init$0();
  },
  init$0: function() {
  },
  render$0: function() {
  }
},

GameSound: {"": "Object;enabled@,Id,Sound<,Volume<,Looping<,_rootDirectory",
  play$3: function(_, sound, volume, looping) {
  }
},

GameText: {"": "GameEntity;text>,centered,font>,size>,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  updateBox$0: function() {
    if (this.box == null)
      this.box = new $.Rectangle(0, 0, 0, 0);
    this._height = this.size;
    if (this.centered === true)
      $.GameEntity.prototype.updateBox$0.call(this);
    else {
      this.box.left = this._x;
      this.box.top = this._y;
      var t1 = this.box;
      t1.right = $.$add$ns(t1.left, this._width);
      t1 = this.box;
      t1.bottom = $.$add$ns(t1.top, this._height);
    }
  },
  $isGameText: true
},

GameTimer: {"": "Object;gameTime,wallLastTimestamp,fps,fpsSampleRate,timeDecrease,paused",
  tick$0: function() {
    var t1, wallCurrent, wallDelta, gameDelta, t2;
    if (!this.paused) {
      t1 = new $.DateTime(Date.now(), false);
      if (t1.date === void 0)
        t1.date = new Date(t1.millisecondsSinceEpoch);
      t1.date;
      wallCurrent = t1.millisecondsSinceEpoch;
      t1 = $.$sub$n(wallCurrent, this.wallLastTimestamp);
      if (typeof t1 !== "number")
        throw t1.$div();
      wallDelta = t1 / 1000;
      this.wallLastTimestamp = wallCurrent;
      t1 = this.fps;
      this.fps = t1 + (1 / wallDelta - t1) / this.fpsSampleRate;
      gameDelta = $.min(wallDelta, 0.05);
      t1 = this.timeDecrease;
      t2 = this.gameTime;
      if (!t1)
        this.gameTime = $.$add$ns(t2, gameDelta);
      else
        this.gameTime = $.$sub$n(t2, gameDelta);
      return gameDelta;
    }
  }
},

Momentum: {"": "Object;xVel,yVel,xAccel,yAccel,xMax,yMax",
  update$1: function(clockTick) {
    var t1, t2, t3;
    t1 = false;
    if (t1) {
      t1 = this.xVel;
      t2 = $.getInterceptor$n(t1);
      t3 = this.xAccel;
      if (t2.$gt(t1, 0))
        this.xVel = t2.$add(t1, $.JSNull_methods.$mul(t3, clockTick));
      else
        this.xVel = t2.$sub(t1, $.JSNull_methods.$mul(t3, clockTick));
    }
    t1 = false;
    if (t1) {
      t1 = this.yVel;
      t2 = $.getInterceptor$n(t1);
      t3 = this.yAccel;
      if (t2.$gt(t1, 0))
        this.yVel = t2.$add(t1, $.JSNull_methods.$mul(t3, clockTick));
      else
        this.yVel = t2.$sub(t1, $.JSNull_methods.$mul(t3, clockTick));
    }
    t1 = this.xVel;
    if (t1 != null)
      t1 = false;
    else
      t1 = false;
    if (t1) {
      t1 = this.xMax;
      this.xVel = $.$gt$n(this.xVel, 0) ? t1 : $.JSNull_methods.$negate(t1);
    }
    t1 = this.yVel;
    if (t1 != null)
      t1 = false;
    else
      t1 = false;
    if (t1) {
      t1 = this.yMax;
      this.yVel = $.$gt$n(this.yVel, 0) ? t1 : $.JSNull_methods.$negate(t1);
    }
  }
},

Rectangle: {"": "Object;top,left,right,bottom",
  contains$1: function(_, point) {
    var t1, t2;
    if (point == null)
      return false;
    t1 = point.get$x(point);
    t2 = $.getInterceptor$n(t1);
    if (t2.$ge(t1, this.left))
      if (t2.$le(t1, this.right)) {
        t1 = point.get$y(point);
        t2 = $.getInterceptor$n(t1);
        t1 = t2.$ge(t1, this.top) && t2.$le(t1, this.bottom);
      } else
        t1 = false;
    else
      t1 = false;
    return t1;
  },
  get$width: function(_) {
    return $.$sub$n(this.right, this.left);
  },
  get$height: function(_) {
    return $.$sub$n(this.bottom, this.top);
  },
  get$x: function(_) {
    return this.left;
  },
  get$y: function(_) {
    return this.top;
  },
  get$halfWidth: function() {
    var t1 = $.$sub$n(this.right, this.left);
    if (typeof t1 !== "number")
      throw t1.$div();
    return t1 / 2;
  },
  get$halfHeight: function() {
    var t1 = $.$sub$n(this.bottom, this.top);
    if (typeof t1 !== "number")
      throw t1.$div();
    return t1 / 2;
  }
},

Vector: {"": "Object;x*,y*"},

GameButton$: function(buttonAction, centered, color, font, game, groupId, id, opacity, size, text, x, y) {
  var t1 = new $.GameButton(buttonAction, text, centered, font, size, game, 0, 0, 1, 1, false, false, id, groupId, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 10, 10, id, groupId);
  t1.opacity = opacity;
  t1.GameButton$12$buttonAction$centered$color$font$game$groupId$id$opacity$size$text$x$y(buttonAction, centered, color, font, game, groupId, id, opacity, size, text, x, y);
  return t1;
},

random: function(min, max, wholeNumbers) {
  var value, t1, truncated;
  value = min + Math.random() * (max - min);
  if (wholeNumbers) {
    t1 = $.JSNumber_methods.roundToDouble$0(value);
    if (isNaN(t1))
      $.throwExpression(new $.UnsupportedError("NaN"));
    if (t1 == Infinity || t1 == -Infinity)
      $.throwExpression(new $.UnsupportedError("Infinity"));
    truncated = t1 < 0 ? Math.ceil(t1) : Math.floor(t1);
    value = truncated == -0.0 ? 0 : truncated;
  }
  return value;
},

Rectangle_intersect: function(r1, r2) {
  return !($.$gt$n(r1.left, r2.right) || $.$lt$n(r1.right, r2.left) || $.$gt$n(r1.top, r2.bottom) || $.$lt$n(r1.bottom, r2.top));
}}],
["dgame_html", "package:dgame/dgame_html.dart", , {
CanvasGameRenderer: {"": "GameRenderer;targetId?,ctx<",
  getRenderer$1: function(e) {
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isGameText)
      return this.textRenderer;
    return this.defaultRenderer;
  },
  render$0: function() {
    var t1, t2, t3, e, r;
    t1 = this.ctx;
    t2 = t1.canvas;
    t1.clearRect(0, 0, t2.width, t2.height);
    this.ctx.fillStyle = this._game.bgStyle;
    t2 = this.ctx;
    t1 = t2.canvas;
    t2.fillRect(0, 0, t1.width, t1.height);
    this.ctx.save();
    t1 = this.ctx;
    t2 = t1.canvas;
    t3 = t2.width;
    if (t3 == null)
      throw t3.$div();
    t2 = t2.height;
    if (t2 == null)
      throw t2.$div();
    t1.translate(t3 / 2, t2 / 2);
    for (t1 = this._game.entities, t1 = new $.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
      e = t1._liblib0$_current;
      if (!e.get$enabled())
        continue;
      r = this.getRenderer$1(e);
      if (r != null)
        r.render$1(e);
    }
    this.drawBeforeCtxRestore$0();
    this.ctx.restore();
  },
  drawBeforeCtxRestore$0: function() {
    if ($.Game_debugMode)
      this.drawDebugInfo$0();
  },
  drawDebugInfo$0: function() {
    var t1, t2, t3, t4;
    this.ctx.fillStyle = "rgba(255, 255, 255, 0.2)";
    this.ctx.font = "16px Verdana";
    t1 = this.ctx;
    t2 = "FPS: " + $.JSNumber_methods.toStringAsFixed$1(this._game.timer.fps, 1);
    t3 = this.rect;
    t3.get$halfWidth;
    t3 = $.$sub$n(t3.right, t3.left);
    if (typeof t3 !== "number")
      throw t3.$div();
    t4 = this.rect;
    t4.get$halfHeight;
    t4 = $.$sub$n(t4.bottom, t4.top);
    if (typeof t4 !== "number")
      throw t4.$div();
    t1.fillText(t2, t3 / 2 - 120, -(t4 / 2 - 30));
  },
  clicked$1: function($event) {
  },
  get$clicked: function() {
    return new $.BoundClosure$1(this, "clicked$1", null);
  },
  pointerLockChange$1: function($event) {
    var t1, t2;
    t1 = this.canvas;
    t2 = document.webkitPointerLockElement;
    this.ownMouse = t1 == null ? t2 == null : t1 === t2;
  },
  get$pointerLockChange: function() {
    return new $.BoundClosure$1(this, "pointerLockChange$1", null);
  },
  CanvasGameRenderer$1: function(targetId) {
    var t1, t2, clientRect;
    t1 = "#" + $.S(this.targetId);
    this.canvas = document.querySelector(t1);
    t1 = new $._EventStream(document, $.EventStreamProvider_webkitpointerlockchange._eventType, false);
    t1 = new $._EventStreamSubscription(0, t1._liblib$_target, t1._eventType, this.get$pointerLockChange(), t1._useCapture);
    t2 = t1._onData;
    if (t2 != null && !t1.get$isPaused())
      $.$$dom_addEventListener$3$x(t1._liblib$_target, t1._eventType, t2, t1._useCapture);
    t1 = this.canvas;
    t1.get$onClick;
    t1 = new $._EventStream(t1, $.EventStreamProvider_click._eventType, false);
    t1 = new $._EventStreamSubscription(0, t1._liblib$_target, t1._eventType, this.get$clicked(), t1._useCapture);
    t2 = t1._onData;
    if (t2 != null && !t1.get$isPaused())
      $.$$dom_addEventListener$3$x(t1._liblib$_target, t1._eventType, t2, t1._useCapture);
    this.ctx = $.get$context2d$x(this.canvas);
    t1 = this.ctx.canvas;
    this.rect = new $.Rectangle(0, 0, t1.width, t1.height);
    clientRect = this.ctx.canvas.getBoundingClientRect();
    this.ownMouse = false;
    t1 = $.getInterceptor$x(clientRect);
    this.rect.top = t1.get$top(clientRect);
    this.rect.left = t1.get$left(clientRect);
    this.rect.right = t1.get$right(clientRect);
    this.rect.bottom = t1.get$bottom(clientRect);
    this.defaultRenderer = new $.DefaultCanvasEntityRenderer(this);
    this.textRenderer = new $.TextRenderer(this);
  }
},

DefaultCanvasEntityRenderer: {"": "Object;gr",
  render$1: function(e) {
    var t1, t2, t3, t4, t5, t6;
    t1 = e.get$color();
    t2 = $.get$fill$x(e);
    t3 = this.gr;
    t4 = e.get$opacity();
    t5 = t3.ctx;
    if (t2 === true) {
      t5.fillStyle = "rgba(" + t1 + ", " + $.S(t4) + ")";
      t1 = t3.ctx;
      t2 = e.get$box();
      t3 = t2.left;
      if (typeof t3 !== "number")
        return this.render$1$bailout(1, e, t3, t2, t1);
      t4 = t2.top;
      t2.get$width;
      t5 = t2.right;
      if (typeof t5 !== "number")
        return this.render$1$bailout(2, e, t3, t5, t1, t4);
      t5 -= t3;
      t2.get$height;
      t6 = t2.bottom;
      if (typeof t6 !== "number")
        return this.render$1$bailout(3, e, t3, t5, t1, t4, t2, t6);
      if (typeof t4 !== "number")
        return this.render$1$bailout(4, e, t3, t5, t1, t4, t4, t6);
      t1.fillRect(t3, t4, t5, t6 - t4);
    } else {
      t5.strokeStyle = "rgba(" + t1 + ", " + $.S(t4) + ")";
      t1 = t3.ctx;
      t2 = e.get$box();
      t3 = t2.left;
      if (typeof t3 !== "number")
        return this.render$1$bailout(5, e, t3, t2, t1);
      t4 = t2.top;
      t2.get$width;
      t5 = t2.right;
      if (typeof t5 !== "number")
        return this.render$1$bailout(6, e, t3, t5, t1, t4);
      t5 -= t3;
      t2.get$height;
      t6 = t2.bottom;
      if (typeof t6 !== "number")
        return this.render$1$bailout(7, e, t3, t5, t1, t4, t2, t6);
      if (typeof t4 !== "number")
        return this.render$1$bailout(8, e, t3, t5, t1, t4, t4, t6);
      t1.strokeRect(t3, t4, t5, t6 - t4);
    }
    t1 = this.gr;
    if (t1._game.showOutlines) {
      t1.ctx.beginPath();
      t1.ctx.strokeStyle = "green";
      t2 = t1.ctx;
      t3 = $.getInterceptor$x(e);
      t4 = t3.get$x(e);
      t3 = t3.get$y(e);
      t5 = e.get$radius();
      t2.arc$6;
      t2.arc(t4, t3, t5, 0, 6.283185307179586, false);
      t1.ctx.stroke();
      t1.ctx.closePath();
    }
  },
  render$1$bailout: function(state0, e, t3, t2, t1, t4, t5, t6) {
    switch (state0) {
      case 0:
        t1 = e.get$color();
        t2 = $.get$fill$x(e);
        t3 = this.gr;
        t4 = e.get$opacity();
      default:
        if (state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && t2 === true)
          switch (state0) {
            case 0:
              t3.ctx.fillStyle = "rgba(" + t1 + ", " + $.S(t4) + ")";
              t1 = t3.ctx;
              t2 = e.get$box();
              t3 = t2.left;
            case 1:
              state0 = 0;
              t4 = t2.top;
              t2.get$width;
              t2 = t2.right;
            case 2:
              state0 = 0;
              t2 = $.$sub$n(t2, t3);
              t5 = e.get$box();
              t5.get$height;
              t6 = t5.bottom;
            case 3:
              state0 = 0;
              t5 = t5.top;
            case 4:
              state0 = 0;
              t1.fillRect(t3, t4, t2, $.$sub$n(t6, t5));
          }
        else
          switch (state0) {
            case 0:
              t3.ctx.strokeStyle = "rgba(" + t1 + ", " + $.S(t4) + ")";
              t1 = t3.ctx;
              t2 = e.get$box();
              t3 = t2.left;
            case 5:
              state0 = 0;
              t4 = t2.top;
              t2.get$width;
              t2 = t2.right;
            case 6:
              state0 = 0;
              t2 = $.$sub$n(t2, t3);
              t5 = e.get$box();
              t5.get$height;
              t6 = t5.bottom;
            case 7:
              state0 = 0;
              t5 = t5.top;
            case 8:
              state0 = 0;
              t1.strokeRect(t3, t4, t2, $.$sub$n(t6, t5));
          }
        t1 = this.gr;
        if (t1._game.showOutlines) {
          t1.ctx.beginPath();
          t1.ctx.strokeStyle = "green";
          t2 = t1.ctx;
          t3 = $.getInterceptor$x(e);
          t4 = t3.get$x(e);
          t3 = t3.get$y(e);
          t5 = e.get$radius();
          t2.arc$6;
          t2.arc(t4, t3, t5, 0, 6.283185307179586, false);
          t1.ctx.stroke();
          t1.ctx.closePath();
        }
    }
  }
},

HtmlGameInput: {"": "GameInput;_downKeys,_justPressedKeys,click,mouse,mouseDown,game,keyDownEventStream,keyUpEventStream",
  start$0: function(_) {
    var t1, t2, t3;
    t1 = new $.HtmlGameInput_start_getXandY(this);
    t2 = new $._EventStream(document, $.EventStreamProvider_click._eventType, false);
    t2 = new $._EventStreamSubscription(0, t2._liblib$_target, t2._eventType, new $.HtmlGameInput_start_closure(this, t1), t2._useCapture);
    t3 = t2._onData;
    if (t3 != null && !t2.get$isPaused())
      $.$$dom_addEventListener$3$x(t2._liblib$_target, t2._eventType, t3, t2._useCapture);
    t2 = new $._EventStream(document, $.EventStreamProvider_mousemove._eventType, false);
    t2 = new $._EventStreamSubscription(0, t2._liblib$_target, t2._eventType, new $.HtmlGameInput_start_closure0(this, t1), t2._useCapture);
    t3 = t2._onData;
    if (t3 != null && !t2.get$isPaused())
      $.$$dom_addEventListener$3$x(t2._liblib$_target, t2._eventType, t3, t2._useCapture);
    t2 = new $._EventStream(document, $.EventStreamProvider_touchmove._eventType, false);
    t2 = new $._EventStreamSubscription(0, t2._liblib$_target, t2._eventType, new $.HtmlGameInput_start_closure1(this, t1), t2._useCapture);
    t1 = t2._onData;
    if (t1 != null && !t2.get$isPaused())
      $.$$dom_addEventListener$3$x(t2._liblib$_target, t2._eventType, t1, t2._useCapture);
    t1 = new $._EventStream(document, $.EventStreamProvider_touchstart._eventType, false);
    t1 = new $._EventStreamSubscription(0, t1._liblib$_target, t1._eventType, new $.HtmlGameInput_start_closure2(), t1._useCapture);
    t2 = t1._onData;
    if (t2 != null && !t1.get$isPaused())
      $.$$dom_addEventListener$3$x(t1._liblib$_target, t1._eventType, t2, t1._useCapture);
    t1 = new $._EventStream(document, $.EventStreamProvider_keydown._eventType, false);
    t1 = new $._EventStreamSubscription(0, t1._liblib$_target, t1._eventType, new $.HtmlGameInput_start_closure3(this), t1._useCapture);
    t2 = t1._onData;
    if (t2 != null && !t1.get$isPaused())
      $.$$dom_addEventListener$3$x(t1._liblib$_target, t1._eventType, t2, t1._useCapture);
    t1 = new $._EventStream(document, $.EventStreamProvider_keyup._eventType, false);
    t1 = new $._EventStreamSubscription(0, t1._liblib$_target, t1._eventType, new $.HtmlGameInput_start_closure4(this), t1._useCapture);
    t2 = t1._onData;
    if (t2 != null && !t1.get$isPaused())
      $.$$dom_addEventListener$3$x(t1._liblib$_target, t1._eventType, t2, t1._useCapture);
    t1 = new $._EventStream(document, $.EventStreamProvider_mousedown._eventType, false);
    t1 = new $._EventStreamSubscription(0, t1._liblib$_target, t1._eventType, new $.HtmlGameInput_start_closure5(this), t1._useCapture);
    t2 = t1._onData;
    if (t2 != null && !t1.get$isPaused())
      $.$$dom_addEventListener$3$x(t1._liblib$_target, t1._eventType, t2, t1._useCapture);
    t1 = new $._EventStream(document, $.EventStreamProvider_mouseup._eventType, false);
    t1 = new $._EventStreamSubscription(0, t1._liblib$_target, t1._eventType, new $.HtmlGameInput_start_closure6(this), t1._useCapture);
    t2 = t1._onData;
    if (t2 != null && !t1.get$isPaused())
      $.$$dom_addEventListener$3$x(t1._liblib$_target, t1._eventType, t2, t1._useCapture);
  }
},

HtmlGameInput_start_getXandY: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = $.getInterceptor$x(e);
    t2 = this.this_0;
    return new $.Vector($.$sub$n($.$sub$n(t1.get$clientX(e), $.get$x$x($.get$rect$x(t2.get$game()))), $.get$rect$x(t2.get$game()).get$halfWidth()), $.$sub$n($.$sub$n(t1.get$clientY(e), $.get$y$x($.get$rect$x(t2.get$game()))), $.get$rect$x(t2.get$game()).get$halfHeight()));
  }
},

HtmlGameInput_start_closure: {"": "Closure;this_1,getXandY_2",
  call$1: function(e) {
    $.set$click$x(this.this_1, this.getXandY_2.call$1(e));
  }
},

HtmlGameInput_start_closure0: {"": "Closure;this_3,getXandY_4",
  call$1: function(e) {
    this.this_3.set$mouse(this.getXandY_4.call$1(e));
  }
},

HtmlGameInput_start_closure1: {"": "Closure;this_5,getXandY_6",
  call$1: function(e) {
    var t1 = $.getInterceptor$x(e);
    t1.preventDefault$0(e);
    t1 = t1.get$touches(e);
    if (0 >= t1.length)
      throw $.ioore(0);
    this.this_5.set$mouse(this.getXandY_6.call$1(t1[0]));
    return false;
  }
},

HtmlGameInput_start_closure2: {"": "Closure;",
  call$1: function(e) {
    $.preventDefault$0$x(e);
    return false;
  }
},

HtmlGameInput_start_closure3: {"": "Closure;this_7",
  call$1: function(e) {
    var t1 = $.getInterceptor$x(e);
    this.this_7.get$keyDownEventStream().signal$1(new $.GameKeyboardEvent(t1.get$keyCode(e), t1.get$altKey(e), t1.get$ctrlKey(e), t1.get$shiftKey(e)));
  }
},

HtmlGameInput_start_closure4: {"": "Closure;this_8",
  call$1: function(e) {
    var t1 = $.getInterceptor$x(e);
    this.this_8.get$keyUpEventStream().signal$1(new $.GameKeyboardEvent(t1.get$keyCode(e), t1.get$altKey(e), t1.get$ctrlKey(e), t1.get$shiftKey(e)));
  }
},

HtmlGameInput_start_closure5: {"": "Closure;this_9",
  call$1: function(e) {
    this.this_9.set$mouseDown(true);
  }
},

HtmlGameInput_start_closure6: {"": "Closure;this_10",
  call$1: function(e) {
    this.this_10.set$mouseDown(false);
  }
},

HtmlGameLoop: {"": "GameLoop;_callback",
  _callback$0: function() {
    return this._callback.call$0();
  },
  start$1: function(_, callback) {
    var t1, t2;
    this._callback = callback;
    t1 = window;
    t2 = this.get$loop(this);
    $.Window_methods._ensureRequestAnimationFrame$0(t1);
    $.Window_methods._requestAnimationFrame$1(t1, t2);
  },
  loop$1: function(_, time) {
    var t1, t2;
    this._callback$0();
    t1 = window;
    t2 = this.get$loop(this);
    $.Window_methods._ensureRequestAnimationFrame$0(t1);
    $.Window_methods._requestAnimationFrame$1(t1, t2);
  },
  get$loop: function(_receiver) {
    return new $.BoundClosure$i1(this, "loop$1", _receiver);
  }
},

HtmlGameSound: {"": "GameSound;audioCopy,enabled,Id,Sound,Volume,Looping,_rootDirectory"},

TextRenderer: {"": "DefaultCanvasEntityRenderer;gr",
  render$1: function(b) {
    var t1, t2, t3;
    t1 = this.gr;
    t1.ctx.fillStyle = "rgba(" + b.get$color() + ", " + $.S(b.get$opacity()) + ")";
    t2 = $.getInterceptor$x(b);
    t1.ctx.font = $.S(t2.get$size(b)) + "px " + $.S(t2.get$font(b));
    t2.set$width(b, t1.ctx.measureText(t2.get$text(b)).width);
    t1 = t1.ctx;
    t2 = t2.get$text(b);
    t3 = b.get$box();
    t1.fillText(t2, t3.left, t3.bottom);
  }
}}],
["event_stream", "package:event_stream/event_stream.dart", , {
EventStream: {"": "Object;_controller,stream",
  signal$1: function(value) {
    var t1, t2, t3;
    t1 = $ === value;
    if (t1)
      value = null;
    t2 = this._controller;
    t1 = !t1 ? value : $.get$EventArgs_empty();
    t3 = t2._state;
    if ((t3 & 2) !== 0)
      $.throwExpression(new $.StateError("Adding event after close"));
    if (t2._subscription != null)
      t2._sendData$1(t1);
    else if ((t3 & 1) === 0)
      t2._addPendingEvent$1(new $._DelayedData(t1, null));
  },
  signal$0: function() {
    return this.signal$1($);
  }
},

EventArgs: {"": "Object;"}}],
["galaga.dart", "galaga.dart", , {
main: function() {
  var sound, t1, t2, input, renderer, loop, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, game;
  sound = new $.HtmlGameSound(null, true, null, null, null, null, "Sounds/");
  sound.Sound = "";
  sound.Volume = 1;
  sound.Looping = false;
  t1 = new $._AsyncStreamController(null, null, null, null, null, null, 0, null);
  t1._StreamController$4(null, null, null, null);
  t1 = new $.EventStream(t1, null);
  t1.stream = t1._controller._stream.asBroadcastStream$0();
  t2 = new $._AsyncStreamController(null, null, null, null, null, null, 0, null);
  t2._StreamController$4(null, null, null, null);
  t2 = new $.EventStream(t2, null);
  t2.stream = t2._controller._stream.asBroadcastStream$0();
  input = new $.HtmlGameInput(new $.HashSet(0, null, null, null, null), new $.HashSet(0, null, null, null, null), null, null, false, null, t1, t2);
  input.GameInput$0();
  renderer = $.GalagaRenderer$("surface");
  loop = new $.HtmlGameLoop(null);
  t2 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t2.Sound = "Menu";
  t2.Volume = 1;
  t2.Looping = false;
  t1 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t1.Sound = "Options";
  t1.Volume = 1;
  t1.Looping = true;
  t3 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t3.Sound = "GameStart";
  t3.Volume = 1;
  t3.Looping = false;
  t4 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t4.Sound = "Game";
  t4.Volume = 1;
  t4.Looping = true;
  t5 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t5.Sound = "cursorMove";
  t5.Volume = 0.3;
  t5.Looping = false;
  t6 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t6.Sound = "cursorSelect";
  t6.Volume = 0.3;
  t6.Looping = false;
  t7 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t7.Sound = "cursorSelect2";
  t7.Volume = 0.3;
  t7.Looping = false;
  t8 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t8.Sound = "enemyFire";
  t8.Volume = 0.3;
  t8.Looping = false;
  t9 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t9.Sound = "enemyHit";
  t9.Volume = 0.3;
  t9.Looping = false;
  t10 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t10.Sound = "explosion";
  t10.Volume = 0.3;
  t10.Looping = false;
  t11 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t11.Sound = "mothershipfire";
  t11.Volume = 0.3;
  t11.Looping = false;
  t12 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t12.Sound = "shipFire";
  t12.Volume = 0.3;
  t12.Looping = false;
  t13 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t13.Sound = "shipHit";
  t13.Volume = 0.3;
  t13.Looping = false;
  t14 = new $.GameSound(true, null, null, null, null, "Sounds/");
  t14.Sound = "powerUp";
  t14.Volume = 0.3;
  t14.Looping = false;
  t15 = new $._AsyncStreamController(null, null, null, null, null, null, 0, null);
  t15._StreamController$4(null, null, null, null);
  t15 = new $.EventStream(t15, null);
  t15.stream = t15._controller._stream.asBroadcastStream$0();
  t16 = new $._AsyncStreamController(null, null, null, null, null, null, 0, null);
  t16._StreamController$4(null, null, null, null);
  t16 = new $.EventStream(t16, null);
  t16.stream = t16._controller._stream.asBroadcastStream$0();
  t17 = new $._AsyncStreamController(null, null, null, null, null, null, 0, null);
  t17._StreamController$4(null, null, null, null);
  t17 = new $.EventStream(t17, null);
  t17.stream = t17._controller._stream.asBroadcastStream$0();
  t18 = new $._AsyncStreamController(null, null, null, null, null, null, 0, null);
  t18._StreamController$4(null, null, null, null);
  t18 = new $.EventStream(t18, null);
  t18.stream = t18._controller._stream.asBroadcastStream$0();
  t19 = new $._AsyncStreamController(null, null, null, null, null, null, 0, null);
  t19._StreamController$4(null, null, null, null);
  t19 = new $.EventStream(t19, null);
  t19.stream = t19._controller._stream.asBroadcastStream$0();
  t20 = new $._AsyncStreamController(null, null, null, null, null, null, 0, null);
  t20._StreamController$4(null, null, null, null);
  t20 = new $.EventStream(t20, null);
  t20.stream = t20._controller._stream.asBroadcastStream$0();
  t21 = new $._AsyncStreamController(null, null, null, null, null, null, 0, null);
  t21._StreamController$4(null, null, null, null);
  t21 = new $.EventStream(t21, null);
  t21.stream = t21._controller._stream.asBroadcastStream$0();
  t22 = new $._AsyncStreamController(null, null, null, null, null, null, 0, null);
  t22._StreamController$4(null, null, null, null);
  t22 = new $.EventStream(t22, null);
  t22.stream = t22._controller._stream.asBroadcastStream$0();
  game = new $.GalagaGame(0, 0, 5, 5, 0, null, new $.HashMap(0, null, null, null, null), new $.HashMap(0, null, null, null, null), new $.HashMap(0, null, null, null, null), new $.HashMap(0, null, null, null, null), new $.HashMap(0, null, null, null, null), new $.HashMap(0, null, null, null, null), 1, 1, -400, -165, 3, 3, 1, 0, 33, 60, 1, null, true, null, null, 0, 1, 3, false, true, true, 1, null, 1, 0, t2, t1, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, null, null, null, null, null, input, renderer, loop, "rgba(0, 0, 0, .85)", false);
  game.Game$withServices$3(input, renderer, loop);
  $.Game_debugMode = false;
  game.start$0(game);
}}],
["galaga_game", "package:galaga/galaga_game.dart", , {
GalagaGame: {"": "Game;score@,highScore,lastPowerUp,lastEnemy,lastStar,_liblib5$_state,Stats<,Options<,Controls,Highscores<,HighscoresRank,Cheats<,rank,pointMultiplier@,enemyX?,enemyY?,bulletCap,shipStartLives,colorCount,enemyCount,enemyAmount@,defaultTimer,level@,p1Dead?,goingRight,_countdownTimer,_waitingTimer,_waiting@,difficulty@,bonusCheck@,bonusStage@,soundEffectsOn@,tutorial?,visualLevel<,ship<,nextId@,targetId@,menuSong<,optionSong,gameStart,gameSong,cursorMove<,cursorSelect<,cursorSelect2<,enemyFire<,enemyHit<,explosion,motherShipFire<,shipFire<,shipHit<,powerUp<,_statUpdateEvent<,_gameOverEvent,_shipHitEvent<,_bossHitEvent<,_bossKilledEvent,_motherShipEvent<,_normalHitEvent<,_fadeEvent<,entities,sounds,timer,clockTick,rect,input,renderer,loop,bgStyle,showOutlines",
  shipHit$0: function() {
    return this.shipHit.call$0();
  },
  get$state: function(_) {
    return this._liblib5$_state;
  },
  set$state: function(_, value) {
    var t1;
    if (this._liblib5$_state === value)
      return;
    this._liblib5$_state = value;
    this.disableEntitiesByGroup$1("welcome");
    this.disableEntitiesByGroup$1("gameOver");
    this.disableEntitiesByGroup$1("stats");
    this.disableEntitiesByGroup$1("paused");
    this.disableEntitiesByGroup$1("options");
    this.disableEntitiesByGroup$1("instructions");
    this.disableEntitiesByGroup$1("levelEnd");
    this.disableEntitiesByGroup$1("leaders");
    this.disableEntitiesByGroup$1("cheats");
    t1 = this._liblib5$_state;
    if (t1 === 1)
      this.enableEntitiesByGroup$1("welcome");
    else if (t1 === 4)
      this.enableEntitiesByGroup$1("gameOver");
    else if (t1 === 5)
      this.enableEntitiesByGroup$1("stats");
    else if (t1 === 2)
      this.enableEntitiesByGroup$1("paused");
    else if (t1 === 6)
      this.enableEntitiesByGroup$1("options");
    else if (t1 === 7)
      this.enableEntitiesByGroup$1("instructions");
    else if (t1 === 8)
      this.enableEntitiesByGroup$1("levelEnd");
    else if (t1 === 9)
      this.enableEntitiesByGroup$1("leaders");
    else if (t1 === 10)
      this.enableEntitiesByGroup$1("cheats");
  },
  get$waiting: function() {
    return this._waiting;
  },
  set$waiting: function(value) {
    var t1, t2;
    this._waiting = value;
    t1 = this._waitingTimer;
    if (t1 != null) {
      t1.cancel$0;
      if (!t1._isDone) {
        t2 = t1._zone;
        t2._openCallbacks = t2._openCallbacks - 1;
        if (t2._isExecutingCallback !== true && t2._openCallbacks === 0 && t2._children.length === 0)
          ;
      }
      t1._isDone = true;
      t1._timer.cancel$0();
    }
    this.disableEntitiesByGroup$1("welcome");
    this.disableEntitiesByGroup$1("gameOver");
    this.disableEntitiesByGroup$1("stats");
    this.disableEntitiesByGroup$1("paused");
    this.disableEntitiesByGroup$1("options");
    this.disableEntitiesByGroup$1("instructions");
    this.disableEntitiesByGroup$1("leaders");
    this.disableEntitiesByGroup$1("cheats");
    this._waitingTimer = $.get$_Zone__current().createPeriodicTimer$2($.Duration_1000000, new $.GalagaGame_waiting_closure(this));
  },
  start$0: function(_) {
    var t1, t2, i;
    t1 = this.Stats;
    if (!t1.containsKey$1(t1, "killed"))
      t1.$indexSet(t1, "killed", 0);
    if (!t1.containsKey$1(t1, "wins"))
      t1.$indexSet(t1, "wins", 0);
    if (!t1.containsKey$1(t1, "loses"))
      t1.$indexSet(t1, "loses", 0);
    if (!t1.containsKey$1(t1, "totalGames"))
      t1.$indexSet(t1, "totalGames", 0);
    if (!t1.containsKey$1(t1, "highscore"))
      t1.$indexSet(t1, "highscore", 0);
    if (!t1.containsKey$1(t1, "normalKills"))
      t1.$indexSet(t1, "normalKills", 0);
    if (!t1.containsKey$1(t1, "bossKills"))
      t1.$indexSet(t1, "bossKills", 0);
    if (!t1.containsKey$1(t1, "motherKills"))
      t1.$indexSet(t1, "motherKills", 0);
    if (!t1.containsKey$1(t1, "powerups"))
      t1.$indexSet(t1, "powerups", 0);
    if (!t1.containsKey$1(t1, "percentage"))
      t1.$indexSet(t1, "percentage", 0);
    t1 = this.Options;
    if (!t1.containsKey$1(t1, "startLives"))
      t1.$indexSet(t1, "startLives", 3);
    if (!t1.containsKey$1(t1, "bulletCap"))
      t1.$indexSet(t1, "bulletCap", 3);
    if (!t1.containsKey$1(t1, "time"))
      t1.$indexSet(t1, "time", 60);
    if (!t1.containsKey$1(t1, "difficulty"))
      t1.$indexSet(t1, "difficulty", 1);
    if (!t1.containsKey$1(t1, "powerups"))
      t1.$indexSet(t1, "powerups", 1);
    if (!t1.containsKey$1(t1, "soundeffects"))
      t1.$indexSet(t1, "soundeffects", 1);
    if (!t1.containsKey$1(t1, "controls"))
      t1.$indexSet(t1, "controls", 1);
    t2 = this.Controls;
    if (!t2.containsKey$1(t2, "left"))
      t2.$indexSet(t2, "left", "left");
    if (!t2.containsKey$1(t2, "right"))
      t2.$indexSet(t2, "right", "right");
    if (!t2.containsKey$1(t2, "fire"))
      t2.$indexSet(t2, "fire", "space");
    t2 = this.Highscores;
    if (!t2.containsKey$1(t2, 1))
      t2.$indexSet(t2, 1, 0);
    if (!t2.containsKey$1(t2, 2))
      t2.$indexSet(t2, 2, 0);
    if (!t2.containsKey$1(t2, 3))
      t2.$indexSet(t2, 3, 0);
    if (!t2.containsKey$1(t2, 4))
      t2.$indexSet(t2, 4, 0);
    if (!t2.containsKey$1(t2, 5))
      t2.$indexSet(t2, 5, 0);
    if (!t2.containsKey$1(t2, 6))
      t2.$indexSet(t2, 6, 0);
    if (!t2.containsKey$1(t2, 7))
      t2.$indexSet(t2, 7, 0);
    if (!t2.containsKey$1(t2, 8))
      t2.$indexSet(t2, 8, 0);
    if (!t2.containsKey$1(t2, 9))
      t2.$indexSet(t2, 9, 0);
    if (!t2.containsKey$1(t2, 10))
      t2.$indexSet(t2, 10, 0);
    t2 = this.Cheats;
    if (!t2.containsKey$1(t2, "spreadshot"))
      t2.$indexSet(t2, "spreadshot", 1);
    if (!t2.containsKey$1(t2, "invincibility"))
      t2.$indexSet(t2, "invincibility", 1);
    if (!t2.containsKey$1(t2, "freeze"))
      t2.$indexSet(t2, "freeze", 1);
    if ($.$eq(t1.$index(t1, "soundeffects"), 1))
      this.soundEffectsOn = true;
    else
      this.soundEffectsOn = false;
    this.createWelcomeMenu$0();
    this.createGameOverMenu$0();
    this.createStatsMenu$0();
    this.createPausedMenu$0();
    this.createControlsMenu$0();
    this.createLeaderBoardMenu$0();
    this.createCheatsMenu$0();
    for (i = 0; i < 50; ++i)
      this.startStars$0();
    if (this.soundEffectsOn)
      ;
    this.set$state(this, 1);
    $.Game.prototype.start$0.call(this, this);
  },
  update$0: function() {
    var t1, t2, t3;
    t1 = this._liblib5$_state;
    if (t1 === 3 || t1 === 2) {
      this.score = $.ceil$0$nx(this.score);
      if (this.input.isKeyJustPressed$1(27))
        this.set$state(this, this._liblib5$_state === 2 ? 3 : 2);
      if (this.enemyAmount <= 0) {
        t1 = this.Stats;
        t1.$indexSet(t1, "wins", $.$add$ns(t1.$index(t1, "wins"), 1));
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure0());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure1());
        if (this.soundEffectsOn)
          ;
        this.removeEntitiesByGroup$1("levelEnd");
        this.createLevelEnd$0();
        this.set$state(this, 8);
        this.set$waiting(1);
        if (!this.tutorial)
          this.level = this.level + 1;
        this.visualLevel = this.visualLevel + 1;
      }
      t1 = this.score;
      t2 = this.Stats;
      t3 = t2.$index(t2, "highscore");
      if (typeof t1 !== "number")
        throw t1.$gt();
      if (typeof t3 !== "number")
        throw $.iae(t3);
      if (t1 > t3)
        t2.$indexSet(t2, "highscore", this.score);
      if (this._liblib5$_state === 3) {
        t1 = this.Options;
        t1 = $.$eq(t1.$index(t1, "soundeffects"), 1);
      } else
        t1 = false;
      if (t1)
        this.newPowerUp$0();
      if (this._liblib5$_state === 3)
        this.newMotherShip$0();
      t1 = this.timer.gameTime;
      t3 = $.getInterceptor$n(t1);
      if (t3.$le(t1, 0) && !this.bonusStage)
        this.gameOver$0();
      else if (this.bonusStage && t3.$le(t1, 0)) {
        t2.$indexSet(t2, "wins", $.$add$ns(t2.$index(t2, "wins"), 1));
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure2());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure3());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure4());
        if (this.soundEffectsOn)
          ;
        this.removeEntitiesByGroup$1("levelEnd");
        this.createLevelEnd$0();
        this.set$state(this, 8);
        this.set$waiting(1);
        this.level = this.level + 1;
        this.visualLevel = this.visualLevel + 1;
      }
    }
    t1 = new $.WhereIterable(this.entities, new $.GalagaGame_update_closure5());
    t1.forEach$1(t1, new $.GalagaGame_update_closure6(this));
    this.newStar$0();
    $.Game.prototype.update$0.call(this);
  },
  startStars$0: function() {
    var t1, w, star;
    t1 = this.colorCount;
    if (t1 < 7)
      this.colorCount = t1 + 1;
    else if (t1 >= 7)
      this.colorCount = 1;
    w = $.random(0.5, 3.5, false);
    star = $.Stars$(this, 0, 0, w, w, this.colorCount);
    star._x = $.random(-this.rect.get$halfWidth(), this.rect.get$halfWidth(), false);
    star.updateBox$0();
    star._y = $.random(-this.rect.get$halfHeight(), this.rect.get$halfHeight(), false);
    star.updateBox$0();
    this.entities.push(star);
  },
  newParticle$4: function(x, y, xVel, yVel) {
    var w, particle;
    w = $.random(0.5, 3.5, false);
    particle = $.Particles$(this, x, y, w, w, this.colorCount, xVel, yVel);
    this.entities.push(particle);
  },
  newExplosion$2: function(x, y) {
    var yV, i;
    for (yV = 80, i = 0; i < 3; ++i) {
      this.newParticle$4(x, y, 50, yV);
      yV -= 80;
    }
    for (yV = 80, i = 0; i < 3; ++i) {
      this.newParticle$4(x, y, -50, yV);
      yV -= 80;
    }
    this.newParticle$4(x, y, 0, 100);
    this.newParticle$4(x, y, 0, -100);
    if (this.soundEffectsOn)
      ;
  },
  newMiniExplosion$2: function(x, y) {
    this.newParticle$4(x, y, 50, 0);
    this.newParticle$4(x, y, -50, 0);
    this.newParticle$4(x, y, 0, 50);
    this.newParticle$4(x, y, 0, -50);
    if (this.soundEffectsOn)
      ;
  },
  newStar$0: function() {
    var w, t1, truncated, star;
    if ($.random(0, 1, false) > 0.2 || this._liblib5$_state === 2)
      return;
    w = $.random(0.5, 3.5, false);
    t1 = this.colorCount;
    if (t1 < 7) {
      this.colorCount = $.random(1, 7, false);
      t1 = Math.ceil(this.colorCount);
      if (isNaN(t1))
        $.throwExpression(new $.UnsupportedError("NaN"));
      if (t1 == Infinity || t1 == -Infinity)
        $.throwExpression(new $.UnsupportedError("Infinity"));
      truncated = t1 < 0 ? Math.ceil(t1) : Math.floor(t1);
      if (truncated == -0.0)
        ;
    } else if (t1 >= 7)
      this.colorCount = 1;
    star = $.Stars$(this, 0, 0, w, w, this.colorCount);
    this.lastStar = this.timer.gameTime;
    this.entities.push(star);
  },
  newBouncer$1: function(sprite) {
    var bouncer = $.bouncingBall$(this, 0, 0, 36, 36, sprite);
    if (sprite === 1) {
      bouncer._height = 42;
      bouncer.updateBox$0();
      bouncer._width = 42;
      bouncer.updateBox$0();
    }
    if (sprite === 5) {
      bouncer._height = 12;
      bouncer.updateBox$0();
      bouncer._width = 12;
      bouncer.updateBox$0();
    }
    if (sprite === 8) {
      bouncer._height = 42;
      bouncer.updateBox$0();
      bouncer._width = 42;
      bouncer.updateBox$0();
    }
    if (sprite === 10) {
      bouncer._height = 72;
      bouncer.updateBox$0();
      bouncer._width = 72;
      bouncer.updateBox$0();
    }
    if (sprite === 11) {
      bouncer._height = 36;
      bouncer.updateBox$0();
      bouncer._width = 36;
      bouncer.updateBox$0();
    }
    this.entities.push(bouncer);
  },
  newBossDrone$2: function(x, y) {
    var t1, t2, enemy;
    t1 = {};
    t1.x_0 = 0;
    t2 = new $.WhereIterable(this.entities, new $.GalagaGame_newBossDrone_closure());
    t2.forEach$1(t2, new $.GalagaGame_newBossDrone_closure0(t1));
    if ($.$ge$n(t1.x_0, 6))
      return;
    if ($.random(0, 1, false) < 0.01) {
      enemy = $.Enemy$(this, t1.x_0, y, this.difficulty, "Drone");
      enemy.idNum = this.nextId;
      this.nextId = this.nextId + 1;
      this.entities.push(enemy);
    }
  },
  newMotherShip$1$difficulty: function(difficulty) {
    var t1, t2, enemy;
    t1 = {};
    t1.x_0 = 0;
    t2 = new $.WhereIterable(this.entities, new $.GalagaGame_newMotherShip_closure());
    t2.forEach$1(t2, new $.GalagaGame_newMotherShip_closure0(t1));
    if ($.$ge$n(t1.x_0, 2))
      return;
    if ($.random(0, 1, false) < 0.001) {
      enemy = $.Enemy$(this, -this.rect.get$halfWidth(), -225, difficulty, "MotherShip");
      enemy.idNum = this.nextId;
      this.nextId = this.nextId + 1;
      this.entities.push(enemy);
    }
  },
  newMotherShip$0: function() {
    return this.newMotherShip$1$difficulty(1);
  },
  newEnemy$1: function(difficulty) {
    var enemy = $.Enemy$(this, this.enemyX, this.enemyY, difficulty, "Normal");
    enemy.startY = this.enemyY;
    this.enemyX = this.enemyX + 70;
    this.enemyCount = this.enemyCount + 1;
    if (this.enemyCount > 10) {
      this.enemyY = this.enemyY + 65;
      this.enemyX = -400;
      this.enemyCount = 0;
    }
    enemy.idNum = this.nextId;
    this.nextId = this.nextId + 1;
    this.lastEnemy = this.timer.gameTime;
    this.entities.push(enemy);
  },
  newEnemy$0: function() {
    return this.newEnemy$1(1);
  },
  newBulletPowerUp$2: function(x, y) {
    var powerUp = $.PowerUp$(this, x, y, "bulletPower");
    this.entities.push(powerUp);
  },
  newPowerUp$0: function() {
    var powerUp, t1;
    if ($.random(0, 1, false) > 0.001)
      return;
    powerUp = $.PowerUp$(this, 0, 0, null);
    do {
      powerUp._x = $.random(-this.rect.get$halfWidth() + 50, this.rect.get$halfWidth() - 50, false);
      powerUp.updateBox$0();
      powerUp._y = -this.rect.get$halfHeight();
      powerUp.updateBox$0();
    } while (t1 = new $.WhereIterable(this.entities, new $.GalagaGame_newPowerUp_closure()), t1.any$1(t1, new $.GalagaGame_newPowerUp_closure0(powerUp)));
    this.lastPowerUp = this.timer.gameTime;
    this.entities.push(powerUp);
  },
  getEnemyX$1: function(type) {
    var t1 = new $.WhereIterable(this.entities, new $.GalagaGame_getEnemyX_closure());
    t1.forEach$1(t1, new $.GalagaGame_getEnemyX_closure0(type));
    return 0;
  },
  getEnemyY$1: function(type) {
    $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.entities, new $.GalagaGame_getEnemyY_closure()), true), new $.GalagaGame_getEnemyY_closure0(type));
    return 0;
  },
  createCheatsMenu$0: function() {
    var t1, t2;
    t1 = new $.GameText("Hax", true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "cheats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -240, 10, 10, "", "cheats");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("SpreadShot:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "cheats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, -38, -94, 10, 10, "", "cheats");
    t1.opacity = 0.7;
    this.entities.push(t1);
    t1 = this.Cheats;
    t2 = $.$eq(t1.$index(t1, "spreadshot"), 1) ? "True" : "False";
    t2 = $.GameButton$(new $.GalagaGame_createCheatsMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "cheats", "", 0.7, 36, t2, 200, -94);
    this.entities.push(t2);
    t2 = new $.GameText("Invincibility:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "cheats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, -38, -64, 10, 10, "", "cheats");
    t2.opacity = 0.7;
    this.entities.push(t2);
    t2 = $.$eq(t1.$index(t1, "invincibility"), 1) ? "True" : "False";
    t2 = $.GameButton$(new $.GalagaGame_createCheatsMenu_closure0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "cheats", "", 0.7, 36, t2, 200, -64);
    this.entities.push(t2);
    t2 = new $.GameText("Freeze Enemy:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "cheats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, -38, -34, 10, 10, "", "cheats");
    t2.opacity = 0.7;
    this.entities.push(t2);
    t1 = $.$eq(t1.$index(t1, "freeze"), 1) ? "True" : "False";
    t1 = $.GameButton$(new $.GalagaGame_createCheatsMenu_closure1(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "cheats", "", 0.7, 36, t1, 200, -34);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createCheatsMenu_closure2(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "cheats", "", 0.7, 16, "Made by Cody Smith", 400, 275);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("cheats");
  },
  createLevelEnd$0: function() {
    var t1 = this.visualLevel;
    t1 = t1 !== this.bonusCheck ? "Level " + $.S(t1) + " Complete!" : "Prepare for Bonus Stage!";
    t1 = new $.GameText(t1, true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "levelEnd", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -97, 10, 10, "", "levelEnd");
    t1.opacity = 0.7;
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("levelEnd");
  },
  createWelcomeMenu$0: function() {
    var t1, t2;
    this._gameOverEvent.signal$0();
    t1 = this.Highscores;
    if ($.$le$n(t1.$index(t1, 1), 5000) && $.$ge$n(t1.$index(t1, 1), 0))
      this.rank = 1;
    if ($.$le$n(t1.$index(t1, 1), 10000) && $.$ge$n(t1.$index(t1, 1), 5001))
      this.rank = 2;
    if ($.$le$n(t1.$index(t1, 1), 15000) && $.$ge$n(t1.$index(t1, 1), 10001))
      this.rank = 3;
    if ($.$le$n(t1.$index(t1, 1), 20000) && $.$ge$n(t1.$index(t1, 1), 15001))
      this.rank = 4;
    if ($.$le$n(t1.$index(t1, 1), 25000) && $.$ge$n(t1.$index(t1, 1), 20001))
      this.rank = 5;
    if ($.$le$n(t1.$index(t1, 1), 30000) && $.$ge$n(t1.$index(t1, 1), 25001))
      this.rank = 6;
    if ($.$le$n(t1.$index(t1, 1), 35000) && $.$ge$n(t1.$index(t1, 1), 30001))
      this.rank = 7;
    if ($.$le$n(t1.$index(t1, 1), 40000) && $.$ge$n(t1.$index(t1, 1), 35001))
      this.rank = 8;
    if ($.$le$n(t1.$index(t1, 1), 45000) && $.$ge$n(t1.$index(t1, 1), 40001))
      this.rank = 9;
    if ($.$le$n(t1.$index(t1, 1), 50000) && $.$ge$n(t1.$index(t1, 1), 45001))
      this.rank = 10;
    if ($.$le$n(t1.$index(t1, 1), 55000) && $.$ge$n(t1.$index(t1, 1), 50001))
      this.rank = 11;
    if ($.$le$n(t1.$index(t1, 1), 60000) && $.$ge$n(t1.$index(t1, 1), 55001))
      this.rank = 12;
    if ($.$ge$n(t1.$index(t1, 1), 150000) && $.$ge$n(t1.$index(t1, 1), 100001))
      this.rank = 13;
    if ($.$le$n(t1.$index(t1, 1), 200000) && $.$ge$n(t1.$index(t1, 1), 150001))
      this.rank = 14;
    if ($.$le$n(t1.$index(t1, 1), 250000) && $.$ge$n(t1.$index(t1, 1), 200001))
      this.rank = 15;
    if ($.$le$n(t1.$index(t1, 1), 300000) && $.$ge$n(t1.$index(t1, 1), 250001))
      this.rank = 16;
    if ($.$ge$n(t1.$index(t1, 1), 400000))
      this.rank = 17;
    t1 = this.rank === 1 ? 0.65 : 0;
    t2 = new $.GameText("You're: The Jew", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 2 ? 0.65 : 0;
    t2 = new $.GameText("You're: The Jewish Priest", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 3 ? 0.65 : 0;
    t2 = new $.GameText("You're: The Amish Mastermind", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 4 ? 0.65 : 0;
    t2 = new $.GameText("You're: The Road Warrior", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 5 ? 0.65 : 0;
    t2 = new $.GameText("You're: The Space Recruit", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 6 ? 0.65 : 0;
    t2 = new $.GameText("You're: The Space Cadet", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 7 ? 0.65 : 0;
    t2 = new $.GameText("You're: The Space Captain", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 8 ? 0.65 : 0;
    t2 = new $.GameText("You're: The Overlord of the Galaxy", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 9 ? 0.65 : 0;
    t2 = new $.GameText("You're: The President of the Universe", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 10 ? 0.65 : 0;
    t2 = new $.GameText("You're: The Commander of the Universe", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 11 ? 0.65 : 0;
    t2 = new $.GameText("You're: The Overlord of the Universe", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 12 ? 0.65 : 0;
    t2 = new $.GameText("You're: The Overseer of the Multi-verse", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 13 ? 0.65 : 0;
    t2 = new $.GameText("You're: The Commander of the Multi-verse", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 14 ? 0.65 : 0;
    t2 = new $.GameText("You're: The Overlord of the Multi-verse", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 15 ? 0.65 : 0;
    t2 = new $.GameText("You're: The God of this Dimension", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 16 ? 0.65 : 0;
    t2 = new $.GameText("You're: The God of all Dimensions", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t1 = this.rank === 17 ? 0.65 : 0;
    t2 = new $.GameText("You're: Pablo Manrequez De Montoya De La Qruez the Third", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t2.opacity = t1;
    this.entities.push(t2);
    t2 = new $.GameText("Welcome to Galaga!", true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -97, 10, 10, "", "welcome");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Made by Cody Smith", true, "cinnamoncake, Verdana", 16, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 400, 275, 10, 10, "", "welcome");
    t2.opacity = 0.7;
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.7, 36, "Start Game", 0, -31);
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_closure0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.7, 36, "Statistics", 0, 14);
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_closure1(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.7, 36, "Options", 0, 48);
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_closure2(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.7, 36, "Leaderboard", 0, 82);
    this.entities.push(t2);
    this.disableEntitiesByGroup$1("welcome");
  },
  createPausedMenu$0: function() {
    var t1 = new $.GameText("PAUSED", true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "paused", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -31, 10, 10, "", "paused");
    t1.opacity = 0.7;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createPausedMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "paused", "", 0.7, 36, "Quit", 0, 15);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("paused");
  },
  createLeaderBoardMenu$0: function() {
    var t1, t2, i, t3;
    for (t1 = this.HighscoresRank, t2 = this.Highscores, i = 1; i < 11; ++i)
      if ($.$le$n(t2.$index(t2, i), 0))
        t1.$indexSet(t1, i, "None");
      else if ($.$le$n(t2.$index(t2, i), 5000) && $.$gt$n(t2.$index(t2, i), 0))
        t1.$indexSet(t1, i, "Jew");
      else if ($.$le$n(t2.$index(t2, i), 20000) && $.$ge$n(t2.$index(t2, i), 5001))
        t1.$indexSet(t1, i, "Jewish Priest");
      else if ($.$le$n(t2.$index(t2, i), 35000) && $.$ge$n(t2.$index(t2, i), 20001))
        t1.$indexSet(t1, i, "Amish Mastermind");
      else if ($.$le$n(t2.$index(t2, i), 45000) && $.$ge$n(t2.$index(t2, i), 35001))
        t1.$indexSet(t1, i, "Road Warrior");
      else if ($.$le$n(t2.$index(t2, i), 65000) && $.$ge$n(t2.$index(t2, i), 45001))
        t1.$indexSet(t1, i, "Space Recruit");
      else if ($.$le$n(t2.$index(t2, i), 80000) && $.$ge$n(t2.$index(t2, i), 65001))
        t1.$indexSet(t1, i, "Space Cadet");
      else if ($.$le$n(t2.$index(t2, i), 90000) && $.$ge$n(t2.$index(t2, i), 80001))
        t1.$indexSet(t1, i, "Space Captain");
      else if ($.$le$n(t2.$index(t2, i), 100000) && $.$ge$n(t2.$index(t2, i), 90001))
        t1.$indexSet(t1, i, "Overlord of the Galaxy");
      else if ($.$le$n(t2.$index(t2, i), 150000) && $.$ge$n(t2.$index(t2, i), 100001))
        t1.$indexSet(t1, i, "President of the Universe");
      else if ($.$le$n(t2.$index(t2, i), 200000) && $.$ge$n(t2.$index(t2, i), 150001))
        t1.$indexSet(t1, i, "Commander of the Universe");
      else if ($.$le$n(t2.$index(t2, i), 250000) && $.$ge$n(t2.$index(t2, i), 200001))
        t1.$indexSet(t1, i, "Overlord of the Universe");
      else if ($.$le$n(t2.$index(t2, i), 350000) && $.$ge$n(t2.$index(t2, i), 250001))
        t1.$indexSet(t1, i, "Overseer of Multi-verse");
      else if ($.$le$n(t2.$index(t2, i), 450000) && $.$ge$n(t2.$index(t2, i), 350001))
        t1.$indexSet(t1, i, "Commander of Multi-verse");
      else if ($.$le$n(t2.$index(t2, i), 500000) && $.$ge$n(t2.$index(t2, i), 450001))
        t1.$indexSet(t1, i, "Overlord of Multi-verse");
      else if ($.$le$n(t2.$index(t2, i), 550000) && $.$ge$n(t2.$index(t2, i), 500001))
        t1.$indexSet(t1, i, "God of this Dimension");
      else if ($.$le$n(t2.$index(t2, i), 700000) && $.$ge$n(t2.$index(t2, i), 550001))
        t1.$indexSet(t1, i, "God of all Dimensions");
      else if ($.$ge$n(t2.$index(t2, i), 1000000))
        t1.$indexSet(t1, i, "Pablo Manrequez");
    t3 = new $.GameText("Leaderboard", true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 0, -240, 10, 10, "", "leaders");
    t3.opacity = 0.8;
    this.entities.push(t3);
    t3 = new $.GameText("Made by Cody Smith", true, "cinnamoncake, Verdana", 16, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 400, 275, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText("Score", true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, -175, 10, 10, "", "leaders");
    t3.opacity = 0.8;
    this.entities.push(t3);
    t3 = new $.GameText("Ranking", true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, -175, 10, 10, "", "leaders");
    t3.opacity = 0.8;
    this.entities.push(t3);
    t3 = new $.GameText("1st: " + $.S(t2.$index(t2, 1)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, -135, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 1)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, -135, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText("2nd: " + $.S(t2.$index(t2, 2)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, -95, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 2)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, -95, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText("3rd: " + $.S(t2.$index(t2, 3)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, -55, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 3)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, -55, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText("4th: " + $.S(t2.$index(t2, 4)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, -15, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 4)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, -15, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText("5th: " + $.S(t2.$index(t2, 5)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, 25, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 5)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, 25, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText("6th: " + $.S(t2.$index(t2, 6)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, 65, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 6)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, 65, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText("7th: " + $.S(t2.$index(t2, 7)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, 105, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 7)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, 105, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText("8th: " + $.S(t2.$index(t2, 8)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, 145, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 8)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, 145, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText("9th: " + $.S(t2.$index(t2, 9)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, 185, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 9)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, 185, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t2 = new $.GameText("10th: " + $.S(t2.$index(t2, 10)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, -160, 225, 10, 10, "", "leaders");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t1 = new $.GameText($.S(t1.$index(t1, 10)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 160, 225, 10, 10, "", "leaders");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createLeaderBoardMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.7, 36, "RESET", 0, 275);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createLeaderBoardMenu_closure0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.7, 36, "Back", -420, -280);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("leaders");
  },
  createStatsMenu$0: function() {
    var t1, t2;
    t1 = new $.GameText("Statistics", true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -280, 10, 10, "", "stats");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("Made by Cody Smith", true, "cinnamoncake, Verdana", 16, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 400, 275, 10, 10, "", "stats");
    t1.opacity = 0.7;
    this.entities.push(t1);
    t1 = this.Stats;
    t2 = new $.GameText("Total Killed: " + $.S(t1.$index(t1, "killed")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -200, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Groupies Annihilated: " + $.S(t1.$index(t1, "normalKills")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -155, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Big Bosses Denominated: " + $.S(t1.$index(t1, "bossKills")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -110, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Mother Ships Deflowered: " + $.S(t1.$index(t1, "motherKills")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -65, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Powerups Absorbed: " + $.S(t1.$index(t1, "powerups")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -20, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Hit Rate: " + $.S(t1.$index(t1, "percentage")) + "%", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, 25, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Total Completed Levels: " + $.S(t1.$index(t1, "wins")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, 70, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Total Loses: " + $.S(t1.$index(t1, "loses")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, 115, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Total Games: " + $.S(t1.$index(t1, "totalGames")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, 160, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t1 = new $.GameText("High Score: " + $.S(t1.$index(t1, "highscore")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 205, 10, 10, "", "stats");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createStatsMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.8, 36, "Back", -420, -280);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createStatsMenu_closure0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.8, 36, "RESET", 0, 250);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("stats");
  },
  createOptionsMenu$0: function() {
    var t1, t2;
    this._gameOverEvent.signal$0();
    t1 = new $.GameText("Options", true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -160, 10, 10, "", "options");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 16, "Made by Cody Smith", 400, 275);
    this.entities.push(t1);
    t1 = new $.GameText("Starting Lives:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -60, 10, 10, "", "options");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = this.Options;
    t2 = new $.GameText($.S(t1.$index(t1, "startLives")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 200, -60, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, "->", 245, -60);
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure1(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, "<-", 160, -60);
    this.entities.push(t2);
    t2 = new $.GameText("Bullet Cap:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -30, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText($.S(t1.$index(t1, "bulletCap")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 200, -30, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure2(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, "->", 245, -30);
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure3(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, "<-", 160, -30);
    this.entities.push(t2);
    t2 = new $.GameText("Time:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, 0, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText($.S(t1.$index(t1, "time")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 200, 0, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure4(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, "->", 245, 0);
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure5(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, "<-", 160, 0);
    this.entities.push(t2);
    t2 = new $.GameText("Difficulty:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, 30, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText($.S(t1.$index(t1, "difficulty")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 200, 30, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure6(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, "->", 245, 30);
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure7(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, "<-", 160, 30);
    this.entities.push(t2);
    t2 = new $.GameText("Powerups Enabled:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, -38, -94, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = $.$eq(t1.$index(t1, "powerups"), 1) ? "True" : "False";
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure8(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, t2, 200, -94);
    this.entities.push(t2);
    t2 = new $.GameText("Sound Effects Enabled:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, -38, 60, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = $.$eq(t1.$index(t1, "soundeffects"), 1) ? "True" : "False";
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure9(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, t2, 200, 60);
    this.entities.push(t2);
    t2 = new $.GameText("Input Type:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, 90, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t1 = $.$eq(t1.$index(t1, "controls"), 1) ? "Keyboard" : "Mouse";
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure10(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.7, 36, t1, 200, 90);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure11(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.7, 36, "Set to Defaults", 10, 150);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure12(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.7, 36, "Instructions", 380, -280);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure13(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.7, 36, "Back", -420, -280);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("options");
  },
  createControlsMenu$0: function() {
    var t1, t2;
    t1 = new $.GameText("Instructions", true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -225, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("Made by Cody Smith", true, "cinnamoncake, Verdana", 16, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 400, 275, 10, 10, "", "instructions");
    t1.opacity = 0.7;
    this.entities.push(t1);
    t1 = this.Options;
    t2 = $.$eq(t1.$index(t1, "controls"), 1) ? "Move left/right: Left and Right arrow keys." : "Move left/right: Mouse movement.";
    t2 = new $.GameText(t2, true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -145, 10, 10, "", "instructions");
    t2.opacity = 0.7;
    this.entities.push(t2);
    t2 = $.$eq(t1.$index(t1, "controls"), 1) ? "Fire: Spacebar." : "Fire: Left mouse click.";
    t2 = new $.GameText(t2, true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -96, 10, 10, "", "instructions");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t1 = $.$eq(t1.$index(t1, "controls"), 1) ? "Super Bullet: Shift Key. (Needs 20 coins to charge.)" : "Super Bullet: Spacebar. (Needs 20 coins to charge.)";
    t1 = new $.GameText(t1, true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -47, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("Powerups:", true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 2, 10, 10, "", "instructions");
    t1.opacity = 0.9;
    this.entities.push(t1);
    t1 = new $.GameText("Fire Flower: Spread shot upgrade.", true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 51, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("Energy Canister: Extra life.", true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 100, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("Apple: Multiplier times two.", true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 149, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("Energy Ball: Extra bullet", true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 198, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("Coin: Plus 100 points.", true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 247, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createControlsMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.7, 36, "Back", -420, -280);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("instructions");
  },
  createGameOverMenu$0: function() {
    var t1 = this.enemyAmount <= 0 ? "You Won!" : "You Lost!";
    t1 = new $.GameText(t1, true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "gameOver", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -97, 10, 10, "", "gameOver");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("Play again?", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "gameOver", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -31, 10, 10, "", "gameOver");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createGameOverMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "gameOver", "", 0.8, 36, "Yes", 0, 15);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createGameOverMenu_closure0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "gameOver", "", 0.8, 36, "No", 0, 60);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("gameOver");
  },
  resetLeaderBoard$0: function() {
    var t1 = this.Highscores;
    t1.$indexSet(t1, 1, 0);
    t1.$indexSet(t1, 2, 0);
    t1.$indexSet(t1, 3, 0);
    t1.$indexSet(t1, 4, 0);
    t1.$indexSet(t1, 5, 0);
    t1.$indexSet(t1, 6, 0);
    t1.$indexSet(t1, 7, 0);
    t1.$indexSet(t1, 8, 0);
    t1.$indexSet(t1, 9, 0);
    t1.$indexSet(t1, 10, 0);
    this.set$state(this, 1);
    this.removeEntitiesByGroup$1("leaders");
    this.createLeaderBoardMenu$0();
    this.set$state(this, 9);
  },
  resetStats$0: function() {
    var t1 = this.Stats;
    t1.$indexSet(t1, "killed", 0);
    t1.$indexSet(t1, "wins", 0);
    t1.$indexSet(t1, "loses", 0);
    t1.$indexSet(t1, "totalGames", 0);
    t1.$indexSet(t1, "highscore", 0);
    t1.$indexSet(t1, "normalKills", 0);
    t1.$indexSet(t1, "bossKills", 0);
    t1.$indexSet(t1, "motherKills", 0);
    t1.$indexSet(t1, "powerups", 0);
    t1.$indexSet(t1, "percentage", 0);
    this.set$state(this, 1);
    this.removeEntitiesByGroup$1("stats");
    this.createStatsMenu$0();
    this.set$state(this, 5);
  },
  resetOptions$0: function() {
    var t1 = this.Options;
    t1.$indexSet(t1, "startLives", 3);
    t1.$indexSet(t1, "bulletCap", 3);
    t1.$indexSet(t1, "time", 60);
    t1.$indexSet(t1, "difficulty", 1);
    t1.$indexSet(t1, "soundeffects", 1);
    t1.$indexSet(t1, "controls", 1);
    this.set$state(this, 1);
    this.removeEntitiesByGroup$1("options");
    this.createOptionsMenu$0();
    this.set$state(this, 6);
  },
  resetPowerups$0: function() {
    this.ship.spiralShot = false;
    this.ship.bulletPower = 8;
  },
  switchDirection$0: function() {
    this.goingRight = !this.goingRight;
    var t1 = new $.WhereIterable(this.entities, new $.GalagaGame_switchDirection_closure());
    t1.forEach$1(t1, new $.GalagaGame_switchDirection_closure0());
  },
  canEnemyFall$0: function() {
    var t1, t2;
    t1 = {};
    t1.x_0 = 0;
    t2 = new $.WhereIterable(this.entities, new $.GalagaGame_canEnemyFall_closure());
    t2.forEach$1(t2, new $.GalagaGame_canEnemyFall_closure0(t1));
    if ($.$ge$n(t1.x_0, 3))
      return false;
    else
      return true;
  },
  get$canEnemyFall: function() {
    return new $.BoundClosure$0(this, "canEnemyFall$0", null);
  },
  removeBullets$0: function() {
    this.removeEntitiesByFilter$1(new $.GalagaGame_removeBullets_closure());
  },
  updateLeaderboard$0: function() {
    var tempMap, t1, k, i, t2, t3, j;
    tempMap = new $.HashMap(0, null, null, null, null);
    for (t1 = this.Highscores, k = 1; k < 11; ++k)
      tempMap.$indexSet(tempMap, k, t1.$index(t1, k));
    for (i = 1; i <= 10; ++i) {
      t2 = this.score;
      t3 = t1.$index(t1, i);
      if (typeof t2 !== "number")
        throw t2.$gt();
      if (typeof t3 !== "number")
        throw $.iae(t3);
      if (t2 > t3) {
        for (j = i + 1; j < 10; ++j)
          t1.$indexSet(t1, j, tempMap.$index(tempMap, j - 1));
        t1.$indexSet(t1, i, this.score);
        t2 = this.Stats;
        t2.$indexSet(t2, "highScore", t1.$index(t1, i));
        break;
      }
    }
    t2 = this.Stats;
    t2.$indexSet(t2, "highscore", t1.$index(t1, 1));
  },
  newGame$0: function() {
    var t1, i, t2, t3, t4, t5;
    t1 = new $.WhereIterable(this.entities, new $.GalagaGame_newGame_closure());
    t1.forEach$1(t1, new $.GalagaGame_newGame_closure0());
    for (i = 0; i < 50; ++i)
      this.startStars$0();
    this.score = 0;
    t1 = this.ship;
    if (t1 != null) {
      t1.removeFromGame$0;
      t1._removeFromGame = true;
    }
    this.removeEntitiesByFilter$1(new $.GalagaGame_newGame_closure1());
    this.removeEntitiesByFilter$1(new $.GalagaGame_newGame_closure2());
    this.removeEntitiesByFilter$1(new $.GalagaGame_newGame_closure3());
    this.enemyX = -400;
    this.enemyY = -165;
    this.enemyAmount = 33;
    this.bonusCheck = 3;
    this.bonusStage = false;
    this.visualLevel = 1;
    this.level = 1;
    this.score = 0;
    t1 = this.Options;
    t2 = t1.$index(t1, "time");
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t3 = t1.$index(t1, "difficulty");
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t4 = t1.$index(t1, "startLives");
    if (typeof t4 !== "number")
      throw $.iae(t4);
    t5 = t1.$index(t1, "bulletCap");
    if (typeof t5 !== "number")
      throw $.iae(t5);
    this.pointMultiplier = 60 / t2 + t3 + 3 / t4 + 3 / t5;
    if ($.$eq(t1.$index(t1, "powerups"), 1))
      this.pointMultiplier = this.pointMultiplier * 2;
    if (this.level >= this.bonusCheck) {
      this.bonusStage = true;
      this.bonusCheck = this.bonusCheck + 3;
    } else
      this.bonusStage = false;
    for (i = 0; i < 33; ++i)
      this.newEnemy$0();
    t2 = new $.Ship(8, 3, 3, 0, 0, 3, 0, 0, 0, false, false, false, 0, null, this, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, this.rect.get$halfHeight() - 30, 36, 36, null, null);
    t2.opacity = 0.2;
    t3 = t2.game.get$Options();
    t2.maxBullet = t3.$index(t3, "bulletCap");
    t2.bullet = t2.maxBullet;
    this.ship = t2;
    t2 = this.ship;
    this.entities.push(t2);
    this.p1Dead = false;
    this.ship.lives = t1.$index(t1, "startLives");
    t2 = this.Stats;
    t2.$indexSet(t2, "totalGames", $.$add$ns(t2.$index(t2, "totalGames"), 1));
    this.set$state(this, 3);
    this.timer.timeDecrease = true;
    this.timer.gameTime = t1.$index(t1, "time");
  },
  gameOver$0: function() {
    this.removeEntitiesByFilter$1(new $.GalagaGame_gameOver_closure());
    this.removeEntitiesByFilter$1(new $.GalagaGame_gameOver_closure0());
    this.removeEntitiesByFilter$1(new $.GalagaGame_gameOver_closure1());
    this.updateLeaderboard$0();
    this.updatePercentage$0();
    var t1 = this.Stats;
    t1.$indexSet(t1, "loses", $.$add$ns(t1.$index(t1, "loses"), 1));
    this._gameOverEvent.signal$0();
    this._statUpdateEvent.signal$0();
    if (this.soundEffectsOn)
      ;
    this.removeEntitiesByGroup$1("gameOver");
    this.createGameOverMenu$0();
    this.set$state(this, 4);
  },
  updatePercentage$0: function() {
    var t1, t2, t3;
    t1 = this.ship;
    t2 = t1.bulletsHit;
    t3 = this.Stats;
    if (t2 > 0)
      t3.$indexSet(t3, "percentage", t2 / t1.bulletsFired * 100);
    else
      t3.$indexSet(t3, "percentage", 0);
    t1 = this.Stats;
    t1.$indexSet(t1, "percentage", $.round$0$nx(t1.$index(t1, "percentage")));
    if ($.$ge$n(t1.$index(t1, "percentage"), 100))
      t1.$indexSet(t1, "percentage", 100);
  },
  get$onStatUpdate: function() {
    return this._statUpdateEvent.stream;
  },
  get$onGameOver: function() {
    return this._gameOverEvent.stream;
  },
  get$onShipHit: function() {
    return this._shipHitEvent.stream;
  },
  get$onBossHit: function() {
    return this._bossHitEvent.stream;
  },
  get$onMotherShipHit: function() {
    return this._motherShipEvent.stream;
  },
  get$onNormalHit: function() {
    return this._normalHitEvent.stream;
  },
  get$onFadeEvent: function() {
    return this._normalHitEvent.stream;
  }
},

GalagaGame_waiting_closure: {"": "Closure;this_0",
  call$1: function(t) {
    var t1, i, t2, enemy;
    t1 = this.this_0;
    t1.set$_waiting(t1.get$_waiting() + 1);
    if (t1.get$_waiting() === 4) {
      $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(t1.get$entities(), new $.GalagaGame_waiting__closure()), true), new $.GalagaGame_waiting__closure0());
      for (i = 0; i < 50; ++i)
        t1.startStars$0();
      t1.set$enemyX(-400);
      t1.set$enemyY(-165);
      t1.set$enemyAmount(33);
      t2 = t1.get$difficulty();
      if (t2 < 5)
        t1.set$difficulty(t2 + 1);
      if (t1.get$visualLevel() >= t1.get$bonusCheck()) {
        t1.set$bonusStage(true);
        t1.set$tutorial(false);
        t1.set$bonusCheck(t1.get$bonusCheck() + 3);
      } else
        t1.set$bonusStage(false);
      if (t1.get$bonusStage()) {
        enemy = $.Enemy$(t1, 0, 0, t1.get$difficulty(), "Boss");
        enemy.idNum = t1.get$nextId();
        t1.set$nextId(t1.get$nextId() + 1);
        t1.get$entities().push(enemy);
      } else
        for (i = 0; i < 33; ++i)
          t1.newEnemy$1(t1.get$difficulty());
      $.set$state$x(t1, 3);
      t1.get$timer().timeDecrease = true;
      t2 = t1.get$timer();
      t1 = t1.get$Options();
      t2.gameTime = t1.$index(t1, "time");
      t.cancel$0();
    }
  }
},

GalagaGame_waiting__closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isStars;
  }
},

GalagaGame_waiting__closure0: {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  }
},

GalagaGame_update_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isPowerUp;
  }
},

GalagaGame_update_closure0: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isBullet;
  }
},

GalagaGame_update_closure1: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

GalagaGame_update_closure2: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isPowerUp;
  }
},

GalagaGame_update_closure3: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isBullet;
  }
},

GalagaGame_update_closure4: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

GalagaGame_update_closure5: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isGameButton;
  }
},

GalagaGame_update_closure6: {"": "Closure;this_0",
  call$1: function(e) {
    var t1;
    if ($.$eq(e.get$opacity(), 1) && e.get$isHighlighted() && e.get$soundReady()) {
      t1 = this.this_0;
      if (t1.get$soundEffectsOn())
        t1.get$cursorMove();
      e.set$soundReady(false);
    } else if ($.$lt$n(e.get$opacity(), 1))
      e.set$soundReady(true);
  }
},

GalagaGame_newBossDrone_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

GalagaGame_newBossDrone_closure0: {"": "Closure;box_0",
  call$1: function(e) {
    var t1;
    if ($.propertyTypeCast(e, "$isEnemy").type === "Drone") {
      t1 = this.box_0;
      t1.x_0 = $.$add$ns(t1.x_0, 1);
    }
  }
},

GalagaGame_newMotherShip_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

GalagaGame_newMotherShip_closure0: {"": "Closure;box_0",
  call$1: function(e) {
    var t1;
    if ($.get$type$x(e) === "MotherShip") {
      t1 = this.box_0;
      t1.x_0 = $.$add$ns(t1.x_0, 1);
    }
  }
},

GalagaGame_newPowerUp_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isPowerUp;
  }
},

GalagaGame_newPowerUp_closure0: {"": "Closure;powerUp_0",
  call$1: function(e) {
    return this.powerUp_0.collidesWith$1(e);
  }
},

GalagaGame_getEnemyX_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

GalagaGame_getEnemyX_closure0: {"": "Closure;type_0",
  call$1: function(e) {
    var t1 = $.getInterceptor$x(e);
    if (t1.get$type(e) === this.type_0)
      return t1.get$x(e);
  }
},

GalagaGame_getEnemyY_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

GalagaGame_getEnemyY_closure0: {"": "Closure;type_0",
  call$1: function(e) {
    var t1 = $.getInterceptor$x(e);
    if (t1.get$type(e) === this.type_0)
      return t1.get$y(e);
  }
},

GalagaGame_createCheatsMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_0;
    t2 = t1.get$Cheats();
    t2 = $.$ge$n(t2.$index(t2, "spreadshot"), 2);
    t3 = t1.get$Cheats();
    if (t2)
      t3.$indexSet(t3, "spreadshot", 1);
    else
      t3.$indexSet(t3, "spreadshot", $.$add$ns(t3.$index(t3, "spreadshot"), 1));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("cheats");
    t1.createCheatsMenu$0();
    t2.set$state(t1, 10);
  }
},

GalagaGame_createCheatsMenu_closure0: {"": "Closure;this_1",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_1;
    t2 = t1.get$Cheats();
    t2 = $.$ge$n(t2.$index(t2, "invincibility"), 2);
    t3 = t1.get$Cheats();
    if (t2)
      t3.$indexSet(t3, "invincibility", 1);
    else
      t3.$indexSet(t3, "invincibility", $.$add$ns(t3.$index(t3, "invincibility"), 1));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("cheats");
    t1.createCheatsMenu$0();
    t2.set$state(t1, 10);
  }
},

GalagaGame_createCheatsMenu_closure1: {"": "Closure;this_2",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_2;
    t2 = t1.get$Cheats();
    t2 = $.$ge$n(t2.$index(t2, "freeze"), 2);
    t3 = t1.get$Cheats();
    if (t2)
      t3.$indexSet(t3, "freeze", 1);
    else
      t3.$indexSet(t3, "freeze", $.$add$ns(t3.$index(t3, "freeze"), 1));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("cheats");
    t1.createCheatsMenu$0();
    t2.set$state(t1, 10);
  }
},

GalagaGame_createCheatsMenu_closure2: {"": "Closure;this_3",
  call$0: function() {
    var t1 = this.this_3;
    t1.removeEntitiesByGroup$1("welcome");
    t1.createWelcomeMenu$0();
    $.set$state$x(t1, 1);
    t1.get$_fadeEvent().signal$0();
  }
},

GalagaGame_createWelcomeMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.newGame$0();
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn())
      t1.get$cursorSelect();
  }
},

GalagaGame_createWelcomeMenu_closure0: {"": "Closure;this_1",
  call$0: function() {
    var t1 = this.this_1;
    t1.removeEntitiesByGroup$1("stats");
    t1.createStatsMenu$0();
    $.set$state$x(t1, 5);
    t1.get$_fadeEvent().signal$0();
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn())
      t1.get$cursorSelect2();
  }
},

GalagaGame_createWelcomeMenu_closure1: {"": "Closure;this_2",
  call$0: function() {
    var t1 = this.this_2;
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    $.set$state$x(t1, 6);
    t1.get$_fadeEvent().signal$0();
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn())
      t1.get$cursorSelect2();
  }
},

GalagaGame_createWelcomeMenu_closure2: {"": "Closure;this_3",
  call$0: function() {
    var t1 = this.this_3;
    t1.removeEntitiesByGroup$1("leaders");
    t1.createLeaderBoardMenu$0();
    $.set$state$x(t1, 9);
    t1.get$_fadeEvent().signal$0();
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn())
      t1.get$cursorSelect2();
  }
},

GalagaGame_createPausedMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1.get$ship();
    if (t2 != null) {
      t2.removeFromGame$0;
      t2.set$_removeFromGame(true);
    }
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createPausedMenu__closure());
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createPausedMenu__closure0());
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createPausedMenu__closure1());
    t1.get$_statUpdateEvent().signal$0();
    t1.gameOver$0();
    t1.removeEntitiesByGroup$1("welcome");
    t1.createWelcomeMenu$0();
    $.set$state$x(t1, 1);
  }
},

GalagaGame_createPausedMenu__closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isPowerUp;
  }
},

GalagaGame_createPausedMenu__closure0: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isBullet;
  }
},

GalagaGame_createPausedMenu__closure1: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

GalagaGame_createLeaderBoardMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    return this.this_0.resetLeaderBoard$0();
  }
},

GalagaGame_createLeaderBoardMenu_closure0: {"": "Closure;this_1",
  call$0: function() {
    var t1 = this.this_1;
    t1.removeEntitiesByGroup$1("welcome");
    t1.createWelcomeMenu$0();
    $.set$state$x(t1, 1);
    t1.get$_fadeEvent().signal$0();
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn())
      t1.get$cursorSelect2();
  }
},

GalagaGame_createStatsMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.removeEntitiesByGroup$1("welcome");
    t1.createWelcomeMenu$0();
    $.set$state$x(t1, 1);
    t1.get$_fadeEvent().signal$0();
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn())
      t1.get$cursorSelect2();
  }
},

GalagaGame_createStatsMenu_closure0: {"": "Closure;this_1",
  call$0: function() {
    return this.this_1.resetStats$0();
  }
},

GalagaGame_createOptionsMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.removeEntitiesByGroup$1("cheats");
    t1.createCheatsMenu$0();
    $.set$state$x(t1, 10);
    t1.newBouncer$1(11);
    t1.newBouncer$1(11);
    t1.newBouncer$1(11);
    t1.newBouncer$1(11);
    t1.newBouncer$1(11);
    t1.newBouncer$1(11);
    t1.get$_fadeEvent().signal$0();
  }
},

GalagaGame_createOptionsMenu_closure0: {"": "Closure;this_1",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_1;
    t2 = t1.get$Options();
    t2 = $.$ge$n(t2.$index(t2, "startLives"), 10);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "startLives", 1);
    else
      t3.$indexSet(t3, "startLives", $.$add$ns(t3.$index(t3, "startLives"), 1));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure1: {"": "Closure;this_2",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_2;
    t2 = t1.get$Options();
    t2 = $.$le$n(t2.$index(t2, "startLives"), 1);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "startLives", 10);
    else
      t3.$indexSet(t3, "startLives", $.$sub$n(t3.$index(t3, "startLives"), 1));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure2: {"": "Closure;this_3",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_3;
    t2 = t1.get$Options();
    t2 = $.$ge$n(t2.$index(t2, "bulletCap"), 10);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "bulletCap", 1);
    else
      t3.$indexSet(t3, "bulletCap", $.$add$ns(t3.$index(t3, "bulletCap"), 1));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure3: {"": "Closure;this_4",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_4;
    t2 = t1.get$Options();
    t2 = $.$le$n(t2.$index(t2, "bulletCap"), 1);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "bulletCap", 10);
    else
      t3.$indexSet(t3, "bulletCap", $.$sub$n(t3.$index(t3, "bulletCap"), 1));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure4: {"": "Closure;this_5",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_5;
    t2 = t1.get$Options();
    t2 = $.$ge$n(t2.$index(t2, "time"), 180);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "time", 0);
    else
      t3.$indexSet(t3, "time", $.$add$ns(t3.$index(t3, "time"), 20));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure5: {"": "Closure;this_6",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_6;
    t2 = t1.get$Options();
    t2 = $.$le$n(t2.$index(t2, "time"), 0);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "time", 180);
    else
      t3.$indexSet(t3, "time", $.$sub$n(t3.$index(t3, "time"), 20));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure6: {"": "Closure;this_7",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_7;
    t2 = t1.get$Options();
    t2 = $.$ge$n(t2.$index(t2, "difficulty"), 5);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "difficulty", 1);
    else
      t3.$indexSet(t3, "difficulty", $.$add$ns(t3.$index(t3, "difficulty"), 1));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure7: {"": "Closure;this_8",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_8;
    t2 = t1.get$Options();
    t2 = $.$le$n(t2.$index(t2, "difficulty"), 1);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "difficulty", 5);
    else
      t3.$indexSet(t3, "difficulty", $.$sub$n(t3.$index(t3, "difficulty"), 1));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure8: {"": "Closure;this_9",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_9;
    t2 = t1.get$Options();
    t2 = $.$ge$n(t2.$index(t2, "powerups"), 2);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "powerups", 1);
    else
      t3.$indexSet(t3, "powerups", $.$add$ns(t3.$index(t3, "powerups"), 1));
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure9: {"": "Closure;this_10",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_10;
    t2 = t1.get$Options();
    t2 = $.$ge$n(t2.$index(t2, "soundeffects"), 2);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "soundeffects", 1);
    else
      t3.$indexSet(t3, "soundeffects", $.$add$ns(t3.$index(t3, "soundeffects"), 1));
    t2 = t1.get$Options();
    if ($.$eq(t2.$index(t2, "soundeffects"), 1))
      t1.set$soundEffectsOn(true);
    else
      t1.set$soundEffectsOn(false);
    t1.get$menuSong();
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure10: {"": "Closure;this_11",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_11;
    t2 = t1.get$Options();
    t2 = $.$ge$n(t2.$index(t2, "controls"), 2);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "controls", 1);
    else
      t3.$indexSet(t3, "controls", $.$add$ns(t3.$index(t3, "controls"), 1));
    t1.get$menuSong();
    t1.get$_statUpdateEvent().signal$0();
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure11: {"": "Closure;this_12",
  call$0: function() {
    return this.this_12.resetOptions$0();
  }
},

GalagaGame_createOptionsMenu_closure12: {"": "Closure;this_13",
  call$0: function() {
    var t1, t2;
    t1 = this.this_13;
    t1.newBouncer$1(1);
    t1.newBouncer$1(2);
    t1.newBouncer$1(3);
    t1.newBouncer$1(4);
    t1.newBouncer$1(5);
    t1.newBouncer$1(6);
    t1.newBouncer$1(7);
    t1.newBouncer$1(8);
    t1.newBouncer$1(9);
    t1.newBouncer$1(10);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("instructions");
    t1.createControlsMenu$0();
    t2.set$state(t1, 7);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn())
      t1.get$cursorSelect2();
  }
},

GalagaGame_createOptionsMenu_closure13: {"": "Closure;this_14",
  call$0: function() {
    var t1 = this.this_14;
    t1.removeEntitiesByGroup$1("welcome");
    t1.createWelcomeMenu$0();
    $.set$state$x(t1, 1);
    t1.get$_fadeEvent().signal$0();
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn())
      t1.get$cursorSelect2();
  }
},

GalagaGame_createControlsMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.set$state$x(t1, 6);
    t1.get$_fadeEvent().signal$0();
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn())
      t1.get$cursorSelect2();
  }
},

GalagaGame_createGameOverMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    this.this_0.newGame$0();
  }
},

GalagaGame_createGameOverMenu_closure0: {"": "Closure;this_1",
  call$0: function() {
    var t1, t2;
    t1 = this.this_1;
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createGameOverMenu__closure());
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createGameOverMenu__closure0());
    t2 = t1.get$ship();
    if (t2 != null) {
      t2.removeFromGame$0;
      t2.set$_removeFromGame(true);
    }
    t1.removeEntitiesByGroup$1("welcome");
    t1.createWelcomeMenu$0();
    $.set$state$x(t1, 1);
  }
},

GalagaGame_createGameOverMenu__closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isPowerUp;
  }
},

GalagaGame_createGameOverMenu__closure0: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isBullet;
  }
},

GalagaGame_switchDirection_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

GalagaGame_switchDirection_closure0: {"": "Closure;",
  call$1: function(e) {
    var t1, t2;
    e.set$switchAmount(e.get$switchAmount() + 1);
    t1 = $.getInterceptor$x(e);
    if (t1.get$type(e) === "Normal") {
      t2 = e.get$momentum();
      t2.xVel = $.$mul$n(t2.xVel, -1);
      if ($.$ge$n(e.get$momentum().xVel, 0))
        t1.set$x(e, $.$add$ns(t1.get$x(e), 3));
      else
        t1.set$x(e, $.$sub$n(t1.get$x(e), 3));
      t2 = e.get$momentum();
      t2.xVel = $.$add$ns(t2.xVel, e.get$switchAmount());
      t1.set$y(e, $.$add$ns(t1.get$y(e), 10));
    }
  }
},

GalagaGame_canEnemyFall_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

GalagaGame_canEnemyFall_closure0: {"": "Closure;box_0",
  call$1: function(e) {
    var t1;
    if ($.get$type$x(e) === "Normal") {
      t1 = this.box_0;
      t1.x_0 = $.$add$ns(t1.x_0, 1);
    }
  }
},

GalagaGame_removeBullets_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isBullet;
  }
},

GalagaGame_newGame_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isStars;
  }
},

GalagaGame_newGame_closure0: {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  }
},

GalagaGame_newGame_closure1: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isPowerUp;
  }
},

GalagaGame_newGame_closure2: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isBullet;
  }
},

GalagaGame_newGame_closure3: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

GalagaGame_gameOver_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isPowerUp;
  }
},

GalagaGame_gameOver_closure0: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isBullet;
  }
},

GalagaGame_gameOver_closure1: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

bouncingBall: {"": "GameEntity;Sprite<,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2, t3;
    if (!$.$eq($.get$state$x(this.game), 7) && !$.$eq($.get$state$x(this.game), 10))
      this._removeFromGame = true;
    t1 = this._y;
    t2 = $.get$rect$x(this.game).get$halfHeight();
    t3 = this._height;
    if (typeof t3 !== "number")
      throw t3.$div();
    if ($.$gt$n(t1, t2 - t3 / 2)) {
      t1 = this.momentum;
      t1.yVel = $.$mul$n(t1.yVel, -1);
    }
    t1 = this._y;
    t2 = $.get$rect$x(this.game).get$halfHeight();
    t3 = this._height;
    if (typeof t3 !== "number")
      throw t3.$div();
    if ($.$lt$n(t1, -t2 + t3 / 2)) {
      t1 = this.momentum;
      t1.yVel = $.$mul$n(t1.yVel, -1);
    }
    t1 = this._x;
    t2 = $.get$rect$x(this.game).get$halfWidth();
    t3 = this._width;
    if (typeof t3 !== "number")
      throw t3.$div();
    if ($.$gt$n(t1, t2 - t3 / 2)) {
      t1 = this.momentum;
      t1.xVel = $.$mul$n(t1.xVel, -1);
    }
    t1 = this._x;
    t2 = $.get$rect$x(this.game).get$halfWidth();
    t3 = this._width;
    if (typeof t3 !== "number")
      throw t3.$div();
    if ($.$lt$n(t1, -t2 + t3 / 2)) {
      t1 = this.momentum;
      t1.xVel = $.$mul$n(t1.xVel, -1);
    }
    $.GameEntity.prototype.update$0.call(this);
  },
  bouncingBall$6: function(game, x, y, h, w, sprite) {
    this.Sprite = sprite;
    this.opacity = 0;
    this.momentum.yVel = $.random(-250, 250, false);
    this.momentum.xVel = $.random(-250, 250, false);
  },
  $isbouncingBall: true
},

Bullet: {"": "GameEntity;temp,startX,Type<,_deleteTimer,_waiting@,farRight,farLeft,right,left,straight,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2, t3;
    if ($.$eq($.get$state$x(this.game), 2) || $.$eq($.get$state$x(this.game), 4) || $.$eq($.get$state$x(this.game), 1))
      return;
    $.GameEntity.prototype.update$0.call(this);
    if (this.right)
      this.momentum.xVel = 40;
    else if (this.left)
      this.momentum.xVel = -40;
    else if (this.straight)
      this.momentum.xVel = 0;
    if ($.$le$n(this._width, 0) || $.$le$n(this._height, 0)) {
      if ($.$gt$n(this.momentum.yVel, 0)) {
        t1 = this.game;
        t1.set$score($.$add$ns(t1.get$score(), 100));
      }
      this._removeFromGame = true;
    }
    if ($.$lt$n(this._y, -$.get$rect$x(this.game).get$halfHeight())) {
      t1 = this.game.get$ship();
      t2 = t1.get$bullet();
      t3 = $.getInterceptor$n(t2);
      if (t3.$lt(t2, 3))
        t1.set$bullet(t3.$add(t2, 1));
      this._removeFromGame = true;
    }
    if (!$.$eq(this.momentum.yVel, 0))
      $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.game.get$entities(), new $.Bullet_update_closure(this)), true), new $.Bullet_update_closure0(this));
    if ($.$lt$n(this.momentum.yVel, 0))
      $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.game.get$entities(), new $.Bullet_update_closure1(this)), true), new $.Bullet_update_closure2(this));
    if ($.$gt$n(this.momentum.yVel, 0))
      $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.game.get$entities(), new $.Bullet_update_closure3(this)), true), new $.Bullet_update_closure4(this));
  },
  Bullet$7: function(game, x, y, dir, yVel, size, type) {
    this.color = "255, 0, 0";
    this.momentum.yVel = yVel;
    this.startX = x;
    if (dir === "right")
      this.right = true;
    else if (dir === "left")
      this.left = true;
    else if (dir === "straight")
      this.straight = true;
    else if (dir === "farLeft")
      this.farLeft = true;
    else if (dir === "farRight")
      this.farRight = true;
    this.Type = type;
    this.opacity = 0;
    if (size >= 36)
      ;
    if (type === "super") {
      this._width = 64;
      this.updateBox$0();
      this._height = 32;
      this.updateBox$0();
    }
  },
  $isBullet: true
},

Bullet_update_closure: {"": "Closure;this_0",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isBullet && this.this_0.collidesWith$1(e);
  }
},

Bullet_update_closure0: {"": "Closure;this_1",
  call$1: function(e) {
    var t1, t2;
    t1 = this.this_1;
    t2 = $.getInterceptor$x(e);
    if ($.$gt$n(t1.get$_width(), t2.get$width(e)) && $.$gt$n(t1.get$_height(), t2.get$height(e)) && !$.$eq(t2.get$x(e), t1.get$_x()) && !$.$eq(t2.get$y(e), t1.get$_y())) {
      t1.set$_width($.$sub$n(t1.get$_width(), t2.get$width(e)));
      t1.updateBox$0();
      t1.set$_height($.$sub$n(t1.get$_height(), t2.get$height(e)));
      t1.updateBox$0();
      t1 = t1.get$game().get$ship();
      t1.set$bullet($.$add$ns(t1.get$bullet(), 1));
      e.removeFromGame$0();
    }
  }
},

Bullet_update_closure1: {"": "Closure;this_2",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy && this.this_2.collidesWith$1(e);
  }
},

Bullet_update_closure2: {"": "Closure;this_3",
  call$1: function(enemy) {
    var t1, t2, t3, t4, t5;
    t1 = this.this_3;
    t2 = $.getInterceptor$x(enemy);
    if ($.$gt$n(t1.get$_width(), t2.get$width(enemy)) && $.$gt$n(t1.get$_height(), t2.get$height(enemy))) {
      t1.set$_width($.$sub$n(t1.get$_width(), t2.get$width(enemy)));
      t1.updateBox$0();
      t1.set$_height($.$sub$n(t1.get$_height(), t2.get$height(enemy)));
      t1.updateBox$0();
    } else if (t1.get$Type() !== "super")
      t1.set$_removeFromGame(true);
    t1.get$game().set$targetId(enemy.get$idNum());
    t3 = t1.get$game().get$ship();
    t3.set$bulletsHit(t3.get$bulletsHit() + 1);
    t3 = t1.get$game().get$ship();
    t4 = t3.get$bullet();
    t5 = $.getInterceptor$n(t4);
    if (t5.$lt(t4, 3))
      t3.set$bullet(t5.$add(t4, 1));
    t1 = t1.get$game();
    if (t1.get$soundEffectsOn())
      t1.get$enemyHit();
    t3 = t2.get$type(enemy);
    if (t3 === "MotherShip")
      t1.get$_motherShipEvent().signal$0();
    else if (t3 === "Boss")
      t1.get$_bossHitEvent().signal$0();
    else if (t3 === "Normal")
      t1.get$_normalHitEvent().signal$0();
    if (t2.get$type(enemy) !== "Boss") {
      t2.set$width(enemy, $.$sub$n(t2.get$width(enemy), 8));
      t2.set$height(enemy, $.$sub$n(t2.get$height(enemy), 8));
    }
    enemy.set$health(enemy.get$health() - 1);
  }
},

Bullet_update_closure3: {"": "Closure;this_4",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isShip && this.this_4.collidesWith$1(e);
  }
},

Bullet_update_closure4: {"": "Closure;this_5",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = this.this_5;
    t2 = t1.get$game().get$Cheats();
    if ($.$eq(t2.$index(t2, "invincibility"), 1)) {
      t2 = t1.get$game().get$ship();
      t2.set$lives($.$sub$n(t2.get$lives(), 1));
    }
    t1.get$game().get$_shipHitEvent().signal$0();
    t2 = t1.get$game();
    if (t2.get$soundEffectsOn()) {
      t3 = t2.get$shipHit();
      t3.play$3(t3, t3.get$Sound(), t3.get$Volume(), t3.get$Looping());
    }
    t2 = t2.get$Cheats();
    if ($.$eq(t2.$index(t2, "spreadshot"), 2))
      t1.get$game().resetPowerups$0();
    t1.get$game().removeBullets$0();
    t1 = t1.get$game().get$ship();
    t1.set$bullet(t1.get$maxBullet());
  }
},

Enemy: {"": "GameEntity;type>,startY,difficulty@,bossDifficulty,health@,bossHealth,maxHp,bossMaxHp,belowHalfHp,flicker@,enemyType<,idNum<,switchAmount@,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2, t3;
    if ($.$eq($.get$state$x(this.game), 2) || $.$eq($.get$state$x(this.game), 4) || $.$eq($.get$state$x(this.game), 1))
      return;
    if (this.health < this.maxHp / 2 || this.bossHealth < this.bossMaxHp / 2)
      this.belowHalfHp = true;
    if (this.type === "Drone") {
      if (this.health <= 0) {
        t1 = this.game;
        t1.set$score($.$add$ns(t1.get$score(), 100 * t1.get$pointMultiplier()));
        t1 = this.game.get$Stats();
        t1.$indexSet(t1, "killed", $.$add$ns(t1.$index(t1, "killed"), 1));
        if ($.random(0, 1, false) > 0.5)
          this.game.newBulletPowerUp$2(this._x, this._y);
        this.game.newMiniExplosion$2(this._x, this._y);
        this._removeFromGame = true;
      }
      if ($.random(0, 1, false) <= 0.01) {
        t1 = $.$eq(this.momentum.yVel, 0);
        t2 = this.momentum;
        if (!t1)
          t2.yVel = $.$mul$n(t2.yVel, -1);
        else
          t2.yVel = 60;
      }
      if ($.random(0, 1, false) <= 0.01) {
        t1 = $.$eq(this.momentum.xVel, 0);
        t2 = this.momentum;
        if (!t1)
          t2.xVel = $.$mul$n(t2.xVel, -1);
        else
          t2.xVel = 60;
      }
      if ($.$gt$n(this._y, $.get$rect$x(this.game).get$halfHeight() - 80)) {
        t1 = this.momentum;
        t1.yVel = $.$mul$n(t1.yVel, -1);
      }
      if ($.$lt$n(this._y, -$.get$rect$x(this.game).get$halfHeight() + 16)) {
        t1 = this.momentum;
        t1.yVel = $.$mul$n(t1.yVel, -1);
      }
      if ($.$gt$n(this._x, $.get$rect$x(this.game).get$halfWidth() - 16)) {
        t1 = this.momentum;
        t1.xVel = $.$mul$n(t1.xVel, -1);
      }
      if ($.$lt$n(this._x, -$.get$rect$x(this.game).get$halfWidth() + 16)) {
        t1 = this.momentum;
        t1.xVel = $.$mul$n(t1.xVel, -1);
      }
      if ($.$gt$n(this._x, this.game.getEnemyX$1("Boss")))
        if ($.random(0, 1, false) <= 0.05) {
          t1 = this.momentum;
          t1.xVel = $.$mul$n(t1.xVel, -1);
        }
      if ($.$lt$n(this._x, this.game.getEnemyX$1("Boss")))
        if ($.random(0, 1, false) <= 0.05) {
          t1 = this.momentum;
          t1.xVel = $.$mul$n(t1.xVel, -1);
        }
      if ($.$gt$n(this._y, this.game.getEnemyY$1("Boss")))
        if ($.random(0, 1, false) <= 0.05) {
          t1 = this.momentum;
          t1.yVel = $.$mul$n(t1.yVel, -1);
        }
      if ($.$lt$n(this._y, this.game.getEnemyY$1("Boss")))
        if ($.random(0, 1, false) <= 0.05) {
          t1 = this.momentum;
          t1.yVel = $.$mul$n(t1.yVel, -1);
        }
      if ($.random(0, 1, false) <= 0.1) {
        t1 = this.game;
        t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
        t1 = this.game;
        if (t1.get$soundEffectsOn())
          t1.get$enemyFire();
      }
    }
    if (this.type === "Boss") {
      if (this.health <= 0) {
        t1 = this.game.get$Stats();
        t1.$indexSet(t1, "wins", $.$add$ns(t1.$index(t1, "wins"), 1));
        this.game.newExplosion$2(this._x, this._y);
        this.game.removeEntitiesByFilter$1(new $.Enemy_update_closure());
        this.game.removeEntitiesByFilter$1(new $.Enemy_update_closure0());
        this.game.removeEntitiesByFilter$1(new $.Enemy_update_closure1());
        t1 = this.game;
        if (t1.get$soundEffectsOn())
          t1.get$cursorSelect2();
        t1.removeEntitiesByGroup$1("levelEnd");
        this.game.createLevelEnd$0();
        $.set$state$x(this.game, 8);
        this.game.set$waiting(1);
        this.game.set$bonusCheck(3);
        this.game.set$bonusStage(false);
        t1 = this.game;
        t1.set$level(t1.get$level() + 1);
        this.bossHealth = this.bossHealth + 50;
        t1 = this.game;
        if (t1.get$level() >= t1.get$bonusCheck()) {
          t1.set$bonusStage(true);
          t1 = this.game;
          t1.set$bonusCheck(t1.get$bonusCheck() + 3);
        } else
          t1.set$bonusStage(false);
        t1 = this.game;
        t1.set$score($.$add$ns(t1.get$score(), 10000 * t1.get$pointMultiplier()));
        t1 = this.game.get$Stats();
        t1.$indexSet(t1, "killed", $.$add$ns(t1.$index(t1, "killed"), 1));
        t1 = this.game.get$Stats();
        t1.$indexSet(t1, "bossKills", $.$add$ns(t1.$index(t1, "bossKills"), 1));
        this.game.set$bonusStage(false);
        this._removeFromGame = true;
      }
      if ($.random(0, 1, false) <= 0.01) {
        t1 = $.$eq(this.momentum.yVel, 0);
        t2 = this.momentum;
        if (!t1)
          t2.yVel = $.$mul$n(t2.yVel, -1);
        else
          t2.yVel = 60;
      }
      if ($.random(0, 1, false) <= 0.01) {
        t1 = $.$eq(this.momentum.xVel, 0);
        t2 = this.momentum;
        if (!t1)
          t2.xVel = $.$mul$n(t2.xVel, -1);
        else
          t2.xVel = 60;
      }
      if ($.$gt$n(this._y, $.get$rect$x(this.game).get$halfHeight() - 250) && $.random(0, 1, false) <= 0.07) {
        t1 = this.momentum;
        t1.yVel = $.$mul$n(t1.yVel, -1);
      }
      if ($.$gt$n(this._y, $.get$rect$x(this.game).get$halfHeight() - 115)) {
        t1 = this.momentum;
        t1.yVel = $.$mul$n(t1.yVel, -1);
      }
      if ($.$lt$n(this._y, -$.get$rect$x(this.game).get$halfHeight() + 72)) {
        t1 = this.momentum;
        t1.yVel = $.$mul$n(t1.yVel, -1);
      }
      if ($.$gt$n(this._x, $.get$rect$x(this.game).get$halfWidth() - 72)) {
        t1 = this.momentum;
        t1.xVel = $.$mul$n(t1.xVel, -1);
      }
      if ($.$lt$n(this._x, -$.get$rect$x(this.game).get$halfWidth() + 72)) {
        t1 = this.momentum;
        t1.xVel = $.$mul$n(t1.xVel, -1);
      }
      if (this.belowHalfHp) {
        t1 = this.bossDifficulty;
        if (t1 === 1) {
          if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            t1 = this.game;
            if (t1.get$soundEffectsOn())
              t1.get$enemyFire();
          }
        } else if (t1 === 2) {
          if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            t1 = this.game;
            if (t1.get$soundEffectsOn())
              t1.get$enemyFire();
          }
        } else if (t1 === 3) {
          if ($.random(0, 1, false) <= 0.07) {
            if ($.random(0, 1, false) <= 0.1) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            } else if ($.random(0, 1, false) <= 0.1) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            }
            t1 = this.game;
            if (t1.get$soundEffectsOn())
              t1.get$enemyFire();
          }
        } else if (t1 === 4) {
          if ($.random(0, 1, false) <= 0.1) {
            if ($.random(0, 1, false) <= 0.3) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            } else if ($.random(0, 1, false) <= 0.3) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            }
            t1 = this.game;
            if (t1.get$soundEffectsOn())
              t1.get$enemyFire();
          }
        } else if (t1 === 5)
          if ($.random(0, 1, false) <= 0.2) {
            if ($.random(0, 1, false) <= 0.5) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            } else if ($.random(0, 1, false) <= 0.5) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            }
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            if (t1.get$soundEffectsOn())
              t1.get$enemyFire();
          }
      } else {
        t1 = this.bossDifficulty;
        if (t1 === 1) {
          if ($.random(0, 1, false) <= 0.01) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            if (t1.get$soundEffectsOn())
              t1.get$enemyFire();
          }
        } else if (t1 === 2) {
          if ($.random(0, 1, false) <= 0.03) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            if (t1.get$soundEffectsOn())
              t1.get$enemyFire();
          }
        } else if (t1 === 3) {
          if ($.random(0, 1, false) <= 0.07) {
            if ($.random(0, 1, false) <= 0.1) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(42, 54, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(42, 54, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(42, 54, false), "super"));
            } else if ($.random(0, 1, false) <= 0.1) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            }
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            if (t1.get$soundEffectsOn())
              t1.get$enemyFire();
          }
        } else if (t1 === 4) {
          if ($.random(0, 1, false) <= 0.1) {
            if ($.random(0, 1, false) <= 0.3) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(42, 54, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(42, 54, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(42, 54, false), "super"));
            } else if ($.random(0, 1, false) <= 0.3) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            }
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            if (t1.get$soundEffectsOn())
              t1.get$enemyFire();
          }
        } else if (t1 === 5)
          if ($.random(0, 1, false) <= 0.2) {
            if ($.random(0, 1, false) <= 0.5) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(42, 54, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(42, 54, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(42, 54, false), "super"));
            } else if ($.random(0, 1, false) <= 0.5) {
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            }
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            if (t1.get$soundEffectsOn())
              t1.get$enemyFire();
          } else if ($.random(0, 1, false) <= 0.01) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            if (t1.get$soundEffectsOn())
              t1.get$enemyFire();
          }
      }
      t1 = $.random(0, 1, false);
      t2 = this.game;
      t3 = this._x;
      if (t1 <= 0.5)
        t2.newBossDrone$2(t3, $.$sub$n(this._y, 50));
      else
        t2.newBossDrone$2($.$add$ns(t3, 72), $.$sub$n(this._y, 50));
    }
    if (this.type === "MotherShip") {
      if ($.$gt$n(this._x, $.get$rect$x(this.game).get$halfWidth()))
        this._removeFromGame = true;
      this.momentum.xVel = 150;
      if (this.health <= 0) {
        t1 = this.game;
        t1.set$score($.$add$ns(t1.get$score(), 1000 * t1.get$pointMultiplier()));
        t1 = this.game.get$Stats();
        t1.$indexSet(t1, "killed", $.$add$ns(t1.$index(t1, "killed"), 1));
        t1 = this.game.get$Stats();
        t1.$indexSet(t1, "motherKills", $.$add$ns(t1.$index(t1, "motherKills"), 1));
        if ($.random(0, 1, false) > 0.5)
          this.game.newBulletPowerUp$2(this._x, this._y);
        this.game.newMiniExplosion$2(this._x, this._y);
        this._removeFromGame = true;
      }
      t1 = this.difficulty;
      if (t1 === 1) {
        if ($.$ge$n($.$add$ns(this._x, 16), $.get$x$x(this.game.get$ship())) && $.$le$n($.$sub$n(this._x, 16), $.get$x$x(this.game.get$ship())) && $.random(0, 1, false) <= 0.01) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn())
            t1.get$motherShipFire();
        }
      } else if (t1 === 2) {
        if ($.$ge$n($.$add$ns(this._x, 16), $.get$x$x(this.game.get$ship())) && $.$le$n($.$sub$n(this._x, 16), $.get$x$x(this.game.get$ship())) && $.random(0, 1, false) <= 0.03) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn())
            t1.get$motherShipFire();
        }
      } else if (t1 === 3) {
        if ($.$ge$n($.$add$ns(this._x, 16), $.get$x$x(this.game.get$ship())) && $.$le$n($.$sub$n(this._x, 16), $.get$x$x(this.game.get$ship())) && $.random(0, 1, false) <= 0.07) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn())
            t1.get$motherShipFire();
        }
      } else if (t1 === 4) {
        if ($.$ge$n($.$add$ns(this._x, 16), $.get$x$x(this.game.get$ship())) && $.$le$n($.$sub$n(this._x, 16), $.get$x$x(this.game.get$ship())) && $.random(0, 1, false) <= 0.1) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.3) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn())
            t1.get$motherShipFire();
        }
      } else if (t1 === 5)
        if ($.$ge$n($.$add$ns(this._x, 16), $.get$x$x(this.game.get$ship())) && $.$le$n($.$sub$n(this._x, 16), $.get$x$x(this.game.get$ship())) && $.random(0, 1, false) <= 0.2) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.5) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn())
            t1.get$motherShipFire();
        }
    }
    if (this.type === "Normal") {
      if ($.random(0, 1, false) < 0.0002) {
        t1 = this.game;
        t2 = t1.get$canEnemyFall();
        if (t2.$eq(t2, true)) {
          t1 = t1.get$Cheats();
          t1 = !$.$eq(t1.$index(t1, "freeze"), 1);
        } else
          t1 = false;
      } else
        t1 = false;
      if (t1)
        this.momentum.yVel = 140;
      if (this.health <= 0) {
        t1 = this.game;
        t1.set$score($.$add$ns(t1.get$score(), 100 * t1.get$pointMultiplier()));
        t1 = this.game;
        t1.set$enemyAmount(t1.get$enemyAmount() - 1);
        t1 = this.game.get$Stats();
        t1.$indexSet(t1, "killed", $.$add$ns(t1.$index(t1, "killed"), 1));
        t1 = this.game.get$Stats();
        t1.$indexSet(t1, "normalKills", $.$add$ns(t1.$index(t1, "normalKills"), 1));
        if ($.random(0, 1, false) > 0.5)
          this.game.newBulletPowerUp$2(this._x, this._y);
        this.game.newMiniExplosion$2(this._x, this._y);
        this._removeFromGame = true;
      }
      if (!$.$gt$n($.$add$ns(this._x, 16), $.get$rect$x(this.game).get$halfWidth()))
        if ($.$lt$n($.$sub$n(this._x, 16), -$.get$rect$x(this.game).get$halfWidth())) {
          t1 = this.game.get$Cheats();
          t1 = !$.$eq(t1.$index(t1, "freeze"), 1);
        } else
          t1 = false;
      else
        t1 = true;
      if (t1)
        this.game.switchDirection$0();
      t1 = this.difficulty;
      if (t1 === 1) {
        if ($.$ge$n($.$add$ns(this._x, 16), $.get$x$x(this.game.get$ship())) && $.$le$n($.$sub$n(this._x, 16), $.get$x$x(this.game.get$ship())) && $.random(0, 1, false) <= 0.01) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn())
            t1.get$enemyFire();
        }
      } else if (t1 === 2) {
        if ($.$ge$n($.$add$ns(this._x, 16), $.get$x$x(this.game.get$ship())) && $.$le$n($.$sub$n(this._x, 16), $.get$x$x(this.game.get$ship())) && $.random(0, 1, false) <= 0.03) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn())
            t1.get$enemyFire();
        }
      } else if (t1 === 3) {
        if ($.$ge$n($.$add$ns(this._x, 16), $.get$x$x(this.game.get$ship())) && $.$le$n($.$sub$n(this._x, 16), $.get$x$x(this.game.get$ship())) && $.random(0, 1, false) <= 0.07) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn())
            t1.get$enemyFire();
        }
      } else if (t1 === 4) {
        if ($.$ge$n($.$add$ns(this._x, 16), $.get$x$x(this.game.get$ship())) && $.$le$n($.$sub$n(this._x, 16), $.get$x$x(this.game.get$ship())) && $.random(0, 1, false) <= 0.1) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.3) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn())
            t1.get$enemyFire();
        }
      } else if (t1 === 5)
        if ($.$ge$n($.$add$ns(this._x, 16), $.get$x$x(this.game.get$ship())) && $.$le$n($.$sub$n(this._x, 16), $.get$x$x(this.game.get$ship())) && $.random(0, 1, false) <= 0.2) {
          t1 = this.game;
          t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.5) {
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t1.addEntity$1($.Bullet$(t1, this._x, $.$add$ns(this._y, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn())
            t1.get$enemyFire();
        }
    }
    $.GameEntity.prototype.update$0.call(this);
  },
  Enemy$5: function(game, x, y, diff, Type) {
    var t1;
    $.random(0, 1, false);
    this.type = Type;
    this.difficulty = diff;
    this.opacity = 0;
    this.enemyType = $.random(0, 1, false);
    if (this.type === "Normal")
      this.color = "255, 0, 255";
    if (this.type === "MotherShip")
      this.color = "0, 0, 255";
    if (this.type === "Normal")
      this.momentum.xVel = 80;
    if (this.type === "MotherShip")
      this.momentum.xVel = 40;
    if (this.type === "Boss")
      this.momentum.xVel = 0;
    if (this.type === "Drone")
      this.momentum.xVel = 80;
    if (this.type === "Normal") {
      t1 = this.difficulty;
      if (t1 <= 2)
        this.health = t1;
    }
    if (this.type === "MotherShip")
      this.health = 3;
    if (this.type === "Boss") {
      this._width = 72;
      this.updateBox$0();
      this._height = 72;
      this.updateBox$0();
      this.health = this.bossHealth;
    }
    if (this.type === "Drone") {
      this._width = 16;
      this.updateBox$0();
      this._height = 16;
      this.updateBox$0();
      this.health = this.bossDifficulty;
    }
    this.maxHp = this.health;
    this.bossMaxHp = this.bossHealth;
    this.bossDifficulty = game.level / 3;
    this.startY = y;
  },
  $isEnemy: true
},

Enemy_update_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isPowerUp;
  }
},

Enemy_update_closure0: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isBullet;
  }
},

Enemy_update_closure1: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

Particles: {"": "GameEntity;_deleteTimer,_waiting@,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    if ($.$eq($.get$state$x(this.game), 2))
      return;
    this._deleteTimer = $.get$_Zone__current().createTimer$2($.Duration_1000000, new $.Particles_update_closure(this));
    if ($.$gt$n(this._y, $.get$rect$x(this.game).get$halfHeight()))
      this._removeFromGame = true;
    if ($.$lt$n(this._y, -$.get$rect$x(this.game).get$halfHeight()))
      this._removeFromGame = true;
    if ($.$gt$n(this._x, $.get$rect$x(this.game).get$halfWidth()))
      this._removeFromGame = true;
    if ($.$lt$n(this._x, -$.get$rect$x(this.game).get$halfWidth()))
      this._removeFromGame = true;
    $.GameEntity.prototype.update$0.call(this);
  },
  Particles$8: function(game, x, y, h, w, col, xVel, yVel) {
    this.opacity = $.random(0.5, 1, false);
    if (col === 1)
      this.color = "200, 0, 50";
    if (col === 2)
      this.color = "100, 255, 50";
    if (col === 3)
      this.color = "20, 100, 200";
    if (col === 4)
      this.color = "105, 255, 100";
    if (col === 5)
      this.color = "200, 255, 50";
    if (col === 6)
      this.color = "255, 100, 150";
    if (col === 7)
      this.color = "255, 150, 50";
    this.momentum.yVel = yVel;
    this.momentum.xVel = xVel;
  }
},

Particles_update_closure: {"": "Closure;this_0",
  call$0: function() {
    this.this_0.set$_removeFromGame(true);
    return;
  }
},

PowerUp: {"": "GameEntity;type>,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2;
    if ($.$eq($.get$state$x(this.game), 2) || $.$eq($.get$state$x(this.game), 4) || $.$eq($.get$state$x(this.game), 1))
      return;
    if (this.type === "bulletPower") {
      t1 = $.$gt$n($.get$x$x(this.game.get$ship()), this._x);
      t2 = this.momentum;
      if (t1)
        t2.xVel = 40;
      else
        t2.xVel = -40;
    }
    if (this.collidesWith$1(this.game.get$ship())) {
      switch (this.type) {
        case "SpiralShot":
          t1 = this.game.get$ship();
          if (t1.get$spiralShot())
            t1.set$spiralShot(false);
          t1 = this.game.get$ship();
          if (!t1.get$spiralShot())
            t1.set$spiralShot(true);
          t1 = this.game.get$Stats();
          t1.$indexSet(t1, "powerups", $.$add$ns(t1.$index(t1, "powerups"), 1));
          t1 = this.game;
          t1.set$score($.$add$ns(t1.get$score(), 300 * t1.get$pointMultiplier()));
          break;
        case "Multiplier":
          t1 = this.game;
          t1.set$pointMultiplier(t1.get$pointMultiplier() * 2);
          t1 = this.game.get$Stats();
          t1.$indexSet(t1, "powerups", $.$add$ns(t1.$index(t1, "powerups"), 1));
          t1 = this.game;
          t1.set$score($.$add$ns(t1.get$score(), 300 * t1.get$pointMultiplier()));
          break;
        case "BulletIncrease":
          t1 = this.game.get$ship();
          t1.set$maxBullet($.$add$ns(t1.get$maxBullet(), 1));
          t1 = this.game.get$Stats();
          t1.$indexSet(t1, "powerups", $.$add$ns(t1.$index(t1, "powerups"), 1));
          t1 = this.game;
          t1.set$score($.$add$ns(t1.get$score(), 300 * t1.get$pointMultiplier()));
          break;
        case "ExtraLife":
          t1 = this.game.get$ship();
          t1.set$lives($.$add$ns(t1.get$lives(), 1));
          t1 = this.game.get$Stats();
          t1.$indexSet(t1, "powerups", $.$add$ns(t1.$index(t1, "powerups"), 1));
          t1 = this.game;
          t1.set$score($.$add$ns(t1.get$score(), 300 * t1.get$pointMultiplier()));
          break;
        case "bulletPower":
          t1 = this.game;
          t1.set$score($.$add$ns(t1.get$score(), 100 * t1.get$pointMultiplier()));
          t1 = this.game.get$ship();
          t1.set$chargedLevel(t1.get$chargedLevel() + 1);
          break;
        case "invincible":
          t1 = this.game;
          t1.set$score($.$add$ns(t1.get$score(), 300 * t1.get$pointMultiplier()));
          this.game.get$ship().set$invincible(true);
          break;
      }
      t1 = this.game;
      if (t1.get$soundEffectsOn())
        t1.get$powerUp();
      this._removeFromGame = true;
    }
    if ($.$gt$n(this._y, $.get$rect$x(this.game).get$halfHeight() + 20))
      this._removeFromGame = true;
    $.GameEntity.prototype.update$0.call(this);
  },
  PowerUp$4: function(game, x, y, Type) {
    var rType, rColor;
    rType = $.random(0, 1, false);
    if (rType < 0.2) {
      this.color = "0, 255, 0";
      this.type = "SpiralShot";
    } else if (rType < 0.4) {
      this.color = "255, 0, 0";
      this.type = "Multiplier";
    } else if (rType < 0.6) {
      this.color = "0, 0, 255";
      this.type = "BulletIncrease";
    } else if (rType < 1) {
      this.color = "255, 255, 0";
      this.type = "ExtraLife";
    }
    if (Type != null) {
      this.type = Type;
      if (this.type === "bulletPower") {
        rColor = $.random(0, 1, false);
        if (rColor < 0.2)
          this.color = "0, 255, 0";
        else if (rColor < 0.4)
          this.color = "0, 255, 255";
        else if (rColor < 0.6)
          this.color = "0, 0, 255";
        else if (rColor < 0.1)
          this.color = "255, 255, 0";
        this._width = 12;
        this.updateBox$0();
        this._height = 12;
        this.updateBox$0();
      }
    }
    this.opacity = 0;
    this.momentum.yVel = 65;
  },
  $isPowerUp: true
},

Ship: {"": "GameEntity;bulletPower,bullet@,maxBullet@,bulletsFired,bulletsHit@,lives@,soundLevel,chargedLevel@,superCharged,isPoweringUp,spiralShot@,invincible?,lastShotFired,_invincibleTimer,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2;
    if ($.$eq($.get$state$x(this.game), 2) || $.$eq($.get$state$x(this.game), 4) || $.$eq($.get$state$x(this.game), 1))
      return;
    this._width = 32;
    this.updateBox$0();
    this._height = 32;
    this.updateBox$0();
    this.opacity = 0;
    if ($.$gt$n(this._width, 36) || $.$gt$n(this._height, 36)) {
      this._width = 36;
      this.updateBox$0();
      this._height = 36;
      this.updateBox$0();
    }
    if ($.$le$n(this.lives, 0)) {
      t1 = this.game.get$Stats();
      t1.$indexSet(t1, "loses", $.$add$ns(t1.$index(t1, "loses"), 1));
      this.game.set$p1Dead(true);
      this._removeFromGame = true;
      this.game.gameOver$0();
    }
    t1 = this.game.get$Cheats();
    if ($.$eq(t1.$index(t1, "spreadshot"), 1))
      this.spiralShot = true;
    if (this.spiralShot) {
      t1 = this.game.get$Cheats();
      t1 = !$.$eq(t1.$index(t1, "spreadshot"), 1);
    } else
      t1 = false;
    if (t1)
      this._invincibleTimer = $.get$_Zone__current().createTimer$2($.Duration_5000000, new $.Ship_update_closure(this));
    if (this.invincible)
      this._invincibleTimer = $.get$_Zone__current().createTimer$2($.Duration_5000000, new $.Ship_update_closure0(this));
    t1 = this.game.get$Options();
    if ($.$eq(t1.$index(t1, "controls"), 1))
      if (this.game.get$input().isKeyDown$1(37))
        this.momentum.xVel = -250;
      else {
        t1 = this.game.get$input().isKeyDown$1(39);
        t2 = this.momentum;
        if (t1)
          t2.xVel = 250;
        else
          t2.xVel = 0;
      }
    if ($.$gt$n(this.bullet, this.maxBullet))
      this.bullet = 3;
    if ($.$lt$n(this.bullet, 0))
      this.bullet = 0;
    if ($.$eq($.get$state$x(this.game), 1))
      return;
    t1 = this.game;
    if (t1.get$input().get$mouse() != null) {
      t1 = t1.get$Options();
      t1 = $.$eq(t1.$index(t1, "controls"), 2);
    } else
      t1 = false;
    if (t1) {
      this._x = this.game.get$input().get$mouse().x;
      this.updateBox$0();
    }
    if ($.$gt$n($.$add$ns(this._x, 16), $.get$rect$x(this.game).get$halfWidth())) {
      this._x = $.get$rect$x(this.game).get$halfWidth() - 16;
      this.updateBox$0();
    }
    if ($.$lt$n($.$sub$n(this._x, 16), -$.get$rect$x(this.game).get$halfWidth())) {
      this._x = -$.get$rect$x(this.game).get$halfWidth() + 16;
      this.updateBox$0();
    }
    if (this.chargedLevel >= 15) {
      this.superCharged = this.superCharged + 1;
      this.chargedLevel = 0;
    }
    if ($.$gt$n(this.bullet, 0)) {
      if (this.game.get$input().isKeyJustPressed$1(32)) {
        t1 = this.game.get$Options();
        t1 = $.$eq(t1.$index(t1, "controls"), 1);
      } else
        t1 = false;
      if (t1)
        this.fire$0();
      t1 = this.game;
      if ($.get$click$x(t1.get$input()) != null) {
        t1 = t1.get$Options();
        t1 = $.$eq(t1.$index(t1, "controls"), 2);
      } else
        t1 = false;
      if (t1)
        this.fire$0();
      if (this.game.get$input().isKeyJustPressed$1(16))
        if (this.superCharged > 0) {
          t1 = this.game.get$Options();
          t1 = $.$eq(t1.$index(t1, "controls"), 1);
        } else
          t1 = false;
      else
        t1 = false;
      if (t1) {
        t1 = this.game;
        t1.addEntity$1($.Bullet$(t1, this._x, this._y, "straight", -350, this.bulletPower, "super"));
        this.superCharged = this.superCharged - 1;
      }
      if (this.game.get$input().isKeyJustPressed$1(32))
        if (this.superCharged > 0) {
          t1 = this.game.get$Options();
          t1 = $.$eq(t1.$index(t1, "controls"), 2);
        } else
          t1 = false;
      else
        t1 = false;
      if (t1) {
        t1 = this.game;
        t1.addEntity$1($.Bullet$(t1, this._x, this._y, "straight", -350, this.bulletPower, "super"));
        this.superCharged = this.superCharged - 1;
      }
    }
    $.GameEntity.prototype.update$0.call(this);
  },
  fire$0: function() {
    var t1, t2, t3, t4, t5;
    this.soundLevel = this.bulletPower * 0.02;
    if (this.soundLevel > 1)
      this.soundLevel = 1;
    t1 = this.spiralShot;
    t2 = this.game;
    t3 = this._x;
    t4 = this._y;
    t5 = this.bulletPower;
    if (t1) {
      t2.addEntity$1($.Bullet$(t2, t3, t4, "straight", -350, t5, "normal"));
      t1 = this.game;
      t1.addEntity$1($.Bullet$(t1, this._x, this._y, "right", -350, this.bulletPower, "normal"));
      t1 = this.game;
      t1.addEntity$1($.Bullet$(t1, this._x, this._y, "left", -350, this.bulletPower, "normal"));
      this.bulletsFired = this.bulletsFired + 3;
      t1 = this.game;
      if (t1.get$soundEffectsOn())
        t1.get$shipFire();
    } else {
      t2.addEntity$1($.Bullet$(t2, t3, t4, "straight", -350, t5, "normal"));
      this.bulletsFired = this.bulletsFired + 1;
      t1 = this.game;
      if (t1.get$soundEffectsOn())
        t1.get$shipFire();
    }
    t1 = this.bullet;
    t2 = $.getInterceptor$n(t1);
    if (t2.$gt(t1, 0))
      this.bullet = t2.$sub(t1, 1);
  },
  $isShip: true
},

Ship_update_closure: {"": "Closure;this_0",
  call$0: function() {
    this.this_0.set$spiralShot(false);
  }
},

Ship_update_closure0: {"": "Closure;this_1",
  call$0: function() {
    this.this_1.set$invincible(false);
  }
},

Stars: {"": "GameEntity;starColor<,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    if ($.$eq($.get$state$x(this.game), 2))
      return;
    if ($.$gt$n(this._y, $.get$rect$x(this.game).get$halfHeight()))
      this._removeFromGame = true;
    $.GameEntity.prototype.update$0.call(this);
  },
  Stars$6: function(game, x, y, h, w, col) {
    this.opacity = 0;
    if (col === 1)
      this.starColor = 1;
    if (col === 2)
      this.starColor = 2;
    if (col === 3)
      this.starColor = 3;
    if (col === 4)
      this.starColor = 4;
    if (col === 5)
      this.starColor = 5;
    if (col === 6)
      this.starColor = 6;
    if (col === 7)
      this.starColor = 7;
    this.momentum.yVel = $.random(50, 150, false);
  },
  $isStars: true
},

bouncingBall$: function(game, x, y, h, w, sprite) {
  var t1 = new $.bouncingBall(0, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, h, w, null, null);
  t1.bouncingBall$6(game, x, y, h, w, sprite);
  return t1;
},

Bullet$: function(game, x, y, dir, yVel, size, type) {
  var t1 = new $.Bullet(0, 0, null, null, 0, false, false, false, false, false, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, size, size, null, null);
  t1.Bullet$7(game, x, y, dir, yVel, size, type);
  return t1;
},

Enemy$: function(game, x, y, diff, Type) {
  var t1 = new $.Enemy(null, 0, 1, 1, 1, 100, 1, 100, false, false, 0, 1, 0, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 36, 36, null, null);
  t1.Enemy$5(game, x, y, diff, Type);
  return t1;
},

Particles$: function(game, x, y, h, w, col, xVel, yVel) {
  var t1 = new $.Particles(null, 0, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, h, w, null, null);
  t1.Particles$8(game, x, y, h, w, col, xVel, yVel);
  return t1;
},

PowerUp$: function(game, x, y, Type) {
  var t1 = new $.PowerUp(null, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 36, 36, null, null);
  t1.PowerUp$4(game, x, y, Type);
  return t1;
},

Stars$: function(game, x, y, h, w, col) {
  var t1 = new $.Stars(1, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, h, w, null, null);
  t1.Stars$6(game, x, y, h, w, col);
  return t1;
}}],
["galaga_html", "package:galaga/galaga_html.dart", , {
GalagaRenderer: {"": "CanvasGameRenderer;timeLeft,ship<,invincibleShip,enemy<,enemy2<,boss<,mothership<,bosshp<,spreadup<,lifeup<,multiplierup<,bulletup<,coin<,shipbullet<,enemybullet<,superBullet<,bossSuperBullet<,chargeBar,star1<,star2<,star3<,star4<,star5<,star6<,star7<,skull<,enemyFlicker,shipFlicker?,targetId,ctx,defaultRenderer,assetManager,textRenderer,ownMouse,canvas,_game,rect",
  init$0: function() {
    var t1, t2;
    t1 = this._game.get$Stats();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win1") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win1"), null, null);
    } else
      t2 = 0;
    t1.$indexSet(t1, "killed", t2);
    t2 = this._game.get$Stats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win2") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win2"), null, null);
    } else
      t1 = 0;
    t2.$indexSet(t2, "wins", t1);
    t1 = this._game.get$Stats();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win3") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win3"), null, null);
    } else
      t2 = 0;
    t1.$indexSet(t1, "loses", t2);
    t2 = this._game.get$Stats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win4") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win4"), null, null);
    } else
      t1 = 0;
    t2.$indexSet(t2, "totalGames", t1);
    t1 = this._game.get$Stats();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win5") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win5"), null, null);
    } else
      t2 = 0;
    t1.$indexSet(t1, "highscore", t2);
    t2 = this._game.get$Stats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win13") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win13"), null, null);
    } else
      t1 = 0;
    t2.$indexSet(t2, "normalKills", t1);
    t1 = this._game.get$Stats();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win14") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win14"), null, null);
    } else
      t2 = 0;
    t1.$indexSet(t1, "bossKills", t2);
    t2 = this._game.get$Stats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win15") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win15"), null, null);
    } else
      t1 = 0;
    t2.$indexSet(t2, "motherKills", t1);
    t1 = this._game.get$Stats();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win16") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win16"), null, null);
    } else
      t2 = 0;
    t1.$indexSet(t1, "powerups", t2);
    t2 = this._game.get$Stats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win17") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win17"), null, null);
    } else
      t1 = 0;
    t2.$indexSet(t2, "percentage", t1);
    t1 = this._game.get$Options();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win6") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win6"), null, null);
    } else
      t2 = 3;
    t1.$indexSet(t1, "startLives", t2);
    t2 = this._game.get$Options();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win7") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win7"), null, null);
    } else
      t1 = 3;
    t2.$indexSet(t2, "bulletCap", t1);
    t1 = this._game.get$Options();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win8") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win8"), null, null);
    } else
      t2 = 60;
    t1.$indexSet(t1, "time", t2);
    t2 = this._game.get$Options();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win9") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win9"), null, null);
    } else
      t1 = 1;
    t2.$indexSet(t2, "difficulty", t1);
    t1 = this._game.get$Options();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win10") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win10"), null, null);
    } else
      t2 = 1;
    t1.$indexSet(t1, "powerups", t2);
    t2 = this._game.get$Options();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win11") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win11"), null, null);
    } else
      t1 = 1;
    t2.$indexSet(t2, "soundeffects", t1);
    t1 = this._game.get$Options();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win12") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win12"), null, null);
    } else
      t2 = 1;
    t1.$indexSet(t1, "controls", t2);
    t2 = this._game.get$Highscores();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win18") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win18"), null, null);
    } else
      t1 = 0;
    t2.$indexSet(t2, 1, t1);
    t1 = this._game.get$Highscores();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win19") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win19"), null, null);
    } else
      t2 = 0;
    t1.$indexSet(t1, 2, t2);
    t2 = this._game.get$Highscores();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win20") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win20"), null, null);
    } else
      t1 = 0;
    t2.$indexSet(t2, 3, t1);
    t1 = this._game.get$Highscores();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win21") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win21"), null, null);
    } else
      t2 = 0;
    t1.$indexSet(t1, 4, t2);
    t2 = this._game.get$Highscores();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win22") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win22"), null, null);
    } else
      t1 = 0;
    t2.$indexSet(t2, 5, t1);
    t1 = this._game.get$Highscores();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win23") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win23"), null, null);
    } else
      t2 = 0;
    t1.$indexSet(t1, 6, t2);
    t2 = this._game.get$Highscores();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win24") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win24"), null, null);
    } else
      t1 = 0;
    t2.$indexSet(t2, 7, t1);
    t1 = this._game.get$Highscores();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win25") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win25"), null, null);
    } else
      t2 = 0;
    t1.$indexSet(t1, 8, t2);
    t2 = this._game.get$Highscores();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win26") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win26"), null, null);
    } else
      t1 = 0;
    t2.$indexSet(t2, 9, t1);
    t1 = this._game.get$Highscores();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win27") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win27"), null, null);
    } else
      t2 = 0;
    t1.$indexSet(t1, 10, t2);
    t2 = this._game.get$Cheats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win28") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win25"), null, null);
    } else
      t1 = 1;
    t2.$indexSet(t2, "spreadshot", t1);
    t1 = this._game.get$Cheats();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("win29") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("win26"), null, null);
    } else
      t2 = 1;
    t1.$indexSet(t1, "invincibility", t2);
    t2 = this._game.get$Cheats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("win30") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("win27"), null, null);
    } else
      t1 = 1;
    t2.$indexSet(t2, "freeze", t1);
    this._game.get$onGameOver().listen$1(new $.GalagaRenderer_init_closure(this));
    this._game.get$onShipHit().listen$1(new $.GalagaRenderer_init_closure0(this));
    this._game.get$onStatUpdate().listen$1(new $.GalagaRenderer_init_closure1(this));
    this._game.get$onMotherShipHit().listen$1(new $.GalagaRenderer_init_closure2(this));
    this._game.get$onBossHit().listen$1(new $.GalagaRenderer_init_closure3(this));
    this._game.get$onNormalHit().listen$1(new $.GalagaRenderer_init_closure4(this));
    this._game.get$onFadeEvent().listen$1(new $.GalagaRenderer_init_closure5(this));
  },
  gameOver$0: function() {
    this.subtleBgFade$0();
    this.updateStats$0();
  },
  drawStars$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_drawStars_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_drawStars_closure0(this));
  },
  drawBouncer$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_drawBouncer_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_drawBouncer_closure0(this));
  },
  drawBullets$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_drawBullets_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_drawBullets_closure0(this));
  },
  drawPowerUps$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_drawPowerUps_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_drawPowerUps_closure0(this));
  },
  drawChargeBar$0: function() {
    this.ctx.strokeStyle = "rgba(255, 255, 255, 1.0)";
    this.ctx.lineWidth = 3;
    this.ctx.beginPath();
    this.ctx.drawImage(this.chargeBar, -300, -224, this._game.get$ship().chargedLevel * 15, 12);
    this.ctx.stroke();
  },
  drawShip$0: function() {
    var t1, t2, t3, t4;
    if (!this.shipFlicker) {
      this.ctx.strokeStyle = "rgba(255, 255, 255, 1.0)";
      this.ctx.lineWidth = 3;
      this.ctx.beginPath();
      t1 = this._game.get$ship();
      t2 = t1.invincible;
      if (!t2) {
        t2 = this.ctx;
        t3 = this.ship;
        t1.get$x;
        t1 = $.$sub$n(t1._x, 22);
        t4 = this._game.get$ship();
        t4.get$y;
        t2.drawImage(t3, t1, $.$sub$n(t4._y, 25), 42, 42);
      } else if (t2) {
        t2 = this.ctx;
        t1.get$x;
        t1 = $.$sub$n(t1._x, 22);
        t3 = this._game.get$ship();
        t3.get$y;
        t2.drawImage(this.invincibleShip, t1, $.$sub$n(t3._y, 25), 42, 42);
      }
      this.drawChargeBar$0();
      this.ctx.stroke();
    }
  },
  drawEnemys$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_drawEnemys_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_drawEnemys_closure0(this));
  },
  shipHit$0: function() {
    this.bgFade$0();
    $.get$_Zone__current().createTimer$2($.Duration_25000, new $.GalagaRenderer_shipHit_closure(this));
    $.get$_Zone__current().createTimer$2($.Duration_75000, new $.GalagaRenderer_shipHit_closure0(this));
    $.get$_Zone__current().createTimer$2($.Duration_150000, new $.GalagaRenderer_shipHit_closure1(this));
    $.get$_Zone__current().createTimer$2($.Duration_225000, new $.GalagaRenderer_shipHit_closure2(this));
    $.get$_Zone__current().createTimer$2($.Duration_300000, new $.GalagaRenderer_shipHit_closure3(this));
    $.get$_Zone__current().createTimer$2($.Duration_375000, new $.GalagaRenderer_shipHit_closure4(this));
    this.subtleBgFade$0();
  },
  get$shipHit: function() {
    return new $.BoundClosure$0(this, "shipHit$0", null);
  },
  updateStats$0: function() {
    var t1, t2;
    t1 = window.localStorage;
    t2 = this._game.get$Stats();
    t2 = $.toString$0(t2.$index(t2, "killed"));
    t1.$indexSet;
    t1.setItem("win1", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Stats();
    t1 = $.toString$0(t1.$index(t1, "wins"));
    t2.$indexSet;
    t2.setItem("win2", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Stats();
    t2 = $.toString$0(t2.$index(t2, "loses"));
    t1.$indexSet;
    t1.setItem("win3", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Stats();
    t1 = $.toString$0(t1.$index(t1, "totalGames"));
    t2.$indexSet;
    t2.setItem("win4", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Stats();
    t2 = $.toString$0(t2.$index(t2, "highscore"));
    t1.$indexSet;
    t1.setItem("win5", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Stats();
    t1 = $.toString$0(t1.$index(t1, "normalKills"));
    t2.$indexSet;
    t2.setItem("win12", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Stats();
    t2 = $.toString$0(t2.$index(t2, "bossKills"));
    t1.$indexSet;
    t1.setItem("win13", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Stats();
    t1 = $.toString$0(t1.$index(t1, "motherKills"));
    t2.$indexSet;
    t2.setItem("win14", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Stats();
    t2 = $.toString$0(t2.$index(t2, "powerups"));
    t1.$indexSet;
    t1.setItem("win15", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Stats();
    t1 = $.toString$0(t1.$index(t1, "percentage"));
    t2.$indexSet;
    t2.setItem("win16", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Options();
    t2 = $.toString$0(t2.$index(t2, "startLives"));
    t1.$indexSet;
    t1.setItem("win6", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Options();
    t1 = $.toString$0(t1.$index(t1, "bulletCap"));
    t2.$indexSet;
    t2.setItem("win7", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Options();
    t2 = $.toString$0(t2.$index(t2, "time"));
    t1.$indexSet;
    t1.setItem("win8", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Options();
    t1 = $.toString$0(t1.$index(t1, "difficulty"));
    t2.$indexSet;
    t2.setItem("win9", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Options();
    t2 = $.toString$0(t2.$index(t2, "powerups"));
    t1.$indexSet;
    t1.setItem("win10", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Options();
    t1 = $.toString$0(t1.$index(t1, "soundeffects"));
    t2.$indexSet;
    t2.setItem("win11", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Highscores();
    t2 = $.toString$0(t2.$index(t2, 1));
    t1.$indexSet;
    t1.setItem("win17", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Highscores();
    t1 = $.toString$0(t1.$index(t1, 2));
    t2.$indexSet;
    t2.setItem("win18", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Highscores();
    t2 = $.toString$0(t2.$index(t2, 3));
    t1.$indexSet;
    t1.setItem("win19", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Highscores();
    t1 = $.toString$0(t1.$index(t1, 4));
    t2.$indexSet;
    t2.setItem("win20", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Highscores();
    t2 = $.toString$0(t2.$index(t2, 5));
    t1.$indexSet;
    t1.setItem("win21", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Highscores();
    t1 = $.toString$0(t1.$index(t1, 6));
    t2.$indexSet;
    t2.setItem("win22", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Highscores();
    t2 = $.toString$0(t2.$index(t2, 7));
    t1.$indexSet;
    t1.setItem("win23", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Highscores();
    t1 = $.toString$0(t1.$index(t1, 8));
    t2.$indexSet;
    t2.setItem("win24", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Highscores();
    t2 = $.toString$0(t2.$index(t2, 9));
    t1.$indexSet;
    t1.setItem("win25", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Highscores();
    t1 = $.toString$0(t1.$index(t1, 10));
    t2.$indexSet;
    t2.setItem("win26", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Options();
    t2 = $.toString$0(t2.$index(t2, "spreadshot"));
    t1.$indexSet;
    t1.setItem("win9", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Options();
    t1 = $.toString$0(t1.$index(t1, "invincibility"));
    t2.$indexSet;
    t2.setItem("win10", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Options();
    t2 = $.toString$0(t2.$index(t2, "freeze"));
    t1.$indexSet;
    t1.setItem("win11", t2);
  },
  bossHit$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_bossHit_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_bossHit_closure0(this));
  },
  motherShipHit$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_motherShipHit_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_motherShipHit_closure0(this));
  },
  normalShipHit$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_normalShipHit_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_normalShipHit_closure0(this));
  },
  drawEtc$0: function() {
    var t1, tempHigh, digits, t2, i, t3;
    t1 = this._game.get$Stats();
    tempHigh = t1.$index(t1, "highscore");
    if (typeof tempHigh !== "number")
      return this.drawEtc$0$bailout(1, tempHigh);
    for (digits = 0; tempHigh !== 0;) {
      tempHigh /= 10;
      ++digits;
    }
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    t1 = this.ctx;
    t2 = this._game.get$Stats();
    t1.fillText("High Score: " + $.S(t2.$index(t2, "highscore")) + " ", 225 - digits / 10, -(this._game.rect.get$halfHeight() - 30));
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    this.ctx.fillText("Level: " + $.S(this._game.get$level()), 375, this._game.rect.get$halfHeight() - 5);
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    this.ctx.fillText("Time: " + $.S($.round$0$nx(this._game.timer.gameTime)) + " ", -100, -(this._game.rect.get$halfHeight() - 30));
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    this.ctx.fillText("Score: " + $.S(this._game.get$score()) + " ", -475, -(this._game.rect.get$halfHeight() - 30));
    this.ctx.beginPath();
    i = 0;
    while (true) {
      t1 = this._game;
      t2 = t1.get$ship().lives;
      if (typeof t2 !== "number")
        throw $.iae(t2);
      t3 = this.ctx;
      if (!(i < t2))
        break;
      t3.drawImage(this.ship, -475 + 45 * i, t1.rect.get$halfHeight() - 45, 36, 36);
      ++i;
    }
    t3.stroke();
  },
  drawEtc$0$bailout: function(state0, tempHigh) {
    var digits, t1, t2, i, t3;
    for (digits = 0; !$.$eq(tempHigh, 0);) {
      if (typeof tempHigh !== "number")
        throw tempHigh.$div();
      tempHigh /= 10;
      ++digits;
    }
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    t1 = this.ctx;
    t2 = this._game.get$Stats();
    t1.fillText("High Score: " + $.S(t2.$index(t2, "highscore")) + " ", 225 - digits / 10, -(this._game.rect.get$halfHeight() - 30));
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    this.ctx.fillText("Level: " + $.S(this._game.get$level()), 375, this._game.rect.get$halfHeight() - 5);
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    this.ctx.fillText("Time: " + $.S($.round$0$nx(this._game.timer.gameTime)) + " ", -100, -(this._game.rect.get$halfHeight() - 30));
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    this.ctx.fillText("Score: " + $.S(this._game.get$score()) + " ", -475, -(this._game.rect.get$halfHeight() - 30));
    this.ctx.beginPath();
    i = 0;
    while (true) {
      t1 = this._game;
      t2 = t1.get$ship().lives;
      if (typeof t2 !== "number")
        throw $.iae(t2);
      t3 = this.ctx;
      if (!(i < t2))
        break;
      t3.drawImage(this.ship, -475 + 45 * i, t1.rect.get$halfHeight() - 45, 36, 36);
      ++i;
    }
    t3.stroke();
  },
  drawCountDown$0: function() {
    var t1, temp;
    t1 = this._game;
    if (t1.get$state(t1) === 8) {
      this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
      this.ctx.font = "52px cinnamoncake, Verdana";
      t1 = this._game;
      if (t1.get$waiting() === 1)
        temp = 3;
      else if (t1.get$waiting() === 2)
        temp = 2;
      else
        temp = t1.get$waiting() === 3 ? 1 : 0;
      this.ctx.fillText("Next Level In: " + temp, -165, 0);
    }
  },
  getRenderer$1: function(e) {
    var t1;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy) {
      t1 = this._game;
      t1 = t1.get$state(t1) === 4;
    } else
      t1 = false;
    if (t1)
      return;
    return $.CanvasGameRenderer.prototype.getRenderer$1.call(this, e);
  },
  drawBeforeCtxRestore$0: function() {
    this.drawBouncer$0();
    this.drawCountDown$0();
    this.drawStars$0();
    var t1 = this._game;
    if (t1.get$state(t1) === 3 || t1.get$state(t1) === 2) {
      this.drawPowerUps$0();
      this.drawBullets$0();
      this.drawEtc$0();
      this.drawShip$0();
      this.drawEnemys$0();
    }
    $.CanvasGameRenderer.prototype.drawBeforeCtxRestore$0.call(this);
  },
  subtleBgFade$0: function() {
    this._game.bgStyle = "rgba(0, 0, 0, 0.85)";
    $.get$_Zone__current().createTimer$2($.Duration_25000, new $.GalagaRenderer_subtleBgFade_closure(this));
    $.get$_Zone__current().createTimer$2($.Duration_50000, new $.GalagaRenderer_subtleBgFade_closure0(this));
    $.get$_Zone__current().createTimer$2($.Duration_75000, new $.GalagaRenderer_subtleBgFade_closure1(this));
    $.get$_Zone__current().createTimer$2($.Duration_100000, new $.GalagaRenderer_subtleBgFade_closure2(this));
    $.get$_Zone__current().createTimer$2($.Duration_125000, new $.GalagaRenderer_subtleBgFade_closure3(this));
    $.get$_Zone__current().createTimer$2($.Duration_150000, new $.GalagaRenderer_subtleBgFade_closure4(this));
    $.get$_Zone__current().createTimer$2($.Duration_175000, new $.GalagaRenderer_subtleBgFade_closure5(this));
    $.get$_Zone__current().createTimer$2($.Duration_200000, new $.GalagaRenderer_subtleBgFade_closure6(this));
    $.get$_Zone__current().createTimer$2($.Duration_225000, new $.GalagaRenderer_subtleBgFade_closure7(this));
    $.get$_Zone__current().createTimer$2($.Duration_175000, new $.GalagaRenderer_subtleBgFade_closure8(this));
    $.get$_Zone__current().createTimer$2($.Duration_200000, new $.GalagaRenderer_subtleBgFade_closure9(this));
    $.get$_Zone__current().createTimer$2($.Duration_225000, new $.GalagaRenderer_subtleBgFade_closure10(this));
    $.get$_Zone__current().createTimer$2($.Duration_175000, new $.GalagaRenderer_subtleBgFade_closure11(this));
    $.get$_Zone__current().createTimer$2($.Duration_200000, new $.GalagaRenderer_subtleBgFade_closure12(this));
    $.get$_Zone__current().createTimer$2($.Duration_225000, new $.GalagaRenderer_subtleBgFade_closure13(this));
    $.get$_Zone__current().createTimer$2($.Duration_250000, new $.GalagaRenderer_subtleBgFade_closure14(this));
    $.get$_Zone__current().createTimer$2($.Duration_275000, new $.GalagaRenderer_subtleBgFade_closure15(this));
    $.get$_Zone__current().createTimer$2($.Duration_300000, new $.GalagaRenderer_subtleBgFade_closure16(this));
    $.get$_Zone__current().createTimer$2($.Duration_325000, new $.GalagaRenderer_subtleBgFade_closure17(this));
    $.get$_Zone__current().createTimer$2($.Duration_350000, new $.GalagaRenderer_subtleBgFade_closure18(this));
    $.get$_Zone__current().createTimer$2($.Duration_375000, new $.GalagaRenderer_subtleBgFade_closure19(this));
    $.get$_Zone__current().createTimer$2($.Duration_400000, new $.GalagaRenderer_subtleBgFade_closure20(this));
    $.get$_Zone__current().createTimer$2($.Duration_425000, new $.GalagaRenderer_subtleBgFade_closure21(this));
    $.get$_Zone__current().createTimer$2($.Duration_450000, new $.GalagaRenderer_subtleBgFade_closure22(this));
    $.get$_Zone__current().createTimer$2($.Duration_475000, new $.GalagaRenderer_subtleBgFade_closure23(this));
    $.get$_Zone__current().createTimer$2($.Duration_500000, new $.GalagaRenderer_subtleBgFade_closure24(this));
    $.get$_Zone__current().createTimer$2($.Duration_525000, new $.GalagaRenderer_subtleBgFade_closure25(this));
    $.get$_Zone__current().createTimer$2($.Duration_550000, new $.GalagaRenderer_subtleBgFade_closure26(this));
    $.get$_Zone__current().createTimer$2($.Duration_575000, new $.GalagaRenderer_subtleBgFade_closure27(this));
    $.get$_Zone__current().createTimer$2($.Duration_600000, new $.GalagaRenderer_subtleBgFade_closure28(this));
    $.get$_Zone__current().createTimer$2($.Duration_625000, new $.GalagaRenderer_subtleBgFade_closure29(this));
    $.get$_Zone__current().createTimer$2($.Duration_650000, new $.GalagaRenderer_subtleBgFade_closure30(this));
  },
  bgFade$0: function() {
    this._game.bgStyle = "rgba(0, 0, 0, 0.8)";
    $.get$_Zone__current().createTimer$2($.Duration_25000, new $.GalagaRenderer_bgFade_closure(this));
    $.get$_Zone__current().createTimer$2($.Duration_50000, new $.GalagaRenderer_bgFade_closure0(this));
    $.get$_Zone__current().createTimer$2($.Duration_75000, new $.GalagaRenderer_bgFade_closure1(this));
    $.get$_Zone__current().createTimer$2($.Duration_100000, new $.GalagaRenderer_bgFade_closure2(this));
    $.get$_Zone__current().createTimer$2($.Duration_125000, new $.GalagaRenderer_bgFade_closure3(this));
    $.get$_Zone__current().createTimer$2($.Duration_150000, new $.GalagaRenderer_bgFade_closure4(this));
    $.get$_Zone__current().createTimer$2($.Duration_175000, new $.GalagaRenderer_bgFade_closure5(this));
    $.get$_Zone__current().createTimer$2($.Duration_200000, new $.GalagaRenderer_bgFade_closure6(this));
    $.get$_Zone__current().createTimer$2($.Duration_225000, new $.GalagaRenderer_bgFade_closure7(this));
    $.get$_Zone__current().createTimer$2($.Duration_250000, new $.GalagaRenderer_bgFade_closure8(this));
    $.get$_Zone__current().createTimer$2($.Duration_275000, new $.GalagaRenderer_bgFade_closure9(this));
  },
  GalagaRenderer$1: function(targetId) {
    $.set$src$x(this.ship, "../web/images/Ship.png");
    $.set$src$x(this.invincibleShip, "../web/images/InvincibleShip.png");
    $.set$src$x(this.enemy, "../web/images/enemy.png");
    $.set$src$x(this.enemy2, "../web/images/enemy2.png");
    $.set$src$x(this.boss, "../web/images/boss.png");
    $.set$src$x(this.mothership, "../web/images/mothership.png");
    $.set$src$x(this.bosshp, "../web/images/bosshp.png");
    $.set$src$x(this.spreadup, "../web/images/powerup1.png");
    $.set$src$x(this.lifeup, "../web/images/powerup2.png");
    $.set$src$x(this.multiplierup, "../web/images/powerup3.png");
    $.set$src$x(this.bulletup, "../web/images/powerup4.png");
    $.set$src$x(this.coin, "../web/images/coin.png");
    $.set$src$x(this.shipbullet, "../web/images/BulletUp.png");
    $.set$src$x(this.enemybullet, "../web/images/BulletDown.png");
    $.set$src$x(this.superBullet, "../web/images/SuperAttack.png");
    $.set$src$x(this.bossSuperBullet, "../web/images/bossShot.png");
    $.set$src$x(this.chargeBar, "../web/images/chargeBar.png");
    $.set$src$x(this.star1, "../web/images/star1.png");
    $.set$src$x(this.star2, "../web/images/star2.png");
    $.set$src$x(this.star3, "../web/images/star3.png");
    $.set$src$x(this.star4, "../web/images/star4.png");
    $.set$src$x(this.star5, "../web/images/star5.png");
    $.set$src$x(this.star6, "../web/images/star6.png");
    $.set$src$x(this.star7, "../web/images/star7.png");
    $.set$src$x(this.skull, "../web/images/skull.png");
  }
},

GalagaRenderer_init_closure: {"": "Closure;this_0",
  call$1: function(e) {
    var t1 = this.this_0;
    t1.subtleBgFade$0();
    t1.updateStats$0();
    return;
  }
},

GalagaRenderer_init_closure0: {"": "Closure;this_1",
  call$1: function(e) {
    return this.this_1.shipHit$0();
  }
},

GalagaRenderer_init_closure1: {"": "Closure;this_2",
  call$1: function(e) {
    return this.this_2.updateStats$0();
  }
},

GalagaRenderer_init_closure2: {"": "Closure;this_3",
  call$1: function(e) {
    return this.this_3.motherShipHit$0();
  }
},

GalagaRenderer_init_closure3: {"": "Closure;this_4",
  call$1: function(e) {
    return this.this_4.bossHit$0();
  }
},

GalagaRenderer_init_closure4: {"": "Closure;this_5",
  call$1: function(e) {
    return this.this_5.normalShipHit$0();
  }
},

GalagaRenderer_init_closure5: {"": "Closure;this_6",
  call$1: function(e) {
    return this.this_6.subtleBgFade$0();
  }
},

GalagaRenderer_drawStars_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isStars;
  }
},

GalagaRenderer_drawStars_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2, t3, t4, t5, t6, t7;
    if ($.$gt$n(e.get$momentum().yVel, 0) && e.get$starColor() === 1) {
      t1 = this.this_0;
      t1.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t1.get$ctx().lineWidth = 3;
      t1.get$ctx().beginPath();
      t2 = e.get$starColor();
      if (t2 === 1) {
        t2 = t1.get$ctx();
        t3 = t1.get$star1();
        t4 = $.getInterceptor$x(e);
        t5 = t4.get$x(e);
        t6 = t4.get$width(e);
        if (typeof t6 !== "number")
          throw t6.$div();
        t6 = $.$sub$n(t5, t6 / 2);
        t5 = t4.get$y(e);
        t7 = t4.get$height(e);
        if (typeof t7 !== "number")
          throw t7.$div();
        t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
      } else if (t2 === 2) {
        t2 = t1.get$ctx();
        t3 = t1.get$star2();
        t4 = $.getInterceptor$x(e);
        t5 = t4.get$x(e);
        t6 = t4.get$width(e);
        if (typeof t6 !== "number")
          throw t6.$div();
        t6 = $.$sub$n(t5, t6 / 2);
        t5 = t4.get$y(e);
        t7 = t4.get$height(e);
        if (typeof t7 !== "number")
          throw t7.$div();
        t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
      } else if (t2 === 3) {
        t2 = t1.get$ctx();
        t3 = t1.get$star3();
        t4 = $.getInterceptor$x(e);
        t5 = t4.get$x(e);
        t6 = t4.get$width(e);
        if (typeof t6 !== "number")
          throw t6.$div();
        t6 = $.$sub$n(t5, t6 / 2);
        t5 = t4.get$y(e);
        t7 = t4.get$height(e);
        if (typeof t7 !== "number")
          throw t7.$div();
        t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
      } else if (t2 === 4) {
        t2 = t1.get$ctx();
        t3 = t1.get$star4();
        t4 = $.getInterceptor$x(e);
        t5 = t4.get$x(e);
        t6 = t4.get$width(e);
        if (typeof t6 !== "number")
          throw t6.$div();
        t6 = $.$sub$n(t5, t6 / 2);
        t5 = t4.get$y(e);
        t7 = t4.get$height(e);
        if (typeof t7 !== "number")
          throw t7.$div();
        t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
      } else if (t2 === 5) {
        t2 = t1.get$ctx();
        t3 = t1.get$star5();
        t4 = $.getInterceptor$x(e);
        t5 = t4.get$x(e);
        t6 = t4.get$width(e);
        if (typeof t6 !== "number")
          throw t6.$div();
        t6 = $.$sub$n(t5, t6 / 2);
        t5 = t4.get$y(e);
        t7 = t4.get$height(e);
        if (typeof t7 !== "number")
          throw t7.$div();
        t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
      } else if (t2 === 6) {
        t2 = t1.get$ctx();
        t3 = t1.get$star6();
        t4 = $.getInterceptor$x(e);
        t5 = t4.get$x(e);
        t6 = t4.get$width(e);
        if (typeof t6 !== "number")
          throw t6.$div();
        t6 = $.$sub$n(t5, t6 / 2);
        t5 = t4.get$y(e);
        t7 = t4.get$height(e);
        if (typeof t7 !== "number")
          throw t7.$div();
        t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
      } else if (t2 === 7) {
        t2 = t1.get$ctx();
        t3 = t1.get$star7();
        t4 = $.getInterceptor$x(e);
        t5 = t4.get$x(e);
        t6 = t4.get$width(e);
        if (typeof t6 !== "number")
          throw t6.$div();
        t6 = $.$sub$n(t5, t6 / 2);
        t5 = t4.get$y(e);
        t7 = t4.get$height(e);
        if (typeof t7 !== "number")
          throw t7.$div();
        t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
      }
      t1.get$ctx().stroke();
    }
  }
},

GalagaRenderer_drawBouncer_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isbouncingBall;
  }
},

GalagaRenderer_drawBouncer_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2, t3, t4, t5, t6;
    t1 = this.this_0;
    t1.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
    t1.get$ctx().lineWidth = 3;
    t1.get$ctx().beginPath();
    t2 = e.get$Sprite();
    if (t2 === 1) {
      t2 = t1.get$ctx();
      t3 = t1.get$spreadup();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t4 = t4.get$height(e);
      if (typeof t4 !== "number")
        throw t4.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t4 / 2), 42, 42);
    } else if (t2 === 2) {
      t2 = t1.get$ctx();
      t3 = t1.get$lifeup();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t4 = t4.get$height(e);
      if (typeof t4 !== "number")
        throw t4.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t4 / 2), 36, 36);
    } else if (t2 === 3) {
      t2 = t1.get$ctx();
      t3 = t1.get$multiplierup();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t4 = t4.get$height(e);
      if (typeof t4 !== "number")
        throw t4.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t4 / 2), 36, 36);
    } else if (t2 === 4) {
      t2 = t1.get$ctx();
      t3 = t1.get$bulletup();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t4 = t4.get$height(e);
      if (typeof t4 !== "number")
        throw t4.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t4 / 2), 36, 36);
    } else if (t2 === 5) {
      t2 = t1.get$ctx();
      t3 = t1.get$coin();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t4 = t4.get$height(e);
      if (typeof t4 !== "number")
        throw t4.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t4 / 2), 12, 12);
    } else if (t2 === 6) {
      t2 = t1.get$ctx();
      t3 = t1.get$ship();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t4 = t4.get$height(e);
      if (typeof t4 !== "number")
        throw t4.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t4 / 2), 42, 42);
    } else if (t2 === 7) {
      t2 = t1.get$ctx();
      t3 = t1.get$enemy();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t4 = t4.get$height(e);
      if (typeof t4 !== "number")
        throw t4.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t4 / 2), 42, 42);
    } else if (t2 === 8) {
      t2 = t1.get$ctx();
      t3 = t1.get$mothership();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t4 = t4.get$height(e);
      if (typeof t4 !== "number")
        throw t4.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t4 / 2), 42, 42);
    } else if (t2 === 9) {
      t2 = t1.get$ctx();
      t3 = t1.get$enemy2();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t4 = t4.get$height(e);
      if (typeof t4 !== "number")
        throw t4.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t4 / 2), 36, 36);
    } else if (t2 === 10) {
      t2 = t1.get$ctx();
      t3 = t1.get$boss();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t4 = t4.get$height(e);
      if (typeof t4 !== "number")
        throw t4.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t4 / 2), 72, 72);
    } else if (t2 === 11) {
      t2 = t1.get$ctx();
      t3 = t1.get$skull();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t4 = t4.get$height(e);
      if (typeof t4 !== "number")
        throw t4.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t4 / 2), 36, 36);
    }
    t1.get$ctx().stroke();
  }
},

GalagaRenderer_drawBullets_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isBullet;
  }
},

GalagaRenderer_drawBullets_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = e.get$momentum().yVel;
    t2 = $.getInterceptor$n(t1);
    if (t2.$lt(t1, 0) && e.get$Type() === "super") {
      t1 = this.this_0;
      t1.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t1.get$ctx().lineWidth = 3;
      t1.get$ctx().beginPath();
      t2 = $.getInterceptor$x(e);
      t1.get$ctx().drawImage(t1.get$superBullet(), $.$sub$n(t2.get$x(e), 8), $.$sub$n(t2.get$y(e), 8), 64, 32);
      t1.get$ctx().stroke();
    } else if (t2.$gt(t1, 0) && e.get$Type() === "super") {
      t1 = this.this_0;
      t1.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t1.get$ctx().lineWidth = 3;
      t1.get$ctx().beginPath();
      t2 = $.getInterceptor$x(e);
      t1.get$ctx().drawImage(t1.get$bossSuperBullet(), $.$sub$n(t2.get$x(e), 72), $.$sub$n(t2.get$y(e), 8), 64, 64);
      t1.get$ctx().stroke();
    } else if (t2.$lt(t1, 0) && e.get$Type() !== "super") {
      t1 = this.this_0;
      t1.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t1.get$ctx().lineWidth = 3;
      t1.get$ctx().beginPath();
      t2 = $.getInterceptor$x(e);
      t1.get$ctx().drawImage(t1.get$shipbullet(), $.$sub$n(t2.get$x(e), 8), $.$sub$n(t2.get$y(e), 8), 16, 16);
      t1.get$ctx().stroke();
    } else if (t2.$gt(t1, 0) && e.get$Type() !== "super") {
      t1 = this.this_0;
      t1.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t1.get$ctx().lineWidth = 3;
      t1.get$ctx().beginPath();
      t2 = $.getInterceptor$x(e);
      t1.get$ctx().drawImage(t1.get$enemybullet(), $.$sub$n(t2.get$x(e), 8), $.$sub$n(t2.get$y(e), 8), 16, 16);
      t1.get$ctx().stroke();
    }
  }
},

GalagaRenderer_drawPowerUps_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isPowerUp;
  }
},

GalagaRenderer_drawPowerUps_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = this.this_0;
    t1.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
    t1.get$ctx().lineWidth = 3;
    t1.get$ctx().beginPath();
    t2 = $.getInterceptor$x(e);
    t3 = t2.get$type(e);
    if (t3 === "SpiralShot")
      t1.get$ctx().drawImage(t1.get$spreadup(), $.$sub$n(t2.get$x(e), 20), $.$sub$n(t2.get$y(e), 20), 36, 36);
    else if (t3 === "ExtraLife")
      t1.get$ctx().drawImage(t1.get$lifeup(), $.$sub$n(t2.get$x(e), 20), $.$sub$n(t2.get$y(e), 20), 36, 36);
    else if (t3 === "Multiplier")
      t1.get$ctx().drawImage(t1.get$multiplierup(), $.$sub$n(t2.get$x(e), 20), $.$sub$n(t2.get$y(e), 20), 36, 36);
    else if (t3 === "BulletIncrease")
      t1.get$ctx().drawImage(t1.get$bulletup(), $.$sub$n(t2.get$x(e), 20), $.$sub$n(t2.get$y(e), 20), 36, 36);
    else if (t3 === "bulletPower")
      t1.get$ctx().drawImage(t1.get$coin(), $.$sub$n(t2.get$x(e), 8), $.$sub$n(t2.get$y(e), 8), 12, 12);
    t1.get$ctx().stroke();
  }
},

GalagaRenderer_drawEnemys_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

GalagaRenderer_drawEnemys_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2, t3, t4;
    t1 = $.getInterceptor$x(e);
    if (t1.get$type(e) === "Drone" && !e.get$flicker()) {
      t2 = this.this_0;
      t2.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t2.get$ctx().lineWidth = 3;
      t2.get$ctx().beginPath();
      t2.get$ctx().drawImage(t2.get$enemy(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 12, 12);
      t2.get$ctx().stroke();
    }
    if (t1.get$type(e) === "MotherShip" && !e.get$flicker()) {
      t2 = this.this_0;
      t2.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t2.get$ctx().lineWidth = 3;
      t2.get$ctx().beginPath();
      t2.get$ctx().drawImage(t2.get$mothership(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 42, 42);
      t2.get$ctx().stroke();
    }
    if (t1.get$type(e) === "Boss") {
      t2 = this.this_0;
      t2.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t2.get$ctx().lineWidth = 3;
      t2.get$ctx().beginPath();
      if (!e.get$flicker())
        t2.get$ctx().drawImage(t2.get$boss(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 72, 72);
      t2.get$ctx().drawImage(t2.get$bosshp(), -300, -250, e.get$health() * 6, 12);
      t2.get$ctx().stroke();
    }
    if (t1.get$type(e) === "Normal" && !e.get$flicker()) {
      t2 = this.this_0;
      t2.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t2.get$ctx().lineWidth = 3;
      t2.get$ctx().beginPath();
      t3 = e.get$enemyType();
      t4 = t2.get$ctx();
      if (t3 > 0.5)
        t4.drawImage(t2.get$enemy(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 42, 42);
      else
        t4.drawImage(t2.get$enemy2(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 36, 36);
      t2.get$ctx().stroke();
    }
  }
},

GalagaRenderer_shipHit_closure: {"": "Closure;this_0",
  call$0: function() {
    this.this_0.set$shipFlicker(true);
    return true;
  }
},

GalagaRenderer_shipHit_closure0: {"": "Closure;this_1",
  call$0: function() {
    this.this_1.set$shipFlicker(false);
    return false;
  }
},

GalagaRenderer_shipHit_closure1: {"": "Closure;this_2",
  call$0: function() {
    this.this_2.set$shipFlicker(true);
    return true;
  }
},

GalagaRenderer_shipHit_closure2: {"": "Closure;this_3",
  call$0: function() {
    this.this_3.set$shipFlicker(false);
    return false;
  }
},

GalagaRenderer_shipHit_closure3: {"": "Closure;this_4",
  call$0: function() {
    this.this_4.set$shipFlicker(true);
    return true;
  }
},

GalagaRenderer_shipHit_closure4: {"": "Closure;this_5",
  call$0: function() {
    this.this_5.set$shipFlicker(false);
    return false;
  }
},

GalagaRenderer_bossHit_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

GalagaRenderer_bossHit_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    if ($.get$type$x(e) === "Boss" && e.get$idNum() === this.this_0.get$_game().get$targetId()) {
      $.get$_Zone__current().createTimer$2($.Duration_25000, new $.GalagaRenderer_bossHit__closure(e));
      $.get$_Zone__current().createTimer$2($.Duration_75000, new $.GalagaRenderer_bossHit__closure0(e));
      this.this_0.subtleBgFade$0();
    }
  }
},

GalagaRenderer_bossHit__closure: {"": "Closure;e_1",
  call$0: function() {
    this.e_1.set$flicker(true);
    return true;
  }
},

GalagaRenderer_bossHit__closure0: {"": "Closure;e_2",
  call$0: function() {
    this.e_2.set$flicker(false);
    return false;
  }
},

GalagaRenderer_motherShipHit_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

GalagaRenderer_motherShipHit_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    if ($.get$type$x(e) === "MotherShip" && e.get$idNum() === this.this_0.get$_game().get$targetId()) {
      $.get$_Zone__current().createTimer$2($.Duration_25000, new $.GalagaRenderer_motherShipHit__closure(e));
      $.get$_Zone__current().createTimer$2($.Duration_75000, new $.GalagaRenderer_motherShipHit__closure0(e));
      $.get$_Zone__current().createTimer$2($.Duration_150000, new $.GalagaRenderer_motherShipHit__closure1(e));
      $.get$_Zone__current().createTimer$2($.Duration_225000, new $.GalagaRenderer_motherShipHit__closure2(e));
      $.get$_Zone__current().createTimer$2($.Duration_300000, new $.GalagaRenderer_motherShipHit__closure3(e));
      $.get$_Zone__current().createTimer$2($.Duration_375000, new $.GalagaRenderer_motherShipHit__closure4(e));
      this.this_0.subtleBgFade$0();
    }
  }
},

GalagaRenderer_motherShipHit__closure: {"": "Closure;e_1",
  call$0: function() {
    this.e_1.set$flicker(true);
    return true;
  }
},

GalagaRenderer_motherShipHit__closure0: {"": "Closure;e_2",
  call$0: function() {
    this.e_2.set$flicker(false);
    return false;
  }
},

GalagaRenderer_motherShipHit__closure1: {"": "Closure;e_3",
  call$0: function() {
    this.e_3.set$flicker(true);
    return true;
  }
},

GalagaRenderer_motherShipHit__closure2: {"": "Closure;e_4",
  call$0: function() {
    this.e_4.set$flicker(false);
    return false;
  }
},

GalagaRenderer_motherShipHit__closure3: {"": "Closure;e_5",
  call$0: function() {
    this.e_5.set$flicker(true);
    return true;
  }
},

GalagaRenderer_motherShipHit__closure4: {"": "Closure;e_6",
  call$0: function() {
    this.e_6.set$flicker(false);
    return false;
  }
},

GalagaRenderer_normalShipHit_closure: {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!$.getInterceptor(e).$isEnemy;
  }
},

GalagaRenderer_normalShipHit_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    if ($.get$type$x(e) === "Normal" && e.get$idNum() === this.this_0.get$_game().get$targetId()) {
      $.get$_Zone__current().createTimer$2($.Duration_25000, new $.GalagaRenderer_normalShipHit__closure(e));
      $.get$_Zone__current().createTimer$2($.Duration_75000, new $.GalagaRenderer_normalShipHit__closure0(e));
      $.get$_Zone__current().createTimer$2($.Duration_150000, new $.GalagaRenderer_normalShipHit__closure1(e));
      $.get$_Zone__current().createTimer$2($.Duration_225000, new $.GalagaRenderer_normalShipHit__closure2(e));
      this.this_0.subtleBgFade$0();
    }
  }
},

GalagaRenderer_normalShipHit__closure: {"": "Closure;e_1",
  call$0: function() {
    this.e_1.set$flicker(true);
    return true;
  }
},

GalagaRenderer_normalShipHit__closure0: {"": "Closure;e_2",
  call$0: function() {
    this.e_2.set$flicker(false);
    return false;
  }
},

GalagaRenderer_normalShipHit__closure1: {"": "Closure;e_3",
  call$0: function() {
    this.e_3.set$flicker(true);
    return true;
  }
},

GalagaRenderer_normalShipHit__closure2: {"": "Closure;e_4",
  call$0: function() {
    this.e_4.set$flicker(false);
    return false;
  }
},

GalagaRenderer_subtleBgFade_closure: {"": "Closure;this_0",
  call$0: function() {
    this.this_0.get$_game().bgStyle = "rgba(0, 0, 0, 0.83)";
    return "rgba(0, 0, 0, 0.83)";
  }
},

GalagaRenderer_subtleBgFade_closure0: {"": "Closure;this_1",
  call$0: function() {
    this.this_1.get$_game().bgStyle = "rgba(0, 0, 0, 0.81)";
    return "rgba(0, 0, 0, 0.81)";
  }
},

GalagaRenderer_subtleBgFade_closure1: {"": "Closure;this_2",
  call$0: function() {
    this.this_2.get$_game().bgStyle = "rgba(0, 0, 0, 0.79)";
    return "rgba(0, 0, 0, 0.79)";
  }
},

GalagaRenderer_subtleBgFade_closure2: {"": "Closure;this_3",
  call$0: function() {
    this.this_3.get$_game().bgStyle = "rgba(0, 0, 0, 0.77)";
    return "rgba(0, 0, 0, 0.77)";
  }
},

GalagaRenderer_subtleBgFade_closure3: {"": "Closure;this_4",
  call$0: function() {
    this.this_4.get$_game().bgStyle = "rgba(0, 0, 0, 0.75)";
    return "rgba(0, 0, 0, 0.75)";
  }
},

GalagaRenderer_subtleBgFade_closure4: {"": "Closure;this_5",
  call$0: function() {
    this.this_5.get$_game().bgStyle = "rgba(0, 0, 0, 0.73)";
    return "rgba(0, 0, 0, 0.73)";
  }
},

GalagaRenderer_subtleBgFade_closure5: {"": "Closure;this_6",
  call$0: function() {
    this.this_6.get$_game().bgStyle = "rgba(0, 0, 0, 0.71)";
    return "rgba(0, 0, 0, 0.71)";
  }
},

GalagaRenderer_subtleBgFade_closure6: {"": "Closure;this_7",
  call$0: function() {
    this.this_7.get$_game().bgStyle = "rgba(0, 0, 0, 0.69)";
    return "rgba(0, 0, 0, 0.69)";
  }
},

GalagaRenderer_subtleBgFade_closure7: {"": "Closure;this_8",
  call$0: function() {
    this.this_8.get$_game().bgStyle = "rgba(0, 0, 0, 0.67)";
    return "rgba(0, 0, 0, 0.67)";
  }
},

GalagaRenderer_subtleBgFade_closure8: {"": "Closure;this_9",
  call$0: function() {
    this.this_9.get$_game().bgStyle = "rgba(0, 0, 0, 0.65)";
    return "rgba(0, 0, 0, 0.65)";
  }
},

GalagaRenderer_subtleBgFade_closure9: {"": "Closure;this_10",
  call$0: function() {
    this.this_10.get$_game().bgStyle = "rgba(0, 0, 0, 0.63)";
    return "rgba(0, 0, 0, 0.63)";
  }
},

GalagaRenderer_subtleBgFade_closure10: {"": "Closure;this_11",
  call$0: function() {
    this.this_11.get$_game().bgStyle = "rgba(0, 0, 0, 0.61)";
    return "rgba(0, 0, 0, 0.61)";
  }
},

GalagaRenderer_subtleBgFade_closure11: {"": "Closure;this_12",
  call$0: function() {
    this.this_12.get$_game().bgStyle = "rgba(0, 0, 0, 0.59)";
    return "rgba(0, 0, 0, 0.59)";
  }
},

GalagaRenderer_subtleBgFade_closure12: {"": "Closure;this_13",
  call$0: function() {
    this.this_13.get$_game().bgStyle = "rgba(0, 0, 0, 0.57)";
    return "rgba(0, 0, 0, 0.57)";
  }
},

GalagaRenderer_subtleBgFade_closure13: {"": "Closure;this_14",
  call$0: function() {
    this.this_14.get$_game().bgStyle = "rgba(0, 0, 0, 0.55)";
    return "rgba(0, 0, 0, 0.55)";
  }
},

GalagaRenderer_subtleBgFade_closure14: {"": "Closure;this_15",
  call$0: function() {
    this.this_15.get$_game().bgStyle = "rgba(0, 0, 0, 0.53)";
    return "rgba(0, 0, 0, 0.53)";
  }
},

GalagaRenderer_subtleBgFade_closure15: {"": "Closure;this_16",
  call$0: function() {
    this.this_16.get$_game().bgStyle = "rgba(0, 0, 0, 0.55)";
    return "rgba(0, 0, 0, 0.55)";
  }
},

GalagaRenderer_subtleBgFade_closure16: {"": "Closure;this_17",
  call$0: function() {
    this.this_17.get$_game().bgStyle = "rgba(0, 0, 0, 0.57)";
    return "rgba(0, 0, 0, 0.57)";
  }
},

GalagaRenderer_subtleBgFade_closure17: {"": "Closure;this_18",
  call$0: function() {
    this.this_18.get$_game().bgStyle = "rgba(0, 0, 0, 0.59)";
    return "rgba(0, 0, 0, 0.59)";
  }
},

GalagaRenderer_subtleBgFade_closure18: {"": "Closure;this_19",
  call$0: function() {
    this.this_19.get$_game().bgStyle = "rgba(0, 0, 0, 0.61)";
    return "rgba(0, 0, 0, 0.61)";
  }
},

GalagaRenderer_subtleBgFade_closure19: {"": "Closure;this_20",
  call$0: function() {
    this.this_20.get$_game().bgStyle = "rgba(0, 0, 0, 0.63)";
    return "rgba(0, 0, 0, 0.63)";
  }
},

GalagaRenderer_subtleBgFade_closure20: {"": "Closure;this_21",
  call$0: function() {
    this.this_21.get$_game().bgStyle = "rgba(0, 0, 0, 0.65)";
    return "rgba(0, 0, 0, 0.65)";
  }
},

GalagaRenderer_subtleBgFade_closure21: {"": "Closure;this_22",
  call$0: function() {
    this.this_22.get$_game().bgStyle = "rgba(0, 0, 0, 0.67)";
    return "rgba(0, 0, 0, 0.67)";
  }
},

GalagaRenderer_subtleBgFade_closure22: {"": "Closure;this_23",
  call$0: function() {
    this.this_23.get$_game().bgStyle = "rgba(0, 0, 0, 0.69)";
    return "rgba(0, 0, 0, 0.69)";
  }
},

GalagaRenderer_subtleBgFade_closure23: {"": "Closure;this_24",
  call$0: function() {
    this.this_24.get$_game().bgStyle = "rgba(0, 0, 0, 0.71)";
    return "rgba(0, 0, 0, 0.71)";
  }
},

GalagaRenderer_subtleBgFade_closure24: {"": "Closure;this_25",
  call$0: function() {
    this.this_25.get$_game().bgStyle = "rgba(0, 0, 0, 0.73)";
    return "rgba(0, 0, 0, 0.73)";
  }
},

GalagaRenderer_subtleBgFade_closure25: {"": "Closure;this_26",
  call$0: function() {
    this.this_26.get$_game().bgStyle = "rgba(0, 0, 0, 0.75)";
    return "rgba(0, 0, 0, 0.75)";
  }
},

GalagaRenderer_subtleBgFade_closure26: {"": "Closure;this_27",
  call$0: function() {
    this.this_27.get$_game().bgStyle = "rgba(0, 0, 0, 0.77)";
    return "rgba(0, 0, 0, 0.77)";
  }
},

GalagaRenderer_subtleBgFade_closure27: {"": "Closure;this_28",
  call$0: function() {
    this.this_28.get$_game().bgStyle = "rgba(0, 0, 0, 0.79)";
    return "rgba(0, 0, 0, 0.79)";
  }
},

GalagaRenderer_subtleBgFade_closure28: {"": "Closure;this_29",
  call$0: function() {
    this.this_29.get$_game().bgStyle = "rgba(0, 0, 0, 0.81)";
    return "rgba(0, 0, 0, 0.81)";
  }
},

GalagaRenderer_subtleBgFade_closure29: {"": "Closure;this_30",
  call$0: function() {
    this.this_30.get$_game().bgStyle = "rgba(0, 0, 0, 0.83)";
    return "rgba(0, 0, 0, 0.83)";
  }
},

GalagaRenderer_subtleBgFade_closure30: {"": "Closure;this_31",
  call$0: function() {
    this.this_31.get$_game().bgStyle = "rgba(0, 0, 0, 0.85)";
    return "rgba(0, 0, 0, 0.85)";
  }
},

GalagaRenderer_bgFade_closure: {"": "Closure;this_0",
  call$0: function() {
    this.this_0.get$_game().bgStyle = "rgba(0, 0, 0, 0.75)";
    return "rgba(0, 0, 0, 0.75)";
  }
},

GalagaRenderer_bgFade_closure0: {"": "Closure;this_1",
  call$0: function() {
    this.this_1.get$_game().bgStyle = "rgba(0, 0, 0, 0.70)";
    return "rgba(0, 0, 0, 0.70)";
  }
},

GalagaRenderer_bgFade_closure1: {"": "Closure;this_2",
  call$0: function() {
    this.this_2.get$_game().bgStyle = "rgba(0, 0, 0, 0.65)";
    return "rgba(0, 0, 0, 0.65)";
  }
},

GalagaRenderer_bgFade_closure2: {"": "Closure;this_3",
  call$0: function() {
    this.this_3.get$_game().bgStyle = "rgba(0, 0, 0, 0.60)";
    return "rgba(0, 0, 0, 0.60)";
  }
},

GalagaRenderer_bgFade_closure3: {"": "Closure;this_4",
  call$0: function() {
    this.this_4.get$_game().bgStyle = "rgba(0, 0, 0, 0.55)";
    return "rgba(0, 0, 0, 0.55)";
  }
},

GalagaRenderer_bgFade_closure4: {"": "Closure;this_5",
  call$0: function() {
    this.this_5.get$_game().bgStyle = "rgba(0, 0, 0, 0.60)";
    return "rgba(0, 0, 0, 0.60)";
  }
},

GalagaRenderer_bgFade_closure5: {"": "Closure;this_6",
  call$0: function() {
    this.this_6.get$_game().bgStyle = "rgba(0, 0, 0, 0.65)";
    return "rgba(0, 0, 0, 0.65)";
  }
},

GalagaRenderer_bgFade_closure6: {"": "Closure;this_7",
  call$0: function() {
    this.this_7.get$_game().bgStyle = "rgba(0, 0, 0, 0.70)";
    return "rgba(0, 0, 0, 0.70)";
  }
},

GalagaRenderer_bgFade_closure7: {"": "Closure;this_8",
  call$0: function() {
    this.this_8.get$_game().bgStyle = "rgba(0, 0, 0, 0.75)";
    return "rgba(0, 0, 0, 0.75)";
  }
},

GalagaRenderer_bgFade_closure8: {"": "Closure;this_9",
  call$0: function() {
    this.this_9.get$_game().bgStyle = "rgba(0, 0, 0, 0.80)";
    return "rgba(0, 0, 0, 0.80)";
  }
},

GalagaRenderer_bgFade_closure9: {"": "Closure;this_10",
  call$0: function() {
    this.this_10.get$_game().bgStyle = "rgba(0, 0, 0, 0.85)";
    return "rgba(0, 0, 0, 0.85)";
  }
},

GalagaRenderer$: function(targetId) {
  var t1 = new $.GalagaRenderer(0, $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), false, false, targetId, null, null, null, null, null, null, null, null);
  t1.CanvasGameRenderer$1(targetId);
  t1.GalagaRenderer$1(targetId);
  return t1;
}}],
["html_common", "dart:html_common", , {
convertDartToNative_Dictionary_closure: {"": "Closure;object_0",
  call$2: function(key, value) {
    this.object_0[key] = value;
  }
},

convertNativeToDart_AcceptStructuredClone_findSlot: {"": "Closure;values_0,copies_1",
  call$1: function(value) {
    var t1, $length, i, t2;
    t1 = this.values_0;
    $length = t1.length;
    for (i = 0; i < $length; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    t1.push(value);
    this.copies_1.push(null);
    return $length;
  }
},

convertNativeToDart_AcceptStructuredClone_readSlot: {"": "Closure;copies_2",
  call$1: function(i) {
    var t1 = this.copies_2;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    return t1[i];
  }
},

convertNativeToDart_AcceptStructuredClone_writeSlot: {"": "Closure;copies_3",
  call$2: function(i, x) {
    var t1 = this.copies_3;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    t1[i] = x;
  }
},

convertNativeToDart_AcceptStructuredClone_walk: {"": "Closure;mustCopy_4,findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var slot, copy, t1, key, $length, i;
    if (typeof e !== "object" || e === null || (e.constructor !== Array || !!e.immutable$list) && !$.isJsIndexable(e, e[$.dispatchPropertyName]))
      return this.call$1$bailout(1, e);
    if (e instanceof Date)
      throw $.wrapException(new $.UnimplementedError("structured clone of DateTime"));
    if (e instanceof RegExp)
      throw $.wrapException(new $.UnimplementedError("structured clone of RegExp"));
    if (Object.getPrototypeOf(e) === Object.prototype) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      copy = $.makeLiteralMap([]);
      this.writeSlot_7.call$2(slot, copy);
      for (t1 = Object.keys(e), t1 = new $.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
        key = t1._liblib0$_current;
        copy.$indexSet(copy, key, this.call$1(e[key]));
      }
      return copy;
    }
    if (e instanceof Array) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      $length = e.length;
      if (this.mustCopy_4)
        copy = new Array($length);
      else
        copy = e;
      if (typeof copy !== "object" || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !$.isJsIndexable(copy, copy[$.dispatchPropertyName]))
        return this.call$1$bailout(2, e, $.JSArray_methods, copy, $length, slot);
      this.writeSlot_7.call$2(slot, copy);
      for (i = 0; i < $length; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        t1 = this.call$1(e[i]);
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
    }
    return e;
  },
  call$1$bailout: function(state0, e, t1, copy, $length, slot) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (e instanceof Date)
          throw $.wrapException(new $.UnimplementedError("structured clone of DateTime"));
        if (e instanceof RegExp)
          throw $.wrapException(new $.UnimplementedError("structured clone of RegExp"));
        if (Object.getPrototypeOf(e) === Object.prototype) {
          slot = this.findSlot_5.call$1(e);
          copy = this.readSlot_6.call$1(slot);
          if (copy != null)
            return copy;
          copy = $.makeLiteralMap([]);
          this.writeSlot_7.call$2(slot, copy);
          for (t1 = Object.keys(e), t1 = new $.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
            key = t1._liblib0$_current;
            copy.$indexSet(copy, key, this.call$1(e[key]));
          }
          return copy;
        }
      case 2:
        var key, t2, i;
        if (state0 === 2 || state0 === 0 && e instanceof Array)
          switch (state0) {
            case 0:
              slot = this.findSlot_5.call$1(e);
              copy = this.readSlot_6.call$1(slot);
              if (copy != null)
                return copy;
              t1 = $.getInterceptor$asx(e);
              $length = t1.get$length(e);
              copy = this.mustCopy_4 ? new Array($length) : e;
            case 2:
              state0 = 0;
              this.writeSlot_7.call$2(slot, copy);
              if (typeof $length !== "number")
                throw $.iae($length);
              t2 = $.getInterceptor$ax(copy);
              i = 0;
              for (; i < $length; ++i)
                t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
              return copy;
          }
        return e;
    }
  }
},

convertDartToNative_Dictionary: function(dict) {
  var object = {};
  dict.forEach$1(dict, new $.convertDartToNative_Dictionary_closure(object));
  return object;
},

convertNativeToDart_AcceptStructuredClone: function(object, mustCopy) {
  var copies = [];
  return new $.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $.convertNativeToDart_AcceptStructuredClone_findSlot([], copies), new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
}}],
]);
Isolate.$finishClasses($$, $, null);
$$ = null;

$.IsolateNatives__processWorkerMessage$closure = new $.Closure$_processWorkerMessage($.IsolateNatives__processWorkerMessage, "IsolateNatives__processWorkerMessage$closure");
$.Primitives__throwFormatException$closure = new $.Closure$_throwFormatException($.Primitives__throwFormatException, "Primitives__throwFormatException$closure");
$.wrapException$closure = new $.Closure$wrapException($.wrapException, "wrapException$closure");
$.DartError_toStringWrapper$closure = new $.Closure$toStringWrapper($.DartError_toStringWrapper, "DartError_toStringWrapper$closure");
$.invokeClosure$closure = new $.Closure$invokeClosure($.invokeClosure, "invokeClosure$closure");
$.typeNameInChrome$closure = new $.Closure$typeNameInChrome($.typeNameInChrome, "typeNameInChrome$closure");
$.typeNameInSafari$closure = new $.Closure$typeNameInSafari($.typeNameInSafari, "typeNameInSafari$closure");
$.typeNameInOpera$closure = new $.Closure$typeNameInOpera($.typeNameInOpera, "typeNameInOpera$closure");
$.typeNameInFirefox$closure = new $.Closure$typeNameInFirefox($.typeNameInFirefox, "typeNameInFirefox$closure");
$.typeNameInIE$closure = new $.Closure$typeNameInIE($.typeNameInIE, "typeNameInIE$closure");
$.constructorNameFallback$closure = new $.Closure$constructorNameFallback($.constructorNameFallback, "constructorNameFallback$closure");
$._asyncRunCallback$closure = new $.Closure$_asyncRunCallback($._asyncRunCallback, "_asyncRunCallback$closure");
$._nullDataHandler$closure = new $.Closure$_nullDataHandler($._nullDataHandler, "_nullDataHandler$closure");
$._nullErrorHandler$closure = new $.Closure$_nullErrorHandler($._nullErrorHandler, "_nullErrorHandler$closure");
$._nullDoneHandler$closure = new $.Closure$_nullDoneHandler($._nullDoneHandler, "_nullDoneHandler$closure");
$.main$closure = new $.Closure$main($.main, "main$closure");
$.Window_methods = $.Window.prototype;
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.List_empty = Isolate.makeConstantList([]);
$.C__DelayedDone = new $._DelayedDone();
$.Duration_175000 = new $.Duration(175000);
$.Duration_575000 = new $.Duration(575000);
$.Duration_250000 = new $.Duration(250000);
$.Duration_650000 = new $.Duration(650000);
$.EventStreamProvider_mouseup = new $.EventStreamProvider("mouseup");
$.Duration_325000 = new $.Duration(325000);
$.EventStreamProvider_mousemove = new $.EventStreamProvider("mousemove");
$.Duration_0 = new $.Duration(0);
$.C_CloseToken = new $.CloseToken();
$.Duration_400000 = new $.Duration(400000);
$.C_NullThrownError = new $.NullThrownError();
$.Duration_275000 = new $.Duration(275000);
$.C__Random = new $._Random();
$.Duration_350000 = new $.Duration(350000);
$.Duration_425000 = new $.Duration(425000);
$.EventStreamProvider_keyup = new $.EventStreamProvider("keyup");
$.Duration_25000 = new $.Duration(25000);
$.Duration_100000 = new $.Duration(100000);
$.Duration_500000 = new $.Duration(500000);
$.EventStreamProvider_touchstart = new $.EventStreamProvider("touchstart");
$.EventStreamProvider_webkitpointerlockchange = new $.EventStreamProvider("webkitpointerlockchange");
$.Duration_375000 = new $.Duration(375000);
$.Duration_50000 = new $.Duration(50000);
$.JSNumber_methods = $.JSNumber.prototype;
$.JSString_methods = $.JSString.prototype;
$.Duration_450000 = new $.Duration(450000);
$.Duration_125000 = new $.Duration(125000);
$.Duration_525000 = new $.Duration(525000);
$.Duration_5000000 = new $.Duration(5000000);
$.Duration_200000 = new $.Duration(200000);
$.C_JSUnknown = new $.JSUnknown();
$.Duration_600000 = new $.Duration(600000);
$.EventStreamProvider_keydown = new $.EventStreamProvider("keydown");
$.Duration_75000 = new $.Duration(75000);
$.Duration_475000 = new $.Duration(475000);
$.Duration_1000000 = new $.Duration(1000000);
$.Duration_150000 = new $.Duration(150000);
$.Duration_550000 = new $.Duration(550000);
$.EventStreamProvider_touchmove = new $.EventStreamProvider("touchmove");
$.Duration_225000 = new $.Duration(225000);
$.Duration_625000 = new $.Duration(625000);
$.JSNull_methods = $.JSNull.prototype;
$.JSInt_methods = $.JSInt.prototype;
$.JSArray_methods = $.JSArray.prototype;
$.EventStreamProvider_click = new $.EventStreamProvider("click");
$.EventStreamProvider_mousedown = new $.EventStreamProvider("mousedown");
$.Duration_300000 = new $.Duration(300000);
$.dispatchPropertyName = null;
$.lazyPort = null;
$.ReceivePortImpl__nextFreeId = 1;
$._getTypeNameOf = null;
$.interceptorsByTag = null;
$.leafTags = null;
$._callbacksAreEnqueued = false;
$.Expando__keyCount = 0;
$.Game_debugMode = false;
$.$$dom_addEventListener$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).$$dom_addEventListener$3(receiver, a0, a1, a2);
};
$.$$dom_removeEventListener$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).$$dom_removeEventListener$3(receiver, a0, a1, a2);
};
$.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return $.getInterceptor$ns(receiver).$add(receiver, a0);
};
$.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (typeof receiver != "object")
    return a0 != null && receiver === a0;
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return $.getInterceptor$n(receiver).$ge(receiver, a0);
};
$.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return $.getInterceptor$n(receiver).$gt(receiver, a0);
};
$.$index$asx = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string")
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return $.getInterceptor$asx(receiver).$index(receiver, a0);
};
$.$indexSet$ax = function(receiver, a0, a1) {
  if (receiver.constructor == Array && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return $.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
};
$.$le$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver <= a0;
  return $.getInterceptor$n(receiver).$le(receiver, a0);
};
$.$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return $.getInterceptor$n(receiver).$lt(receiver, a0);
};
$.$mul$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return $.getInterceptor$n(receiver).$mul(receiver, a0);
};
$.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return $.getInterceptor$n(receiver).$sub(receiver, a0);
};
$.abs$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).abs$0(receiver);
};
$.ceil$0$nx = function(receiver) {
  return $.getInterceptor$nx(receiver).ceil$0(receiver);
};
$.forEach$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).forEach$1(receiver, a0);
};
$.get$click$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$click(receiver);
};
$.get$context2d$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$context2d(receiver);
};
$.get$fill$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$fill(receiver);
};
$.get$hashCode$ = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.get$id$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$id(receiver);
};
$.get$isEmpty$asx = function(receiver) {
  return $.getInterceptor$asx(receiver).get$isEmpty(receiver);
};
$.get$iterator$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).get$iterator(receiver);
};
$.get$keyCode$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$keyCode(receiver);
};
$.get$length$asx = function(receiver) {
  return $.getInterceptor$asx(receiver).get$length(receiver);
};
$.get$rect$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$rect(receiver);
};
$.get$state$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$state(receiver);
};
$.get$type$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$type(receiver);
};
$.get$values$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$values(receiver);
};
$.get$x$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$x(receiver);
};
$.get$y$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$y(receiver);
};
$.preventDefault$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).preventDefault$0(receiver);
};
$.register$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).register$2(receiver, a0, a1);
};
$.reset$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).reset$0(receiver);
};
$.round$0$nx = function(receiver) {
  return $.getInterceptor$nx(receiver).round$0(receiver);
};
$.set$click$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$click(receiver, value);
};
$.set$src$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$src(receiver, value);
};
$.set$state$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$state(receiver, value);
};
$.start$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).start$0(receiver);
};
$.start$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).start$1(receiver, a0);
};
$.toList$0$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).toList$0(receiver);
};
$.toString$0 = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  if (Object.getPrototypeOf(receiver) === Object.prototype)
    return $.Interceptor.prototype;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$asx = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  if (Object.getPrototypeOf(receiver) === Object.prototype)
    return $.Interceptor.prototype;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$ax = function(receiver) {
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  if (Object.getPrototypeOf(receiver) === Object.prototype)
    return $.Interceptor.prototype;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof $.Object))
    return $.JSUnknown.prototype;
  return receiver;
};
$.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof $.Object))
    return $.JSUnknown.prototype;
  return receiver;
};
$.getInterceptor$nx = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  if (Object.getPrototypeOf(receiver) === Object.prototype)
    return $.Interceptor.prototype;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof $.Object))
    return $.JSUnknown.prototype;
  return receiver;
};
$.getInterceptor$x = function(receiver) {
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  if (Object.getPrototypeOf(receiver) === Object.prototype)
    return $.Interceptor.prototype;
  return $.getNativeInterceptor(receiver);
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return function() { return this; }();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== void 0;
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "workerIds", "IsolateNatives_workerIds", "get$IsolateNatives_workerIds", function() {
  return new $.Expando(null);
});
Isolate.$lazy($, "_stackTraceExpando", "_stackTraceExpando", "get$_stackTraceExpando", function() {
  return new $.Expando("asynchronous error");
});
Isolate.$lazy($, "_asyncCallbacks", "_asyncCallbacks", "get$_asyncCallbacks", function() {
  return $.ListQueue$(null);
});
Isolate.$lazy($, "_current", "_Zone__current", "get$_Zone__current", function() {
  return new $._DefaultZone(null, [], 0, false);
});
Isolate.$lazy($, "empty", "EventArgs_empty", "get$EventArgs_empty", function() {
  return new $.EventArgs();
});
// Native classes
$.defineNativeMethodsNonleaf("HTMLElement", $._HTMLElement);

$.defineNativeMethods("HTMLAnchorElement", $.AnchorElement);

$.defineNativeMethods("WebKitAnimationEvent", $.AnimationEvent);

$.defineNativeMethods("HTMLAreaElement", $.AreaElement);

$.defineNativeMethods("HTMLAudioElement", $.AudioElement);

$.defineNativeMethods("AutocompleteErrorEvent", $.AutocompleteErrorEvent);

$.defineNativeMethods("HTMLBRElement", $.BRElement);

$.defineNativeMethods("HTMLBaseElement", $.BaseElement);

$.defineNativeMethods("BeforeLoadEvent", $.BeforeLoadEvent);

$.defineNativeMethodsNonleaf("Blob", $.Blob);

$.defineNativeMethods("HTMLBodyElement", $.BodyElement);

$.defineNativeMethods("HTMLButtonElement", $.ButtonElement);

$.defineNativeMethods("CDATASection", $.CDataSection);

$.defineNativeMethods("HTMLCanvasElement", $.CanvasElement);

$.defineNativeMethods("CanvasGradient", $.CanvasGradient);

$.defineNativeMethods("CanvasPattern", $.CanvasPattern);

$.defineNativeMethodsNonleaf("CanvasRenderingContext", $.CanvasRenderingContext);

$.defineNativeMethods("CanvasRenderingContext2D", $.CanvasRenderingContext2D);

$.defineNativeMethodsNonleaf("CharacterData", $.CharacterData);

$.defineNativeMethods("CloseEvent", $.CloseEvent);

$.defineNativeMethods("Comment", $.Comment);

$.defineNativeMethods("CompositionEvent", $.CompositionEvent);

$.defineNativeMethods("HTMLContentElement", $.ContentElement);

$.defineNativeMethods("CSSFontFaceLoadEvent", $.CssFontFaceLoadEvent);

$.defineNativeMethods("CustomElementConstructor", $.CustomElementConstructor);

$.defineNativeMethods("CustomEvent", $.CustomEvent);

$.defineNativeMethods("HTMLDListElement", $.DListElement);

$.defineNativeMethods("HTMLDataListElement", $.DataListElement);

$.defineNativeMethods("HTMLDetailsElement", $.DetailsElement);

$.defineNativeMethods("DeviceMotionEvent", $.DeviceMotionEvent);

$.defineNativeMethods("DeviceOrientationEvent", $.DeviceOrientationEvent);

$.defineNativeMethods("HTMLDialogElement", $.DialogElement);

$.defineNativeMethods("HTMLDivElement", $.DivElement);

$.defineNativeMethodsNonleaf("Document", $.Document);

$.defineNativeMethodsNonleaf("DocumentFragment", $.DocumentFragment);

$.defineNativeMethods("DocumentType", $.DocumentType);

$.defineNativeMethods("DOMError", $.DomError);

$.defineNativeMethods("DOMException", $.DomException);

$.defineNativeMethodsNonleaf("Element", $.Element);

$.defineNativeMethods("HTMLEmbedElement", $.EmbedElement);

$.defineNativeMethods("ErrorEvent", $.ErrorEvent);

$.defineNativeMethodsNonleaf("Event", $.Event);

$.defineNativeMethods("EventException", $.EventException);

$.defineNativeMethodsNonleaf("EventTarget", $.EventTarget);

$.defineNativeMethods("HTMLFieldSetElement", $.FieldSetElement);

$.defineNativeMethods("File", $.File);

$.defineNativeMethods("FileError", $.FileError);

$.defineNativeMethods("FileException", $.FileException);

$.defineNativeMethods("FocusEvent", $.FocusEvent);

$.defineNativeMethods("HTMLFormElement", $.FormElement);

$.defineNativeMethods("HTMLHRElement", $.HRElement);

$.defineNativeMethods("HashChangeEvent", $.HashChangeEvent);

$.defineNativeMethods("HTMLHeadElement", $.HeadElement);

$.defineNativeMethods("HTMLHeadingElement", $.HeadingElement);

$.defineNativeMethods("HTMLDocument", $.HtmlDocument);

$.defineNativeMethods("HTMLHtmlElement", $.HtmlElement);

$.defineNativeMethods("XMLHttpRequestProgressEvent", $.HttpRequestProgressEvent);

$.defineNativeMethods("HTMLIFrameElement", $.IFrameElement);

$.defineNativeMethods("HTMLImageElement", $.ImageElement);

$.defineNativeMethods("HTMLInputElement", $.InputElement);

$.defineNativeMethods("KeyboardEvent", $.KeyboardEvent);

$.defineNativeMethods("HTMLKeygenElement", $.KeygenElement);

$.defineNativeMethods("HTMLLIElement", $.LIElement);

$.defineNativeMethods("HTMLLabelElement", $.LabelElement);

$.defineNativeMethods("HTMLLegendElement", $.LegendElement);

$.defineNativeMethods("HTMLLinkElement", $.LinkElement);

$.defineNativeMethods("HTMLMapElement", $.MapElement);

$.defineNativeMethodsNonleaf("HTMLMediaElement", $.MediaElement);

$.defineNativeMethods("MediaError", $.MediaError);

$.defineNativeMethods("MediaKeyError", $.MediaKeyError);

$.defineNativeMethods("MediaKeyEvent", $.MediaKeyEvent);

$.defineNativeMethods("MediaKeyMessageEvent", $.MediaKeyMessageEvent);

$.defineNativeMethods("MediaKeyNeededEvent", $.MediaKeyNeededEvent);

$.defineNativeMethods("MediaStream", $.MediaStream);

$.defineNativeMethods("MediaStreamEvent", $.MediaStreamEvent);

$.defineNativeMethods("MediaStreamTrackEvent", $.MediaStreamTrackEvent);

$.defineNativeMethods("HTMLMenuElement", $.MenuElement);

$.defineNativeMethods("MessageEvent", $.MessageEvent);

$.defineNativeMethods("HTMLMetaElement", $.MetaElement);

$.defineNativeMethods("HTMLMeterElement", $.MeterElement);

$.defineNativeMethods("MIDIConnectionEvent", $.MidiConnectionEvent);

$.defineNativeMethods("MIDIMessageEvent", $.MidiMessageEvent);

$.defineNativeMethods("HTMLModElement", $.ModElement);

$.defineNativeMethodsNonleaf("MouseEvent", $.MouseEvent);

$.defineNativeMethods("MutationEvent", $.MutationEvent);

$.defineNativeMethods("Navigator", $.Navigator);

$.defineNativeMethods("NavigatorUserMediaError", $.NavigatorUserMediaError);

$.defineNativeMethodsNonleaf("Node", $.Node);

$.defineNativeMethods("NodeList|RadioNodeList", $.NodeList);

$.defineNativeMethods("Notation", $.Notation);

$.defineNativeMethods("HTMLOListElement", $.OListElement);

$.defineNativeMethods("HTMLObjectElement", $.ObjectElement);

$.defineNativeMethods("HTMLOptGroupElement", $.OptGroupElement);

$.defineNativeMethods("HTMLOptionElement", $.OptionElement);

$.defineNativeMethods("HTMLOutputElement", $.OutputElement);

$.defineNativeMethods("OverflowEvent", $.OverflowEvent);

$.defineNativeMethods("PageTransitionEvent", $.PageTransitionEvent);

$.defineNativeMethods("HTMLParagraphElement", $.ParagraphElement);

$.defineNativeMethods("HTMLParamElement", $.ParamElement);

$.defineNativeMethods("PopStateEvent", $.PopStateEvent);

$.defineNativeMethods("PositionError", $.PositionError);

$.defineNativeMethods("HTMLPreElement", $.PreElement);

$.defineNativeMethods("ProcessingInstruction", $.ProcessingInstruction);

$.defineNativeMethods("HTMLProgressElement", $.ProgressElement);

$.defineNativeMethodsNonleaf("ProgressEvent", $.ProgressEvent);

$.defineNativeMethods("HTMLQuoteElement", $.QuoteElement);

$.defineNativeMethods("ResourceProgressEvent", $.ResourceProgressEvent);

$.defineNativeMethods("RTCDataChannelEvent", $.RtcDataChannelEvent);

$.defineNativeMethods("RTCDTMFToneChangeEvent", $.RtcDtmfToneChangeEvent);

$.defineNativeMethods("RTCIceCandidateEvent", $.RtcIceCandidateEvent);

$.defineNativeMethods("HTMLScriptElement", $.ScriptElement);

$.defineNativeMethods("SecurityPolicyViolationEvent", $.SecurityPolicyViolationEvent);

$.defineNativeMethods("HTMLSelectElement", $.SelectElement);

$.defineNativeMethods("HTMLShadowElement", $.ShadowElement);

$.defineNativeMethods("ShadowRoot", $.ShadowRoot);

$.defineNativeMethods("HTMLSourceElement", $.SourceElement);

$.defineNativeMethods("HTMLSpanElement", $.SpanElement);

$.defineNativeMethods("SpeechInputEvent", $.SpeechInputEvent);

$.defineNativeMethods("SpeechRecognitionError", $.SpeechRecognitionError);

$.defineNativeMethods("SpeechRecognitionEvent", $.SpeechRecognitionEvent);

$.defineNativeMethods("SpeechSynthesisEvent", $.SpeechSynthesisEvent);

$.defineNativeMethods("Storage", $.Storage);

$.defineNativeMethods("StorageEvent", $.StorageEvent);

$.defineNativeMethods("HTMLStyleElement", $.StyleElement);

$.defineNativeMethods("HTMLTableCaptionElement", $.TableCaptionElement);

$.defineNativeMethods("HTMLTableCellElement", $.TableCellElement);

$.defineNativeMethods("HTMLTableColElement", $.TableColElement);

$.defineNativeMethods("HTMLTableElement", $.TableElement);

$.defineNativeMethods("HTMLTableRowElement", $.TableRowElement);

$.defineNativeMethods("HTMLTableSectionElement", $.TableSectionElement);

$.defineNativeMethods("HTMLTemplateElement", $.TemplateElement);

$.defineNativeMethodsNonleaf("Text", $.Text);

$.defineNativeMethods("HTMLTextAreaElement", $.TextAreaElement);

$.defineNativeMethods("TextEvent", $.TextEvent);

$.defineNativeMethods("TextMetrics", $.TextMetrics);

$.defineNativeMethods("HTMLTitleElement", $.TitleElement);

$.defineNativeMethods("Touch", $.Touch);

$.defineNativeMethods("TouchEvent", $.TouchEvent);

$.defineNativeMethods("TouchList", $.TouchList);

$.defineNativeMethods("HTMLTrackElement", $.TrackElement);

$.defineNativeMethods("TrackEvent", $.TrackEvent);

$.defineNativeMethods("TransitionEvent|WebKitTransitionEvent", $.TransitionEvent);

$.defineNativeMethodsNonleaf("UIEvent", $.UIEvent);

$.defineNativeMethods("HTMLUListElement", $.UListElement);

$.defineNativeMethods("HTMLUnknownElement", $.UnknownElement);

$.defineNativeMethods("HTMLVideoElement", $.VideoElement);

$.defineNativeMethods("MouseScrollEvent|MouseWheelEvent|WheelEvent", $.WheelEvent);

$.defineNativeMethods("DOMWindow|Window", $.Window);

$.defineNativeMethods("XPathException", $.XPathException);

$.defineNativeMethods("Attr", $._Attr);

$.defineNativeMethods("ClientRect", $._ClientRect);

$.defineNativeMethods("Entity", $._Entity);

$.defineNativeMethods("NamedNodeMap", $._NamedNodeMap);

$.defineNativeMethods("IDBVersionChangeEvent", $.VersionChangeEvent);

$.defineNativeMethods("SVGAElement", $.AElement);

$.defineNativeMethods("SVGAltGlyphElement", $.AltGlyphElement);

$.defineNativeMethods("SVGAnimateElement", $.AnimateElement);

$.defineNativeMethods("SVGAnimateMotionElement", $.AnimateMotionElement);

$.defineNativeMethods("SVGAnimateTransformElement", $.AnimateTransformElement);

$.defineNativeMethods("SVGAnimatedEnumeration", $.AnimatedEnumeration);

$.defineNativeMethods("SVGAnimatedLength", $.AnimatedLength);

$.defineNativeMethods("SVGAnimatedLengthList", $.AnimatedLengthList);

$.defineNativeMethods("SVGAnimatedNumber", $.AnimatedNumber);

$.defineNativeMethods("SVGAnimatedNumberList", $.AnimatedNumberList);

$.defineNativeMethodsNonleaf("SVGAnimationElement", $.AnimationElement);

$.defineNativeMethods("SVGCircleElement", $.CircleElement);

$.defineNativeMethods("SVGClipPathElement", $.ClipPathElement);

$.defineNativeMethods("SVGDefsElement", $.DefsElement);

$.defineNativeMethods("SVGDescElement", $.DescElement);

$.defineNativeMethods("SVGEllipseElement", $.EllipseElement);

$.defineNativeMethods("SVGFEBlendElement", $.FEBlendElement);

$.defineNativeMethods("SVGFEColorMatrixElement", $.FEColorMatrixElement);

$.defineNativeMethods("SVGFEComponentTransferElement", $.FEComponentTransferElement);

$.defineNativeMethods("SVGFECompositeElement", $.FECompositeElement);

$.defineNativeMethods("SVGFEConvolveMatrixElement", $.FEConvolveMatrixElement);

$.defineNativeMethods("SVGFEDiffuseLightingElement", $.FEDiffuseLightingElement);

$.defineNativeMethods("SVGFEDisplacementMapElement", $.FEDisplacementMapElement);

$.defineNativeMethods("SVGFEDistantLightElement", $.FEDistantLightElement);

$.defineNativeMethods("SVGFEFloodElement", $.FEFloodElement);

$.defineNativeMethods("SVGFEFuncAElement", $.FEFuncAElement);

$.defineNativeMethods("SVGFEFuncBElement", $.FEFuncBElement);

$.defineNativeMethods("SVGFEFuncGElement", $.FEFuncGElement);

$.defineNativeMethods("SVGFEFuncRElement", $.FEFuncRElement);

$.defineNativeMethods("SVGFEGaussianBlurElement", $.FEGaussianBlurElement);

$.defineNativeMethods("SVGFEImageElement", $.FEImageElement);

$.defineNativeMethods("SVGFEMergeElement", $.FEMergeElement);

$.defineNativeMethods("SVGFEMergeNodeElement", $.FEMergeNodeElement);

$.defineNativeMethods("SVGFEMorphologyElement", $.FEMorphologyElement);

$.defineNativeMethods("SVGFEOffsetElement", $.FEOffsetElement);

$.defineNativeMethods("SVGFEPointLightElement", $.FEPointLightElement);

$.defineNativeMethods("SVGFESpecularLightingElement", $.FESpecularLightingElement);

$.defineNativeMethods("SVGFESpotLightElement", $.FESpotLightElement);

$.defineNativeMethods("SVGFETileElement", $.FETileElement);

$.defineNativeMethods("SVGFETurbulenceElement", $.FETurbulenceElement);

$.defineNativeMethods("SVGFilterElement", $.FilterElement);

$.defineNativeMethods("SVGForeignObjectElement", $.ForeignObjectElement);

$.defineNativeMethods("SVGGElement", $.GElement);

$.defineNativeMethods("SVGImageElement", $.ImageElement0);

$.defineNativeMethods("SVGLineElement", $.LineElement);

$.defineNativeMethods("SVGLinearGradientElement", $.LinearGradientElement);

$.defineNativeMethods("SVGMarkerElement", $.MarkerElement);

$.defineNativeMethods("SVGMaskElement", $.MaskElement);

$.defineNativeMethods("SVGMetadataElement", $.MetadataElement);

$.defineNativeMethods("SVGPathElement", $.PathElement);

$.defineNativeMethods("SVGPatternElement", $.PatternElement);

$.defineNativeMethods("SVGPolygonElement", $.PolygonElement);

$.defineNativeMethods("SVGPolylineElement", $.PolylineElement);

$.defineNativeMethods("SVGRadialGradientElement", $.RadialGradientElement);

$.defineNativeMethods("SVGRectElement", $.RectElement);

$.defineNativeMethods("SVGScriptElement", $.ScriptElement0);

$.defineNativeMethods("SVGSetElement", $.SetElement);

$.defineNativeMethods("SVGStopElement", $.StopElement);

$.defineNativeMethods("SVGStyleElement", $.StyleElement0);

$.defineNativeMethodsNonleaf("SVGStyledElement", $.StyledElement);

$.defineNativeMethods("SVGDocument", $.SvgDocument);

$.defineNativeMethodsNonleaf("SVGElement", $.SvgElement);

$.defineNativeMethods("SVGException", $.SvgException);

$.defineNativeMethods("SVGSVGElement", $.SvgSvgElement);

$.defineNativeMethods("SVGSwitchElement", $.SwitchElement);

$.defineNativeMethods("SVGSymbolElement", $.SymbolElement);

$.defineNativeMethods("SVGTSpanElement", $.TSpanElement);

$.defineNativeMethodsNonleaf("SVGTextContentElement", $.TextContentElement);

$.defineNativeMethods("SVGTextElement", $.TextElement);

$.defineNativeMethods("SVGTextPathElement", $.TextPathElement);

$.defineNativeMethodsNonleaf("SVGTextPositioningElement", $.TextPositioningElement);

$.defineNativeMethods("SVGTitleElement", $.TitleElement0);

$.defineNativeMethods("SVGUseElement", $.UseElement);

$.defineNativeMethods("SVGViewElement", $.ViewElement);

$.defineNativeMethods("SVGZoomEvent", $.ZoomEvent);

$.defineNativeMethodsNonleaf("SVGGradientElement", $._GradientElement);

$.defineNativeMethodsNonleaf("SVGComponentTransferFunctionElement", $._SVGComponentTransferFunctionElement);

$.defineNativeMethods("AudioProcessingEvent", $.AudioProcessingEvent);

$.defineNativeMethods("OfflineAudioCompletionEvent", $.OfflineAudioCompletionEvent);

$.defineNativeMethods("WebGLContextEvent", $.ContextEvent);

$.defineNativeMethods("SQLError", $.SqlError);

$.defineNativeMethods("SQLException", $.SqlException);

$.defineNativeMethods("ArrayBuffer", $.ByteBuffer);

$.defineNativeMethodsNonleaf("ArrayBufferView", $.TypedData);

$.defineNativeMethods("DataView", $.ByteData);

$.defineNativeMethods("Float32Array", $.Float32List);

$.defineNativeMethods("Float64Array", $.Float64List);

$.defineNativeMethods("Int16Array", $.Int16List);

$.defineNativeMethods("Int32Array", $.Int32List);

$.defineNativeMethods("Int8Array", $.Int8List);

$.defineNativeMethods("Uint16Array", $.Uint16List);

$.defineNativeMethods("Uint32Array", $.Uint32List);

$.defineNativeMethods("Uint8ClampedArray", $.Uint8ClampedList);

$.defineNativeMethodsNonleaf("Uint8Array", $.Uint8List);


var $ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.initializeDispatchProperty(function(a) {
  $.getDispatchProperty = a;
}, "___dart_dispatch_record_ZxYxX_0_", $.Interceptor.prototype);
// BEGIN invoke [main].
if (typeof document !== "undefined" && document.readyState !== "complete") {
  document.addEventListener("readystatechange", function () {
    if (document.readyState == "complete") {
      if (typeof dartMainRunner === "function") {
        dartMainRunner(function() { $.startRootIsolate($.main$closure); });
      } else {
        $.startRootIsolate($.main$closure);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { $.startRootIsolate($.main$closure); });
  } else {
    $.startRootIsolate($.main$closure);
  }
}
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(field, prototype) {
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        prototype["get$" + accessorName] = new Function(args, body);
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        prototype["set$" + accessorName] = new Function(args, body);
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(name, cls, fields, prototype) {
    var constructor;
    if (typeof fields == "function") {
      constructor = fields;
    } else {
      var str = "function " + cls + "(";
      var body = "";
      for (var i = 0; i < fields.length; i++) {
        if (i != 0)
          str += ", ";
        var field = generateAccessor(fields[i], prototype);
        var parameter = "parameter_" + field;
        str += parameter;
        body += "this." + field + " = " + parameter + ";\n";
      }
      str += ") {" + body + "}\nreturn " + cls;
      constructor = new Function(str)();
    }
    constructor.prototype = prototype;
    constructor.builtin$cls = name;
    return constructor;
  }
  var supportsProto = false;
  var tmp = defineClass("c", "c", ["f<"], {}).prototype;
  if (tmp.__proto__) {
    tmp.__proto__ = {};
    if (typeof tmp.get$f != "undefined")
      supportsProto = true;
  }
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        var classData = desc[""], supr, name = cls, fields = classData;
        if (typeof classData == "string") {
          var split = classData.split("/");
          if (split.length == 2) {
            name = split[0];
            fields = split[1];
          }
        }
        if (typeof fields == "string") {
          var s = fields.split(";");
          fields = s[1] == "" ? [] : s[1].split(",");
          supr = s[0];
        } else {
          supr = desc.super;
          if (!!desc.$name)
            name = desc.$name;
        }
        if (supr && supr.indexOf("+") > 0) {
          s = supr.split("+");
          supr = s[0];
          var mixin = collectedClasses[s[1]];
          for (var d in mixin) {
            if (hasOwnProperty.call(mixin, d) && !hasOwnProperty.call(desc, d))
              desc[d] = mixin[d];
          }
        }
        var constructor = defineClass(name, cls, fields, desc);
        isolateProperties[cls] = constructor;
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    var finishedClasses = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass || typeof superclass != "string")
        return;
      finishClass(superclass);
      var constructor = isolateProperties[cls];
      var superConstructor = isolateProperties[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = constructor.prototype;
      if (supportsProto) {
        prototype.__proto__ = superConstructor.prototype;
        prototype.constructor = constructor;
      } else {
        function tmp() {
        }
        tmp.prototype = superConstructor.prototype;
        var newPrototype = new tmp();
        constructor.prototype = newPrototype;
        newPrototype.constructor = constructor;
        for (var member in prototype) {
          if (!member)
            continue;
          if (hasOwnProperty.call(prototype, member)) {
            newPrototype[member] = prototype[member];
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var getter = new Function("{ return $." + fieldName + ";}");
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            $.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = getter;
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    isolateProperties.$currentScript = typeof document == "object" ? document.currentScript || document.scripts[document.scripts.length - 1] : null;
    var isolatePrototype = oldIsolate.prototype;
    var str = "{\n";
    str += "var properties = Isolate.$isolateProperties;\n";
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var staticName in isolateProperties) {
      if (hasOwnProperty.call(isolateProperties, staticName)) {
        str += "this." + staticName + "= properties." + staticName + ";\n";
      }
    }
    str += "}\n";
    var newIsolate = new Function(str);
    newIsolate.prototype = isolatePrototype;
    isolatePrototype.constructor = newIsolate;
    newIsolate.$isolateProperties = isolateProperties;
    newIsolate.makeConstantList = oldIsolate.makeConstantList;
    newIsolate.$finishClasses = oldIsolate.$finishClasses;
    return newIsolate;
  };
}
//@ sourceMappingURL=galaga.dart.js.map
