// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
(function($) {
function Isolate() {}
init();

$ = Isolate.$isolateProperties;
var $$ = {};

// Native classes
// Bound closures
$$.BoundClosure$0 = {"": "BoundClosure;_self,_target,_receiver",
  call$0: function() {
    return this._self[this._target]();
  }
};

$$.BoundClosure$i1 = {"": "BoundClosure;_self,_target,_receiver",
  call$1: function(p0) {
    return this._self[this._target](this._receiver, p0);
  }
};

$$.Bound_addError__AsBroadcastStreamController = {"": "BoundClosure;_self,_target,_receiver",
  call$2: function(p0, p1) {
    return this._self[this._target](p0, p1);
  },
  call$1: function(error) {
    return this.call$2(error, null);
  }
};

$$.BoundClosure$i0 = {"": "BoundClosure;_self,_target,_receiver",
  call$0: function() {
    return this._self[this._target](this._receiver);
  }
};

$$.BoundClosure$1 = {"": "BoundClosure;_self,_target,_receiver",
  call$1: function(p0) {
    return this._self[this._target](p0);
  }
};

$$.Bound_fill_CanvasRenderingContext2D = {"": "BoundClosure;_self,_target,_receiver",
  call$1: function(p0) {
    return this._self[this._target](this._receiver, p0);
  },
  call$0: function() {
    return this.call$1(null);
  }
};

$$.BoundClosure$i4 = {"": "BoundClosure;_self,_target,_receiver",
  call$4: function(p0, p1, p2, p3) {
    return this._self[this._target](this._receiver, p0, p1, p2, p3);
  }
};

$$.Closure$_processWorkerMessage = {"": "Closure;call$2,$name"};

$$.Closure$_throwFormatException = {"": "Closure;call$1,$name"};

$$.Closure$toStringWrapper = {"": "Closure;call$0,$name"};

$$.Closure$invokeClosure = {"": "Closure;call$5,$name"};

$$.Closure$typeNameInChrome = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInSafari = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInOpera = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInFirefox = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInIE = {"": "Closure;call$1,$name"};

$$.Closure$constructorNameFallback = {"": "Closure;call$1,$name"};

$$.Closure$callDartFunctionWith1Arg = {"": "Closure;call$2,$name"};

$$.Closure$_asyncRunCallback = {"": "Closure;call$0,$name"};

$$.Closure$_nullDataHandler = {"": "Closure;call$1,$name"};

$$.Closure$_nullErrorHandler = {"": "Closure;call$1,$name"};

$$.Closure$_nullDoneHandler = {"": "Closure;call$0,$name"};

$$.Closure$main = {"": "Closure;call$0,$name"};

(function (reflectionData) {
  function map(x){x={x:x};delete x.x;return x}
  if (!init.libraries) init.libraries = [];
  if (!init.mangledNames) init.mangledNames = map();
  if (!init.mangledGlobalNames) init.mangledGlobalNames = map();
  if (!init.statics) init.statics = map();
  if (!init.interfaces) init.interfaces = map();
  var libraries = init.libraries;
  var mangledNames = init.mangledNames;
  var mangledGlobalNames = init.mangledGlobalNames;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var length = reflectionData.length;
  for (var i = 0; i < length; i++) {
    var data = reflectionData[i];
    var name = data[0];
    var uri = data[1];
    var metadata = data[2];
    var descriptor = data[3];
    var isRoot = !!data[4];
    var fields = descriptor && descriptor[""];
    var classes = [];
    var functions = [];
    function processStatics(descriptor) {
      for (var property in descriptor) {
        if (!hasOwnProperty.call(descriptor, property)) continue;
        if (property === "") continue;
        var element = descriptor[property];
        var firstChar = property.substring(0, 1);
        var previousProperty;
        if (firstChar === "+") {
          mangledGlobalNames[previousProperty] = property.substring(1);
          descriptor[previousProperty].$reflectable = (descriptor[property] == 1);
          if (element && element.length) init.interfaces[previousProperty] = element;
        } else if (firstChar === "@") {
          property = property.substring(1);
          $[property]["@"] = element;
        } else if (typeof element === "function") {
          $[previousProperty = property] = element;
          functions.push(property);
        } else {
          previousProperty = property;
          var newDesc = {};
          var previousProp;
          for (var prop in element) {
            if (!hasOwnProperty.call(element, prop)) continue;
            firstChar = prop.substring(0, 1);
            if (prop === "static") {
              processStatics(init.statics[property] = element[prop]);
            } else if (firstChar === "+") {
              mangledNames[previousProp] = prop.substring(1);
              element[previousProp].$reflectable = (element[prop] == 1);
            } else if (firstChar === "@" && prop !== "@") {
              newDesc[prop.substring(1)]["@"] = element[prop];
            } else {
              newDesc[previousProp = prop] = element[prop];
            }
          }
          $$[property] = newDesc;
          classes.push(property);
        }
      }
    }
    processStatics(descriptor);
    libraries.push([name, uri, classes, functions, metadata, fields, isRoot]);
  }
})([
["_foreign_helper", "dart:_foreign_helper", , {
JS_CONST: {"": "Object;code"}}],
["_interceptors", "dart:_interceptors", , {
getInterceptor: function(object) {
  return void 0;
},

makeDispatchRecord: function(interceptor, proto, extension, indexability) {
  return {i: interceptor, p: proto, e: extension, x: indexability};
},

getNativeInterceptor: function(object) {
  var record, proto, objectProto;
  record = object[init.dispatchPropertyName];
  if (record != null) {
    proto = record.p;
    if (false === proto)
      return record.i;
    if (true === proto)
      return object;
    objectProto = Object.getPrototypeOf(object);
    if (proto === objectProto)
      return record.i;
    if (record.e === objectProto)
      return proto(object, record);
  }
  record = $.lookupDispatchRecord(object);
  if (record == null)
    return C.C_UnknownJavaScriptObject;
  Object.defineProperty(Object.getPrototypeOf(object), init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
  return $.getNativeInterceptor(object);
},

Interceptor: {"": "Object;",
  $eq: function(receiver, other) {
    return receiver === other;
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  toString$0: function(receiver) {
    return $.Primitives_objectToString(receiver);
  }
},

JSBool: {"": "bool/Interceptor;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true
},

JSNull: {"": "Interceptor;",
  $eq: function(receiver, other) {
    return null == other;
  },
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  }
},

JavaScriptObject: {"": "Interceptor;",
  get$hashCode: function(_) {
    return 0;
  }
},

PlainJavaScriptObject: {"": "JavaScriptObject;"},

UnknownJavaScriptObject: {"": "JavaScriptObject;"},

JSArray: {"": "List/Interceptor;",
  add$1: function(receiver, value) {
    if (!!receiver.fixed$length)
      $.throwExpression(new $.UnsupportedError("add"));
    receiver.push(value);
  },
  remove$1: function(receiver, element) {
    var i;
    if (!!receiver.fixed$length)
      $.throwExpression(new $.UnsupportedError("remove"));
    for (i = 0; i < receiver.length; ++i)
      if ($.$eq(receiver[i], element)) {
        receiver.splice(i, 1);
        return true;
      }
    return false;
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.IterableMixinWorkaround_toStringIterable(receiver, "[", "]");
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$iterator: function(receiver) {
    return new $.ListIterator(receiver, receiver.length, 0, null);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException(new $.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    if (!!receiver.immutable$list)
      $.throwExpression(new $.UnsupportedError("indexed set"));
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException(new $.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    receiver[index] = value;
  },
  $isList: true,
  $asList: null,
  $isList: true
},

JSMutableArray: {"": "JSArray;", $isJSMutableArray: true,
  $asJSArray: function() {
    return [null];
  },
  $asList: function() {
    return [null];
  }
},

JSFixedArray: {"": "JSMutableArray;"},

JSExtendableArray: {"": "JSMutableArray;", $isJSExtendableArray: true},

JSNumber: {"": "num/Interceptor;",
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  remainder$1: function(receiver, b) {
    return receiver % b;
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var truncated;
    if (isNaN(receiver))
      throw $.wrapException(new $.UnsupportedError("NaN"));
    if (receiver == Infinity || receiver == -Infinity)
      throw $.wrapException(new $.UnsupportedError("Infinity"));
    truncated = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  ceil$0: function(receiver) {
    return this.toInt$0(Math.ceil(receiver));
  },
  round$0: function(receiver) {
    return this.toInt$0(this.roundToDouble$0(receiver));
  },
  roundToDouble$0: function(receiver) {
    if (receiver < 0)
      return -Math.round(-receiver);
    else
      return Math.round(receiver);
  },
  toStringAsFixed$1: function(receiver, fractionDigits) {
    var result;
    if (fractionDigits < 0 || fractionDigits > 20)
      throw $.wrapException(new $.RangeError(fractionDigits));
    result = receiver.toFixed(fractionDigits);
    if (receiver === 0 && this.get$isNegative(receiver))
      return "-" + result;
    return result;
  },
  toString$0: function(receiver) {
    if (receiver === 0 && 1 / receiver < 0)
      return "-0.0";
    else
      return "" + receiver;
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $add: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver - other;
  },
  $mul: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver * other;
  },
  $tdiv: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return this.toInt$0(receiver / other);
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw $.wrapException(new $.ArgumentError(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return receiver >> other >>> 0;
  },
  $or: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return (receiver | other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver >= other;
  },
  $isnum: true
},

JSInt: {"": "int/JSNumber;", $isdouble: true, $isnum: true, $isint: true},

JSDouble: {"": "double/JSNumber;", $isdouble: true, $isnum: true},

JSString: {"": "String/Interceptor;",
  codeUnitAt$1: function(receiver, index) {
    if (typeof index !== "number")
      throw $.wrapException(new $.ArgumentError(index));
    if (index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    if (index >= receiver.length)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    return receiver.charCodeAt(index);
  },
  $add: function(receiver, other) {
    if (typeof other !== "string")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver + other;
  },
  substring$2: function(receiver, startIndex, endIndex) {
    if (endIndex == null)
      endIndex = receiver.length;
    if (typeof endIndex !== "number")
      $.throwExpression(new $.ArgumentError(endIndex));
    if (startIndex < 0)
      throw $.wrapException(new $.RangeError("value " + startIndex));
    if (typeof endIndex !== "number")
      throw $.iae(endIndex);
    if (startIndex > endIndex)
      throw $.wrapException(new $.RangeError("value " + startIndex));
    if (endIndex > receiver.length)
      throw $.wrapException(new $.RangeError("value " + $.S(endIndex)));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var t1, hash, i;
    for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
      hash = 536870911 & hash + receiver.charCodeAt(i);
      hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
      hash ^= hash >> 6;
    }
    hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash ^= hash >> 11;
    return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException(new $.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    return receiver[index];
  },
  $isString: true
}}],
["_isolate_helper", "dart:_isolate_helper", , {
_callInIsolate: function(isolate, $function) {
  var result = isolate.eval$1($function);
  $globalState.topEventLoop.run$0();
  return result;
},

startRootIsolate: function(entry) {
  var rootContext;
  $globalState = $._Manager$(entry);
  if ($globalState.isWorker === true)
    return;
  rootContext = $._IsolateContext$();
  $globalState.rootContext = rootContext;
  $globalState.currentContext = rootContext;
  rootContext.eval$1(entry);
  $globalState.topEventLoop.run$0();
},

IsolateNatives_computeThisScript: function() {
  var currentScript = init.currentScript;
  if (currentScript != null)
    return String(currentScript.src);
  if (typeof version == "function" && typeof os == "object" && "system" in os)
    return $.IsolateNatives_computeThisScriptD8();
  if (typeof version == "function" && typeof system == "function")
    return thisFilename();
  return;
},

IsolateNatives_computeThisScriptD8: function() {
  var stack, matches;
  stack = new Error().stack;
  if (stack == null) {
    stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
    if (stack == null)
      throw $.wrapException(new $.UnsupportedError("No stack trace"));
  }
  matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
  if (matches != null)
    return matches[1];
  matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
  if (matches != null)
    return matches[1];
  throw $.wrapException(new $.UnsupportedError("Cannot extract URI from \"" + stack + "\""));
},

IsolateNatives__processWorkerMessage: function(sender, e) {
  var msg, t1, functionName, entryPoint, replyTo, context, t2;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$asx(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      $globalState.currentManagerId = t1.$index(msg, "id");
      functionName = t1.$index(msg, "functionName");
      entryPoint = functionName == null ? $globalState.entry : $[functionName];
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = $._IsolateContext$();
      t1 = $globalState.topEventLoop;
      t1.enqueue$3;
      t1.events._add$1(new $._IsolateEvent(context, new $.IsolateNatives__processWorkerMessage_closure(entryPoint, replyTo), "worker-start"));
      $globalState.currentContext = context;
      $globalState.topEventLoop.run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (t1.$index(msg, "port") != null)
        t1.$index(msg, "port").send$2(t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $globalState.topEventLoop.run$0();
      break;
    case "close":
      t1 = $globalState.managers;
      t2 = $.get$IsolateNatives_workerIds();
      t1.remove$1(t1, t2.$index(t2, sender));
      sender.terminate();
      $globalState.topEventLoop.run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.isWorker === true) {
        t1 = $globalState.mainManager;
        t2 = $._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg]));
        t1.postMessage$1;
        self.postMessage(t2);
      } else
        $.Primitives_printString($.toString$0(t1.$index(msg, "msg")));
      break;
    case "error":
      throw $.wrapException(t1.$index(msg, "msg"));
    default:
  }
},

IsolateNatives__log: function(msg) {
  var trace, t1, t2, exception;
  if ($globalState.isWorker === true) {
    t1 = $globalState.mainManager;
    t2 = $._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg]));
    t1.postMessage$1;
    self.postMessage(t2);
  } else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = new $._StackTrace(exception, null);
      throw $.wrapException(new $._ExceptionImplementation(trace));
    }

},

IsolateNatives__startIsolate: function(topLevel, replyTo) {
  var t1;
  $.Primitives_initializeStatics($globalState.currentContext.id);
  $.lazyPort = $.ReceivePortImpl$();
  t1 = $._Isolate_port();
  t1.toSendPort$0;
  replyTo.send$2("spawned", new $._NativeJsSendPort(t1, $globalState.currentContext.id));
  topLevel.call$0();
},

IsolateNatives__spawnWorker: function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.onmessage = function(e) { $.IsolateNatives__processWorkerMessage$closure.call$2(worker, e); };
  t1 = $globalState;
  workerId = t1.nextManagerId;
  t1.nextManagerId = workerId + 1;
  t1 = $.get$IsolateNatives_workerIds();
  t1.$indexSet(t1, worker, workerId);
  t1 = $globalState.managers;
  t1.$indexSet(t1, workerId, worker);
  worker.postMessage($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
},

_waitForPendingPorts: function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $._FutureImpl__FutureImpl$wait(finder.ports).then$1(new $._waitForPendingPorts_closure(callback));
},

_serializeMessage: function(message) {
  var t1;
  if ($globalState.supportsWorkers === true) {
    t1 = new $._JsSerializer(0, new $._MessageTraverserVisitedMap());
    t1._visited = new $._JsVisitedMap(null);
    return t1.traverse$1(message);
  } else {
    t1 = new $._JsCopier(new $._MessageTraverserVisitedMap());
    t1._visited = new $._JsVisitedMap(null);
    return t1.traverse$1(message);
  }
},

_deserializeMessage: function(message) {
  if ($globalState.supportsWorkers === true)
    return new $._JsDeserializer(null).deserialize$1(message);
  else
    return message;
},

_MessageTraverser_isPrimitive: function(x) {
  return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
},

_Deserializer_isPrimitive: function(x) {
  return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
},

CloseToken: {"": "Object;", $isCloseToken: true},

JsIsolateSink: {"": "EventSink;_isClosed,_port<",
  add$1: function(_, message) {
    this._port.send$1(message);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = $.getInterceptor(other);
    return typeof other === "object" && other !== null && !!t1.$isIsolateSink && $.$eq(this._port, other.get$_port());
  },
  get$hashCode: function(_) {
    return $.$add$ns($.get$hashCode$(this._port), 499);
  },
  $isJsIsolateSink: true,
  $asIsolateSink: null,
  $isIsolateSink: true
},

_Manager: {"": "Object;nextIsolateId,currentManagerId,nextManagerId,currentContext,rootContext,topEventLoop,fromCommandLine,isWorker,supportsWorkers,isolates,mainManager,managers,entry",
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    t2 = $.get$globalWorker();
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = t2 != null && $.get$IsolateNatives_thisScript() != null;
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { $.IsolateNatives__processWorkerMessage$closure.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  _Manager$1: function(entry) {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = new $._EventLoop($.ListQueue$(null), 0);
    this.isolates = new $.LinkedHashMap(0, null, null, null, null, null, 0);
    this.managers = new $.LinkedHashMap(0, null, null, null, null, null, 0);
    if (this.isWorker === true) {
      this.mainManager = new $._MainManagerStub();
      this._nativeInitWorkerMessageHandler$0();
    }
  },
  static: {
_Manager$: function(entry) {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null, entry);
  t1._Manager$1(entry);
  return t1;
}}

},

_IsolateContext: {"": "Object;id,ports,isolateStatics<",
  eval$1: function(code) {
    var old, result, t1;
    old = $globalState.currentContext;
    $globalState.currentContext = this;
    $ = this.isolateStatics;
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.currentContext = old;
      if (old != null) {
        t1 = old;
        t1._setGlobals$0;
        $ = t1.get$isolateStatics();
      }
    }
    return result;
  },
  lookup$1: function(portId) {
    var t1 = this.ports;
    return t1.$index(t1, portId);
  },
  register$2: function(_, portId, port) {
    var t1 = this.ports;
    if (t1.containsKey$1(t1, portId))
      throw $.wrapException(new $._ExceptionImplementation("Registry: ports must be registered only once."));
    t1 = this.ports;
    t1.$indexSet(t1, portId, port);
    t1 = $globalState.isolates;
    t1.$indexSet(t1, this.id, this);
  },
  unregister$1: function(portId) {
    var t1 = this.ports;
    t1.remove$1(t1, portId);
    if ($.$eq(this.ports._liblib0$_length, 0)) {
      t1 = $globalState.isolates;
      t1.remove$1(t1, this.id);
    }
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $globalState;
    t2 = t1.nextIsolateId;
    t1.nextIsolateId = t2 + 1;
    this.id = t2;
    this.ports = new $.LinkedHashMap(0, null, null, null, null, null, 0);
    this.isolateStatics = new Isolate();
  },
  static: {
_IsolateContext$: function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
}}

},

_EventLoop: {"": "Object;events,activeTimerCount",
  dequeue$0: function() {
    var t1 = this.events;
    if (t1._head === t1._tail)
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if ($globalState.rootContext != null) {
      var t1 = $globalState.isolates;
      t1 = t1.containsKey$1(t1, $globalState.rootContext.id) && $globalState.fromCommandLine === true && $.$eq($globalState.rootContext.ports._liblib0$_length, 0);
    } else
      t1 = false;
    if (t1)
      throw $.wrapException(new $._ExceptionImplementation("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event, t1, t2;
    $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      t1 = $globalState;
      if (t1.isWorker === true) {
        t2 = t1.isolates;
        t2.get$isEmpty;
        t2 = t2._liblib0$_length;
        if (typeof t2 !== "number")
          return this.runIteration$0$bailout(1, t1, t2);
        t2 = t2 === 0 && t1.topEventLoop.activeTimerCount === 0;
      } else
        t2 = false;
      if (t2) {
        t1 = t1.mainManager;
        t2 = $._serializeMessage($.makeLiteralMap(["command", "close"]));
        t1.postMessage$1;
        self.postMessage(t2);
      }
      return false;
    }
    $event.process$0();
    return true;
  },
  runIteration$0$bailout: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        $event = this.dequeue$0();
      case 1:
        var $event;
        if (state0 === 1 || state0 === 0 && $event == null)
          switch (state0) {
            case 0:
              this.checkOpenReceivePortsFromCommandLine$0();
              t1 = $globalState;
            case 1:
              if (state0 === 1 || state0 === 0 && t1.isWorker === true)
                switch (state0) {
                  case 0:
                    t2 = t1.isolates;
                    t2.get$isEmpty;
                    t2 = t2._liblib0$_length;
                  case 1:
                    state0 = 0;
                    t2 = $.$eq(t2, 0) && t1.topEventLoop.activeTimerCount === 0;
                }
              else
                t2 = false;
              if (t2) {
                t1 = t1.mainManager;
                t2 = $._serializeMessage($.makeLiteralMap(["command", "close"]));
                t1.postMessage$1;
                self.postMessage(t2);
              }
              return false;
          }
        $event.process$0();
        return true;
    }
  },
  _runHelper$0: function() {
    if ($.get$globalWindow() != null)
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0();)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1, t2;
    if ($globalState.isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = new $._StackTrace(exception, null);
        t1 = $globalState.mainManager;
        t2 = $._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)]));
        t1.postMessage$1;
        self.postMessage(t2);
      }

  }
},

_EventLoop__runHelper_next: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2;
    if (!this.this_0.runIteration$0())
      return;
    t1 = new $._ZoneTimer($.get$_Zone__current(), this, null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_0, t1.get$_run());
  }
},

_IsolateEvent: {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
},

_MainManagerStub: {"": "Object;"},

IsolateNatives__processWorkerMessage_closure: {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  }
},

_BaseSendPort: {"": "Object;_isolateId<",
  _checkReplyTo$1: function(replyTo) {
    var t1;
    if (replyTo != null) {
      t1 = $.getInterceptor(replyTo);
      t1 = (typeof replyTo !== "object" || replyTo === null || !t1.$is_NativeJsSendPort) && (typeof replyTo !== "object" || replyTo === null || !t1.$is_WorkerSendPort) && true;
    } else
      t1 = false;
    if (t1)
      throw $.wrapException(new $._ExceptionImplementation("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = new $._AsyncCompleter(new $._FutureImpl(0, $.get$_Zone__current(), null), false);
    completer._Completer$0();
    port = $.ReceivePortImpl$();
    this.send$2(message, new $._NativeJsSendPort(port, $globalState.currentContext.id));
    port._liblib5$_callback = new $._BaseSendPort_call_closure(completer, port);
    return completer.future;
  },
  $isSendPort: true
},

_BaseSendPort_call_closure: {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1, t2;
    t1 = this.port_1;
    t1._liblib5$_callback = null;
    $globalState.currentContext.unregister$1(t1._id);
    t1 = $.getInterceptor(value);
    t2 = this.completer_0;
    if (typeof value === "object" && value !== null && !!t1.$isException)
      t2.completeError$1(value);
    else
      t2.complete$1(t2, value);
  }
},

_NativeJsSendPort: {"": "_BaseSendPort;_receivePort<,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_closure(this, message, replyTo));
  },
  send$1: function(message) {
    return this.send$2(message, null);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = $.getInterceptor(other);
    return typeof other === "object" && other !== null && !!t1.$is_NativeJsSendPort && $.$eq(this._receivePort, other._receivePort);
  },
  get$hashCode: function(_) {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
},

_NativeJsSendPort_send_closure: {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, t4, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    t4 = $globalState.isolates;
    isolate = t4.$index(t4, t2.get$_isolateId());
    if (isolate == null)
      return;
    if (t2.get$_receivePort().get$_liblib5$_callback() == null)
      return;
    shouldSerialize = $globalState.currentContext != null && $globalState.currentContext.id !== t2.get$_isolateId();
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    t3 = $globalState.topEventLoop;
    t4 = "receive " + $.S(msg);
    t3.enqueue$3;
    t3.events._add$1(new $._IsolateEvent(isolate, new $._NativeJsSendPort_send__closure(t1, t2, shouldSerialize), t4));
  }
},

_NativeJsSendPort_send__closure: {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (t1.get$_receivePort().get$_liblib5$_callback() != null) {
      if (this.shouldSerialize_5) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t2 = this.box_0;
      t1.get$_receivePort()._liblib5$_callback$2(t2.msg_0, t2.reply_1);
    }
  }
},

_WorkerSendPort: {"": "_BaseSendPort;_workerId<,_receivePortId,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_closure(this, message, replyTo));
  },
  send$1: function(message) {
    return this.send$2(message, null);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = $.getInterceptor(other);
    if (typeof other === "object" && other !== null && !!t1.$is_WorkerSendPort)
      t1 = $.$eq(this._workerId, other._workerId) && $.$eq(this._isolateId, other._isolateId) && $.$eq(this._receivePortId, other._receivePortId);
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function(_) {
    var t1, t2, t3;
    t1 = this._workerId;
    if (typeof t1 !== "number")
      throw t1.$shl();
    t2 = this._isolateId;
    if (typeof t2 !== "number")
      throw t2.$shl();
    t3 = this._receivePortId;
    if (typeof t3 !== "number")
      throw $.iae(t3);
    return (t1 << 16 ^ t2 << 8 ^ t3) >>> 0;
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
},

_WorkerSendPort_send_closure: {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage, manager;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($globalState.isWorker === true) {
      $globalState.mainManager.postMessage$1;
      self.postMessage(workerMessage);
    } else {
      t2 = $globalState.managers;
      manager = t2.$index(t2, t1.get$_workerId());
      if (manager != null)
        manager.postMessage(workerMessage);
    }
  }
},

ReceivePortImpl: {"": "Object;_id<,_liblib5$_callback<",
  _liblib5$_callback$2: function(arg0, arg1) {
    return this._liblib5$_callback.call$2(arg0, arg1);
  },
  ReceivePortImpl$0: function() {
    var t1 = $globalState.currentContext;
    t1.register$2(t1, this._id, this);
  },
  static: {
"": "ReceivePortImpl__nextFreeId",
ReceivePortImpl$: function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$add$ns(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
}}

},

_waitForPendingPorts_closure: {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  }
},

_PendingSendPortFinder: {"": "_MessageTraverser;ports,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    var t1 = this._visited;
    if (t1.$index(t1, list) != null)
      return;
    t1.$indexSet(t1, list, true);
    $.forEach$1$ax(list, new $._PendingSendPortFinder_visitList_closure(this));
  },
  visitMap$1: function(map) {
    var t1 = this._visited;
    if (t1.$index(t1, map) != null)
      return;
    t1.$indexSet(t1, map, true);
    $.forEach$1$ax($.get$values$x(map), new $._PendingSendPortFinder_visitMap_closure(this));
  },
  visitSendPort$1: function(port) {
  },
  visitIsolateSink$1: function(sink) {
    this.visitSendPort$1(sink._port);
  },
  visitCloseToken$1: function(token) {
  },
  _PendingSendPortFinder$0: function() {
    this._visited = new $._JsVisitedMap(null);
  },
  static: {
_PendingSendPortFinder$: function() {
  var t1 = new $._PendingSendPortFinder([], new $._MessageTraverserVisitedMap());
  t1._PendingSendPortFinder$0();
  return t1;
}}

},

_PendingSendPortFinder_visitList_closure: {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
},

_PendingSendPortFinder_visitMap_closure: {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
},

_JsSerializer: {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    var t1 = $.getInterceptor(x);
    if (typeof x === "object" && x !== null && !!t1.$is_NativeJsSendPort)
      return ["sendport", $globalState.currentManagerId, x._isolateId, x._receivePort.get$_id()];
    if (typeof x === "object" && x !== null && !!t1.$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    throw $.wrapException("Illegal underlying port " + $.S(x));
  },
  visitIsolateSink$1: function(sink) {
    var isClosed = sink._isClosed;
    return ["isolateSink", this.visitSendPort$1(sink._port), isClosed];
  },
  visitCloseToken$1: function(token) {
    return ["closeToken"];
  }
},

_JsCopier: {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    var t1 = $.getInterceptor(x);
    if (typeof x === "object" && x !== null && !!t1.$is_NativeJsSendPort)
      return new $._NativeJsSendPort(x._receivePort, x._isolateId);
    if (typeof x === "object" && x !== null && !!t1.$is_WorkerSendPort)
      return new $._WorkerSendPort(x._workerId, x._receivePortId, x._isolateId);
    throw $.wrapException("Illegal underlying port " + $.S(x));
  },
  visitIsolateSink$1: function(sink) {
    var result = new $.JsIsolateSink(false, this.visitSendPort$1(sink._port));
    result._isClosed = sink._isClosed;
    return result;
  },
  visitCloseToken$1: function(token) {
    return token;
  }
},

_JsDeserializer: {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(list) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = $.getInterceptor$asx(list);
    managerId = t1.$index(list, 1);
    isolateId = t1.$index(list, 2);
    receivePortId = t1.$index(list, 3);
    if ($.$eq(managerId, $globalState.currentManagerId)) {
      t1 = $globalState.isolates;
      isolate = t1.$index(t1, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return new $._NativeJsSendPort(receivePort, isolateId);
    } else
      return new $._WorkerSendPort(managerId, receivePortId, isolateId);
  },
  deserializeIsolateSink$1: function(list) {
    var t1, port, result;
    t1 = $.getInterceptor$asx(list);
    port = this.deserializeSendPort$1(t1.$index(list, 1));
    result = new $.JsIsolateSink(false, port);
    result._isClosed = t1.$index(list, 2);
    return result;
  },
  deserializeCloseToken$1: function(list) {
    return C.C_CloseToken;
  }
},

_JsVisitedMap: {"": "Object;tagged",
  $index: function(_, object) {
    return object.__MessageTraverser__attached_info__;
  },
  $indexSet: function(_, object, info) {
    this.tagged.push(object);
    object.__MessageTraverser__attached_info__ = info;
  },
  reset$0: function(_) {
    this.tagged = $.List_List(null);
  },
  cleanup$0: function() {
    var $length, i, t1;
    for ($length = this.tagged.length, i = 0; i < $length; ++i) {
      t1 = this.tagged;
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i].__MessageTraverser__attached_info__ = null;
    }
    this.tagged = null;
  }
},

_MessageTraverserVisitedMap: {"": "Object;",
  $index: function(_, object) {
    return;
  },
  $indexSet: function(_, object, info) {
  },
  reset$0: function(_) {
  },
  cleanup$0: function() {
  }
},

_MessageTraverser: {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    if ($._MessageTraverser_isPrimitive(x))
      return this.visitPrimitive$1(x);
    t1 = this._visited;
    t1.reset$0(t1);
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    var t1;
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    t1 = $.getInterceptor(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || !!t1.$isList))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && !!t1.$isMap)
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!t1.$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!t1.$isJsIsolateSink)
      return this.visitIsolateSink$1(x);
    if (typeof x === "object" && x !== null && !!t1.$isCloseToken)
      return this.visitCloseToken$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.wrapException("Message serialization: Illegal value " + $.S(x) + " passed");
  }
},

_Copier: {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copy, len, t2, i;
    t1 = this._visited;
    copy = t1.$index(t1, list);
    if (copy != null)
      return copy;
    t1 = $.getInterceptor$asx(list);
    len = t1.get$length(list);
    copy = $.List_List(len);
    t2 = this._visited;
    t2.$indexSet(t2, list, copy);
    for (i = 0; i < len; ++i) {
      t2 = this._dispatch$1(t1.$index(list, i));
      if (i >= len)
        throw $.ioore(i);
      copy[i] = t2;
    }
    return copy;
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t2 = this._visited;
    t1.copy_0 = t2.$index(t2, map);
    t2 = t1.copy_0;
    if (t2 != null)
      return t2;
    t1.copy_0 = new $.LinkedHashMap(0, null, null, null, null, null, 0);
    t2 = this._visited;
    t2.$indexSet(t2, map, t1.copy_0);
    $.forEach$1$ax(map, new $._Copier_visitMap_closure(t1, this));
    return t1.copy_0;
  }
},

_Copier_visitMap_closure: {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1 = this.this_1;
    $.$indexSet$ax(this.box_0.copy_0, t1._dispatch$1(key), t1._dispatch$1(val));
  }
},

_Serializer: {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, list);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, map);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, map, id);
    t1 = $.getInterceptor$x(map);
    return ["map", id, this._serializeList$1($.toList$0$ax(t1.get$keys(map))), this._serializeList$1($.toList$0$ax(t1.get$values(map)))];
  },
  _serializeList$1: function(list) {
    var t1, len, result, i, t2;
    t1 = $.getInterceptor$asx(list);
    len = t1.get$length(list);
    result = $.List_List(len);
    for (i = 0; i < len; ++i) {
      t2 = this._dispatch$1(t1.$index(list, i));
      if (i >= len)
        throw $.ioore(i);
      result[i] = t2;
    }
    return result;
  }
},

_Deserializer: {"": "Object;",
  deserialize$1: function(x) {
    if ($._Deserializer_isPrimitive(x))
      return x;
    this._deserialized = new $.HashMap(0, null, null, null, null);
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    var t1, id;
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    t1 = $.getInterceptor$asx(x);
    switch (t1.$index(x, 0)) {
      case "ref":
        id = t1.$index(x, 1);
        t1 = this._deserialized;
        return t1.$index(t1, id);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      case "isolateSink":
        return this.deserializeIsolateSink$1(x);
      case "closeToken":
        return this.deserializeCloseToken$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = $.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !$.isJsIndexable(dartList, dartList[$.dispatchPropertyName]))
      return this._deserializeList$1$bailout(1, dartList, id);
    t1 = this._deserialized;
    t1.$indexSet(t1, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id) {
    var t1, len, i;
    t1 = this._deserialized;
    t1.$indexSet(t1, id, dartList);
    t1 = $.getInterceptor$asx(dartList);
    len = t1.get$length(dartList);
    if (typeof len !== "number")
      throw $.iae(len);
    i = 0;
    for (; i < len; ++i)
      t1.$indexSet(dartList, i, this._deserializeHelper$1(t1.$index(dartList, i)));
    return dartList;
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, t2, keys, values, len, i;
    result = new $.LinkedHashMap(0, null, null, null, null, null, 0);
    t1 = $.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    t2 = this._deserialized;
    t2.$indexSet(t2, id, result);
    keys = t1.$index(x, 2);
    values = t1.$index(x, 3);
    t1 = $.getInterceptor$asx(keys);
    len = t1.get$length(keys);
    if (typeof len !== "number")
      throw $.iae(len);
    if (len !== (len | 0))
      return this._deserializeMap$1$bailout(1, values, t1, len, result, keys);
    t2 = $.getInterceptor$asx(values);
    i = 0;
    for (; i < len; ++i)
      result.$indexSet(result, this._deserializeHelper$1(t1.$index(keys, i)), this._deserializeHelper$1(t2.$index(values, i)));
    return result;
  },
  _deserializeMap$1$bailout: function(state0, values, t1, len, result, keys) {
    switch (state0) {
      case 0:
        result = new $.LinkedHashMap(0, null, null, null, null, null, 0);
        t1 = $.getInterceptor$asx(x);
        id = t1.$index(x, 1);
        t2 = this._deserialized;
        t2.$indexSet(t2, id, result);
        keys = t1.$index(x, 2);
        values = t1.$index(x, 3);
        t1 = $.getInterceptor$asx(keys);
        len = t1.get$length(keys);
        if (typeof len !== "number")
          throw $.iae(len);
      case 1:
        var id, t2, i;
        state0 = 0;
        t2 = $.getInterceptor$asx(values);
        i = 0;
        for (; i < len; ++i)
          result.$indexSet(result, this._deserializeHelper$1(t1.$index(keys, i)), this._deserializeHelper$1(t2.$index(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.wrapException("Unexpected serialized object");
  }
},

TimerImpl: {"": "Object;_once,_inEventLoop,_handle?",
  cancel$0: function() {
    if ($.get$globalThis().setTimeout != null) {
      if (this._inEventLoop)
        throw $.wrapException(new $.UnsupportedError("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      var t1 = $globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount - 1;
      if (this._once)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw $.wrapException(new $.UnsupportedError("Canceling a timer."));
  },
  TimerImpl$periodic$2: function(milliseconds, callback) {
    var t1;
    if ($.get$globalThis().setTimeout != null) {
      t1 = $globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount + 1;
      this._handle = $.get$globalThis().setInterval($.convertDartClosureToJS(new $.TimerImpl$periodic_closure(this, callback), 0), milliseconds);
    } else
      throw $.wrapException(new $.UnsupportedError("Periodic timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1, t2;
    if (milliseconds === 0)
      t1 = $.get$globalThis().setTimeout == null || $globalState.isWorker === true;
    else
      t1 = false;
    if (t1) {
      this._handle = 1;
      t1 = $globalState.topEventLoop;
      t2 = $globalState.currentContext;
      t1.enqueue$3;
      t1.events._add$1(new $._IsolateEvent(t2, new $.TimerImpl_internalCallback(this, callback), "timer"));
      this._inEventLoop = true;
    } else if ($.get$globalThis().setTimeout != null) {
      t1 = $globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount + 1;
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(new $.TimerImpl_internalCallback0(this, callback), 0), milliseconds);
    } else
      throw $.wrapException(new $.UnsupportedError("Timer greater than 0."));
  },
  static: {
TimerImpl$: function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
},

TimerImpl$periodic: function(milliseconds, callback) {
  var t1 = new $.TimerImpl(false, false, null);
  t1.TimerImpl$periodic$2(milliseconds, callback);
  return t1;
}}

},

TimerImpl_internalCallback: {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.this_0.set$_handle(null);
    this.callback_1.call$0();
  }
},

TimerImpl_internalCallback0: {"": "Closure;this_2,callback_3",
  call$0: function() {
    this.this_2.set$_handle(null);
    var t1 = $globalState.topEventLoop;
    t1.activeTimerCount = t1.activeTimerCount - 1;
    this.callback_3.call$0();
  }
},

TimerImpl$periodic_closure: {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$1(this.this_0);
  }
}}],
["_js_helper", "dart:_js_helper", , {
isJsIndexable: function(object, record) {
  var result, t1;
  if (record != null) {
    result = record.x;
    if (result != null)
      return result;
  }
  t1 = $.getInterceptor(object);
  return typeof object === "object" && object !== null && !!t1.$isJavaScriptIndexingBehavior;
},

S: function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number") {
    if (value !== 0)
      return "" + value;
  } else if (true === value)
    return "true";
  else if (false === value)
    return "false";
  else if (value == null)
    return "null";
  res = $.toString$0(value);
  if (typeof res !== "string")
    throw $.wrapException(new $.ArgumentError(value));
  return res;
},

Primitives_initializeStatics: function(id) {
  $.Primitives_mirrorFunctionCacheName = $.$add$ns($.Primitives_mirrorFunctionCacheName, "_" + $.S(id));
  $.Primitives_mirrorInvokeCacheName = $.$add$ns($.Primitives_mirrorInvokeCacheName, "_" + $.S(id));
},

Primitives_objectHashCode: function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = Math.random() * 0x3fffffff | 0;
    object.$identityHash = hash;
  }
  return hash;
},

Primitives_printString: function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof console == "object" && typeof console.log == "function") {
    console.log(string);
    return;
  }
  if (typeof window == "object")
    return;
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw "Unable to print message: " + String(string);
},

Primitives__throwFormatException: function(string) {
  throw $.wrapException(new $.FormatException(string));
},

Primitives_parseInt: function(source, radix, handleError) {
  var match, t1;
  if (typeof source !== "string")
    $.throwExpression(new $.ArgumentError(source));
  match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
  if (match != null) {
    t1 = match.length;
    if (2 >= t1)
      throw $.ioore(2);
    if (match[2] != null)
      return parseInt(source, 16);
    if (3 >= t1)
      throw $.ioore(3);
    if (match[3] != null)
      return parseInt(source, 10);
    return handleError.call$1(source);
  }
  radix = 10;
  if (match == null)
    return handleError.call$1(source);
  return parseInt(source, radix);
},

Primitives_objectTypeName: function(object) {
  var $name, decompiled, t1;
  $name = $.constructorNameFallback($.getInterceptor(object));
  if ($.$eq($name, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  t1 = $.getInterceptor$s($name);
  if (t1.codeUnitAt$1($name, 0) === 36)
    $name = t1.substring$1($name, 1);
  t1 = $.getRuntimeTypeInfo(object);
  return $.S($name) + $.joinArguments(t1, 0);
},

Primitives_objectToString: function(object) {
  return "Instance of '" + $.Primitives_objectTypeName(object) + "'";
},

Primitives_newFixedList: function($length) {
  var result = new Array($length);
  result.fixed$length = true;
  return result;
},

Primitives__fromCharCodeApply: function(array) {
  var end, t1, result, i, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result += String.fromCharCode.apply(null, subarray);
  }
  return result;
},

Primitives_stringFromCodePoints: function(codePoints) {
  var a, t1, i;
  a = [];
  for (t1 = new $.ListIterator(codePoints, codePoints.length, 0, null); t1.moveNext$0();) {
    i = t1._liblib$_current;
    if (typeof i !== "number" || Math.floor(i) !== i)
      throw $.wrapException(new $.ArgumentError(i));
    if (i <= 65535)
      a.push(i);
    else if (i <= 1114111) {
      a.push(55296 + (C.JSNumber_methods.$shr(i - 65536, 10) & 1023));
      a.push(56320 + (i & 1023));
    } else
      throw $.wrapException(new $.ArgumentError(i));
  }
  return $.Primitives__fromCharCodeApply(a);
},

Primitives_stringFromCharCodes: function(charCodes) {
  var t1, i;
  for (t1 = new $.ListIterator(charCodes, charCodes.length, 0, null); t1.moveNext$0();) {
    i = t1._liblib$_current;
    if (typeof i !== "number" || Math.floor(i) !== i)
      throw $.wrapException(new $.ArgumentError(i));
    if (i < 0)
      throw $.wrapException(new $.ArgumentError(i));
    if (i > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
},

Primitives_lazyAsJsDate: function(receiver) {
  if (receiver.date === void 0)
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
},

Primitives_getYear: function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : $.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
},

Primitives_getMonth: function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
},

Primitives_getDay: function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : $.Primitives_lazyAsJsDate(receiver).getDate() + 0;
},

Primitives_getHours: function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : $.Primitives_lazyAsJsDate(receiver).getHours() + 0;
},

Primitives_getMinutes: function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : $.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
},

Primitives_getSeconds: function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : $.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
},

Primitives_getMilliseconds: function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : $.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
},

Primitives_getProperty: function(object, key) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw $.wrapException(new $.ArgumentError(object));
  return object[key];
},

Primitives_setProperty: function(object, key, value) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw $.wrapException(new $.ArgumentError(object));
  object[key] = value;
},

iae: function(argument) {
  throw $.wrapException(new $.ArgumentError(argument));
},

ioore: function(index) {
  if (typeof index !== "number" || Math.floor(index) !== index)
    $.iae(index);
  throw $.wrapException(new $.RangeError("value " + $.S(index)));
},

wrapException: function(ex) {
  var wrapper;
  if (ex == null)
    ex = new $.NullThrownError();
  wrapper = new Error();
  wrapper.dartException = ex;
  if ("defineProperty" in Object) {
    Object.defineProperty(wrapper, "message", { get: $.toStringWrapper$closure.call$0 });
    wrapper.name = "";
  } else
    wrapper.toString = $.toStringWrapper$closure.call$0;
  return wrapper;
},

toStringWrapper: function() {
  return $.toString$0(this.dartException);
},

throwExpression: function(ex) {
  throw $.wrapException(ex);
},

unwrapException: function(ex) {
  var t1, message, number, ieErrorCode, t2, t3, t4, nullLiteralCall, t5, t6, t7, t8, t9, match;
  t1 = new $.unwrapException_saveStackTrace(ex);
  if (ex == null)
    return;
  if (typeof ex !== "object")
    return ex;
  if ("dartException" in ex)
    return t1.call$1(ex.dartException);
  else if (!("message" in ex))
    return ex;
  message = ex.message;
  if ("number" in ex && typeof ex.number == "number") {
    number = ex.number;
    ieErrorCode = number & 65535;
    if ((C.JSInt_methods.$shr(number, 16) & 8191) === 10)
      switch (ieErrorCode) {
        case 438:
          return t1.call$1($.JsNoSuchMethodError$($.S(message) + " (Error " + ieErrorCode + ")", null));
        case 445:
        case 5007:
          t2 = $.S(message) + " (Error " + ieErrorCode + ")";
          t3 = null;
          return t1.call$1(new $.NullError(t2, t3));
        default:
      }
  }
  if (ex instanceof TypeError) {
    t2 = $.get$TypeErrorDecoder_noSuchMethodPattern();
    t3 = $.get$TypeErrorDecoder_notClosurePattern();
    t4 = $.get$TypeErrorDecoder_nullCallPattern();
    nullLiteralCall = $.get$TypeErrorDecoder_nullLiteralCallPattern();
    t5 = $.get$TypeErrorDecoder_undefinedCallPattern();
    t6 = $.get$TypeErrorDecoder_undefinedLiteralCallPattern();
    t7 = $.get$TypeErrorDecoder_nullPropertyPattern();
    $.get$TypeErrorDecoder_nullLiteralPropertyPattern();
    t8 = $.get$TypeErrorDecoder_undefinedPropertyPattern();
    t9 = $.get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
    match = t2.matchTypeError$1(message);
    if (match != null)
      return t1.call$1($.JsNoSuchMethodError$(message, match));
    else {
      match = t3.matchTypeError$1(message);
      if (match != null) {
        match.method = "call";
        return t1.call$1($.JsNoSuchMethodError$(message, match));
      } else {
        match = t4.matchTypeError$1(message);
        if (match == null) {
          match = nullLiteralCall.matchTypeError$1(message);
          if (match == null) {
            match = t5.matchTypeError$1(message);
            if (match == null) {
              match = t6.matchTypeError$1(message);
              if (match == null) {
                match = t7.matchTypeError$1(message);
                if (match == null) {
                  match = nullLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = t8.matchTypeError$1(message);
                    if (match == null) {
                      match = t9.matchTypeError$1(message);
                      t2 = match != null;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
          } else
            t2 = true;
        } else
          t2 = true;
        if (t2) {
          t2 = match == null ? null : match.method;
          return t1.call$1(new $.NullError(message, t2));
        }
      }
    }
    t2 = typeof message === "string" ? message : "";
    return t1.call$1(new $.UnknownJsTypeError(t2));
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return new $.StackOverflowError();
    return t1.call$1(new $.ArgumentError(null));
  }
  if (typeof InternalError == "function" && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return new $.StackOverflowError();
  return ex;
},

makeLiteralMap: function(keyValuePairs) {
  var iterator, result, key;
  iterator = $.get$iterator$ax(keyValuePairs);
  result = new $.LinkedHashMap(0, null, null, null, null, null, 0);
  for (; iterator.moveNext$0() === true;) {
    key = iterator.get$current();
    iterator.moveNext$0();
    result.$indexSet(result, key, iterator.get$current());
  }
  return result;
},

invokeClosure: function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_closure(closure));
  else if (t1.$eq(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_closure0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_closure1(closure, arg1, arg2));
  else
    throw $.wrapException(new $._ExceptionImplementation("Unsupported number of arguments for wrapped closure"));
},

convertDartClosureToJS: function(closure, arity) {
  var $function = closure.$identity;
  if (!!$function)
    return $function;
  $function = (function ($2, $3) { return function($0, $1) { return $3(closure, $2, arity, $0, $1) }})($globalState.currentContext, $.invokeClosure$closure.call$5);
  closure.$identity = $function;
  return $function;
},

propertyTypeCastError: function(value, property) {
  var actualType, t1, expectedType;
  actualType = $.Primitives_objectTypeName(value);
  t1 = $.getInterceptor$asx(property);
  expectedType = t1.substring$2(property, 3, t1.get$length(property));
  throw $.wrapException(new $.CastErrorImplementation("CastError: Casting value of type " + actualType + " to incompatible type " + expectedType));
},

propertyTypeCast: function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
},

throwCyclicInit: function(staticName) {
  throw $.wrapException(new $.CyclicInitializationError("Cyclic initialization for static " + $.S(staticName)));
},

getRuntimeTypeInfo: function(target) {
  if (target == null)
    return;
  return target.$builtinTypeInfo;
},

runtimeTypeToString: function(type) {
  if (type == null)
    return "dynamic";
  else if (typeof type === "object" && type !== null && type.constructor === Array)
    return type[0].builtin$cls + $.joinArguments(type, 1);
  else if (typeof type == "function")
    return type.builtin$cls;
  else
    return;
},

joinArguments: function(types, startIndex) {
  var buffer, index, firstArgument, allDynamic, argument, str;
  if (types == null)
    return "";
  buffer = $.StringBuffer$("");
  for (index = startIndex, firstArgument = true, allDynamic = true; index < types.length; ++index) {
    if (firstArgument)
      firstArgument = false;
    else
      buffer._contents = buffer._contents + ", ";
    argument = types[index];
    if (argument != null)
      allDynamic = false;
    str = $.runtimeTypeToString(argument);
    str = typeof str === "string" ? str : str;
    buffer._contents = buffer._contents + str;
  }
  return allDynamic ? "" : "<" + $.S(buffer) + ">";
},

typeNameInChrome: function(obj) {
  return obj.constructor.name;
},

typeNameInSafari: function(obj) {
  return $.constructorNameFallback(obj);
},

typeNameInOpera: function(obj) {
  return $.constructorNameFallback(obj);
},

typeNameInFirefox: function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "BeforeUnloadEvent")
    return "Event";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "GeoGeolocation")
    return "Geolocation";
  if ($name === "WorkerMessageEvent")
    return "MessageEvent";
  if ($name === "XMLDocument")
    return "Document";
  return $name;
},

typeNameInIE: function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if ($name === "BeforeUnloadEvent")
    return "Event";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "HTMLDDElement")
    return "HTMLElement";
  if ($name === "HTMLDTElement")
    return "HTMLElement";
  if ($name === "HTMLPhraseElement")
    return "HTMLElement";
  if ($name === "Position")
    return "Geoposition";
  if ($name === "Object")
    if (window.DataView && obj instanceof window.DataView)
      return "DataView";
  return $name;
},

constructorNameFallback: function(object) {
  var $constructor, $name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof $constructor === "function") {
    $name = $constructor.builtin$cls;
    if ($name != null)
      return $name;
    $name = $constructor.name;
    if (typeof $name === "string")
      t1 = $name !== "" && $name !== "Object" && $name !== "Function.prototype";
    else
      t1 = false;
    if (t1)
      return $name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
},

alternateTag: function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
},

getFunctionForTypeNameOf: function() {
  var getTagFunction = $.getBaseFunctionForTypeNameOf();
  if (typeof dartExperimentalFixupGetTag == "function")
    return $.applyExperimentalFixup(dartExperimentalFixupGetTag, getTagFunction);
  return getTagFunction;
},

getBaseFunctionForTypeNameOf: function() {
  if (typeof navigator !== "object")
    return $.typeNameInChrome$closure;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome$closure;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox$closure;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE$closure;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera$closure;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari$closure;
  else
    return $.constructorNameFallback$closure;
},

applyExperimentalFixup: function(fixupJSFunction, originalGetTagDartFunction) {
  return new $.applyExperimentalFixup_newGetTagDartFunction(fixupJSFunction((function(invoke, closure){return function(arg){ return invoke(closure, arg); };})($.callDartFunctionWith1Arg$closure.call$2, originalGetTagDartFunction)));
},

callDartFunctionWith1Arg: function(fn, arg) {
  return fn.call$1(arg);
},

toStringForNativeObject: function(obj) {
  return "Instance of " + $.get$getTypeNameOf().call$1(obj);
},

hashCodeForNativeObject: function(object) {
  return $.Primitives_objectHashCode(object);
},

defineProperty: function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
},

defineNativeMethods: function(tags, interceptorClass) {
  $.defineNativeMethodsCommon(tags, interceptorClass, true);
},

defineNativeMethodsNonleaf: function(tags, interceptorClass) {
  $.defineNativeMethodsCommon(tags, interceptorClass, false);
},

defineNativeMethodsExtended: function(tags, interceptorClass, subclassInterceptorClasses) {
  var classes, t1, i;
  if ($.interceptorToTag == null)
    $.interceptorToTag = [];
  classes = subclassInterceptorClasses;
  for (t1 = classes.length, i = 0; i < t1; ++i) {
    $.interceptorToTag.push(classes[i]);
    $.interceptorToTag.push(tags);
  }
  $.defineNativeMethodsCommon(tags, interceptorClass, false);
},

defineNativeMethodsCommon: function(tags, interceptorClass, isLeaf) {
  var methods, tagsList, i, tag;
  methods = interceptorClass.prototype;
  if ($.interceptorsByTag == null)
    $.interceptorsByTag = {};
  if ($.leafTags == null)
    $.leafTags = {};
  tagsList = tags.split("|");
  for (i = 0; i < tagsList.length; ++i) {
    tag = tagsList[i];
    $.interceptorsByTag[tag] = methods;
    $.leafTags[tag] = isLeaf;
  }
},

defineNativeMethodsFinish: function() {
},

lookupInterceptor: function(hasOwnPropertyFunction, tag) {
  var map = $.interceptorsByTag;
  if (map == null)
    return;
  return hasOwnPropertyFunction.call(map, tag) ? map[tag] : null;
},

lookupDispatchRecord: function(obj) {
  var hasOwnPropertyFunction, tag, interceptor, secondTag, t1;
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  tag = $.get$getTypeNameOf().call$1(obj);
  interceptor = $.lookupInterceptor(hasOwnPropertyFunction, tag);
  if (interceptor == null) {
    secondTag = $.alternateTag(obj, tag);
    if (secondTag != null)
      interceptor = $.lookupInterceptor(hasOwnPropertyFunction, secondTag);
  }
  if (interceptor == null)
    return;
  t1 = $.leafTags;
  if (t1 != null && t1[tag] === true)
    return $.makeLeafDispatchRecord(interceptor);
  else
    return $.makeDispatchRecord(interceptor, Object.getPrototypeOf(obj), null, null);
},

makeLeafDispatchRecord: function(interceptor) {
  return $.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
},

TypeErrorDecoder: {"": "Object;_pattern,_arguments,_argumentsExpr,_expr,_method,_receiver",
  matchTypeError$1: function(message) {
    var match, result, t1;
    match = new RegExp(this._pattern).exec(message);
    if (match == null)
      return;
    result = {};
    t1 = this._arguments;
    if (t1 !== -1)
      result.arguments = match[t1 + 1];
    t1 = this._argumentsExpr;
    if (t1 !== -1)
      result.argumentsExpr = match[t1 + 1];
    t1 = this._expr;
    if (t1 !== -1)
      result.expr = match[t1 + 1];
    t1 = this._method;
    if (t1 !== -1)
      result.method = match[t1 + 1];
    t1 = this._receiver;
    if (t1 !== -1)
      result.receiver = match[t1 + 1];
    return result;
  },
  static: {
"": "TypeErrorDecoder_noSuchMethodPattern,TypeErrorDecoder_notClosurePattern,TypeErrorDecoder_nullCallPattern,TypeErrorDecoder_nullLiteralCallPattern,TypeErrorDecoder_undefinedCallPattern,TypeErrorDecoder_undefinedLiteralCallPattern,TypeErrorDecoder_nullPropertyPattern,TypeErrorDecoder_nullLiteralPropertyPattern,TypeErrorDecoder_undefinedPropertyPattern,TypeErrorDecoder_undefinedLiteralPropertyPattern",
TypeErrorDecoder_extractPattern: function(message) {
  var match, $arguments, argumentsExpr, expr, method, receiver;
  message = message.replace(String({}), '$receiver$').replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), '\\$&');
  match = message.match(/\\\$[a-zA-Z]+\\\$/g);
  if (match == null)
    match = [];
  $arguments = match.indexOf("\\$arguments\\$");
  argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
  expr = match.indexOf("\\$expr\\$");
  method = match.indexOf("\\$method\\$");
  receiver = match.indexOf("\\$receiver\\$");
  return new $.TypeErrorDecoder(message.replace('\\$arguments\\$', '((?:x|[^x])*)').replace('\\$argumentsExpr\\$', '((?:x|[^x])*)').replace('\\$expr\\$', '((?:x|[^x])*)').replace('\\$method\\$', '((?:x|[^x])*)').replace('\\$receiver\\$', '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
},

TypeErrorDecoder_provokeCallErrorOn: function(expression) {
  return function($expr$) {
  var $argumentsExpr$ = '$arguments$'
  try {
    $expr$.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}(expression);
},

TypeErrorDecoder_provokeCallErrorOnNull: function() {
  return function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    null.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}();
},

TypeErrorDecoder_provokeCallErrorOnUndefined: function() {
  return function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    (void 0).$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}();
},

TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
  return function($expr$) {
  try {
    $expr$.$method$;
  } catch (e) {
    return e.message;
  }
}(expression);
},

TypeErrorDecoder_provokePropertyErrorOnNull: function() {
  return function() {
  try {
    null.$method$;
  } catch (e) {
    return e.message;
  }
}();
},

TypeErrorDecoder_provokePropertyErrorOnUndefined: function() {
  return function() {
  try {
    (void 0).$method$;
  } catch (e) {
    return e.message;
  }
}();
}}

},

NullError: {"": "Error;_message,_method",
  toString$0: function(_) {
    var t1 = this._method;
    if (t1 == null)
      return "NullError: " + $.S(this._message);
    return "NullError: Cannot call \"" + $.S(t1) + "\" on null";
  },
  $isError: true
},

JsNoSuchMethodError: {"": "Error;_message,_method,_receiver",
  toString$0: function(_) {
    var t1, t2;
    t1 = this._method;
    if (t1 == null)
      return "NoSuchMethodError: " + $.S(this._message);
    t2 = this._receiver;
    if (t2 == null)
      return "NoSuchMethodError: Cannot call \"" + t1 + "\" (" + $.S(this._message) + ")";
    return "NoSuchMethodError: Cannot call \"" + t1 + "\" on \"" + t2 + "\" (" + $.S(this._message) + ")";
  },
  $isError: true,
  static: {
JsNoSuchMethodError$: function(_message, match) {
  var t1, t2;
  t1 = match == null;
  t2 = t1 ? null : match.method;
  t1 = t1 ? null : match.receiver;
  return new $.JsNoSuchMethodError(_message, t2, t1);
}}

},

UnknownJsTypeError: {"": "Error;_message",
  toString$0: function(_) {
    var t1 = this._message;
    return C.JSString_methods.get$isEmpty(t1) ? "Error" : "Error: " + t1;
  }
},

unwrapException_saveStackTrace: {"": "Closure;ex_0",
  call$1: function(error) {
    var t1 = $.getInterceptor(error);
    if (typeof error === "object" && error !== null && !!t1.$isError)
      if (error.$thrownJsError == null)
        error.$thrownJsError = this.ex_0;
    return error;
  }
},

_StackTrace: {"": "Object;_exception,_trace",
  toString$0: function(_) {
    var t1, trace;
    t1 = this._trace;
    if (t1 != null)
      return t1;
    t1 = this._exception;
    trace = typeof t1 === "object" ? t1.stack : null;
    t1 = trace == null ? "" : trace;
    this._trace = t1;
    return t1;
  }
},

invokeClosure_closure: {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
},

invokeClosure_closure0: {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
},

invokeClosure_closure1: {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
},

Closure: {"": "Object;",
  toString$0: function(_) {
    return "Closure";
  }
},

BoundClosure: {"": "Closure;_self,_target,_receiver",
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (this === other)
      return true;
    t1 = $.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isBoundClosure)
      return false;
    return this._self === other._self && this._target === other._target && this._receiver === other._receiver;
  },
  get$hashCode: function(_) {
    return $.get$hashCode$(this._self) + $.get$hashCode$(this._target) + $.get$hashCode$(this._receiver) & 0x3ffffff;
  },
  $isBoundClosure: true
},

CastErrorImplementation: {"": "Error;message",
  toString$0: function(_) {
    return this.message;
  },
  $isError: true
},

applyExperimentalFixup_newGetTagDartFunction: {"": "Closure;newGetTagJSFunction_0",
  call$1: function(object) {
    return this.newGetTagJSFunction_0(object);
  }
}}],
["dart._collection.dev", "dart:_collection-dev", , {
Arrays_copy: function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3, t4;
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !$.isJsIndexable(dst, dst[$.dispatchPropertyName]))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = srcStart + count, t2 = src.length, t3 = dst.length, j = dstStart, i = srcStart; i < t1; ++i, ++j) {
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      t4 = src[i];
      if (j < 0 || j >= t3)
        throw $.ioore(j);
      dst[j] = t4;
    }
},

Arrays_copy$bailout: function(state0, src, srcStart, dst, dstStart, count) {
  var i, j, t1;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      C.JSArray_methods.$indexSet(dst, j, src[i]);
    }
  else
    for (t1 = srcStart + count, j = dstStart, i = srcStart; i < t1; ++i, ++j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      C.JSArray_methods.$indexSet(dst, j, src[i]);
    }
},

IterableMixinWorkaround_forEach: function(iterable, f) {
  var t1;
  for (t1 = new $.ListIterator(iterable, iterable.length, 0, null); t1.moveNext$0();)
    f.call$1(t1._liblib$_current);
},

IterableMixinWorkaround_toStringIterable: function(iterable, leftDelimiter, rightDelimiter) {
  var result, i, t1;
  for (i = 0; i < $.get$IterableMixinWorkaround__toStringList().length; ++i) {
    t1 = $.get$IterableMixinWorkaround__toStringList();
    if (i >= t1.length)
      throw $.ioore(i);
    if (t1[i] === iterable)
      return $.S(leftDelimiter) + "..." + $.S(rightDelimiter);
  }
  result = $.StringBuffer$("");
  try {
    $.get$IterableMixinWorkaround__toStringList().push(iterable);
    result.write$1(leftDelimiter);
    result.writeAll$2(iterable, ", ");
    result.write$1(rightDelimiter);
  } finally {
    t1 = $.get$IterableMixinWorkaround__toStringList();
    if (0 >= t1.length)
      throw $.ioore(0);
    t1.pop();
  }
  return result.get$_contents();
},

IterableMixinWorkaround__rangeCheck: function(list, start, end) {
  var t1;
  if (start < 0 || start > list.length) {
    t1 = list.length;
    throw $.wrapException(new $.RangeError("value " + start + " not in range 0.." + t1));
  }
  if (end < start || end > list.length) {
    t1 = list.length;
    throw $.wrapException(new $.RangeError("value " + end + " not in range " + start + ".." + t1));
  }
},

IterableMixinWorkaround_setRangeList: function(list, start, end, from, skipCount) {
  var $length, otherStart, otherList;
  $.IterableMixinWorkaround__rangeCheck(list, start, end);
  $length = end - start;
  if ($length === 0)
    return;
  if (skipCount < 0)
    throw $.wrapException(new $.ArgumentError(skipCount));
  otherStart = skipCount;
  otherList = from;
  if (otherStart + $length > otherList.length)
    throw $.wrapException(new $.StateError("Not enough elements"));
  $.Arrays_copy(otherList, otherStart, list, start, $length);
},

ListIterator: {"": "Object;_iterable,_liblib$_length,_index,_liblib$_current",
  get$current: function() {
    return this._liblib$_current;
  },
  moveNext$0: function() {
    var t1, t2, $length, t3;
    t1 = this._iterable;
    t2 = $.getInterceptor$asx(t1);
    $length = t2.get$length(t1);
    if (!$.$eq(this._liblib$_length, $length))
      throw $.wrapException(new $.ConcurrentModificationError(t1));
    t3 = this._index;
    if (typeof $length !== "number")
      throw $.iae($length);
    if (t3 >= $length) {
      this._liblib$_current = null;
      return false;
    }
    this._liblib$_current = t2.elementAt$1(t1, t3);
    this._index = this._index + 1;
    return true;
  }
},

MappedIterable: {"": "IterableBase;_iterable,_f",
  get$iterator: function(_) {
    var t1 = this._iterable;
    return new $.MappedIterator(null, t1.get$iterator(t1), this._f);
  },
  get$length: function(_) {
    var t1 = this._iterable;
    return t1.get$length(t1);
  },
  get$isEmpty: function(_) {
    var t1 = this._iterable;
    return t1.get$isEmpty(t1);
  }
},

MappedIterator: {"": "Iterator;_liblib$_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0() === true) {
      this._liblib$_current = this._f$1(t1.get$current());
      return true;
    }
    this._liblib$_current = null;
    return false;
  },
  get$current: function() {
    return this._liblib$_current;
  }
},

WhereIterable: {"": "IterableBase;_iterable,_f",
  get$iterator: function(_) {
    return new $.WhereIterator($.get$iterator$ax(this._iterable), this._f);
  }
},

WhereIterator: {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0() === true;)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  }
},

FixedLengthListMixin: {"": "Object;",
  set$length: function(receiver, newLength) {
    throw $.wrapException(new $.UnsupportedError("Cannot change the length of a fixed-length list"));
  },
  add$1: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot add to a fixed-length list"));
  }
}}],
["dart.async", "dart:async", , {
_attachStackTrace: function(o, st) {
  var t1;
  if (o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string")
    return;
  t1 = $.get$_stackTraceExpando();
  t1.$indexSet(t1, o, st);
},

getAttachedStackTrace: function(o) {
  var t1;
  if (o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string")
    return;
  t1 = $.get$_stackTraceExpando();
  return t1.$index(t1, o);
},

_asyncRunCallback: function() {
  var callback, t1, exception, milliseconds;
  for (; t1 = $.get$_asyncCallbacks(), t1._head !== t1._tail;) {
    callback = $.get$_asyncCallbacks().removeFirst$0();
    try {
      callback.call$0();
    } catch (exception) {
      $.unwrapException(exception);
      milliseconds = C.JSNumber_methods.$tdiv(C.Duration_0._duration, 1000);
      $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, $._asyncRunCallback$closure);
      throw exception;
    }

  }
  $._callbacksAreEnqueued = false;
},

_scheduleAsyncCallback: function(callback) {
  $.get$_asyncCallbacks()._add$1(callback);
  if (!$._callbacksAreEnqueued) {
    $._createTimer(C.Duration_0, $._asyncRunCallback$closure);
    $._callbacksAreEnqueued = true;
  }
},

runAsync: function(callback) {
  var currentZone = $.get$_Zone__current();
  currentZone.runAsync$2(callback, currentZone);
},

StreamController_StreamController: function(onCancel, onListen, onPause, onResume, sync) {
  if (true)
    return sync ? new $._NoCallbackSyncStreamController(null, 0, null) : new $._NoCallbackAsyncStreamController(null, 0, null);
  return sync ? new $._SyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null) : new $._AsyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null);
},

_runGuarded: function(notificationHandler) {
  var e, s, exception, t1;
  if (notificationHandler == null)
    return;
  try {
    notificationHandler.call$0();
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    s = new $._StackTrace(exception, null);
    $.get$_Zone__current().handleUncaughtError$1($._asyncError(e, s));
  }

},

_nullDataHandler: function(value) {
},

_nullErrorHandler: function(error) {
  $.get$_Zone__current().handleUncaughtError$1(error);
},

_nullDoneHandler: function() {
},

_asyncError: function(error, stackTrace) {
  if (stackTrace == null)
    return error;
  if ($.getAttachedStackTrace(error) != null)
    return error;
  $._attachStackTrace(error, stackTrace);
  return error;
},

_runUserCode: function(userCode, onSuccess, onError) {
  var e, s, exception, t1;
  try {
    onSuccess.call$1(userCode.call$0());
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    s = new $._StackTrace(exception, null);
    onError.call$1($._asyncError(e, s));
  }

},

_cancelAndError: function(subscription, future) {
  return new $._cancelAndError_closure(subscription, future);
},

_createTimer: function(duration, callback) {
  var milliseconds = C.JSNumber_methods.$tdiv(duration._duration, 1000);
  return $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
},

_createPeriodicTimer: function(duration, callback) {
  var milliseconds = C.JSNumber_methods.$tdiv(duration._duration, 1000);
  return $.TimerImpl$periodic(milliseconds < 0 ? 0 : milliseconds, callback);
},

_BroadcastSubscription: {"": "_ControllerSubscription;_eventState@,_liblib1$_next@,_liblib1$_previous?,_liblib1$_controller,_liblib1$_onData,_onError,_onDone,_zone,_state,_pending",
  get$_liblib1$_controller: function() {
    return this._liblib1$_controller;
  },
  _expectsEvent$1: function(eventId) {
    var t1 = this._eventState;
    if (t1 == null)
      return this._expectsEvent$1$bailout(1, eventId, t1);
    return (t1 & 1) === eventId;
  },
  _expectsEvent$1$bailout: function(state0, eventId, t1) {
    if (t1 == null)
      throw t1.$and();
    return (t1 & 1) === eventId;
  },
  _onPause$0: function() {
  },
  get$_onPause: function() {
    return new $.BoundClosure$0(this, "_onPause$0", null);
  },
  _onResume$0: function() {
  },
  get$_onResume: function() {
    return new $.BoundClosure$0(this, "_onResume$0", null);
  },
  static: {
"": "_BroadcastSubscription__STATE_EVENT_ID,_BroadcastSubscription__STATE_FIRING,_BroadcastSubscription__STATE_REMOVE_AFTER_FIRING",
}

},

_BroadcastStreamController: {"": "Object;_onListen<,_state@,_liblib1$_next@,_liblib1$_previous?",
  _ensureDoneFuture$0: function() {
    var t1 = this._doneFuture;
    if (t1 != null)
      return t1;
    t1 = new $._FutureImpl(0, $.get$_Zone__current(), null);
    this._doneFuture = t1;
    return t1;
  },
  _addListener$1: function(subscription) {
    subscription.set$_liblib1$_previous(this._liblib1$_previous);
    subscription.set$_liblib1$_next(this);
    this._liblib1$_previous.set$_liblib1$_next(subscription);
    this._liblib1$_previous = subscription;
    subscription.set$_eventState(this._state & 1);
  },
  _removeListener$1: function(subscription) {
    var previous, next;
    previous = subscription._liblib1$_previous;
    next = subscription._liblib1$_next;
    previous.set$_liblib1$_next(next);
    next.set$_liblib1$_previous(previous);
    subscription._liblib1$_previous = subscription;
    subscription._liblib1$_next = subscription;
  },
  _subscribe$4: function(onData, onError, onDone, cancelOnError) {
    var t1, t2, subscription;
    if ((this._state & 4) !== 0)
      throw $.wrapException(new $.StateError("Subscribing to closed stream"));
    t1 = $.get$_Zone__current();
    t2 = cancelOnError ? 1 : 0;
    subscription = new $._BroadcastSubscription(null, null, null, this, onData, onError, onDone, t1, t2, null);
    subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError);
    subscription._liblib1$_previous = subscription;
    subscription._liblib1$_next = subscription;
    this._addListener$1(subscription);
    t1 = this._liblib1$_next;
    t2 = this._liblib1$_previous;
    if (t1 == null ? t2 == null : t1 === t2)
      $._runGuarded(this._onListen);
    return subscription;
  },
  _recordCancel$1: function(subscription) {
    var t1;
    if (subscription.get$_liblib1$_next() === subscription)
      return;
    t1 = subscription.get$_eventState();
    if (t1 == null)
      throw t1.$and();
    if ((t1 & 2) !== 0)
      subscription.set$_eventState((t1 | 4) >>> 0);
    else {
      this._removeListener$1(subscription);
      if ((this._state & 2) === 0 && this._liblib1$_next === this)
        this._callOnCancel$0();
    }
  },
  _recordPause$1: function(subscription) {
  },
  _recordResume$1: function(subscription) {
  },
  _addEventError$0: function() {
    if ((this._state & 4) !== 0)
      return new $.StateError("Cannot add new events after calling close");
    return new $.StateError("Cannot add new events while doing an addStream");
  },
  add$1: function(_, data) {
    if (this._state >= 4)
      throw $.wrapException(this._addEventError$0());
    this._sendData$1(data);
  },
  addError$2: function(error, stackTrace) {
    if (this._state >= 4)
      throw $.wrapException(this._addEventError$0());
    if (stackTrace != null)
      $._attachStackTrace(error, stackTrace);
    this._sendError$1(error);
  },
  close$0: function(_) {
    var t1, doneFuture;
    t1 = this._state;
    if ((t1 & 4) !== 0)
      return this._doneFuture;
    if (t1 >= 4)
      throw $.wrapException(this._addEventError$0());
    this._state = (t1 | 4) >>> 0;
    doneFuture = this._ensureDoneFuture$0();
    this._sendDone$0();
    return doneFuture;
  },
  get$done: function() {
    return this._ensureDoneFuture$0();
  },
  _liblib1$_add$1: function(data) {
    this._sendData$1(data);
  },
  _addError$1: function(error) {
    this._sendError$1(error);
  },
  _close$0: function() {
    var addState = this._addStreamState;
    this._addStreamState = null;
    this._state = (this._state & 4294967287) >>> 0;
    C.JSNull_methods.complete$0(addState);
  },
  _forEachListener$1: function(action) {
    var t1, id, link, link0;
    t1 = this._state;
    if ((t1 & 2) !== 0)
      throw $.wrapException(new $.StateError("Cannot fire new event. Controller is already firing an event"));
    if (this._liblib1$_next === this)
      return;
    id = t1 & 1;
    this._state = (t1 ^ 3) >>> 0;
    link = this._liblib1$_next;
    for (; link !== this;)
      if (link._expectsEvent$1(id)) {
        t1 = link.get$_eventState();
        if (t1 == null)
          throw t1.$or();
        link.set$_eventState((t1 | 2) >>> 0);
        action.call$1(link);
        t1 = link.get$_eventState();
        if (t1 == null)
          throw t1.$xor();
        link.set$_eventState((t1 ^ 1) >>> 0);
        link0 = link.get$_liblib1$_next();
        t1 = link.get$_eventState();
        if (t1 == null)
          throw t1.$and();
        if ((t1 & 4) !== 0)
          this._removeListener$1(link);
        t1 = link.get$_eventState();
        if (t1 == null)
          throw t1.$and();
        link.set$_eventState((t1 & 4294967293) >>> 0);
        link = link0;
      } else
        link = link.get$_liblib1$_next();
    this._state = (this._state & 4294967293) >>> 0;
    if (this._liblib1$_next === this)
      this._callOnCancel$0();
  },
  _callOnCancel$0: function() {
    if ((this._state & 4) !== 0) {
      var t1 = this._doneFuture;
      t1.get$_mayComplete;
      t1 = t1._state === 0;
    } else
      t1 = false;
    if (t1)
      this._doneFuture._asyncSetValue$1(null);
    $._runGuarded(this._onCancel);
  }
},

_SyncBroadcastStreamController: {"": "_BroadcastStreamController;",
  _sendData$1: function(data) {
    if (this._liblib1$_next === this)
      return;
    this._forEachListener$1(new $._SyncBroadcastStreamController__sendData_closure(this, data));
  },
  _sendError$1: function(error) {
    if (this._liblib1$_next === this)
      return;
    this._forEachListener$1(new $._SyncBroadcastStreamController__sendError_closure(this, error));
  },
  _sendDone$0: function() {
    if (this._liblib1$_next !== this)
      this._forEachListener$1(new $._SyncBroadcastStreamController__sendDone_closure(this));
    else
      this._doneFuture._asyncSetValue$1(null);
  }
},

_SyncBroadcastStreamController__sendData_closure: {"": "Closure;this_0,data_1",
  call$1: function(subscription) {
    subscription._liblib1$_add$1(this.data_1);
  }
},

_SyncBroadcastStreamController__sendError_closure: {"": "Closure;this_0,error_1",
  call$1: function(subscription) {
    subscription._addError$1(this.error_1);
  }
},

_SyncBroadcastStreamController__sendDone_closure: {"": "Closure;this_0",
  call$1: function(subscription) {
    subscription._close$0();
  }
},

_AsBroadcastStreamController: {"": "_SyncBroadcastStreamController;_pending,_onListen,_onCancel,_state,_liblib1$_next,_liblib1$_previous,_addStreamState,_doneFuture",
  _addPendingEvent$1: function($event) {
    var t1;
    if (this._pending == null)
      this._pending = new $._StreamImplEvents(null, null, 0);
    t1 = this._pending;
    t1.add$1(t1, $event);
  },
  add$1: function(_, data) {
    var t1, t2, t3;
    t1 = this._state;
    if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
      t1 = new $._DelayedData(data, null);
      if (this._pending == null)
        this._pending = new $._StreamImplEvents(null, null, 0);
      t2 = this._pending;
      t2.add$1;
      t3 = t2.lastPendingEvent;
      if (t3 == null) {
        t2.lastPendingEvent = t1;
        t2.firstPendingEvent = t1;
      } else {
        t3.set$next(t1);
        t2.lastPendingEvent = t1;
      }
      return;
    }
    $._BroadcastStreamController.prototype.add$1.call(this, this, data);
    while (true) {
      t1 = this._pending;
      if (t1 != null) {
        t1.get$isEmpty;
        t2 = t1.lastPendingEvent != null;
      } else
        t2 = false;
      if (!t2)
        break;
      t1.handleNext$1(this);
    }
  },
  get$add: function(_receiver) {
    return new $.BoundClosure$i1(this, "add$1", _receiver);
  },
  addError$2: function(error, stackTrace) {
    var t1, t2;
    t1 = this._state;
    if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
      this._addPendingEvent$1(new $._DelayedError(error, null));
      return;
    }
    $._BroadcastStreamController.prototype.addError$2.call(this, error, stackTrace);
    while (true) {
      t1 = this._pending;
      if (t1 != null) {
        t1.get$isEmpty;
        t2 = t1.lastPendingEvent != null;
      } else
        t2 = false;
      if (!t2)
        break;
      t1.handleNext$1(this);
    }
  },
  get$addError: function() {
    return new $.Bound_addError__AsBroadcastStreamController(this, "addError$2", null);
  },
  close$0: function(_) {
    var t1, t2;
    t1 = this._state;
    if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
      this._addPendingEvent$1(C.C__DelayedDone);
      t1 = this._state;
      t2 = this.get$_STATE_CLOSED();
      if (typeof t2 !== "number")
        throw $.iae(t2);
      this._state = C.JSInt_methods.$or(t1, t2);
      return $._BroadcastStreamController.prototype.get$done.call(this);
    }
    return $._BroadcastStreamController.prototype.close$0.call(this, this);
  },
  get$close: function(_receiver) {
    return new $.BoundClosure$i0(this, "close$0", _receiver);
  },
  _callOnCancel$0: function() {
    var t1, t2;
    t1 = this._pending;
    if (t1 != null) {
      t1.get$isEmpty;
      t2 = t1.lastPendingEvent != null;
    } else
      t2 = false;
    if (t2) {
      t1.clear$0(t1);
      this._pending = null;
    }
    $._BroadcastStreamController.prototype._callOnCancel$0.call(this);
  }
},

_Completer: {"": "Object;",
  complete$1: function(_, value) {
    if (this._isComplete)
      throw $.wrapException(new $.StateError("Future already completed"));
    this._isComplete = true;
    this._setFutureValue$1(value);
  },
  complete$0: function($receiver) {
    return this.complete$1($receiver, null);
  },
  completeError$2: function(error, stackTrace) {
    if (this._isComplete)
      throw $.wrapException(new $.StateError("Future already completed"));
    this._isComplete = true;
    this._setFutureError$1(error);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  },
  _Completer$0: function() {
    var t1 = this.future._zone;
    t1._openCallbacks = t1._openCallbacks + 1;
  }
},

_AsyncCompleter: {"": "_Completer;future,_isComplete",
  _setFutureValue$1: function(value) {
    var future, t1;
    future = this.future;
    future._asyncSetValue$1(value);
    t1 = future._zone;
    t1._openCallbacks = t1._openCallbacks - 1;
    t1._checkIfDone$0();
  },
  _setFutureError$1: function(error) {
    var future, t1;
    future = this.future;
    future._asyncSetError$1(error);
    t1 = future._zone;
    t1._openCallbacks = t1._openCallbacks - 1;
    t1._checkIfDone$0();
  }
},

_FutureListenerWrapper: {"": "Object;future,_nextListener@",
  _sendValue$1: function(value) {
    this.future._setValueUnchecked$1(value);
  },
  _sendError$1: function(error) {
    this.future._setErrorUnchecked$1(error);
  },
  _inSameErrorZone$1: function(otherZone) {
    return $.$eq(this.future._zone.get$_errorZone(), otherZone.get$_errorZone());
  }
},

_ErrorZoneBoundaryListener: {"": "Object;_nextListener@,_listener",
  _inSameErrorZone$1: function(otherZone) {
    throw $.wrapException(new $.UnsupportedError("A Zone boundary doesn't support the inSameErrorZone test."));
  },
  _sendValue$1: function(value) {
    this._listener._sendValue$1(value);
  },
  _sendError$1: function(error) {
    $.get$_Zone__current().handleUncaughtError$1(error);
  }
},

_FutureImpl: {"": "Object;_state@,_zone<,_resultOrListeners<",
  get$_isChained: function() {
    return (this._state & 2) !== 0;
  },
  then$2$onError: function(f, onError) {
    var t1, t2;
    if (onError == null) {
      t1 = new $._ThenFuture(f, null, 0, $.get$_Zone__current(), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      this._addListener$1(t1);
      return t1;
    }
    t1 = new $._SubscribeFuture(onError, f, null, 0, $.get$_Zone__current(), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    this._addListener$1(t1);
    return t1;
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1, t2;
    t1 = new $._CatchErrorFuture(test, f, null, 0, $.get$_Zone__current(), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    this._addListener$1(t1);
    return t1;
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  _inSameErrorZone$1: function(otherZone) {
    return $.$eq(this._zone.get$_errorZone(), otherZone.get$_errorZone());
  },
  _setValue$1: function(value) {
    if (this._state !== 0)
      throw $.wrapException(new $.StateError("Future already completed"));
    this._setValueUnchecked$1(value);
  },
  get$_setValue: function() {
    return new $.BoundClosure$1(this, "_setValue$1", null);
  },
  _setValueUnchecked$1: function(value) {
    var listeners, listeners0;
    listeners = (this._state & 2) !== 0 ? null : this._removeListeners$0();
    this._state = 8;
    this._resultOrListeners = value;
    for (; listeners != null; listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  _setError$1: function(error) {
    if (this._state !== 0)
      throw $.wrapException(new $.StateError("Future already completed"));
    this._setErrorUnchecked$1(error);
  },
  get$_setError: function() {
    return new $.BoundClosure$1(this, "_setError$1", null);
  },
  _setErrorUnchecked$1: function(error) {
    var t1, hasListeners, listeners, listeners0;
    t1 = this._state;
    if ((t1 & 2) !== 0) {
      hasListeners = t1 === 2;
      listeners = null;
    } else {
      listeners = this._removeListeners$0();
      hasListeners = listeners != null;
    }
    this._state = 12;
    this._resultOrListeners = error;
    if (!hasListeners) {
      this._scheduleUnhandledError$0();
      return;
    }
    for (; listeners != null; listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
    }
  },
  _asyncSetValue$1: function(value) {
    if (this._state !== 0)
      throw $.wrapException(new $.StateError("Future already completed"));
    this._state = 1;
    $.runAsync(new $._FutureImpl__asyncSetValue_closure(this, value));
  },
  _asyncSetError$1: function(error) {
    if (this._state !== 0)
      throw $.wrapException(new $.StateError("Future already completed"));
    this._state = 1;
    $.runAsync(new $._FutureImpl__asyncSetError_closure(this, error));
  },
  _scheduleUnhandledError$0: function() {
    this._state = 28;
    $.runAsync(new $._FutureImpl__scheduleUnhandledError_closure(this));
  },
  _addListener$1: function(listener) {
    var t1, t2, future, currentZone;
    t1 = {};
    t1.listener_0 = listener;
    if (!t1.listener_0._inSameErrorZone$1(this._zone))
      t1.listener_0 = new $._ErrorZoneBoundaryListener(null, t1.listener_0);
    t2 = this._state;
    if ((t2 & 2) !== 0) {
      this._state = 2;
      future = this._resultOrListeners;
      if (future.get$_isChained()) {
        future = future.get$_chainSource();
        this._resultOrListeners = future;
      }
      future._addListener$1(t1.listener_0);
      return;
    }
    if (t2 >= 8) {
      this._state = (t2 & 4294967279) >>> 0;
      currentZone = $.get$_Zone__current();
      currentZone.runAsync$2(new $._FutureImpl__addListener_closure(t1, this), currentZone);
    } else {
      t1.listener_0.set$_nextListener(this._resultOrListeners);
      this._resultOrListeners = t1.listener_0;
    }
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; current != null; prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    var t1 = this._state;
    if (t1 < 8)
      future._chainFromFuture$1(this);
    else if (t1 === 8) {
      t1 = this._resultOrListeners;
      if (future._state !== 0)
        $.throwExpression(new $.StateError("Future already completed"));
      future._setValueUnchecked$1(t1);
    } else {
      this._state = (t1 & 4294967279) >>> 0;
      t1 = this._resultOrListeners;
      if (future._state !== 0)
        $.throwExpression(new $.StateError("Future already completed"));
      future._setErrorUnchecked$1(t1);
    }
  },
  get$_chainSource: function() {
    var future = this._resultOrListeners;
    if (future.get$_isChained()) {
      future = future.get$_chainSource();
      this._resultOrListeners = future;
    }
    return future;
  },
  _chainFromFuture$1: function(resultSource) {
    var cursor, cursor0, cursor1;
    if ((resultSource._state & 2) !== 0)
      resultSource = resultSource.get$_chainSource();
    if (this === resultSource) {
      if (this._state !== 0)
        $.throwExpression(new $.StateError("Future already completed"));
      this._setErrorUnchecked$1(new $.StateError("Cyclic future dependency."));
      return;
    }
    cursor = this._removeListeners$0();
    for (cursor0 = cursor; cursor0 != null; cursor0 = cursor1) {
      cursor1 = cursor0.get$_nextListener();
      cursor0.set$_nextListener(null);
      resultSource._addListener$1(cursor0);
    }
    resultSource._addListener$1(new $._FutureListenerWrapper(this, null));
    this._resultOrListeners = resultSource;
    this._state = cursor != null ? 2 : 6;
  },
  _setOrChainValue$1: function(result) {
    var t1 = $.getInterceptor(result);
    if (typeof result === "object" && result !== null && !!t1.$isFuture)
      if (!!t1.$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_setValue(), this.get$_setError());
        return;
      }
    else {
      if (this._state !== 0)
        $.throwExpression(new $.StateError("Future already completed"));
      this._setValueUnchecked$1(result);
    }
  },
  $is_FutureImpl: true,
  $isFuture: true,
  static: {
"": "_FutureImpl__INCOMPLETE,_FutureImpl__PENDING_COMPLETE,_FutureImpl__CHAINED,_FutureImpl__CHAINED_UNLISTENED,_FutureImpl__VALUE,_FutureImpl__ERROR,_FutureImpl__UNHANDLED_ERROR",
_FutureImpl__FutureImpl$wait: function(futures) {
  var t1, t2, t3, future, pos, completer;
  t1 = {};
  t1.completer_0 = null;
  t1.values_1 = null;
  t2 = new $._FutureImpl__FutureImpl$wait_handleError(t1);
  t1.remaining_2 = 0;
  for (t3 = new $.ListIterator(futures, futures.length, 0, null); t3.moveNext$0();) {
    future = t3._liblib$_current;
    pos = t1.remaining_2;
    t1.remaining_2 = $.$add$ns(pos, 1);
    future.catchError$1(t2).then$1(new $._FutureImpl__FutureImpl$wait_closure(t1, pos));
  }
  if ($.$eq(t1.remaining_2, 0)) {
    t1 = new $._FutureImpl(0, $.get$_Zone__current(), null);
    t1._state = 8;
    t1._resultOrListeners = C.List_empty;
    return t1;
  }
  t1.values_1 = $.List_List(t1.remaining_2);
  completer = new $._AsyncCompleter(new $._FutureImpl(0, $.get$_Zone__current(), null), false);
  completer._Completer$0();
  t1.completer_0 = completer;
  return t1.completer_0.future;
}}

},

_FutureImpl__FutureImpl$wait_handleError: {"": "Closure;box_0",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.values_1 != null) {
      t1.values_1 = null;
      t1.completer_0.completeError$1(error);
    }
  }
},

_FutureImpl__FutureImpl$wait_closure: {"": "Closure;box_0,pos_1",
  call$1: function(value) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = t1.values_1;
    if (t2 == null)
      return;
    t3 = this.pos_1;
    if (t3 >>> 0 !== t3 || t3 >= t2.length)
      throw $.ioore(t3);
    t2[t3] = value;
    t1.remaining_2 = $.$sub$n(t1.remaining_2, 1);
    if ($.$eq(t1.remaining_2, 0)) {
      t2 = t1.completer_0;
      t2.complete$1(t2, t1.values_1);
    }
  }
},

_FutureImpl__asyncSetValue_closure: {"": "Closure;this_0,value_1",
  call$0: function() {
    this.this_0._setValueUnchecked$1(this.value_1);
  }
},

_FutureImpl__asyncSetError_closure: {"": "Closure;this_0,error_1",
  call$0: function() {
    this.this_0._setErrorUnchecked$1(this.error_1);
  }
},

_FutureImpl__scheduleUnhandledError_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2, error;
    t1 = this.this_0;
    t2 = t1.get$_state();
    if (t2 >= 16) {
      t1.set$_state((t2 & 4294967279) >>> 0);
      error = t1.get$_resultOrListeners();
      t1.get$_zone().handleUncaughtError$1(error);
    }
  }
},

_FutureImpl__addListener_closure: {"": "Closure;box_0,this_1",
  call$0: function() {
    var t1, t2, value;
    t1 = this.this_1;
    t2 = t1.get$_state();
    value = t1.get$_resultOrListeners();
    t1 = this.box_0;
    if (t2 === 8)
      t1.listener_0._sendValue$1(value);
    else
      t1.listener_0._sendError$1(value);
  }
},

_TransformFuture: {"": "_FutureImpl;_nextListener@",
  _sendValue$1: function(value) {
    var t1 = this._zone;
    t1._openCallbacks = t1._openCallbacks - 1;
    t1._runInZone$2(new $._TransformFuture__sendValue_closure(this, value), false);
  },
  _sendError$1: function(error) {
    var t1 = this._zone;
    t1._openCallbacks = t1._openCallbacks - 1;
    t1._runInZone$2(new $._TransformFuture__sendError_closure(this, error), false);
  },
  $as_FutureImpl: function(S, T) {
    return [T];
  },
  $asFuture: function(S, T) {
    return [T];
  }
},

_TransformFuture__sendValue_closure: {"": "Closure;this_0,value_1",
  call$0: function() {
    return this.this_0._zonedSendValue$1(this.value_1);
  }
},

_TransformFuture__sendError_closure: {"": "Closure;this_0,error_1",
  call$0: function() {
    return this.this_0._zonedSendError$1(this.error_1);
  }
},

_ThenFuture: {"": "_TransformFuture;_onValue,_nextListener,_state,_zone,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _zonedSendValue$1: function(value) {
    var result, e, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = new $._StackTrace(exception, null);
      t1 = $._asyncError(e, s);
      if (this._state !== 0)
        $.throwExpression(new $.StateError("Future already completed"));
      this._setErrorUnchecked$1(t1);
      return;
    }

    this._setOrChainValue$1(result);
  },
  _zonedSendError$1: function(error) {
    if (this._state !== 0)
      $.throwExpression(new $.StateError("Future already completed"));
    this._setErrorUnchecked$1(error);
  },
  $as_FutureImpl: function(S, T) {
    return [T];
  },
  $asFuture: function(S, T) {
    return [T];
  }
},

_CatchErrorFuture: {"": "_TransformFuture;_test,_onError,_nextListener,_state,_zone,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _zonedSendValue$1: function(value) {
    if (this._state !== 0)
      $.throwExpression(new $.StateError("Future already completed"));
    this._setValueUnchecked$1(value);
  },
  _zonedSendError$1: function(error) {
    var matchesTest, e, s, result, e0, s0, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e0 = t1;
      s0 = new $._StackTrace(exception, null);
      t1 = $._asyncError(e0, s0);
      if (this._state !== 0)
        $.throwExpression(new $.StateError("Future already completed"));
      this._setErrorUnchecked$1(t1);
      return;
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: null,
  $asFuture: null
},

_SubscribeFuture: {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_zone,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _zonedSendError$1: function(error) {
    var result, e, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = new $._StackTrace(exception, null);
      t1 = $._asyncError(e, s);
      if (this._state !== 0)
        $.throwExpression(new $.StateError("Future already completed"));
      this._setErrorUnchecked$1(t1);
      return;
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: function(S, T) {
    return [T];
  },
  $asFuture: function(S, T) {
    return [T];
  }
},

Stream: {"": "Object;",
  get$isBroadcast: function() {
    return false;
  },
  asBroadcastStream$2$onCancel$onListen: function(onCancel, onListen) {
    if (this.get$isBroadcast() === true)
      return this;
    return $._AsBroadcastStream$(this, onListen, onCancel);
  },
  asBroadcastStream$0: function() {
    return this.asBroadcastStream$2$onCancel$onListen(null, null);
  },
  forEach$1: function(_, action) {
    var t1, future;
    t1 = {};
    future = new $._FutureImpl(0, $.get$_Zone__current(), null);
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new $.Stream_forEach_closure(t1, this, action, future), true, new $.Stream_forEach_closure0(future), future.get$_setError());
    return future;
  },
  get$length: function(_) {
    var t1, future;
    t1 = {};
    future = new $._FutureImpl(0, $.get$_Zone__current(), null);
    t1.count_0 = 0;
    this.listen$4$cancelOnError$onDone$onError(new $.Stream_length_closure(t1), true, new $.Stream_length_closure0(t1, future), future.get$_setError());
    return future;
  },
  get$isEmpty: function(_) {
    var t1, future;
    t1 = {};
    future = new $._FutureImpl(0, $.get$_Zone__current(), null);
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new $.Stream_isEmpty_closure(t1, future), true, new $.Stream_isEmpty_closure0(future), future.get$_setError());
    return future;
  }
},

Stream_forEach_closure: {"": "Closure;box_0,this_1,action_2,future_3",
  call$1: function(element) {
    $._runUserCode(new $.Stream_forEach__closure(this.action_2, element), new $.Stream_forEach__closure0(), $._cancelAndError(this.box_0.subscription_0, this.future_3));
  }
},

Stream_forEach__closure: {"": "Closure;action_4,element_5",
  call$0: function() {
    return this.action_4.call$1(this.element_5);
  }
},

Stream_forEach__closure0: {"": "Closure;",
  call$1: function(_) {
  }
},

Stream_forEach_closure0: {"": "Closure;future_6",
  call$0: function() {
    var t1 = this.future_6;
    if (t1._state !== 0)
      $.throwExpression(new $.StateError("Future already completed"));
    t1._setValueUnchecked$1(null);
  }
},

Stream_length_closure: {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$add$ns(t1.count_0, 1);
  }
},

Stream_length_closure0: {"": "Closure;box_0,future_1",
  call$0: function() {
    var t1, t2;
    t1 = this.future_1;
    t2 = this.box_0.count_0;
    if (t1._state !== 0)
      $.throwExpression(new $.StateError("Future already completed"));
    t1._setValueUnchecked$1(t2);
  }
},

Stream_isEmpty_closure: {"": "Closure;box_0,future_1",
  call$1: function(_) {
    var t1;
    this.box_0.subscription_0.cancel$0();
    t1 = this.future_1;
    if (t1._state !== 0)
      $.throwExpression(new $.StateError("Future already completed"));
    t1._setValueUnchecked$1(false);
  }
},

Stream_isEmpty_closure0: {"": "Closure;future_2",
  call$0: function() {
    var t1 = this.future_2;
    if (t1._state !== 0)
      $.throwExpression(new $.StateError("Future already completed"));
    t1._setValueUnchecked$1(true);
  }
},

StreamSubscription: {"": "Object;"},

EventSink: {"": "Object;"},

_StreamController: {"": "Object;_state@",
  get$_pendingEvents: function() {
    if ((this._state & 8) === 0)
      return this._varData;
    return this._varData.get$varData();
  },
  _ensurePendingEvents$0: function() {
    var state, t1;
    if ((this._state & 8) === 0) {
      if (this._varData == null)
        this._varData = new $._StreamImplEvents(null, null, 0);
      return this._varData;
    }
    state = this._varData;
    t1 = state.get$varData();
    return t1;
  },
  get$_subscription: function() {
    if ((this._state & 8) !== 0)
      return this._varData.get$varData();
    return this._varData;
  },
  _badEventState$0: function() {
    if ((this._state & 4) !== 0)
      return new $.StateError("Cannot add event after closing");
    return new $.StateError("Cannot add event while adding a stream");
  },
  add$1: function(_, value) {
    var t1 = this._state;
    if (t1 >= 4)
      throw $.wrapException(this._badEventState$0());
    if ((t1 & 1) !== 0)
      this._sendData$1(value);
    else if ((t1 & 3) === 0)
      $.add$1$ax(this._ensurePendingEvents$0(), new $._DelayedData(value, null));
  },
  _liblib1$_add$1: function(value) {
    var t1 = this._state;
    if ((t1 & 1) !== 0)
      this._sendData$1(value);
    else if ((t1 & 3) === 0)
      $.add$1$ax(this._ensurePendingEvents$0(), new $._DelayedData(value, null));
  },
  _addError$1: function(error) {
    var t1 = this._state;
    if ((t1 & 1) !== 0)
      this._sendError$1(error);
    else if ((t1 & 3) === 0)
      $.add$1$ax(this._ensurePendingEvents$0(), new $._DelayedError(error, null));
  },
  _close$0: function() {
    var addState = this._varData;
    this._varData = addState.get$varData();
    this._state = (this._state & 4294967287) >>> 0;
    $.complete$0$x(addState);
  },
  _subscribe$4: function(onData, onError, onDone, cancelOnError) {
    var t1, t2, subscription, pendingEvents;
    if ((this._state & 3) !== 0)
      throw $.wrapException(new $.StateError("Stream has already been listened to."));
    t1 = $.get$_Zone__current();
    t2 = cancelOnError ? 1 : 0;
    subscription = new $._ControllerSubscription(this, onData, onError, onDone, t1, t2, null);
    subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError);
    pendingEvents = this.get$_pendingEvents();
    this._state = (this._state | 1) >>> 0;
    if ((this._state & 8) !== 0)
      this._varData.set$varData(subscription);
    else
      this._varData = subscription;
    subscription._setPendingEvents$1(pendingEvents);
    subscription._guardCallback$1(new $._StreamController__subscribe_closure(this));
    return subscription;
  },
  _recordCancel$1: function(subscription) {
    var t1, t2;
    if ((this._state & 8) !== 0)
      this._varData.cancel$0();
    this._varData = null;
    this._state = (this._state & 4294967286 | 2) >>> 0;
    $._runGuarded(this.get$_onCancel());
    t1 = this._doneFuture;
    if (t1 != null) {
      t1.get$_mayComplete;
      t2 = t1._state === 0;
    } else
      t2 = false;
    if (t2)
      t1._asyncSetValue$1(null);
  },
  _recordPause$1: function(subscription) {
    if ((this._state & 8) !== 0)
      $.pause$0$x(this._varData);
    $._runGuarded(this.get$_onPause());
  },
  _recordResume$1: function(subscription) {
    if ((this._state & 8) !== 0)
      this._varData.resume$0();
    $._runGuarded(this.get$_onResume());
  }
},

_StreamController__subscribe_closure: {"": "Closure;this_0",
  call$0: function() {
    $._runGuarded(this.this_0.get$_onListen());
  }
},

_SyncStreamControllerDispatch: {"": "Object;",
  _sendData$1: function(data) {
    this.get$_subscription()._liblib1$_add$1(data);
  },
  _sendError$1: function(error) {
    this.get$_subscription()._addError$1(error);
  }
},

_AsyncStreamControllerDispatch: {"": "Object;",
  _sendData$1: function(data) {
    this.get$_subscription()._addPending$1(new $._DelayedData(data, null));
  },
  _sendError$1: function(error) {
    this.get$_subscription()._addPending$1(new $._DelayedError(error, null));
  }
},

_AsyncStreamController: {"": "_StreamController__AsyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture"},

_StreamController__AsyncStreamControllerDispatch: {"": "_StreamController+_AsyncStreamControllerDispatch;"},

_StreamController__SyncStreamControllerDispatch: {"": "_StreamController+_SyncStreamControllerDispatch;"},

_SyncStreamController: {"": "_StreamController__SyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture"},

_NoCallbacks: {"": "Object;",
  get$_onListen: function() {
    return;
  },
  get$_onPause: function() {
    return;
  },
  get$_onResume: function() {
    return;
  },
  get$_onCancel: function() {
    return;
  }
},

_NoCallbackAsyncStreamController: {"": "_StreamController__AsyncStreamControllerDispatch0+_NoCallbacks;_varData,_state,_doneFuture"},

_StreamController__AsyncStreamControllerDispatch0: {"": "_StreamController+_AsyncStreamControllerDispatch;"},

_NoCallbackSyncStreamController: {"": "_StreamController__SyncStreamControllerDispatch0+_NoCallbacks;_varData,_state,_doneFuture"},

_StreamController__SyncStreamControllerDispatch0: {"": "_StreamController+_SyncStreamControllerDispatch;"},

_ControllerStream: {"": "_StreamImpl;_liblib1$_controller",
  _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
    return this._liblib1$_controller._subscribe$4(onData, onError, onDone, cancelOnError);
  },
  get$hashCode: function(_) {
    return ($.Primitives_objectHashCode(this._liblib1$_controller) ^ 892482866) >>> 0;
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (this === other)
      return true;
    t1 = $.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$is_ControllerStream)
      return false;
    return other._liblib1$_controller === this._liblib1$_controller;
  },
  $is_ControllerStream: true
},

_ControllerSubscription: {"": "_BufferingStreamSubscription;_liblib1$_controller<,_liblib1$_onData,_onError,_onDone,_zone,_state,_pending",
  _onCancel$0: function() {
    this.get$_liblib1$_controller()._recordCancel$1(this);
  },
  _onPause$0: function() {
    this.get$_liblib1$_controller()._recordPause$1(this);
  },
  get$_onPause: function() {
    return new $.BoundClosure$0(this, "_onPause$0", null);
  },
  _onResume$0: function() {
    this.get$_liblib1$_controller()._recordResume$1(this);
  },
  get$_onResume: function() {
    return new $.BoundClosure$0(this, "_onResume$0", null);
  }
},

_BufferingStreamSubscription: {"": "Object;_liblib1$_onData,_onError,_onDone,_zone<,_state@,_pending",
  _liblib1$_onData$1: function(arg0) {
    return this._liblib1$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _setPendingEvents$1: function(pendingEvents) {
    if (pendingEvents == null)
      return;
    this._pending = pendingEvents;
    if ($.get$isEmpty$asx(pendingEvents) !== true) {
      this._state = (this._state | 32) >>> 0;
      this._pending.schedule$1(this);
    }
  },
  pause$1: function(_, resumeSignal) {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    this._state = (t1 + 64 | 4) >>> 0;
    if (t1 < 64 && this._pending != null)
      this._pending.cancelSchedule$0();
    if ((t1 & 4) === 0 && (this._state & 16) === 0)
      this._guardCallback$1(this.get$_onPause());
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  },
  resume$0: function() {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    if (t1 >= 64) {
      this._state = t1 - 64;
      t1 = this._state;
      if (t1 < 64)
        if ((t1 & 32) !== 0 && $.get$isEmpty$asx(this._pending) !== true)
          this._pending.schedule$1(this);
        else {
          this._state = (this._state & 4294967291) >>> 0;
          if ((this._state & 16) === 0)
            this._guardCallback$1(this.get$_onResume());
        }
    }
  },
  cancel$0: function() {
    if ((this._state & 8) !== 0)
      return;
    this._cancel$0();
    var t1 = this._state;
    if ((t1 & 16) === 0) {
      this._state = (t1 | 16) >>> 0;
      this._onCancel$0();
      this._pending = null;
      this._state = (this._state & 4294967279) >>> 0;
    }
  },
  get$_mayResumeInput: function() {
    if (this._state < 64) {
      var t1 = this._pending;
      t1 = t1 == null || $.get$isEmpty$asx(t1) === true;
    } else
      t1 = false;
    return t1;
  },
  _cancel$0: function() {
    this._state = (this._state | 8) >>> 0;
    var t1 = this._zone;
    t1._openCallbacks = t1._openCallbacks - 1;
    t1._checkIfDone$0();
    if ((this._state & 32) !== 0)
      this._pending.cancelSchedule$0();
  },
  _liblib1$_add$1: function(data) {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    if (t1 < 16)
      this._sendData$1(data);
    else
      this._addPending$1(new $._DelayedData(data, null));
  },
  _addError$1: function(error) {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    if (t1 < 16)
      this._sendError$1(error);
    else
      this._addPending$1(new $._DelayedError(error, null));
  },
  _close$0: function() {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    this._state = (t1 | 2) >>> 0;
    if (this._state < 16)
      this._sendDone$0();
    else
      this._addPending$1(C.C__DelayedDone);
  },
  _onPause$0: function() {
  },
  get$_onPause: function() {
    return new $.BoundClosure$0(this, "_onPause$0", null);
  },
  _onResume$0: function() {
  },
  get$_onResume: function() {
    return new $.BoundClosure$0(this, "_onResume$0", null);
  },
  _onCancel$0: function() {
  },
  _addPending$1: function($event) {
    var pending, t1;
    pending = this._pending;
    if (pending == null) {
      pending = new $._StreamImplEvents(null, null, 0);
      this._pending = pending;
    }
    $.add$1$ax(pending, $event);
    t1 = this._state;
    if ((t1 & 32) === 0) {
      this._state = (t1 | 32) >>> 0;
      if (this._state < 64)
        this._pending.schedule$1(this);
    }
  },
  _sendData$1: function(data) {
    var t1 = this._state;
    this._state = (t1 | 16) >>> 0;
    this._zone._runInZone$2(new $._BufferingStreamSubscription__sendData_closure(this, data), true);
    this._state = (this._state & 4294967279) >>> 0;
    this._checkState$1((t1 & 4) !== 0);
  },
  _sendError$1: function(error) {
    var t1, t2, t3;
    t1 = this._state;
    this._state = (t1 | 16) >>> 0;
    t2 = this._zone;
    t3 = $.get$_Zone__current();
    if (!$.$eq(t2.get$_errorZone(), t3.get$_errorZone()))
      $.get$_Zone__current().handleUncaughtError$1(error);
    else
      t2._runInZone$2(new $._BufferingStreamSubscription__sendError_closure(this, error), true);
    this._state = (this._state & 4294967279) >>> 0;
    if ((this._state & 1) !== 0)
      this._cancel$0();
    this._checkState$1((t1 & 4) !== 0);
  },
  _sendDone$0: function() {
    this._state = (this._state | 26) >>> 0;
    var t1 = this._zone;
    t1._openCallbacks = t1._openCallbacks - 1;
    t1._runInZone$2(this._onDone, true);
    this._onCancel$0();
    this._state = (this._state & 4294967279) >>> 0;
  },
  _guardCallback$1: function(callback) {
    var t1 = this._state;
    this._state = (t1 | 16) >>> 0;
    callback.call$0();
    this._state = (this._state & 4294967279) >>> 0;
    this._checkState$1((t1 & 4) !== 0);
  },
  _checkState$1: function(wasInputPaused) {
    var t1, isInputPaused;
    if ((this._state & 32) !== 0 && $.get$isEmpty$asx(this._pending) === true) {
      this._state = (this._state & 4294967263) >>> 0;
      if ((this._state & 4) !== 0 && this.get$_mayResumeInput())
        this._state = (this._state & 4294967291) >>> 0;
    }
    for (; true; wasInputPaused = isInputPaused) {
      t1 = this._state;
      if ((t1 & 8) !== 0) {
        this._onCancel$0();
        this._pending = null;
        return;
      }
      isInputPaused = (t1 & 4) !== 0;
      if (wasInputPaused === isInputPaused)
        break;
      this._state = (t1 ^ 16) >>> 0;
      if (isInputPaused)
        this._onPause$0();
      else
        this._onResume$0();
      this._state = (this._state & 4294967279) >>> 0;
    }
    t1 = this._state;
    if ((t1 & 32) !== 0 && t1 < 64)
      this._pending.schedule$1(this);
  },
  _BufferingStreamSubscription$4: function(_onData, _onError, _onDone, cancelOnError) {
    var t1 = this._zone;
    t1._openCallbacks = t1._openCallbacks + 1;
  },
  static: {
"": "_BufferingStreamSubscription__STATE_CANCEL_ON_ERROR,_BufferingStreamSubscription__STATE_CLOSED,_BufferingStreamSubscription__STATE_INPUT_PAUSED,_BufferingStreamSubscription__STATE_CANCELED,_BufferingStreamSubscription__STATE_IN_CALLBACK,_BufferingStreamSubscription__STATE_HAS_PENDING,_BufferingStreamSubscription__STATE_PAUSE_COUNT,_BufferingStreamSubscription__STATE_PAUSE_COUNT_SHIFT",
_BufferingStreamSubscription$: function(_onData, _onError, _onDone, cancelOnError) {
  var t1, t2;
  t1 = $.get$_Zone__current();
  t2 = cancelOnError ? 1 : 0;
  t2 = new $._BufferingStreamSubscription(_onData, _onError, _onDone, t1, t2, null);
  t2._BufferingStreamSubscription$4(_onData, _onError, _onDone, cancelOnError);
  return t2;
}}

},

_BufferingStreamSubscription__sendData_closure: {"": "Closure;this_0,data_1",
  call$0: function() {
    return this.this_0._liblib1$_onData$1(this.data_1);
  }
},

_BufferingStreamSubscription__sendError_closure: {"": "Closure;this_0,error_1",
  call$0: function() {
    return this.this_0._onError$1(this.error_1);
  }
},

_StreamImpl: {"": "Stream;",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    if (onError == null)
      onError = $._nullErrorHandler$closure;
    if (onDone == null)
      onDone = $._nullDoneHandler$closure;
    return this._createSubscription$4(onData, onError, onDone, true === cancelOnError);
  },
  listen$1: function(onData) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
  },
  _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
    return $._BufferingStreamSubscription$(onData, onError, onDone, cancelOnError);
  },
  _onListen$1: function(subscription) {
  },
  get$_onListen: function() {
    return new $.BoundClosure$1(this, "_onListen$1", null);
  }
},

_DelayedEvent: {"": "Object;next@"},

_DelayedData: {"": "_DelayedEvent;value,next",
  perform$1: function(dispatch) {
    dispatch._sendData$1(this.value);
  }
},

_DelayedError: {"": "_DelayedEvent;error,next",
  perform$1: function(dispatch) {
    dispatch._sendError$1(this.error);
  }
},

_DelayedDone: {"": "Object;",
  perform$1: function(dispatch) {
    dispatch._sendDone$0();
  },
  get$next: function() {
    return;
  },
  set$next: function(_) {
    throw $.wrapException(new $.StateError("No events after a done."));
  }
},

_PendingEvents: {"": "Object;_state@",
  schedule$1: function(dispatch) {
    var t1 = this._state;
    if (t1 === 1)
      return;
    if (t1 >= 1) {
      this._state = 1;
      return;
    }
    $.runAsync(new $._PendingEvents_schedule_closure(this, dispatch));
    this._state = 1;
  },
  cancelSchedule$0: function() {
    if (this._state === 1)
      this._state = 3;
  }
},

_PendingEvents_schedule_closure: {"": "Closure;this_0,dispatch_1",
  call$0: function() {
    var t1, oldState;
    t1 = this.this_0;
    oldState = t1.get$_state();
    t1.set$_state(0);
    if (oldState === 3)
      return;
    t1.handleNext$1(this.dispatch_1);
  }
},

_StreamImplEvents: {"": "_PendingEvents;firstPendingEvent,lastPendingEvent,_state",
  get$isEmpty: function(_) {
    return this.lastPendingEvent == null;
  },
  add$1: function(_, $event) {
    var t1 = this.lastPendingEvent;
    if (t1 == null) {
      this.lastPendingEvent = $event;
      this.firstPendingEvent = $event;
    } else {
      t1.set$next($event);
      this.lastPendingEvent = $event;
    }
  },
  handleNext$1: function(dispatch) {
    var $event = this.firstPendingEvent;
    this.firstPendingEvent = $event.get$next();
    if (this.firstPendingEvent == null)
      this.lastPendingEvent = null;
    $event.perform$1(dispatch);
  },
  clear$0: function(_) {
    var t1 = this._state === 1;
    if (t1)
      if (t1)
        this._state = 3;
    this.lastPendingEvent = null;
    this.firstPendingEvent = null;
  }
},

_DummyStreamSubscription: {"": "Object;_pauseCounter@",
  pause$1: function(_, resumeSignal) {
    this._pauseCounter = this._pauseCounter + 1;
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  },
  resume$0: function() {
    var t1 = this._pauseCounter;
    if (t1 > 0)
      this._pauseCounter = t1 - 1;
  },
  cancel$0: function() {
  }
},

_DummyStreamSubscription_pause_closure: {"": "Closure;this_0",
  call$1: function(_) {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1.get$_pauseCounter();
    if (t2 > 0)
      t1.set$_pauseCounter(t2 - 1);
  }
},

_AsBroadcastStream: {"": "Stream;_source,_onListenHandler,_onCancelHandler,_zone<,_liblib1$_controller,_subscription",
  _onListenHandler$1: function(arg0) {
    return this._onListenHandler.call$1(arg0);
  },
  _onCancelHandler$1: function(arg0) {
    return this._onCancelHandler.call$1(arg0);
  },
  get$isBroadcast: function() {
    return true;
  },
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var t1, t2, t3;
    t1 = this._liblib1$_controller;
    if (t1 == null)
      return new $._DummyStreamSubscription(0);
    if (this._subscription == null) {
      t2 = t1.get$add(t1);
      t3 = t1.get$addError();
      this._subscription = this._source.listen$3$onDone$onError(t2, t1.get$close(t1), t3);
    }
    if (onError == null)
      onError = $._nullErrorHandler$closure;
    if (onDone == null)
      onDone = $._nullDoneHandler$closure;
    return this._liblib1$_controller._subscribe$4(onData, onError, onDone, true === cancelOnError);
  },
  listen$1: function(onData) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
  },
  _onCancel$0: function() {
    var t1, shutdown;
    t1 = this._liblib1$_controller;
    if (t1 != null) {
      t1.get$isClosed;
      shutdown = (t1._state & 4) !== 0;
    } else
      shutdown = true;
    if (shutdown) {
      t1 = this._subscription;
      if (t1 != null) {
        t1.cancel$0();
        this._subscription = null;
      }
      t1 = this._zone;
      t1._openCallbacks = t1._openCallbacks - 1;
      t1._checkIfDone$0();
    }
  },
  get$_onCancel: function() {
    return new $.BoundClosure$0(this, "_onCancel$0", null);
  },
  _onListen$0: function() {
  },
  get$_onListen: function() {
    return new $.BoundClosure$0(this, "_onListen$0", null);
  },
  _cancelSubscription$0: function() {
    var t1, t2, t3;
    t1 = this._subscription;
    if (t1 == null)
      return;
    this._subscription = null;
    t2 = this._liblib1$_controller;
    t2.get$_isEmpty;
    t3 = t2._liblib1$_next;
    if (t3 == null ? t2 == null : t3 === t2) {
      t2 = this._zone;
      t2._openCallbacks = t2._openCallbacks - 1;
      t2._checkIfDone$0();
    }
    this._liblib1$_controller = null;
    t1.cancel$0();
  },
  _pauseSubscription$1: function(resumeSignal) {
    var t1 = this._subscription;
    if (t1 == null)
      return;
    t1.pause$1(t1, resumeSignal);
  },
  _resumeSubscription$0: function() {
    var t1 = this._subscription;
    if (t1 == null)
      return;
    t1.resume$0();
  },
  _AsBroadcastStream$3: function(_source, _onListenHandler, _onCancelHandler) {
    var t1 = new $._AsBroadcastStreamController(null, this.get$_onListen(), this.get$_onCancel(), 0, null, null, null, null);
    t1._liblib1$_previous = t1;
    t1._liblib1$_next = t1;
    this._liblib1$_controller = t1;
    t1 = this._zone;
    t1._openCallbacks = t1._openCallbacks + 1;
  },
  static: {
_AsBroadcastStream$: function(_source, _onListenHandler, _onCancelHandler) {
  var t1 = new $._AsBroadcastStream(_source, _onListenHandler, _onCancelHandler, $.get$_Zone__current(), null, null);
  t1._AsBroadcastStream$3(_source, _onListenHandler, _onCancelHandler);
  return t1;
}}

},

_AsBroadcastStream__onCancel_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    return t1._onCancelHandler$1(new $._BroadcastSubscriptionWrapper(t1));
  }
},

_AsBroadcastStream__onListen_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    return t1._onListenHandler$1(new $._BroadcastSubscriptionWrapper(t1));
  }
},

_BroadcastSubscriptionWrapper: {"": "Object;_stream",
  pause$1: function(_, resumeSignal) {
    this._stream._pauseSubscription$1(resumeSignal);
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  },
  resume$0: function() {
    this._stream._resumeSubscription$0();
  },
  cancel$0: function() {
    this._stream._cancelSubscription$0();
  }
},

_cancelAndError_closure: {"": "Closure;subscription_0,future_1",
  call$1: function(error) {
    var t1;
    this.subscription_0.cancel$0();
    t1 = this.future_1;
    if (t1._state !== 0)
      $.throwExpression(new $.StateError("Future already completed"));
    t1._setErrorUnchecked$1(error);
  }
},

_ZoneBase: {"": "Object;",
  get$_errorZone: function() {
    return this._parentZone.get$_errorZone();
  },
  handleUncaughtError$1: function(error) {
    this._parentZone.handleUncaughtError$1(error);
  },
  _checkIfDone$0: function() {
    if (!this._isExecutingCallback && this._openCallbacks === 0 && this._children.length === 0)
      ;
  },
  _runInZone$2: function(f, handleUncaught) {
    var oldZone, oldIsExecuting, e, s, t1, exception;
    if ($.get$_Zone__current() === this && handleUncaught !== true && this._isExecutingCallback)
      return f.call$0();
    oldZone = $.get$_Zone__current();
    $._Zone__current = this;
    oldIsExecuting = this._isExecutingCallback;
    this._isExecutingCallback = true;
    try {
      try {
        t1 = f.call$0();
        return t1;
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = new $._StackTrace(exception, null);
        if (handleUncaught === true)
          this.handleUncaughtError$1($._asyncError(e, s));
        else
          throw exception;
      }

    } finally {
      this._isExecutingCallback = oldIsExecuting;
      $._Zone__current = oldZone;
      this._checkIfDone$0();
    }
  },
  runAsync$2: function(f, zone) {
    return this._parentZone.runAsync$2(f, zone);
  }
},

_DefaultZone: {"": "_ZoneBase;_parentZone,_children,_openCallbacks,_isExecutingCallback",
  get$_errorZone: function() {
    return this;
  },
  handleUncaughtError$1: function(error) {
    $._scheduleAsyncCallback(new $._DefaultZone_handleUncaughtError_closure(error));
  },
  runAsync$2: function(f, zone) {
    if (this === zone) {
      $._scheduleAsyncCallback(f);
      return;
    }
    zone._openCallbacks = zone._openCallbacks + 1;
    $._scheduleAsyncCallback(new $._DefaultZone_runAsync_closure(f, zone));
  }
},

_DefaultZone_handleUncaughtError_closure: {"": "Closure;error_0",
  call$0: function() {
    var t1, trace;
    t1 = this.error_0;
    $.Primitives_printString("Uncaught Error: " + $.S(t1));
    trace = $.getAttachedStackTrace(t1);
    $._attachStackTrace(t1, null);
    if (trace != null)
      $.Primitives_printString("Stack Trace:\n" + $.S(trace) + "\n");
    throw $.wrapException(t1);
  }
},

_DefaultZone_runAsync_closure: {"": "Closure;f_0,zone_1",
  call$0: function() {
    var t1 = this.zone_1;
    t1._openCallbacks = t1._openCallbacks - 1;
    t1._runInZone$2(this.f_0, true);
  }
},

_ZoneTimer: {"": "Object;_zone<,_liblib1$_callback,_timer",
  _liblib1$_callback$1: function(arg0) {
    return this._liblib1$_callback.call$1(arg0);
  },
  _run$0: function() {
    var t1 = this._zone;
    t1._openCallbacks = t1._openCallbacks - 1;
    t1._runInZone$2(this._liblib1$_callback, true);
  },
  get$_run: function() {
    return new $.BoundClosure$0(this, "_run$0", null);
  },
  cancel$0: function() {
    var t1 = this._timer;
    t1.get$isActive;
    if (t1._handle != null) {
      t1 = this._zone;
      t1._openCallbacks = t1._openCallbacks - 1;
      t1._checkIfDone$0();
    }
    this._timer.cancel$0();
  }
},

_PeriodicZoneTimer: {"": "Object;_zone<,_liblib1$_callback,_timer",
  _liblib1$_callback$1: function(arg0) {
    return this._liblib1$_callback.call$1(arg0);
  },
  _run$1: function(timer) {
    this._zone._runInZone$2(new $._PeriodicZoneTimer__run_closure(this), true);
  },
  get$_run: function() {
    return new $.BoundClosure$1(this, "_run$1", null);
  },
  cancel$0: function() {
    var t1 = this._timer;
    t1.get$isActive;
    if (t1._handle != null) {
      t1 = this._zone;
      t1._openCallbacks = t1._openCallbacks - 1;
      t1._checkIfDone$0();
    }
    this._timer.cancel$0();
  }
},

_PeriodicZoneTimer__run_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1._liblib1$_callback$1(t1);
  }
}}],
["dart.collection", "dart:collection", , {
Maps_mapToString: function(m) {
  var t1, result, i, t2;
  t1 = {};
  for (i = 0; i < $.get$Maps__toStringList().length; ++i) {
    t2 = $.get$Maps__toStringList();
    if (i >= t2.length)
      throw $.ioore(i);
    if (t2[i] === m)
      return "{...}";
  }
  result = $.StringBuffer$("");
  try {
    $.get$Maps__toStringList().push(m);
    result.write$1("{");
    t1.first_0 = true;
    $.forEach$1$ax(m, new $.Maps_mapToString_closure(t1, result));
    result.write$1("}");
  } finally {
    t1 = $.get$Maps__toStringList();
    if (0 >= t1.length)
      throw $.ioore(0);
    t1.pop();
  }
  return result.get$_contents();
},

HashMap_values_closure: {"": "Closure;this_0",
  call$1: function(each) {
    return $.$index$asx(this.this_0, each);
  }
},

HashMapKeyIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._liblib0$_length;
  },
  get$isEmpty: function(_) {
    return this._map._liblib0$_length === 0;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    return new $.HashMapKeyIterator(t1, t1._computeKeys$0(), 0, null);
  },
  forEach$1: function(_, f) {
    var t1, keys, $length, i;
    t1 = this._map;
    keys = t1._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      f.call$1(keys[i]);
      if (keys !== t1._keys)
        throw $.wrapException(new $.ConcurrentModificationError(t1));
    }
  }
},

HashMapKeyIterator: {"": "Object;_map,_keys,_offset,_liblib0$_current",
  get$current: function() {
    return this._liblib0$_current;
  },
  moveNext$0: function() {
    var keys, offset, t1;
    keys = this._keys;
    offset = this._offset;
    t1 = this._map;
    if (keys !== t1._keys)
      throw $.wrapException(new $.ConcurrentModificationError(t1));
    else if (offset >= keys.length) {
      this._liblib0$_current = null;
      return false;
    } else {
      this._liblib0$_current = keys[offset];
      this._offset = offset + 1;
      return true;
    }
  }
},

LinkedHashMap_values_closure: {"": "Closure;this_0",
  call$1: function(each) {
    return $.$index$asx(this.this_0, each);
  }
},

LinkedHashMapCell: {"": "Object;_key>,_value@,_next@,_previous<"},

LinkedHashMapKeyIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._liblib0$_length;
  },
  get$isEmpty: function(_) {
    var t1 = this._map._liblib0$_length;
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout1(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout1: function(state0, t1) {
    return $.$eq(t1, 0);
  },
  get$iterator: function(_) {
    var t1 = this._map;
    t1 = new $.LinkedHashMapKeyIterator(t1, t1._modifications, null, null);
    t1._cell = t1._map._first;
    return t1;
  },
  forEach$1: function(_, f) {
    var t1, cell, modifications, t2;
    t1 = this._map;
    cell = t1._first;
    modifications = t1._modifications;
    for (t2 = $.getInterceptor(modifications); cell != null;) {
      f.call$1($.get$_key$x(cell));
      if (!t2.$eq(modifications, t1._modifications))
        throw $.wrapException(new $.ConcurrentModificationError(t1));
      cell = cell.get$_next();
    }
  }
},

LinkedHashMapKeyIterator: {"": "Object;_map,_modifications,_cell,_liblib0$_current",
  get$current: function() {
    return this._liblib0$_current;
  },
  moveNext$0: function() {
    var t1 = this._map;
    if (!$.$eq(this._modifications, t1._modifications))
      throw $.wrapException(new $.ConcurrentModificationError(t1));
    else {
      t1 = this._cell;
      if (t1 == null) {
        this._liblib0$_current = null;
        return false;
      } else {
        this._liblib0$_current = $.get$_key$x(t1);
        this._cell = this._cell.get$_next();
        return true;
      }
    }
  }
},

HashSetIterator: {"": "Object;_set,_elements,_offset,_liblib0$_current",
  get$current: function() {
    return this._liblib0$_current;
  },
  moveNext$0: function() {
    var elements, offset, t1;
    elements = this._elements;
    offset = this._offset;
    t1 = this._set;
    if (elements !== t1._elements)
      throw $.wrapException(new $.ConcurrentModificationError(t1));
    else if (offset >= elements.length) {
      this._liblib0$_current = null;
      return false;
    } else {
      this._liblib0$_current = elements[offset];
      this._offset = offset + 1;
      return true;
    }
  }
},

HashMap: {"": "Object;_liblib0$_length,_strings,_nums,_rest,_keys",
  get$length: function(_) {
    return this._liblib0$_length;
  },
  get$isEmpty: function(_) {
    return this._liblib0$_length === 0;
  },
  get$keys: function(_) {
    return new $.HashMapKeyIterable(this);
  },
  get$values: function(_) {
    return new $.MappedIterable(new $.HashMapKeyIterable(this), new $.HashMap_values_closure(this));
  },
  $index: function(_, key) {
    var strings, t1, entry, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        t1 = null;
      else {
        entry = strings[key];
        t1 = entry === strings ? null : entry;
      }
      return t1;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        t1 = null;
      else {
        entry = nums[key];
        t1 = entry === nums ? null : entry;
      }
      return t1;
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[$.get$hashCode$(key) & 0x3ffffff];
      index = $.HashMap__findBucketIndex(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    }
  },
  $indexSet: function(_, key, value) {
    var strings, table, nums, rest, hash, bucket, t1, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        if (table == null)
          table["<non-identifier-key>"] = table;
        else
          table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._strings = table;
        strings = table;
      }
      if (strings[key] == null) {
        this._liblib0$_length = this._liblib0$_length + 1;
        this._keys = null;
      }
      if (value == null)
        strings[key] = strings;
      else
        strings[key] = value;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        if (table == null)
          table["<non-identifier-key>"] = table;
        else
          table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._nums = table;
        nums = table;
      }
      if (nums[key] == null) {
        this._liblib0$_length = this._liblib0$_length + 1;
        this._keys = null;
      }
      if (value == null)
        nums[key] = nums;
      else
        nums[key] = value;
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        if (table == null)
          table["<non-identifier-key>"] = table;
        else
          table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._rest = table;
        rest = table;
      }
      hash = $.get$hashCode$(key) & 0x3ffffff;
      bucket = rest[hash];
      if (bucket == null) {
        t1 = [key, value];
        if (t1 == null)
          rest[hash] = rest;
        else
          rest[hash] = t1;
        this._liblib0$_length = this._liblib0$_length + 1;
        this._keys = null;
      } else {
        index = $.HashMap__findBucketIndex(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          this._liblib0$_length = this._liblib0$_length + 1;
          this._keys = null;
        }
      }
    }
  },
  forEach$1: function(_, action) {
    var keys, $length, i, key;
    keys = this._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      key = keys[i];
      action.call$2(key, this.$index(this, key));
      if (keys !== this._keys)
        throw $.wrapException(new $.ConcurrentModificationError(this));
    }
  },
  toString$0: function(_) {
    return $.Maps_mapToString(this);
  },
  _computeKeys$0: function() {
    var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
    t1 = this._keys;
    if (t1 != null)
      return t1;
    result = $.List_List(this._liblib0$_length);
    strings = this._strings;
    if (strings != null) {
      names = Object.getOwnPropertyNames(strings);
      entries = names.length;
      for (index = 0, i = 0; i < entries; ++i) {
        result[index] = names[i];
        ++index;
      }
    } else
      index = 0;
    nums = this._nums;
    if (nums != null) {
      names = Object.getOwnPropertyNames(nums);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        result[index] = +names[i];
        ++index;
      }
    }
    rest = this._rest;
    if (rest != null) {
      names = Object.getOwnPropertyNames(rest);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        bucket = rest[names[i]];
        $length = bucket.length;
        for (i0 = 0; i0 < $length; i0 += 2) {
          result[index] = bucket[i0];
          ++index;
        }
      }
    }
    this._keys = result;
    return result;
  },
  $isMap: true,
  $asMap: null,
  static: {
HashMap__findBucketIndex: function(bucket, key) {
  var $length, i;
  if (bucket == null)
    return -1;
  $length = bucket.length;
  for (i = 0; i < $length; i += 2)
    if ($.$eq(bucket[i], key))
      return i;
  return -1;
}}

},

_HashSetBase: {"": "IterableBase;",
  toString$0: function(_) {
    return $.IterableMixinWorkaround_toStringIterable(this, "{", "}");
  }
},

HashSet: {"": "_HashSetBase;_liblib0$_length,_strings,_nums,_rest,_elements",
  get$iterator: function(_) {
    return new $.HashSetIterator(this, this._computeElements$0(), 0, null);
  },
  get$length: function(_) {
    return this._liblib0$_length;
  },
  get$isEmpty: function(_) {
    return this._liblib0$_length === 0;
  },
  contains$1: function(_, object) {
    var strings, nums, rest;
    if (false) {
      strings = this._strings;
      return strings == null ? false : strings[object] != null;
    } else if ((object & 0x3ffffff) === object) {
      nums = this._nums;
      return nums == null ? false : nums[object] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return $.HashSet__findBucketIndex(rest[C.JSInt_methods.get$hashCode(object) & 0x3ffffff], object) >= 0;
    }
  },
  add$1: function(_, element) {
    var strings, table, nums, rest, hash, bucket;
    if (typeof element === "string" && element !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._strings = table;
        strings = table;
      }
      this._addHashTableEntry$2(strings, element);
    } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._nums = table;
        nums = table;
      }
      this._addHashTableEntry$2(nums, element);
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._rest = table;
        rest = table;
      }
      hash = $.get$hashCode$(element) & 0x3ffffff;
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if ($.HashSet__findBucketIndex(bucket, element) >= 0)
          return;
        bucket.push(element);
      }
      this._liblib0$_length = this._liblib0$_length + 1;
      this._elements = null;
    }
  },
  remove$1: function(_, object) {
    var rest, bucket, index;
    if (typeof object === "string" && object !== "__proto__")
      return this._removeHashTableEntry$2(this._strings, object);
    else if (typeof object === "number" && (object & 0x3ffffff) === object)
      return this._removeHashTableEntry$2(this._nums, object);
    else {
      rest = this._rest;
      if (rest == null)
        return false;
      bucket = rest[$.get$hashCode$(object) & 0x3ffffff];
      index = $.HashSet__findBucketIndex(bucket, object);
      if (index < 0)
        return false;
      this._liblib0$_length = this._liblib0$_length - 1;
      this._elements = null;
      bucket.splice(index, 1);
      return true;
    }
  },
  clear$0: function(_) {
    if (this._liblib0$_length > 0) {
      this._elements = null;
      this._rest = null;
      this._nums = null;
      this._strings = null;
      this._liblib0$_length = 0;
    }
  },
  _computeElements$0: function() {
    var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
    t1 = this._elements;
    if (t1 != null)
      return t1;
    result = $.List_List(this._liblib0$_length);
    strings = this._strings;
    if (strings != null) {
      names = Object.getOwnPropertyNames(strings);
      entries = names.length;
      for (index = 0, i = 0; i < entries; ++i) {
        result[index] = names[i];
        ++index;
      }
    } else
      index = 0;
    nums = this._nums;
    if (nums != null) {
      names = Object.getOwnPropertyNames(nums);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        result[index] = +names[i];
        ++index;
      }
    }
    rest = this._rest;
    if (rest != null) {
      names = Object.getOwnPropertyNames(rest);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        bucket = rest[names[i]];
        $length = bucket.length;
        for (i0 = 0; i0 < $length; ++i0) {
          result[index] = bucket[i0];
          ++index;
        }
      }
    }
    this._elements = result;
    return result;
  },
  _addHashTableEntry$2: function(table, element) {
    if (table[element] != null)
      return;
    table[element] = 0;
    this._liblib0$_length = this._liblib0$_length + 1;
    this._elements = null;
  },
  _removeHashTableEntry$2: function(table, element) {
    if (table != null && table[element] != null) {
      delete table[element];
      this._liblib0$_length = this._liblib0$_length - 1;
      this._elements = null;
      return true;
    } else
      return false;
  },
  static: {
HashSet__findBucketIndex: function(bucket, element) {
  var $length, i;
  if (bucket == null)
    return -1;
  $length = bucket.length;
  for (i = 0; i < $length; ++i)
    if ($.$eq(bucket[i], element))
      return i;
  return -1;
}}

},

IterableBase: {"": "Object;",
  forEach$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  any$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) === true)
        return true;
    return false;
  },
  toList$1$growable: function(_, growable) {
    return $.List_List$from(this, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$length: function(_) {
    var it, count;
    it = this.get$iterator(this);
    for (count = 0; it.moveNext$0() === true;)
      ++count;
    return count;
  },
  get$isEmpty: function(_) {
    return this.get$iterator(this).moveNext$0() !== true;
  },
  elementAt$1: function(_, index) {
    var t1, remaining, element;
    if (typeof index !== "number")
      return this.elementAt$1$bailout(1, index);
    if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0() === true;) {
      element = t1.get$current();
      if (remaining === 0)
        return element;
      --remaining;
    }
    throw $.wrapException(new $.RangeError("value " + $.S(index)));
  },
  elementAt$1$bailout: function(state0, index) {
    var t1, remaining, element, t2;
    if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0() === true;) {
      element = t1.get$current();
      t2 = $.getInterceptor(remaining);
      if (t2.$eq(remaining, 0))
        return element;
      remaining = t2.$sub(remaining, 1);
    }
    throw $.wrapException(new $.RangeError("value " + $.S(index)));
  }
},

LinkedHashMap: {"": "Object;_liblib0$_length,_strings,_nums,_rest,_first,_last,_modifications",
  containsKey$1: function(_, key) {
    var strings, nums, rest;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        return false;
      return strings[key] != null;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return false;
      return nums[key] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return $.LinkedHashMap__findBucketIndex(rest[$.get$hashCode$(key) & 0x3ffffff], key) >= 0;
    }
  },
  $index: function(_, key) {
    var strings, cell, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        return;
      cell = strings[key];
      return cell == null ? null : cell.get$_value();
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return;
      cell = nums[key];
      return cell == null ? null : cell.get$_value();
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[$.get$hashCode$(key) & 0x3ffffff];
      index = $.LinkedHashMap__findBucketIndex(bucket, key);
      if (index < 0)
        return;
      return bucket[index].get$_value();
    }
  },
  $indexSet: function(_, key, value) {
    var strings, table, cell, nums, rest, hash, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._strings = table;
        strings = table;
      }
      cell = strings[key];
      if (cell == null)
        strings[key] = this._newLinkedCell$2(key, value);
      else
        cell.set$_value(value);
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._nums = table;
        nums = table;
      }
      cell = nums[key];
      if (cell == null)
        nums[key] = this._newLinkedCell$2(key, value);
      else
        cell.set$_value(value);
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._rest = table;
        rest = table;
      }
      hash = $.get$hashCode$(key) & 0x3ffffff;
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [this._newLinkedCell$2(key, value)];
      else {
        index = $.LinkedHashMap__findBucketIndex(bucket, key);
        if (index >= 0)
          bucket[index].set$_value(value);
        else
          bucket.push(this._newLinkedCell$2(key, value));
      }
    }
  },
  remove$1: function(_, key) {
    var rest, bucket, index, cell;
    if (typeof key === "string" && key !== "__proto__")
      return this._removeHashTableEntry$2(this._strings, key);
    else if (typeof key === "number" && (key & 0x3ffffff) === key)
      return this._removeHashTableEntry$2(this._nums, key);
    else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[$.get$hashCode$(key) & 0x3ffffff];
      index = $.LinkedHashMap__findBucketIndex(bucket, key);
      if (index < 0)
        return;
      cell = bucket.splice(index, 1)[0];
      this._unlinkCell$1(cell);
      return cell.get$_value();
    }
  },
  forEach$1: function(_, action) {
    var cell, modifications, t1;
    cell = this._first;
    modifications = this._modifications;
    for (t1 = $.getInterceptor(modifications); cell != null;) {
      action.call$2($.get$_key$x(cell), cell.get$_value());
      if (!t1.$eq(modifications, this._modifications))
        throw $.wrapException(new $.ConcurrentModificationError(this));
      cell = cell.get$_next();
    }
  },
  get$keys: function(_) {
    return new $.LinkedHashMapKeyIterable(this);
  },
  get$values: function(_) {
    return new $.MappedIterable(new $.LinkedHashMapKeyIterable(this), new $.LinkedHashMap_values_closure(this));
  },
  get$length: function(_) {
    return this._liblib0$_length;
  },
  get$isEmpty: function(_) {
    var t1 = this._liblib0$_length;
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$eq(t1, 0);
  },
  toString$0: function(_) {
    return $.Maps_mapToString(this);
  },
  _removeHashTableEntry$2: function(table, key) {
    var cell;
    if (table == null)
      return;
    cell = table[key];
    if (cell == null)
      return;
    this._unlinkCell$1(cell);
    delete table[key];
    return cell.get$_value();
  },
  _newLinkedCell$2: function(key, value) {
    var cell, last, t1;
    cell = new $.LinkedHashMapCell(key, value, null, null);
    if (this._first == null) {
      this._last = cell;
      this._first = cell;
    } else {
      last = this._last;
      cell._previous = last;
      last.set$_next(cell);
      this._last = cell;
    }
    this._liblib0$_length = $.$add$ns(this._liblib0$_length, 1);
    t1 = $.$add$ns(this._modifications, 1);
    if (typeof t1 !== "number")
      throw t1.$and();
    this._modifications = t1 & 67108863;
    return cell;
  },
  _unlinkCell$1: function(cell) {
    var previous, next, t1;
    previous = cell.get$_previous();
    next = cell.get$_next();
    if (previous == null)
      this._first = next;
    else
      previous.set$_next(next);
    if (next == null)
      this._last = previous;
    else
      next._previous = previous;
    this._liblib0$_length = $.$sub$n(this._liblib0$_length, 1);
    t1 = $.$add$ns(this._modifications, 1);
    if (typeof t1 !== "number")
      throw t1.$and();
    this._modifications = t1 & 67108863;
  },
  $isMap: true,
  $asMap: null,
  static: {
LinkedHashMap__findBucketIndex: function(bucket, key) {
  var $length, i;
  if (bucket == null)
    return -1;
  $length = bucket.length;
  for (i = 0; i < $length; ++i)
    if ($.$eq($.get$_key$x(bucket[i]), key))
      return i;
  return -1;
}}

},

ListMixin: {"": "Object;",
  get$iterator: function(receiver) {
    return new $.ListIterator(receiver, this.get$length(receiver), 0, null);
  },
  elementAt$1: function(receiver, index) {
    return this.$index(receiver, index);
  },
  forEach$1: function(receiver, action) {
    var $length, i;
    $length = this.get$length(receiver);
    for (i = 0; i < $length; ++i) {
      action.call$1(this.$index(receiver, i));
      if ($length !== this.get$length(receiver))
        throw $.wrapException(new $.ConcurrentModificationError(receiver));
    }
  },
  get$isEmpty: function(receiver) {
    return this.get$length(receiver) === 0;
  },
  add$1: function(receiver, element) {
    var t1 = this.get$length(receiver);
    this.set$length(receiver, t1 + 1);
    this.$indexSet(receiver, t1, element);
  },
  toString$0: function(receiver) {
    var result, i, t1;
    for (i = 0; i < $.get$ListMixin__toStringList().length; ++i) {
      t1 = $.get$ListMixin__toStringList();
      if (i >= t1.length)
        throw $.ioore(i);
      if (t1[i] === receiver)
        return "[...]";
    }
    result = $.StringBuffer$("");
    try {
      $.get$ListMixin__toStringList().push(receiver);
      result.write$1("[");
      result.writeAll$2(receiver, ", ");
      result.write$1("]");
    } finally {
      t1 = $.get$ListMixin__toStringList();
      if (0 >= t1.length)
        throw $.ioore(0);
      t1.pop();
    }
    return result.get$_contents();
  },
  $isList: true,
  $asList: null
},

Maps_mapToString_closure: {"": "Closure;box_0,result_1",
  call$2: function(k, v) {
    var t1 = this.box_0;
    if (!t1.first_0)
      this.result_1.write$1(", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t1.write$1(k);
    t1.write$1(": ");
    t1.write$1(v);
  }
},

ListQueue: {"": "IterableBase;_table,_head,_tail,_modificationCount",
  get$iterator: function(_) {
    return $._ListQueueIterator$(this);
  },
  forEach$1: function(_, action) {
    var modificationCount, i, t1;
    modificationCount = this._modificationCount;
    for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      action.call$1(t1[i]);
      if (modificationCount !== this._modificationCount)
        $.throwExpression(new $.ConcurrentModificationError(this));
    }
  },
  get$isEmpty: function(_) {
    return this._head === this._tail;
  },
  get$length: function(_) {
    return (this._tail - this._head & this._table.length - 1) >>> 0;
  },
  add$1: function(_, element) {
    this._add$1(element);
  },
  toString$0: function(_) {
    return $.IterableMixinWorkaround_toStringIterable(this, "{", "}");
  },
  removeFirst$0: function() {
    var t1, t2, t3, result;
    if (this._head === this._tail)
      throw $.wrapException(new $.StateError("No elements"));
    this._modificationCount = this._modificationCount + 1;
    t1 = this._table;
    t2 = this._head;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw $.ioore(t2);
    result = t1[t2];
    this._head = (t2 + 1 & t3 - 1) >>> 0;
    return result;
  },
  _add$1: function(element) {
    var t1, t2, t3;
    t1 = this._table;
    t2 = this._tail;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw $.ioore(t2);
    t1[t2] = element;
    this._tail = (t2 + 1 & t3 - 1) >>> 0;
    if (this._head === this._tail)
      this._grow$0();
    this._modificationCount = this._modificationCount + 1;
  },
  _grow$0: function() {
    var newTable, t1, t2, split;
    newTable = $.List_List(this._table.length * 2);
    t1 = this._table;
    t2 = this._head;
    split = t1.length - t2;
    $.IterableMixinWorkaround_setRangeList(newTable, 0, split, t1, t2);
    t1 = this._head;
    t2 = this._table;
    $.IterableMixinWorkaround_setRangeList(newTable, split, split + t1, t2, 0);
    this._head = 0;
    this._tail = this._table.length;
    this._table = newTable;
  },
  ListQueue$1: function(initialCapacity) {
    if (true)
      initialCapacity = 8;
    else {
      if (typeof initialCapacity !== "number")
        throw initialCapacity.$sub();
      if ((initialCapacity & initialCapacity - 1) >>> 0 !== 0)
        initialCapacity = $.ListQueue__nextPowerOf2(initialCapacity);
    }
    this._table = $.List_List(initialCapacity);
  },
  static: {
"": "ListQueue__INITIAL_CAPACITY",
ListQueue$: function(initialCapacity) {
  var t1 = new $.ListQueue(null, 0, 0, 0);
  t1.ListQueue$1(initialCapacity);
  return t1;
},

ListQueue__nextPowerOf2: function(number) {
  var nextNumber;
  number = C.JSNull_methods.$shl(number, 2) - 1;
  for (; true; number = nextNumber) {
    nextNumber = (number & number - 1) >>> 0;
    if (nextNumber === 0)
      return number;
  }
}}

},

_ListQueueIterator: {"": "Object;_queue,_end,_modificationCount,_liblib0$_position,_liblib0$_current",
  get$current: function() {
    return this._liblib0$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._queue;
    if (this._modificationCount !== t1._modificationCount)
      $.throwExpression(new $.ConcurrentModificationError(t1));
    t2 = this._liblib0$_position;
    if (t2 === this._end) {
      this._liblib0$_current = null;
      return false;
    }
    t3 = t1._table;
    if (t2 < 0 || t2 >= t3.length)
      throw $.ioore(t2);
    this._liblib0$_current = t3[t2];
    this._liblib0$_position = (this._liblib0$_position + 1 & t1._table.length - 1) >>> 0;
    return true;
  },
  static: {
_ListQueueIterator$: function(queue) {
  return new $._ListQueueIterator(queue, queue._tail, queue._modificationCount, queue._head, null);
}}

}}],
["dart.core", "dart:core", , {
Error_safeToString: function(object) {
  var buffer, t1, i, codeUnit, charCodes, t2;
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString$0(object);
  if (typeof object === "string") {
    buffer = new $.StringBuffer("");
    buffer._contents = "\"";
    for (t1 = object.length, i = 0; i < t1; ++i) {
      if (i >= t1)
        $.throwExpression(new $.RangeError("value " + i));
      codeUnit = object.charCodeAt(i);
      if (codeUnit <= 31)
        if (codeUnit === 10)
          buffer._contents = buffer._contents + "\\n";
        else if (codeUnit === 13)
          buffer._contents = buffer._contents + "\\r";
        else if (codeUnit === 9)
          buffer._contents = buffer._contents + "\\t";
        else {
          buffer._contents = buffer._contents + "\\x";
          if (codeUnit < 16)
            buffer._contents = buffer._contents + "0";
          else {
            buffer._contents = buffer._contents + "1";
            codeUnit -= 16;
          }
          charCodes = $.List_List$filled(1, codeUnit < 10 ? 48 + codeUnit : 87 + codeUnit);
          t2 = $.Primitives_stringFromCharCodes(charCodes);
          buffer._contents = buffer._contents + t2;
        }
      else if (codeUnit === 92)
        buffer._contents = buffer._contents + "\\\\";
      else if (codeUnit === 34)
        buffer._contents = buffer._contents + "\\\"";
      else {
        charCodes = $.List_List$filled(1, codeUnit);
        t2 = $.Primitives_stringFromCharCodes(charCodes);
        buffer._contents = buffer._contents + t2;
      }
    }
    buffer._contents = buffer._contents + "\"";
    return buffer._contents;
  }
  return "Instance of '" + $.Primitives_objectTypeName(object) + "'";
},

List_List: function($length) {
  if ($length == null)
    return new Array(0);
  if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
    throw $.wrapException(new $.ArgumentError("Length must be a positive integer: " + $.S($length) + "."));
  return $.Primitives_newFixedList($length);
},

List_List$filled: function($length, fill) {
  var result, t1, i;
  if ($length < 0)
    throw $.wrapException(new $.ArgumentError("Length must be a positive integer: " + $length + "."));
  result = $.Primitives_newFixedList($length);
  if ($length !== 0 && true)
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
},

List_List$from: function(other, growable) {
  var list, t1, $length, fixedList, i;
  list = $.List_List(null);
  for (t1 = $.get$iterator$ax(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  if (growable)
    return list;
  $length = list.length;
  fixedList = $.List_List($length);
  for (t1 = list.length, i = 0; i < $length; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    fixedList[i] = list[i];
  }
  return fixedList;
},

NoSuchMethodError_toString_closure: {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if ($.$gt$n(t1.i_1, 0))
      t1.sb_0.write$1(", ");
    t1.sb_0.write$1(key.get$_name());
    t1.sb_0.write$1(": ");
    t1.sb_0.write$1($.Error_safeToString(value));
    t1.i_1 = $.$add$ns(t1.i_1, 1);
  }
},

DateTime: {"": "Object;millisecondsSinceEpoch,isUtc",
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = $.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isDateTime)
      return false;
    return $.$eq(this.millisecondsSinceEpoch, other.millisecondsSinceEpoch) && $.$eq(this.isUtc, other.isUtc);
  },
  get$hashCode: function(_) {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function(_) {
    var t1, y, m, d, h, min, sec, ms;
    t1 = new $.DateTime_toString_twoDigits();
    y = new $.DateTime_toString_fourDigits().call$1($.Primitives_getYear(this));
    m = t1.call$1($.Primitives_getMonth(this));
    d = t1.call$1($.Primitives_getDay(this));
    h = t1.call$1($.Primitives_getHours(this));
    min = t1.call$1($.Primitives_getMinutes(this));
    sec = t1.call$1($.Primitives_getSeconds(this));
    ms = new $.DateTime_toString_threeDigits().call$1($.Primitives_getMilliseconds(this));
    if (this.isUtc === true)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(_, duration) {
    var ms, t1, t2;
    ms = this.millisecondsSinceEpoch;
    if (typeof ms !== "number")
      return this.add$1$bailout(1, duration, ms);
    t1 = ms + duration.get$inMilliseconds();
    t2 = this.isUtc;
    if (C.JSNumber_methods.abs$0(t1) > 8640000000000000)
      $.throwExpression(new $.ArgumentError(t1));
    if (t2 == null)
      $.throwExpression(new $.ArgumentError(t2));
    return new $.DateTime(t1, t2);
  },
  add$1$bailout: function(state0, duration, ms) {
    var t1, t2;
    t1 = $.$add$ns(ms, duration.get$inMilliseconds());
    t2 = this.isUtc;
    if ($.abs$0$n(t1) > 8640000000000000)
      $.throwExpression(new $.ArgumentError(t1));
    if (t2 == null)
      $.throwExpression(new $.ArgumentError(t2));
    return new $.DateTime(t1, t2);
  },
  DateTime$_now$0: function() {
    $.Primitives_lazyAsJsDate(this);
  },
  DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
    if ($.abs$0$n(millisecondsSinceEpoch) > 8640000000000000)
      throw $.wrapException(new $.ArgumentError(millisecondsSinceEpoch));
    if (isUtc == null)
      throw $.wrapException(new $.ArgumentError(isUtc));
  },
  $isDateTime: true,
  static: {
"": "DateTime_MONDAY,DateTime_TUESDAY,DateTime_WEDNESDAY,DateTime_THURSDAY,DateTime_FRIDAY,DateTime_SATURDAY,DateTime_SUNDAY,DateTime_DAYS_PER_WEEK,DateTime_JANUARY,DateTime_FEBRUARY,DateTime_MARCH,DateTime_APRIL,DateTime_MAY,DateTime_JUNE,DateTime_JULY,DateTime_AUGUST,DateTime_SEPTEMBER,DateTime_OCTOBER,DateTime_NOVEMBER,DateTime_DECEMBER,DateTime_MONTHS_PER_YEAR,DateTime__MAX_MILLISECONDS_SINCE_EPOCH",
DateTime$fromMillisecondsSinceEpoch: function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateTime(millisecondsSinceEpoch, isUtc);
  t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
  return t1;
},

DateTime$_now: function() {
  var t1 = new $.DateTime(Date.now(), false);
  t1.DateTime$_now$0();
  return t1;
}}

},

DateTime_toString_fourDigits: {"": "Closure;",
  call$1: function(n) {
    var t1, absN, sign;
    t1 = $.getInterceptor$n(n);
    absN = t1.abs$0(n);
    sign = t1.$lt(n, 0) ? "-" : "";
    if (absN >= 1000)
      return $.S(n);
    if (absN >= 100)
      return sign + "0" + $.S(absN);
    if (absN >= 10)
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  }
},

DateTime_toString_threeDigits: {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100))
      return $.S(n);
    if (t1.$ge(n, 10))
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
},

DateTime_toString_twoDigits: {"": "Closure;",
  call$1: function(n) {
    if ($.$ge$n(n, 10))
      return $.S(n);
    return "0" + $.S(n);
  }
},

Duration: {"": "Object;_duration<",
  $add: function(_, other) {
    return new $.Duration(0 + (this._duration + other.get$_duration()));
  },
  $sub: function(_, other) {
    return new $.Duration(0 + (this._duration - other.get$_duration()));
  },
  $mul: function(_, factor) {
    if (typeof factor !== "number")
      throw $.iae(factor);
    return $.Duration$(0, 0, C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(this._duration * factor)), 0, 0, 0);
  },
  $lt: function(_, other) {
    return this._duration < other.get$_duration();
  },
  $gt: function(_, other) {
    return this._duration > other.get$_duration();
  },
  $le: function(_, other) {
    return this._duration <= other.get$_duration();
  },
  $ge: function(_, other) {
    return this._duration >= other.get$_duration();
  },
  get$inMilliseconds: function() {
    return C.JSNumber_methods.$tdiv(this._duration, 1000);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = $.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isDuration)
      return false;
    return this._duration === other._duration;
  },
  get$hashCode: function(_) {
    return this._duration & 0x1FFFFFFF;
  },
  toString$0: function(_) {
    var t1, t2, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
    t1 = new $.Duration_toString_twoDigits();
    t2 = this._duration;
    if (t2 < 0)
      return "-" + $.S($.Duration$(0, 0, -t2, 0, 0, 0));
    twoDigitMinutes = t1.call$1(C.JSNumber_methods.remainder$1(C.JSNumber_methods.$tdiv(t2, 60000000), 60));
    twoDigitSeconds = t1.call$1(C.JSNumber_methods.remainder$1(C.JSNumber_methods.$tdiv(t2, 1000000), 60));
    sixDigitUs = new $.Duration_toString_sixDigits().call$1(C.JSNumber_methods.remainder$1(t2, 1000000));
    return $.S(C.JSNumber_methods.$tdiv(t2, 3600000000)) + ":" + $.S(twoDigitMinutes) + ":" + $.S(twoDigitSeconds) + "." + $.S(sixDigitUs);
  },
  $isDuration: true,
  static: {
"": "Duration_MICROSECONDS_PER_MILLISECOND,Duration_MILLISECONDS_PER_SECOND,Duration_SECONDS_PER_MINUTE,Duration_MINUTES_PER_HOUR,Duration_HOURS_PER_DAY,Duration_MICROSECONDS_PER_SECOND,Duration_MICROSECONDS_PER_MINUTE,Duration_MICROSECONDS_PER_HOUR,Duration_MICROSECONDS_PER_DAY,Duration_MILLISECONDS_PER_MINUTE,Duration_MILLISECONDS_PER_HOUR,Duration_MILLISECONDS_PER_DAY,Duration_SECONDS_PER_HOUR,Duration_SECONDS_PER_DAY,Duration_MINUTES_PER_DAY,Duration_ZERO",
Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
  return new $.Duration(days * 86400000000 + hours * 3600000000 + minutes * 60000000 + seconds * 1000000 + milliseconds * 1000 + microseconds);
}}

},

Duration_toString_sixDigits: {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100000))
      return $.S(n);
    if (t1.$ge(n, 10000))
      return "0" + $.S(n);
    if (t1.$ge(n, 1000))
      return "00" + $.S(n);
    if (t1.$ge(n, 100))
      return "000" + $.S(n);
    if (t1.$gt(n, 10))
      return "0000" + $.S(n);
    return "00000" + $.S(n);
  }
},

Duration_toString_twoDigits: {"": "Closure;",
  call$1: function(n) {
    if ($.$ge$n(n, 10))
      return $.S(n);
    return "0" + $.S(n);
  }
},

Error: {"": "Object;", $isError: true},

NullThrownError: {"": "Error;",
  toString$0: function(_) {
    return "Throw of null.";
  }
},

ArgumentError: {"": "Error;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 != null)
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
},

RangeError: {"": "ArgumentError;message",
  toString$0: function(_) {
    return "RangeError: " + $.S(this.message);
  }
},

UnsupportedError: {"": "Error;message",
  toString$0: function(_) {
    return "Unsupported operation: " + this.message;
  }
},

UnimplementedError: {"": "Error;message",
  toString$0: function(_) {
    return "UnimplementedError: " + this.message;
  },
  $isError: true
},

StateError: {"": "Error;message",
  toString$0: function(_) {
    return "Bad state: " + this.message;
  }
},

ConcurrentModificationError: {"": "Error;modifiedObject",
  toString$0: function(_) {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.Error_safeToString(t1) + ".";
  }
},

StackOverflowError: {"": "Object;",
  toString$0: function(_) {
    return "Stack Overflow";
  },
  $isError: true
},

CyclicInitializationError: {"": "Error;variableName",
  toString$0: function(_) {
    return "Reading static variable '" + this.variableName + "' during its initialization";
  }
},

_ExceptionImplementation: {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
},

FormatException: {"": "Object;message",
  toString$0: function(_) {
    return "FormatException: " + $.S(this.message);
  },
  $isException: true
},

Expando: {"": "Object;name",
  toString$0: function(_) {
    return "Expando:" + this.name;
  },
  $index: function(_, object) {
    var values = $.Primitives_getProperty(object, "expando$values");
    return values == null ? null : $.Primitives_getProperty(values, this._getKey$0());
  },
  $indexSet: function(_, object, value) {
    var values = $.Primitives_getProperty(object, "expando$values");
    if (values == null) {
      values = new $.Object();
      $.Primitives_setProperty(object, "expando$values", values);
    }
    $.Primitives_setProperty(values, this._getKey$0(), value);
  },
  _getKey$0: function() {
    var key, t1;
    key = $.Primitives_getProperty(this, "expando$key");
    if (key == null) {
      t1 = $.Expando__keyCount;
      $.Expando__keyCount = $.$add$ns(t1, 1);
      key = "expando$key$" + $.S(t1);
      $.Primitives_setProperty(this, "expando$key", key);
    }
    return key;
  },
  static: {
"": "Expando__KEY_PROPERTY_NAME,Expando__EXPANDO_PROPERTY_NAME,Expando__keyCount",
}

},

Iterator: {"": "Object;"},

Null: {"": "Object;",
  toString$0: function(_) {
    return "null";
  }
},

Object: {"": ";",
  $eq: function(_, other) {
    return this === other;
  },
  get$hashCode: function(_) {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function(_) {
    return $.Primitives_objectToString(this);
  }
},

StringBuffer: {"": "Object;_contents<",
  get$length: function(_) {
    return this._contents.length;
  },
  get$isEmpty: function(_) {
    return this._contents.length === 0;
  },
  write$1: function(obj) {
    if (typeof obj !== "string")
      return this.write$1$bailout(1, obj);
    this._contents = this._contents + obj;
  },
  write$1$bailout: function(state0, obj) {
    var str = typeof obj === "string" ? obj : $.S(obj);
    this._contents = this._contents + str;
  },
  writeAll$2: function(objects, separator) {
    var iterator, str;
    iterator = $.get$iterator$ax(objects);
    if (!iterator.moveNext$0())
      return;
    if (separator.length === 0)
      do {
        str = iterator.get$current();
        str = typeof str === "string" ? str : $.S(str);
        this._contents = this._contents + str;
      } while (iterator.moveNext$0());
    else {
      this.write$1(iterator.get$current());
      for (; iterator.moveNext$0();) {
        this._contents = this._contents + separator;
        str = iterator.get$current();
        str = typeof str === "string" ? str : $.S(str);
        this._contents = this._contents + str;
      }
    }
  },
  toString$0: function(_) {
    return this._contents;
  },
  StringBuffer$1: function($content) {
    this._contents = $content;
  },
  static: {
StringBuffer$: function($content) {
  var t1 = new $.StringBuffer("");
  t1.StringBuffer$1($content);
  return t1;
}}

}}],
["dart.dom.html", "dart:html", , {
ImageElement_ImageElement: function(height, src, width) {
  var e = document.createElement("img");
  return e;
},

Storage_keys_closure: {"": "Closure;keys_0",
  call$2: function(k, v) {
    return this.keys_0.push(k);
  }
},

Storage_values_closure: {"": "Closure;values_0",
  call$2: function(k, v) {
    return this.values_0.push(v);
  }
},

Interceptor_ListMixin: {"": "Interceptor+ListMixin;", $isList: true, $asList: null},

Interceptor_ListMixin_ImmutableListMixin: {"": "Interceptor_ListMixin+ImmutableListMixin;", $asList: null, $isList: true},

_EventStream: {"": "Stream;_liblib3$_target,_eventType,_useCapture",
  get$isBroadcast: function() {
    return true;
  },
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var t1 = new $._EventStreamSubscription(0, this._liblib3$_target, this._eventType, onData, this._useCapture);
    t1._tryResume$0();
    return t1;
  },
  listen$1: function(onData) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
  }
},

_ElementEventStreamImpl: {"": "_EventStream;_liblib3$_target,_eventType,_useCapture"},

_EventStreamSubscription: {"": "StreamSubscription;_pauseCount,_liblib3$_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this._liblib3$_target == null)
      return;
    this._unlisten$0();
    this._liblib3$_target = null;
    this._onData = null;
  },
  pause$1: function(_, resumeSignal) {
    if (this._liblib3$_target == null)
      return;
    this._pauseCount = this._pauseCount + 1;
    this._unlisten$0();
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  },
  resume$0: function() {
    if (this._liblib3$_target == null || this._pauseCount <= 0)
      return;
    this._pauseCount = this._pauseCount - 1;
    this._tryResume$0();
  },
  _tryResume$0: function() {
    var t1 = this._onData;
    if (t1 != null && this._pauseCount <= 0)
      $.$$dom_addEventListener$3$x(this._liblib3$_target, this._eventType, t1, this._useCapture);
  },
  _unlisten$0: function() {
    var t1 = this._onData;
    if (t1 != null)
      $.$$dom_removeEventListener$3$x(this._liblib3$_target, this._eventType, t1, this._useCapture);
  }
},

EventStreamProvider: {"": "Object;_eventType"},

ImmutableListMixin: {"": "Object;",
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  add$1: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot add to immutable List."));
  },
  $isList: true,
  $asList: null
},

Point: {"": "Object;x>,y>",
  toString$0: function(_) {
    return "(" + $.S(this.x) + ", " + $.S(this.y) + ")";
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = $.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isPoint)
      return false;
    return $.$eq(this.x, other.x) && $.$eq(this.y, other.y);
  },
  get$hashCode: function(_) {
    var t1, t2;
    t1 = $.get$hashCode$(this.x);
    t2 = $.get$hashCode$(this.y);
    return $.JenkinsSmiHash_finish($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine(0, t1), t2));
  },
  $add: function(_, other) {
    var t1, t2, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.$$add$bailout(1, other, t1);
    t2 = $.getInterceptor$x(other);
    t3 = t2.get$x(other);
    if (typeof t3 !== "number")
      return this.$$add$bailout(2, other, t1, t2, t3);
    t3 = t1 + t3;
    t1 = this.y;
    if (typeof t1 !== "number")
      return this.$$add$bailout(3, other, t1, t2, t3);
    t2 = t2.get$y(other);
    if (typeof t2 !== "number")
      return this.$$add$bailout(4, 0, t1, t2, t3);
    return new $.Point(t3, t1 + t2);
  },
  $$add$bailout: function(state0, other, t1, t2, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t2 = $.getInterceptor$x(other);
        t3 = t2.get$x(other);
      case 2:
        state0 = 0;
        t3 = $.$add$ns(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t2 = t2.get$y(other);
      case 4:
        state0 = 0;
        return new $.Point(t3, $.$add$ns(t1, t2));
    }
  },
  $sub: function(_, other) {
    var t1, t2, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.$$sub$bailout(1, other, t1);
    t2 = $.getInterceptor$x(other);
    t3 = t2.get$x(other);
    if (typeof t3 !== "number")
      return this.$$sub$bailout(2, other, t1, t2, t3);
    t3 = t1 - t3;
    t1 = this.y;
    if (typeof t1 !== "number")
      return this.$$sub$bailout(3, other, t1, t2, t3);
    t2 = t2.get$y(other);
    if (typeof t2 !== "number")
      return this.$$sub$bailout(4, 0, t1, t2, t3);
    return new $.Point(t3, t1 - t2);
  },
  $$sub$bailout: function(state0, other, t1, t2, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t2 = $.getInterceptor$x(other);
        t3 = t2.get$x(other);
      case 2:
        state0 = 0;
        t3 = $.$sub$n(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t2 = t2.get$y(other);
      case 4:
        state0 = 0;
        return new $.Point(t3, $.$sub$n(t1, t2));
    }
  },
  $mul: function(_, factor) {
    return new $.Point($.$mul$n(this.x, factor), $.$mul$n(this.y, factor));
  },
  ceil$0: function(_) {
    return new $.Point($.ceil$0$nx(this.x), $.ceil$0$nx(this.y));
  },
  round$0: function(_) {
    return new $.Point($.round$0$nx(this.x), $.round$0$nx(this.y));
  },
  $isPoint: true
},

RectBase: {"": "Object;",
  get$right: function(_) {
    return $.$add$ns(this.get$left(this), this.get$width(this));
  },
  get$bottom: function(_) {
    return $.$add$ns(this.get$top(this), this.get$height(this));
  },
  toString$0: function(_) {
    return "(" + $.S(this.get$left(this)) + ", " + $.S(this.get$top(this)) + ", " + $.S(this.get$width(this)) + ", " + $.S(this.get$height(this)) + ")";
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = $.getInterceptor$x(other);
    if (typeof other !== "object" || other === null || !t1.$isRect)
      return false;
    return $.$eq(this.get$left(this), t1.get$left(other)) && $.$eq(this.get$top(this), t1.get$top(other)) && $.$eq(this.get$width(this), t1.get$width(other)) && $.$eq(this.get$height(this), t1.get$height(other));
  },
  get$hashCode: function(_) {
    var t1, t2, t3, t4;
    t1 = $.get$hashCode$(this.get$left(this));
    t2 = $.get$hashCode$(this.get$top(this));
    t3 = $.get$hashCode$(this.get$width(this));
    t4 = $.get$hashCode$(this.get$height(this));
    return $.JenkinsSmiHash_finish($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine(0, t1), t2), t3), t4));
  },
  ceil$0: function(_) {
    return new $.Rect($.ceil$0$nx(this.get$left(this)), $.ceil$0$nx(this.get$top(this)), $.ceil$0$nx(this.get$width(this)), $.ceil$0$nx(this.get$height(this)));
  },
  round$0: function(_) {
    return new $.Rect($.round$0$nx(this.get$left(this)), $.round$0$nx(this.get$top(this)), $.round$0$nx(this.get$width(this)), $.round$0$nx(this.get$height(this)));
  }
},

Rect: {"": "RectBase;left>,top>,width>,height>", $isRect: true, $asRect: null},

FixedSizeListIterator: {"": "Object;_array,_length,_position,_current",
  moveNext$0: function() {
    var t1, nextPosition;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    nextPosition = t1 + 1;
    t1 = this._length;
    if (nextPosition < t1) {
      t1 = this._array;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !$.isJsIndexable(t1, t1[$.dispatchPropertyName])))
        return this.moveNext$0$bailout(2, t1, nextPosition);
      if (nextPosition >>> 0 !== nextPosition || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._current = t1[nextPosition];
      this._position = nextPosition;
      return true;
    }
    this._current = null;
    this._position = t1;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, nextPosition) {
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        nextPosition = $.$add$ns(t1, 1);
        t1 = this._length;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$lt$n(nextPosition, t1))
          switch (state0) {
            case 0:
              t1 = this._array;
            case 2:
              state0 = 0;
              this._current = $.$index$asx(t1, nextPosition);
              this._position = nextPosition;
              return true;
          }
        this._current = null;
        this._position = t1;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  },
  static: {
FixedSizeListIterator$: function(array) {
  return new $.FixedSizeListIterator(array, $.get$length$asx(array), -1, null);
}}

},

HtmlElement: {"": "Element;"},

AnchorElement: {"": "HtmlElement;type=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
},

Blob: {"": "Interceptor;size=,type="},

ButtonElement: {"": "HtmlElement;type="},

CanvasElement: {"": "HtmlElement;height%,width%",
  get$context2d: function(receiver) {
    return receiver.getContext("2d");
  }
},

CanvasRenderingContext: {"": "Interceptor;"},

CanvasRenderingContext2D: {"": "CanvasRenderingContext;font=",
  fill$1: function(receiver, winding) {
    return receiver.fill(winding);
  },
  get$fill: function(_receiver) {
    return new $.Bound_fill_CanvasRenderingContext2D(this, "fill$1", _receiver);
  },
  rect$4: function(receiver, x, y, width, height) {
    return receiver.rect(x, y, width, height);
  },
  get$rect: function(_receiver) {
    return new $.BoundClosure$i4(this, "rect$4", _receiver);
  }
},

CharacterData: {"": "Node;length="},

DomException: {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  }
},

Element: {"": "Node;",
  toString$0: function(receiver) {
    return receiver.localName;
  },
  click$0: function(receiver) {
    return receiver.click();
  },
  get$click: function(_receiver) {
    return new $.BoundClosure$i0(this, "click$0", _receiver);
  }
},

EmbedElement: {"": "HtmlElement;height%,src},type=,width%"},

Event: {"": "Interceptor;type=",
  preventDefault$0: function(receiver) {
    return receiver.preventDefault();
  }
},

EventTarget: {"": "Interceptor;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
},

FieldSetElement: {"": "HtmlElement;type="},

FormElement: {"": "HtmlElement;length=",
  reset$0: function(receiver) {
    return receiver.reset();
  }
},

IFrameElement: {"": "HtmlElement;height%,src},width%"},

ImageElement: {"": "HtmlElement;height%,src},width%,x=,y=",
  complete$0: function($receiver) {
    return this.complete.call$0();
  }
},

InputElement: {"": "HtmlElement;height%,size=,src},type=,width%"},

KeyboardEvent: {"": "UIEvent;altKey=,ctrlKey=,shiftKey=",
  get$keyCode: function(receiver) {
    return receiver.keyCode;
  }
},

KeygenElement: {"": "HtmlElement;type="},

LIElement: {"": "HtmlElement;type="},

LinkElement: {"": "HtmlElement;type="},

MediaElement: {"": "HtmlElement;src}",
  pause$0: function(receiver) {
    return receiver.pause();
  }
},

MouseEvent: {"": "UIEvent;altKey=,ctrlKey=,shiftKey=",
  get$clientX: function(receiver) {
    return new $.Point(receiver.clientX, receiver.clientY).x;
  },
  get$clientY: function(receiver) {
    return new $.Point(receiver.clientX, receiver.clientY).y;
  }
},

Node: {"": "EventTarget;text:textContent=",
  toString$0: function(receiver) {
    var t1 = receiver.nodeValue;
    return t1 == null ? $.Interceptor.prototype.toString$0.call(this, receiver) : t1;
  }
},

OListElement: {"": "HtmlElement;type=",
  start$1: function($receiver, arg0) {
    return this.start.call$1(arg0);
  },
  start$0: function($receiver) {
    return this.start.call$0();
  }
},

ObjectElement: {"": "HtmlElement;height%,type=,width%"},

OutputElement: {"": "HtmlElement;type="},

PopStateEvent: {"": "Event;",
  get$state: function(receiver) {
    return $.convertNativeToDart_AcceptStructuredClone(receiver.state, true);
  }
},

ScriptElement: {"": "HtmlElement;src},type="},

SelectElement: {"": "HtmlElement;length=,size=,type="},

SourceElement: {"": "HtmlElement;src},type="},

Storage: {"": "Interceptor;",
  $index: function(receiver, key) {
    return receiver.getItem(key);
  },
  $indexSet: function(receiver, key, value) {
    receiver.setItem(key, value);
  },
  forEach$1: function(receiver, f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = receiver.key(i);
      if (key == null)
        return;
      f.call$2(key, receiver.getItem(key));
    }
  },
  get$keys: function(receiver) {
    var keys = [];
    this.forEach$1(receiver, new $.Storage_keys_closure(keys));
    return keys;
  },
  get$values: function(receiver) {
    var values = [];
    this.forEach$1(receiver, new $.Storage_values_closure(values));
    return values;
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  get$isEmpty: function(receiver) {
    return receiver.key(0) == null;
  },
  $isMap: true,
  $asMap: function() {
    return [$.JSString, $.JSString];
  }
},

StyleElement: {"": "HtmlElement;type="},

TextAreaElement: {"": "HtmlElement;type="},

TextMetrics: {"": "Interceptor;width="},

TouchEvent: {"": "UIEvent;altKey=,ctrlKey=,shiftKey=,touches="},

TouchList: {"": "Interceptor_ListMixin_ImmutableListMixin;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $asList: function() {
    return [$.Touch];
  },
  $asJavaScriptIndexingBehavior: null,
  $isList: true,
  $isJavaScriptIndexingBehavior: true
},

TrackElement: {"": "HtmlElement;src}"},

UIEvent: {"": "Event;"},

VideoElement: {"": "MediaElement;height%,width%"},

Window: {"": "EventTarget;",
  _requestAnimationFrame$1: function(receiver, callback) {
    return receiver.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function(receiver) {
    if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(receiver);
  },
  toString$0: function(receiver) {
    return receiver.toString();
  }
},

_ClientRect: {"": "Interceptor;bottom=,height=,left=,right=,top=,width=",
  toString$0: function(receiver) {
    return "(" + $.S(receiver.left) + ", " + $.S(receiver.top) + ", " + $.S(receiver.width) + ", " + $.S(receiver.height) + ")";
  },
  $eq: function(receiver, other) {
    var t1, t2, t3;
    if (other == null)
      return false;
    t1 = $.getInterceptor$x(other);
    if (typeof other !== "object" || other === null || !t1.$isRect)
      return false;
    t2 = receiver.left;
    t3 = t1.get$left(other);
    if (t2 == null ? t3 == null : t2 === t3) {
      t2 = receiver.top;
      t3 = t1.get$top(other);
      if (t2 == null ? t3 == null : t2 === t3) {
        t2 = receiver.width;
        t3 = t1.get$width(other);
        if (t2 == null ? t3 == null : t2 === t3) {
          t2 = receiver.height;
          t1 = t1.get$height(other);
          t1 = t2 == null ? t1 == null : t2 === t1;
        } else
          t1 = false;
      } else
        t1 = false;
    } else
      t1 = false;
    return t1;
  },
  get$hashCode: function(receiver) {
    var t1, t2, t3, t4;
    t1 = $.get$hashCode$(receiver.left);
    t2 = $.get$hashCode$(receiver.top);
    t3 = $.get$hashCode$(receiver.width);
    t4 = $.get$hashCode$(receiver.height);
    return $.JenkinsSmiHash_finish($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine(0, t1), t2), t3), t4));
  },
  ceil$0: function(receiver) {
    return new $.Rect($.ceil$0$nx(receiver.left), $.ceil$0$nx(receiver.top), $.ceil$0$nx(receiver.width), $.ceil$0$nx(receiver.height));
  },
  round$0: function(receiver) {
    return new $.Rect($.round$0$nx(receiver.left), $.round$0$nx(receiver.top), $.round$0$nx(receiver.width), $.round$0$nx(receiver.height));
  },
  $isRect: true,
  $asRect: null
}}],
["dart.dom.svg", "dart:svg", , {
FEBlendElement: {"": "SvgElement;height=,width=,x=,y="},

FEColorMatrixElement: {"": "SvgElement;type=,height=,width=,x=,y="},

FEComponentTransferElement: {"": "SvgElement;height=,width=,x=,y="},

FECompositeElement: {"": "SvgElement;height=,width=,x=,y="},

FEConvolveMatrixElement: {"": "SvgElement;height=,width=,x=,y="},

FEDiffuseLightingElement: {"": "SvgElement;height=,width=,x=,y="},

FEDisplacementMapElement: {"": "SvgElement;height=,width=,x=,y="},

FEFloodElement: {"": "SvgElement;height=,width=,x=,y="},

FEGaussianBlurElement: {"": "SvgElement;height=,width=,x=,y="},

FEImageElement: {"": "SvgElement;height=,width=,x=,y="},

FEMergeElement: {"": "SvgElement;height=,width=,x=,y="},

FEMorphologyElement: {"": "SvgElement;height=,width=,x=,y="},

FEOffsetElement: {"": "SvgElement;height=,width=,x=,y="},

FEPointLightElement: {"": "SvgElement;x=,y="},

FESpecularLightingElement: {"": "SvgElement;height=,width=,x=,y="},

FESpotLightElement: {"": "SvgElement;x=,y="},

FETileElement: {"": "SvgElement;height=,width=,x=,y="},

FETurbulenceElement: {"": "SvgElement;type=,height=,width=,x=,y="},

FilterElement: {"": "SvgElement;height=,width=,x=,y="},

ForeignObjectElement: {"": "GraphicsElement;height=,width=,x=,y="},

GraphicsElement: {"": "SvgElement;"},

ImageElement0: {"": "GraphicsElement;height=,width=,x=,y="},

MaskElement: {"": "SvgElement;height=,width=,x=,y="},

PatternElement: {"": "SvgElement;height=,width=,x=,y="},

RectElement: {"": "GraphicsElement;height=,width=,x=,y="},

ScriptElement0: {"": "SvgElement;type="},

StyleElement0: {"": "SvgElement;type="},

SvgElement: {"": "Element;",
  click$0: function(receiver) {
    throw $.wrapException(new $.UnsupportedError("Cannot invoke click SVG."));
  },
  get$click: function(_receiver) {
    return new $.BoundClosure$i0(this, "click$0", _receiver);
  }
},

SvgSvgElement: {"": "GraphicsElement;height=,width=,x=,y="},

TextContentElement: {"": "GraphicsElement;"},

TextPositioningElement: {"": "TextContentElement;x=,y="},

UseElement: {"": "GraphicsElement;height=,width=,x=,y="}}],
["dart.isolate", "dart:isolate", , {
_Isolate_port: function() {
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePortImpl$();
  return $.lazyPort;
},

ReceivePort: {"": "Object;"}}],
["dart.math", "dart:math", , {
min: function(a, b) {
  if (a > b)
    return b;
  if (a < b)
    return a;
  if (typeof a === "number")
    if (a === 0)
      return (a + b) * a * b;
  if (a === 0 && C.JSDouble_methods.get$isNegative(b) || isNaN(b))
    return b;
  return a;
  return a;
},

_Random: {"": "Object;"}}],
["dart.typed_data", "dart:typed_data", , {
TypedData_ListMixin: {"": "TypedData+ListMixin;", $isList: true, $asList: null},

TypedData_ListMixin_FixedLengthListMixin: {"": "TypedData_ListMixin+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin0: {"": "TypedData+ListMixin;", $isList: true, $asList: null},

TypedData_ListMixin_FixedLengthListMixin0: {"": "TypedData_ListMixin0+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin1: {"": "TypedData+ListMixin;", $isList: true, $asList: null},

TypedData_ListMixin_FixedLengthListMixin1: {"": "TypedData_ListMixin1+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin2: {"": "TypedData+ListMixin;", $isList: true, $asList: null},

TypedData_ListMixin_FixedLengthListMixin2: {"": "TypedData_ListMixin2+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin3: {"": "TypedData+ListMixin;", $isList: true, $asList: null},

TypedData_ListMixin_FixedLengthListMixin3: {"": "TypedData_ListMixin3+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin4: {"": "TypedData+ListMixin;", $isList: true, $asList: null},

TypedData_ListMixin_FixedLengthListMixin4: {"": "TypedData_ListMixin4+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin5: {"": "TypedData+ListMixin;", $isList: true, $asList: null},

TypedData_ListMixin_FixedLengthListMixin5: {"": "TypedData_ListMixin5+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin6: {"": "TypedData+ListMixin;", $isList: true, $asList: null},

TypedData_ListMixin_FixedLengthListMixin6: {"": "TypedData_ListMixin6+FixedLengthListMixin;", $asList: null},

Int64List: {"": "TypedData;", $isList: true,
  $asList: function() {
    return [$.JSInt];
  },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null,
  static: {
"": "Int64List_BYTES_PER_ELEMENT",
}

},

Uint64List: {"": "TypedData;", $isList: true,
  $asList: function() {
    return [$.JSInt];
  },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null,
  static: {
"": "Uint64List_BYTES_PER_ELEMENT",
}

},

TypedData: {"": "Interceptor;",
  _invalidIndex$2: function(receiver, index, $length) {
    var t1 = $.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$ge(index, $length))
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + $length));
    else
      throw $.wrapException(new $.ArgumentError("Invalid list index " + $.S(index)));
  }
},

Float32List: {"": "TypedData_ListMixin_FixedLengthListMixin;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [$.JSDouble];
  },
  $asJavaScriptIndexingBehavior: null,
  $isList: true,
  $isJavaScriptIndexingBehavior: true
},

Float64List: {"": "TypedData_ListMixin_FixedLengthListMixin0;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [$.JSDouble];
  },
  $asJavaScriptIndexingBehavior: null,
  $isList: true,
  $isJavaScriptIndexingBehavior: true
},

Int16List: {"": "TypedData_ListMixin_FixedLengthListMixin1;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [$.JSInt];
  },
  $asJavaScriptIndexingBehavior: null,
  $isList: true,
  $isJavaScriptIndexingBehavior: true
},

Int32List: {"": "TypedData_ListMixin_FixedLengthListMixin2;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [$.JSInt];
  },
  $asJavaScriptIndexingBehavior: null,
  $isList: true,
  $isJavaScriptIndexingBehavior: true
},

Int8List: {"": "TypedData_ListMixin_FixedLengthListMixin3;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [$.JSInt];
  },
  $asJavaScriptIndexingBehavior: null,
  $isList: true,
  $isJavaScriptIndexingBehavior: true
},

Uint16List: {"": "TypedData_ListMixin_FixedLengthListMixin4;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [$.JSInt];
  },
  $asJavaScriptIndexingBehavior: null,
  $isList: true,
  $isJavaScriptIndexingBehavior: true
},

Uint32List: {"": "TypedData_ListMixin_FixedLengthListMixin5;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [$.JSInt];
  },
  $asJavaScriptIndexingBehavior: null,
  $isList: true,
  $isJavaScriptIndexingBehavior: true
},

Uint8ClampedList: {"": "Uint8List;",
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout1(1, index, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout1: function(state0, index, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout1(1, index, value, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout1: function(state0, index, value, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  }
},

Uint8List: {"": "TypedData_ListMixin_FixedLengthListMixin6;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [$.JSInt];
  },
  $asJavaScriptIndexingBehavior: null,
  $isList: true,
  $isJavaScriptIndexingBehavior: true
}}],
["dgame", "package:dgame/dgame.dart", , {
random: function(min, max, wholeNumbers) {
  var value, t1, truncated;
  value = min + Math.random() * (max - min);
  if (wholeNumbers) {
    t1 = C.JSNumber_methods.roundToDouble$0(value);
    if (isNaN(t1))
      $.throwExpression(new $.UnsupportedError("NaN"));
    if (t1 == Infinity || t1 == -Infinity)
      $.throwExpression(new $.UnsupportedError("Infinity"));
    truncated = t1 < 0 ? Math.ceil(t1) : Math.floor(t1);
    value = truncated == -0.0 ? 0 : truncated;
  }
  return value;
},

Game: {"": "Object;entities<,timer<,clockTick@,rect>,input<,renderer<",
  start$0: function(_) {
    $.Primitives_printString("starting game");
    $.start$0$x(this.input);
    $.start$1$x(this.loop, new $.Game_start_closure(this));
  },
  addEntity$1: function(entity) {
    this.entities.push(entity);
  },
  enableEntitiesByGroup$1: function(groupId) {
    var t1 = new $.WhereIterable(this.entities, new $.Game_enableEntitiesByGroup_closure(groupId));
    t1.forEach$1(t1, new $.Game_enableEntitiesByGroup_closure0());
  },
  disableEntitiesByGroup$1: function(groupId) {
    var t1 = new $.WhereIterable(this.entities, new $.Game_disableEntitiesByGroup_closure(groupId));
    t1.forEach$1(t1, new $.Game_disableEntitiesByGroup_closure0());
  },
  removeEntitiesByGroup$1: function(groupId) {
    $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.entities, new $.Game_removeEntitiesByGroup_closure(groupId)), true), new $.Game_removeEntitiesByGroup_closure0());
  },
  removeEntitiesByFilter$1: function(f) {
    $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.entities, new $.Game_removeEntitiesByFilter_closure(f)), true), new $.Game_removeEntitiesByFilter_closure0());
  },
  update$0: function() {
    var t1, entity;
    for (t1 = $.List_List$from(new $.WhereIterable(this.entities, new $.Game_update_closure()), true), t1 = new $.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();)
      t1._liblib$_current.update$0();
    for (t1 = $.List_List$from(new $.WhereIterable(this.entities, new $.Game_update_closure0()), true), t1 = new $.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
      entity = t1._liblib$_current;
      C.JSArray_methods.remove$1(this.entities, entity);
    }
  },
  Game$withServices$3: function(input, renderer, loop) {
    var t1;
    this.timer = new $.GameTimer(0, 0, 0, 60, false, false);
    this.entities = $.List_List(null);
    this.sounds = $.List_List(null);
    t1 = this.renderer;
    this.rect = $.get$rect$x(t1);
    this.input.set$game(this);
    t1.set$game(this);
  }
},

Game_start_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.set$clockTick(t1.get$timer().tick$0());
    t1.update$0();
    t1.get$renderer().render$0();
    $.reset$0$x(t1.get$input());
  }
},

Game_enableEntitiesByGroup_closure: {"": "Closure;groupId_0",
  call$1: function(e) {
    return $.$eq(e.get$groupId(), this.groupId_0);
  }
},

Game_enableEntitiesByGroup_closure0: {"": "Closure;",
  call$1: function(e) {
    e.set$enabled(true);
    return true;
  }
},

Game_disableEntitiesByGroup_closure: {"": "Closure;groupId_0",
  call$1: function(e) {
    return $.$eq(e.get$groupId(), this.groupId_0);
  }
},

Game_disableEntitiesByGroup_closure0: {"": "Closure;",
  call$1: function(e) {
    e.set$enabled(false);
    return false;
  }
},

Game_removeEntitiesByGroup_closure: {"": "Closure;groupId_0",
  call$1: function(e) {
    return $.$eq(e.get$groupId(), this.groupId_0);
  }
},

Game_removeEntitiesByGroup_closure0: {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  }
},

Game_removeEntitiesByFilter_closure: {"": "Closure;f_0",
  call$1: function(e) {
    return this.f_0.call$1(e);
  }
},

Game_removeEntitiesByFilter_closure0: {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  }
},

Game_update_closure: {"": "Closure;",
  call$1: function(e) {
    return !e.get$_removeFromGame();
  }
},

Game_update_closure0: {"": "Closure;",
  call$1: function(e) {
    return e.get$_removeFromGame();
  }
},

GameButton: {"": "GameText;buttonAction,text,centered,font,size,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  buttonAction$0: function() {
    return this.buttonAction.call$0();
  },
  update$0: function() {
    var t1, t2, milliseconds;
    $.GameEntity.prototype.update$0.call(this);
    if (!this.enabled)
      return;
    t1 = this.game.get$input();
    if ($.get$click$x(t1) != null)
      ;
    t1 = t1.get$mouse();
    if (t1 != null) {
      t2 = this.box;
      t1 = t2.contains$1(t2, t1);
    } else
      t1 = false;
    if (t1) {
      this.isHighlighted = true;
      this.opacity = 1;
    } else {
      this.isHighlighted = false;
      this.opacity = 0.7;
    }
    t1 = $.get$click$x(this.game.get$input());
    if (t1 != null) {
      t2 = this.box;
      t1 = t2.contains$1(t2, t1);
    } else
      t1 = false;
    if (t1) {
      this.opacity = 1;
      t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GameButton_update_closure(this), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t2 = t1.get$_run();
      milliseconds = C.JSNumber_methods.$tdiv(C.Duration_250000._duration, 1000);
      t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
      this.buttonAction$0();
    }
  },
  GameButton$12$buttonAction$centered$color$font$game$groupId$id$opacity$size$text$x$y: function(buttonAction, centered, color, font, game, groupId, id, opacity, size, text, x, y) {
  },
  $isGameButton: true,
  static: {
GameButton$: function(buttonAction, centered, color, font, game, groupId, id, opacity, size, text, x, y) {
  var t1 = new $.GameButton(buttonAction, text, centered, font, size, game, 0, 0, 1, 1, false, false, id, groupId, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 10, 10, id, groupId);
  t1.opacity = opacity;
  t1.GameButton$12$buttonAction$centered$color$font$game$groupId$id$opacity$size$text$x$y(buttonAction, centered, color, font, game, groupId, id, opacity, size, text, x, y);
  return t1;
}}

},

GameButton_update_closure: {"": "Closure;this_0",
  call$0: function() {
    this.this_0.set$opacity(0.5);
    return 0.5;
  }
},

GameEntity: {"": "Object;game@,_x<,_y<,_width@,_height@,isHighlighted<,soundReady@,groupId<,box<,_removeFromGame@,radius<,momentum<,enabled@,opacity@,color<,fill>",
  update$0: function() {
    var t1, t2, t3;
    t1 = this.previousBox;
    t2 = this.box;
    t3 = t2.top;
    if (t1 == null)
      this.previousBox = new $.Rectangle(t3, t2.left, t2.right, t2.bottom);
    else {
      t1.updateFrom$1;
      t1.top = t3;
      t1.left = t2.left;
      t1.right = t2.right;
      t1.bottom = t2.bottom;
    }
    if (!this.enabled)
      return;
    this.momentum.update$1(this.game.get$clockTick());
    t1 = this._x;
    if (typeof t1 !== "number")
      return this.update$0$bailout(1, t1);
    t2 = this.momentum.xVel;
    if (typeof t2 !== "number")
      return this.update$0$bailout(2, t1, t2);
    t3 = this.game.get$clockTick();
    if (t3 == null)
      return this.update$0$bailout(3, t1, t2, t3);
    this._x = t1 + t2 * t3;
    this.updateBox$0();
    t3 = this._y;
    if (typeof t3 !== "number")
      return this.update$0$bailout(4, 0, 0, t3);
    t2 = this.momentum.yVel;
    if (typeof t2 !== "number")
      return this.update$0$bailout(5, 0, t2, t3);
    t1 = this.game.get$clockTick();
    if (t1 == null)
      return this.update$0$bailout(6, t1, t2, t3);
    this._y = t3 + t2 * t1;
    this.updateBox$0();
    this.updateBox$0();
  },
  update$0$bailout: function(state0, t1, t2, t3) {
    switch (state0) {
      case 0:
        t1 = this.previousBox;
        t2 = this.box;
        if (t1 == null)
          this.previousBox = new $.Rectangle(t2.top, t2.left, t2.right, t2.bottom);
        else {
          t1.updateFrom$1;
          t1.top = t2.top;
          t1.left = t2.left;
          t1.right = t2.right;
          t1.bottom = t2.bottom;
        }
        if (!this.enabled)
          return;
        this.momentum.update$1(this.game.get$clockTick());
        t1 = this._x;
      case 1:
        state0 = 0;
        t2 = this.momentum.xVel;
      case 2:
        state0 = 0;
        t3 = this.game.get$clockTick();
      case 3:
        state0 = 0;
        this._x = $.$add$ns(t1, $.$mul$n(t2, t3));
        this.updateBox$0();
        t3 = this._y;
      case 4:
        state0 = 0;
        t2 = this.momentum.yVel;
      case 5:
        state0 = 0;
        t1 = this.game.get$clockTick();
      case 6:
        state0 = 0;
        this._y = $.$add$ns(t3, $.$mul$n(t2, t1));
        this.updateBox$0();
        this.updateBox$0();
    }
  },
  get$x: function(_) {
    return this._x;
  },
  set$x: function(_, value) {
    this._x = value;
    this.updateBox$0();
  },
  get$y: function(_) {
    return this._y;
  },
  get$width: function(_) {
    return this._width;
  },
  set$width: function(_, value) {
    this._width = value;
    this.updateBox$0();
  },
  get$height: function(_) {
    return this._height;
  },
  set$height: function(_, value) {
    this._height = value;
    this.updateBox$0();
  },
  updateBox$0: function() {
    var t1, t2, t3;
    if (this.box == null)
      this.box = new $.Rectangle(0, 0, 0, 0);
    t1 = this.box;
    t2 = this._x;
    t3 = this._width;
    if (typeof t3 !== "number")
      throw t3.$div();
    t1.left = $.$sub$n(t2, t3 / 2);
    t3 = this.box;
    t2 = this._y;
    t1 = this._height;
    if (typeof t1 !== "number")
      throw t1.$div();
    t3.top = $.$sub$n(t2, t1 / 2);
    t1 = this.box;
    t1.right = $.$add$ns(t1.left, this._width);
    t1 = this.box;
    t1.bottom = $.$add$ns(t1.top, this._height);
  },
  removeFromGame$0: function() {
    this._removeFromGame = true;
  },
  collidesWith$1: function(entity) {
    var t1, t2;
    if (!entity.get$enabled())
      return false;
    t1 = entity.get$box();
    t2 = this.box;
    t1.intersectsWith$1;
    return $.Rectangle_intersect(t1, t2);
  },
  GameEntity$withPosition$7: function(game, x, y, width, height, id, groupId) {
    var t1;
    this.momentum = new $.Momentum(0, 0, null, null, null, null);
    this._x = x;
    this.updateBox$0();
    this._y = y;
    this.updateBox$0();
    this._width = width;
    this.updateBox$0();
    this._height = height;
    this.updateBox$0();
    t1 = this.id;
    if (t1 == null || $.$eq($.get$length$asx(t1), 0))
      this.id = C.JSInt_methods.toString$0($.Primitives_objectHashCode(this));
  }
},

GameInput: {"": "Object;_downKeys<,_justPressedKeys<,click*,mouse@,mouseDown?,game@,keyDownEventStream<,keyUpEventStream<",
  isKeyDown$1: function(keyCode) {
    var t1 = this._downKeys;
    return t1.contains$1(t1, keyCode);
  },
  isKeyJustPressed$1: function(keyCode) {
    var t1 = this._justPressedKeys;
    return t1.contains$1(t1, keyCode);
  },
  start$0: function(_) {
  },
  reset$0: function(_) {
    var t1;
    this.click = null;
    t1 = this._justPressedKeys;
    t1.clear$0(t1);
  },
  GameInput$0: function() {
    this.keyDownEventStream.stream.listen$1(new $.GameInput_closure(this));
    this.keyUpEventStream.stream.listen$1(new $.GameInput_closure0(this));
  }
},

GameInput_closure: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = this.this_0;
    t2 = t1.get$_downKeys();
    t3 = $.getInterceptor$x(e);
    t2.add$1(t2, t3.get$keyCode(e));
    t1 = t1.get$_justPressedKeys();
    t1.add$1(t1, t3.get$keyCode(e));
  }
},

GameInput_closure0: {"": "Closure;this_1",
  call$1: function(e) {
    var t1 = this.this_1.get$_downKeys();
    return t1.remove$1(t1, $.get$keyCode$x(e));
  }
},

GameKeyboardEvent: {"": "Object;keyCode>,altKey>,ctrlKey>,shiftKey>"},

GameLoop: {"": "Object;",
  start$1: function(_, callback) {
    var t1, t2;
    t1 = new $._PeriodicZoneTimer($.get$_Zone__current(), new $.GameLoop_start_closure(callback), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createPeriodicTimer(C.Duration_50000, t1.get$_run());
  }
},

GameLoop_start_closure: {"": "Closure;callback_0",
  call$1: function(t) {
    return this.callback_0.call$0();
  }
},

GameRenderer: {"": "Object;_game<,rect>",
  get$game: function() {
    return this._game;
  },
  set$game: function(value) {
    this._game = value;
    this.init$0();
  },
  init$0: function() {
  },
  render$0: function() {
  }
},

GameSound: {"": "Object;enabled@,Id<"},

GameText: {"": "GameEntity;text>,centered,font>,size>,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  updateBox$0: function() {
    if (this.box == null)
      this.box = new $.Rectangle(0, 0, 0, 0);
    this._height = this.size;
    if (this.centered)
      $.GameEntity.prototype.updateBox$0.call(this);
    else {
      this.box.left = this._x;
      this.box.top = this._y;
      var t1 = this.box;
      t1.right = $.$add$ns(t1.left, this._width);
      t1 = this.box;
      t1.bottom = $.$add$ns(t1.top, this._height);
    }
  },
  $isGameText: true
},

GameTimer: {"": "Object;gameTime,wallLastTimestamp,fps,fpsSampleRate,timeDecrease,paused",
  tick$0: function() {
    var wallCurrent, t1, wallDelta, gameDelta, t2;
    if (!this.paused) {
      wallCurrent = $.DateTime$_now().millisecondsSinceEpoch;
      t1 = $.$sub$n(wallCurrent, this.wallLastTimestamp);
      if (typeof t1 !== "number")
        throw t1.$div();
      wallDelta = t1 / 1000;
      this.wallLastTimestamp = wallCurrent;
      t1 = this.fps;
      this.fps = t1 + (1 / wallDelta - t1) / this.fpsSampleRate;
      gameDelta = $.min(wallDelta, 0.05);
      t1 = this.timeDecrease;
      t2 = this.gameTime;
      if (!t1)
        this.gameTime = $.$add$ns(t2, gameDelta);
      else
        this.gameTime = $.$sub$n(t2, gameDelta);
      return gameDelta;
    }
  },
  static: {
"": "GameTimer_MAX_STEP",
}

},

Momentum: {"": "Object;xVel,yVel,xAccel,yAccel,xMax,yMax",
  update$1: function(clockTick) {
    var t1, t2, t3;
    t1 = false;
    if (t1) {
      t1 = this.xVel;
      t2 = $.getInterceptor$n(t1);
      t3 = this.xAccel;
      if (t2.$gt(t1, 0))
        this.xVel = t2.$add(t1, C.JSNull_methods.$mul(t3, clockTick));
      else
        this.xVel = t2.$sub(t1, C.JSNull_methods.$mul(t3, clockTick));
    }
    t1 = false;
    if (t1) {
      t1 = this.yVel;
      t2 = $.getInterceptor$n(t1);
      t3 = this.yAccel;
      if (t2.$gt(t1, 0))
        this.yVel = t2.$add(t1, C.JSNull_methods.$mul(t3, clockTick));
      else
        this.yVel = t2.$sub(t1, C.JSNull_methods.$mul(t3, clockTick));
    }
    t1 = this.xVel;
    if (t1 != null)
      t1 = false;
    else
      t1 = false;
    if (t1) {
      t1 = this.xMax;
      this.xVel = $.$gt$n(this.xVel, 0) ? t1 : C.JSNull_methods.$negate(t1);
    }
    t1 = this.yVel;
    if (t1 != null)
      t1 = false;
    else
      t1 = false;
    if (t1) {
      t1 = this.yMax;
      this.yVel = $.$gt$n(this.yVel, 0) ? t1 : C.JSNull_methods.$negate(t1);
    }
  }
},

Rectangle: {"": "Object;top,left,right,bottom",
  contains$1: function(_, point) {
    var t1, t2;
    if (point == null)
      return false;
    t1 = point.get$x(point);
    t2 = $.getInterceptor$n(t1);
    if (t2.$ge(t1, this.left))
      if (t2.$le(t1, this.right)) {
        t1 = point.get$y(point);
        t2 = $.getInterceptor$n(t1);
        t1 = t2.$ge(t1, this.top) && t2.$le(t1, this.bottom);
      } else
        t1 = false;
    else
      t1 = false;
    return t1;
  },
  get$width: function(_) {
    return $.$sub$n(this.right, this.left);
  },
  get$height: function(_) {
    return $.$sub$n(this.bottom, this.top);
  },
  get$x: function(_) {
    return this.left;
  },
  get$y: function(_) {
    return this.top;
  },
  get$halfWidth: function() {
    var t1, t2;
    t1 = this.right;
    if (typeof t1 !== "number")
      return this.get$halfWidth$bailout(1, t1);
    t2 = this.left;
    if (typeof t2 !== "number")
      return this.get$halfWidth$bailout(2, t1, t2);
    return (t1 - t2) / 2;
  },
  get$halfWidth$bailout: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = this.right;
      case 1:
        state0 = 0;
        t2 = this.left;
      case 2:
        state0 = 0;
        t2 = $.$sub$n(t1, t2);
        if (typeof t2 !== "number")
          throw t2.$div();
        return t2 / 2;
    }
  },
  get$halfHeight: function() {
    var t1, t2;
    t1 = this.bottom;
    if (typeof t1 !== "number")
      return this.get$halfHeight$bailout(1, t1);
    t2 = this.top;
    if (typeof t2 !== "number")
      return this.get$halfHeight$bailout(2, t1, t2);
    return (t1 - t2) / 2;
  },
  get$halfHeight$bailout: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = this.bottom;
      case 1:
        state0 = 0;
        t2 = this.top;
      case 2:
        state0 = 0;
        t2 = $.$sub$n(t1, t2);
        if (typeof t2 !== "number")
          throw t2.$div();
        return t2 / 2;
    }
  },
  static: {
Rectangle_intersect: function(r1, r2) {
  return !($.$gt$n(r1.left, r2.right) || $.$lt$n(r1.right, r2.left) || $.$gt$n(r1.top, r2.bottom) || $.$lt$n(r1.bottom, r2.top));
}}

},

Vector: {"": "Object;x*,y>"}}],
["dgame_html", "package:dgame/dgame_html.dart", , {
CanvasGameRenderer: {"": "GameRenderer;targetId?,ctx<",
  getRenderer$1: function(e) {
    var t1 = $.getInterceptor(e);
    if (typeof e === "object" && e !== null && !!t1.$isGameText)
      return this.textRenderer;
    return this.defaultRenderer;
  },
  render$0: function() {
    var t1, t2, t3, e, r;
    t1 = this.ctx;
    t2 = t1.canvas;
    t1.clearRect(0, 0, t2.width, t2.height);
    this.ctx.fillStyle = this._game.bgStyle;
    t2 = this.ctx;
    t1 = t2.canvas;
    t2.fillRect(0, 0, t1.width, t1.height);
    this.ctx.save();
    t1 = this.ctx;
    t2 = t1.canvas;
    t3 = t2.width;
    if (t3 == null)
      throw t3.$div();
    t2 = t2.height;
    if (t2 == null)
      throw t2.$div();
    t1.translate(t3 / 2, t2 / 2);
    for (t1 = this._game.entities, t1 = new $.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
      e = t1._liblib$_current;
      if (!e.get$enabled())
        continue;
      r = this.getRenderer$1(e);
      if (r != null)
        r.render$1(e);
    }
    this.drawBeforeCtxRestore$0();
    this.ctx.restore();
  },
  drawBeforeCtxRestore$0: function() {
    if ($.Game_debugMode)
      this.drawDebugInfo$0();
  },
  drawDebugInfo$0: function() {
    var t1, t2, t3, t4;
    this.ctx.fillStyle = "rgba(255, 255, 255, 0.2)";
    this.ctx.font = "16px Verdana";
    t1 = this.ctx;
    t2 = "FPS: " + C.JSNumber_methods.toStringAsFixed$1(this._game.timer.fps, 1);
    t3 = this.rect;
    t3.get$halfWidth;
    t3 = $.$sub$n(t3.right, t3.left);
    if (typeof t3 !== "number")
      throw t3.$div();
    t4 = this.rect;
    t4.get$halfHeight;
    t4 = $.$sub$n(t4.bottom, t4.top);
    if (typeof t4 !== "number")
      throw t4.$div();
    t1.fillText(t2, t3 / 2 - 120, -(t4 / 2 - 30));
  },
  clicked$1: function($event) {
  },
  get$clicked: function() {
    return new $.BoundClosure$1(this, "clicked$1", null);
  },
  pointerLockChange$1: function($event) {
    var t1, t2;
    t1 = this.canvas;
    t2 = document.webkitPointerLockElement;
    this.ownMouse = t1 == null ? t2 == null : t1 === t2;
  },
  get$pointerLockChange: function() {
    return new $.BoundClosure$1(this, "pointerLockChange$1", null);
  },
  CanvasGameRenderer$1: function(targetId) {
    var t1, clientRect;
    t1 = "#" + $.S(this.targetId);
    this.canvas = document.querySelector(t1);
    t1 = document;
    C.EventStreamProvider_webkitpointerlockchange.forTarget$2$useCapture;
    t1 = new $._EventStream(t1, C.EventStreamProvider_webkitpointerlockchange._eventType, false);
    new $._EventStreamSubscription(0, t1._liblib3$_target, t1._eventType, this.get$pointerLockChange(), t1._useCapture)._tryResume$0();
    t1 = this.canvas;
    t1.get$onClick;
    C.EventStreamProvider_click.forElement$2$useCapture;
    t1 = new $._ElementEventStreamImpl(t1, C.EventStreamProvider_click._eventType, false);
    new $._EventStreamSubscription(0, t1._liblib3$_target, t1._eventType, this.get$clicked(), t1._useCapture)._tryResume$0();
    this.ctx = $.get$context2d$x(this.canvas);
    t1 = this.ctx.canvas;
    this.rect = new $.Rectangle(0, 0, t1.width, t1.height);
    clientRect = this.ctx.canvas.getBoundingClientRect();
    this.ownMouse = false;
    t1 = $.getInterceptor$x(clientRect);
    this.rect.top = t1.get$top(clientRect);
    this.rect.left = t1.get$left(clientRect);
    this.rect.right = t1.get$right(clientRect);
    this.rect.bottom = t1.get$bottom(clientRect);
    this.defaultRenderer = new $.DefaultCanvasEntityRenderer(this);
    this.textRenderer = new $.TextRenderer(this);
  }
},

DefaultCanvasEntityRenderer: {"": "Object;gr",
  render$1: function(e) {
    var t1, t2, t3, t4, t5, t6;
    t1 = e.get$color();
    t2 = $.get$fill$x(e);
    t3 = this.gr;
    t4 = e.get$opacity();
    t5 = t3.ctx;
    if (t2 === true) {
      t5.fillStyle = "rgba(" + t1 + ", " + $.S(t4) + ")";
      t1 = t3.ctx;
      t2 = e.get$box();
      t3 = t2.left;
      if (typeof t3 !== "number")
        return this.render$1$bailout(1, e, t3, t2, t1);
      t4 = t2.top;
      t2.get$width;
      t5 = t2.right;
      if (typeof t5 !== "number")
        return this.render$1$bailout(2, e, t3, t5, t1, t4);
      t5 -= t3;
      t2.get$height;
      t6 = t2.bottom;
      if (typeof t6 !== "number")
        return this.render$1$bailout(3, e, t3, t5, t1, t4, t2, t6);
      if (typeof t4 !== "number")
        return this.render$1$bailout(4, e, t3, t5, t1, t4, t4, t6);
      t1.fillRect(t3, t4, t5, t6 - t4);
    } else {
      t5.strokeStyle = "rgba(" + t1 + ", " + $.S(t4) + ")";
      t1 = t3.ctx;
      t2 = e.get$box();
      t3 = t2.left;
      if (typeof t3 !== "number")
        return this.render$1$bailout(5, e, t3, t2, t1);
      t4 = t2.top;
      t2.get$width;
      t5 = t2.right;
      if (typeof t5 !== "number")
        return this.render$1$bailout(6, e, t3, t5, t1, t4);
      t5 -= t3;
      t2.get$height;
      t6 = t2.bottom;
      if (typeof t6 !== "number")
        return this.render$1$bailout(7, e, t3, t5, t1, t4, t2, t6);
      if (typeof t4 !== "number")
        return this.render$1$bailout(8, e, t3, t5, t1, t4, t4, t6);
      t1.strokeRect(t3, t4, t5, t6 - t4);
    }
    t1 = this.gr;
    if (t1._game.showOutlines) {
      t1.ctx.beginPath();
      t1.ctx.strokeStyle = "green";
      t2 = t1.ctx;
      t3 = $.getInterceptor$x(e);
      t4 = t3.get$x(e);
      t3 = t3.get$y(e);
      t5 = e.get$radius();
      t2.arc$6;
      t2.arc(t4, t3, t5, 0, 6.283185307179586, false);
      t1.ctx.stroke();
      t1.ctx.closePath();
    }
  },
  render$1$bailout: function(state0, e, t3, t2, t1, t4, t5, t6) {
    switch (state0) {
      case 0:
        t1 = e.get$color();
        t2 = $.get$fill$x(e);
        t3 = this.gr;
        t4 = e.get$opacity();
      default:
        if (state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && t2 === true)
          switch (state0) {
            case 0:
              t3.ctx.fillStyle = "rgba(" + t1 + ", " + $.S(t4) + ")";
              t1 = t3.ctx;
              t2 = e.get$box();
              t3 = t2.left;
            case 1:
              state0 = 0;
              t4 = t2.top;
              t2.get$width;
              t2 = t2.right;
            case 2:
              state0 = 0;
              t2 = $.$sub$n(t2, t3);
              t5 = e.get$box();
              t5.get$height;
              t6 = t5.bottom;
            case 3:
              state0 = 0;
              t5 = t5.top;
            case 4:
              state0 = 0;
              t1.fillRect(t3, t4, t2, $.$sub$n(t6, t5));
          }
        else
          switch (state0) {
            case 0:
              t3.ctx.strokeStyle = "rgba(" + t1 + ", " + $.S(t4) + ")";
              t1 = t3.ctx;
              t2 = e.get$box();
              t3 = t2.left;
            case 5:
              state0 = 0;
              t4 = t2.top;
              t2.get$width;
              t2 = t2.right;
            case 6:
              state0 = 0;
              t2 = $.$sub$n(t2, t3);
              t5 = e.get$box();
              t5.get$height;
              t6 = t5.bottom;
            case 7:
              state0 = 0;
              t5 = t5.top;
            case 8:
              state0 = 0;
              t1.strokeRect(t3, t4, t2, $.$sub$n(t6, t5));
          }
        t1 = this.gr;
        if (t1._game.showOutlines) {
          t1.ctx.beginPath();
          t1.ctx.strokeStyle = "green";
          t2 = t1.ctx;
          t3 = $.getInterceptor$x(e);
          t4 = t3.get$x(e);
          t3 = t3.get$y(e);
          t5 = e.get$radius();
          t2.arc$6;
          t2.arc(t4, t3, t5, 0, 6.283185307179586, false);
          t1.ctx.stroke();
          t1.ctx.closePath();
        }
    }
  }
},

HtmlGameInput: {"": "GameInput;_downKeys,_justPressedKeys,click,mouse,mouseDown,game,keyDownEventStream,keyUpEventStream",
  start$0: function(_) {
    var t1, t2;
    t1 = new $.HtmlGameInput_start_getXandY(this);
    t2 = document;
    C.EventStreamProvider_click.forTarget$2$useCapture;
    t2 = new $._EventStream(t2, C.EventStreamProvider_click._eventType, false);
    new $._EventStreamSubscription(0, t2._liblib3$_target, t2._eventType, new $.HtmlGameInput_start_closure(this, t1), t2._useCapture)._tryResume$0();
    t2 = document;
    C.EventStreamProvider_mousemove.forTarget$2$useCapture;
    t2 = new $._EventStream(t2, C.EventStreamProvider_mousemove._eventType, false);
    new $._EventStreamSubscription(0, t2._liblib3$_target, t2._eventType, new $.HtmlGameInput_start_closure0(this, t1), t2._useCapture)._tryResume$0();
    t2 = document;
    C.EventStreamProvider_touchmove.forTarget$2$useCapture;
    t2 = new $._EventStream(t2, C.EventStreamProvider_touchmove._eventType, false);
    new $._EventStreamSubscription(0, t2._liblib3$_target, t2._eventType, new $.HtmlGameInput_start_closure1(this, t1), t2._useCapture)._tryResume$0();
    t2 = document;
    C.EventStreamProvider_touchstart.forTarget$2$useCapture;
    t2 = new $._EventStream(t2, C.EventStreamProvider_touchstart._eventType, false);
    new $._EventStreamSubscription(0, t2._liblib3$_target, t2._eventType, new $.HtmlGameInput_start_closure2(), t2._useCapture)._tryResume$0();
    t2 = document;
    C.EventStreamProvider_keydown.forTarget$2$useCapture;
    t2 = new $._EventStream(t2, C.EventStreamProvider_keydown._eventType, false);
    new $._EventStreamSubscription(0, t2._liblib3$_target, t2._eventType, new $.HtmlGameInput_start_closure3(this), t2._useCapture)._tryResume$0();
    t2 = document;
    C.EventStreamProvider_keyup.forTarget$2$useCapture;
    t2 = new $._EventStream(t2, C.EventStreamProvider_keyup._eventType, false);
    new $._EventStreamSubscription(0, t2._liblib3$_target, t2._eventType, new $.HtmlGameInput_start_closure4(this), t2._useCapture)._tryResume$0();
    t2 = document;
    C.EventStreamProvider_mousedown.forTarget$2$useCapture;
    t2 = new $._EventStream(t2, C.EventStreamProvider_mousedown._eventType, false);
    new $._EventStreamSubscription(0, t2._liblib3$_target, t2._eventType, new $.HtmlGameInput_start_closure5(this), t2._useCapture)._tryResume$0();
    t2 = document;
    C.EventStreamProvider_mouseup.forTarget$2$useCapture;
    t2 = new $._EventStream(t2, C.EventStreamProvider_mouseup._eventType, false);
    new $._EventStreamSubscription(0, t2._liblib3$_target, t2._eventType, new $.HtmlGameInput_start_closure6(this), t2._useCapture)._tryResume$0();
  }
},

HtmlGameInput_start_getXandY: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = $.getInterceptor$x(e);
    t2 = this.this_0;
    return new $.Vector($.$sub$n($.$sub$n(t1.get$clientX(e), $.get$x$x($.get$rect$x(t2.get$game()))), $.get$rect$x(t2.get$game()).get$halfWidth()), $.$sub$n($.$sub$n(t1.get$clientY(e), $.get$y$x($.get$rect$x(t2.get$game()))), $.get$rect$x(t2.get$game()).get$halfHeight()));
  }
},

HtmlGameInput_start_closure: {"": "Closure;this_1,getXandY_2",
  call$1: function(e) {
    $.set$click$x(this.this_1, this.getXandY_2.call$1(e));
  }
},

HtmlGameInput_start_closure0: {"": "Closure;this_3,getXandY_4",
  call$1: function(e) {
    this.this_3.set$mouse(this.getXandY_4.call$1(e));
  }
},

HtmlGameInput_start_closure1: {"": "Closure;this_5,getXandY_6",
  call$1: function(e) {
    var t1 = $.getInterceptor$x(e);
    t1.preventDefault$0(e);
    t1 = t1.get$touches(e);
    if (0 >= t1.length)
      throw $.ioore(0);
    this.this_5.set$mouse(this.getXandY_6.call$1(t1[0]));
    return false;
  }
},

HtmlGameInput_start_closure2: {"": "Closure;",
  call$1: function(e) {
    $.preventDefault$0$x(e);
    return false;
  }
},

HtmlGameInput_start_closure3: {"": "Closure;this_7",
  call$1: function(e) {
    var t1, t2;
    t1 = $.getInterceptor$x(e);
    t1 = new $.GameKeyboardEvent(t1.get$keyCode(e), t1.get$altKey(e), t1.get$ctrlKey(e), t1.get$shiftKey(e));
    t2 = this.this_7.get$keyDownEventStream()._controller;
    t1 = t1;
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t1);
  }
},

HtmlGameInput_start_closure4: {"": "Closure;this_8",
  call$1: function(e) {
    var t1, t2;
    t1 = $.getInterceptor$x(e);
    t1 = new $.GameKeyboardEvent(t1.get$keyCode(e), t1.get$altKey(e), t1.get$ctrlKey(e), t1.get$shiftKey(e));
    t2 = this.this_8.get$keyUpEventStream()._controller;
    t1 = t1;
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t1);
  }
},

HtmlGameInput_start_closure5: {"": "Closure;this_9",
  call$1: function(e) {
    this.this_9.set$mouseDown(true);
  }
},

HtmlGameInput_start_closure6: {"": "Closure;this_10",
  call$1: function(e) {
    this.this_10.set$mouseDown(false);
  }
},

HtmlGameLoop: {"": "GameLoop;_callback",
  _callback$0: function() {
    return this._callback.call$0();
  },
  start$1: function(_, callback) {
    var t1, t2;
    this._callback = callback;
    t1 = window;
    t2 = this.get$loop(this);
    C.Window_methods._ensureRequestAnimationFrame$0(t1);
    C.Window_methods._requestAnimationFrame$1(t1, t2);
  },
  loop$1: function(_, time) {
    var t1, t2;
    this._callback$0();
    t1 = window;
    t2 = this.get$loop(this);
    C.Window_methods._ensureRequestAnimationFrame$0(t1);
    C.Window_methods._requestAnimationFrame$1(t1, t2);
  },
  get$loop: function(_receiver) {
    return new $.BoundClosure$i1(this, "loop$1", _receiver);
  }
},

HtmlGameSound: {"": "GameSound;audioCopy,enabled,Id,Sound,Volume,Looping,_rootDirectory"},

TextRenderer: {"": "DefaultCanvasEntityRenderer;gr",
  render$1: function(b) {
    var t1, t2, t3;
    t1 = this.gr;
    t1.ctx.fillStyle = "rgba(" + b.get$color() + ", " + $.S(b.get$opacity()) + ")";
    t2 = $.getInterceptor$x(b);
    t1.ctx.font = $.S(t2.get$size(b)) + "px " + t2.get$font(b);
    t2.set$width(b, t1.ctx.measureText(t2.get$text(b)).width);
    t1 = t1.ctx;
    t2 = t2.get$text(b);
    t3 = b.get$box();
    t1.fillText(t2, t3.left, t3.bottom);
  }
}}],
["event_stream", "package:event_stream/event_stream.dart", , {
EventStream: {"": "Object;_controller,stream"},

EventArgs: {"": "Object;", static: {
"": "EventArgs_empty",
}
}}],
["galaga.dart", "galaga.dart", , {
main: function() {
  var sound, t1, t2, input, renderer, loop, t3, t4, t5, t6, t7, t8, game;
  sound = new $.HtmlGameSound(null, true, null, null, null, null, "sounds/");
  sound.Sound = "";
  sound.Volume = 1;
  sound.Looping = false;
  t1 = new $.EventStream($.StreamController_StreamController(null, null, null, null, false), null);
  t1.stream = new $._ControllerStream(t1._controller).asBroadcastStream$0();
  t2 = new $.EventStream($.StreamController_StreamController(null, null, null, null, false), null);
  t2.stream = new $._ControllerStream(t2._controller).asBroadcastStream$0();
  input = new $.HtmlGameInput(new $.HashSet(0, null, null, null, null), new $.HashSet(0, null, null, null, null), null, null, false, null, t1, t2);
  input.GameInput$0();
  renderer = $.GalagaRenderer$("surface");
  loop = new $.HtmlGameLoop(null);
  t2 = new $.EventStream($.StreamController_StreamController(null, null, null, null, false), null);
  t2.stream = new $._ControllerStream(t2._controller).asBroadcastStream$0();
  t1 = new $.EventStream($.StreamController_StreamController(null, null, null, null, false), null);
  t1.stream = new $._ControllerStream(t1._controller).asBroadcastStream$0();
  t3 = new $.EventStream($.StreamController_StreamController(null, null, null, null, false), null);
  t3.stream = new $._ControllerStream(t3._controller).asBroadcastStream$0();
  t4 = new $.EventStream($.StreamController_StreamController(null, null, null, null, false), null);
  t4.stream = new $._ControllerStream(t4._controller).asBroadcastStream$0();
  t5 = new $.EventStream($.StreamController_StreamController(null, null, null, null, false), null);
  t5.stream = new $._ControllerStream(t5._controller).asBroadcastStream$0();
  t6 = new $.EventStream($.StreamController_StreamController(null, null, null, null, false), null);
  t6.stream = new $._ControllerStream(t6._controller).asBroadcastStream$0();
  t7 = new $.EventStream($.StreamController_StreamController(null, null, null, null, false), null);
  t7.stream = new $._ControllerStream(t7._controller).asBroadcastStream$0();
  t8 = new $.EventStream($.StreamController_StreamController(null, null, null, null, false), null);
  t8.stream = new $._ControllerStream(t8._controller).asBroadcastStream$0();
  game = new $.GalagaGame(0, 0, 5, 5, 0, null, new $.LinkedHashMap(0, null, null, null, null, null, 0), new $.LinkedHashMap(0, null, null, null, null, null, 0), new $.LinkedHashMap(0, null, null, null, null, null, 0), new $.LinkedHashMap(0, null, null, null, null, null, 0), new $.LinkedHashMap(0, null, null, null, null, null, 0), new $.LinkedHashMap(0, null, null, null, null, null, 0), "Jew", 1, -400, -165, 3, 3, 1, 0, 33, 60, 1, null, true, null, null, 0, 1, 3, false, true, true, 1, null, 1, 0, "All", 0.05, 0.06, 0.25, 0.55, 0.7, 0.8, 1, 1, 0, 5, 15, t2, t1, t3, t4, t5, t6, t7, t8, null, null, null, null, null, input, renderer, loop, "rgba(0, 0, 0, .85)", false);
  game.Game$withServices$3(input, renderer, loop);
  $.Game_debugMode = false;
  game.start$0(game);
}},
1],
["galaga_game", "package:galaga/galaga_game.dart", , {
GalagaGame: {"": "Game;score@,highScore,lastPowerUp,lastEnemy,lastStar,_liblib4$_state,Stats<,Options<,Controls,Highscores<,HighscoresRank,Cheats<,rank,pointMultiplier@,enemyX?,enemyY?,bulletCap,shipStartLives,colorCount,enemyCount,enemyAmount@,defaultTimer,level@,p1Dead?,goingRight,_countdownTimer,_waitingTimer,_waiting@,difficulty@,bonusCheck@,bonusStage@,soundEffectsOn,tutorial?,visualLevel<,ship<,nextId,targetId@,powerupChoice@,teleporter@,spiral?,multi?,bullet?,invincible@,time?,life?,cloneId?,spreadWaiting,rendererTemp1@,rendererTemp2@,_statUpdateEvent<,_gameOverEvent<,_shipHitEvent<,_bossHitEvent<,_bossKilledEvent,_motherShipEvent<,_normalHitEvent<,_fadeEvent<,entities,sounds,timer,clockTick,rect,input,renderer,loop,bgStyle,showOutlines",
  get$state: function(_) {
    return this._liblib4$_state;
  },
  set$state: function(_, value) {
    var t1;
    if (this._liblib4$_state === value)
      return;
    this._liblib4$_state = value;
    this.disableEntitiesByGroup$1("welcome");
    this.disableEntitiesByGroup$1("gameOver");
    this.disableEntitiesByGroup$1("stats");
    this.disableEntitiesByGroup$1("paused");
    this.disableEntitiesByGroup$1("options");
    this.disableEntitiesByGroup$1("instructions");
    this.disableEntitiesByGroup$1("levelEnd");
    this.disableEntitiesByGroup$1("leaders");
    this.disableEntitiesByGroup$1("cheats");
    t1 = this._liblib4$_state;
    if (t1 === 1)
      this.enableEntitiesByGroup$1("welcome");
    else if (t1 === 4)
      this.enableEntitiesByGroup$1("gameOver");
    else if (t1 === 5)
      this.enableEntitiesByGroup$1("stats");
    else if (t1 === 2)
      this.enableEntitiesByGroup$1("paused");
    else if (t1 === 6)
      this.enableEntitiesByGroup$1("options");
    else if (t1 === 7)
      this.enableEntitiesByGroup$1("instructions");
    else if (t1 === 8)
      this.enableEntitiesByGroup$1("levelEnd");
    else if (t1 === 9)
      this.enableEntitiesByGroup$1("leaders");
    else if (t1 === 10)
      this.enableEntitiesByGroup$1("cheats");
  },
  get$waiting: function() {
    return this._waiting;
  },
  set$waiting: function(value) {
    var t1, t2;
    this._waiting = value;
    t1 = this._waitingTimer;
    if (t1 != null)
      t1.cancel$0();
    this.disableEntitiesByGroup$1("welcome");
    this.disableEntitiesByGroup$1("gameOver");
    this.disableEntitiesByGroup$1("stats");
    this.disableEntitiesByGroup$1("paused");
    this.disableEntitiesByGroup$1("options");
    this.disableEntitiesByGroup$1("instructions");
    this.disableEntitiesByGroup$1("leaders");
    this.disableEntitiesByGroup$1("cheats");
    t1 = new $._PeriodicZoneTimer($.get$_Zone__current(), new $.GalagaGame_waiting_closure(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createPeriodicTimer(C.Duration_1000000, t1.get$_run());
    this._waitingTimer = t1;
  },
  start$0: function(_) {
    var t1, t2, i;
    t1 = this.Stats;
    if (!t1.containsKey$1(t1, "killed"))
      t1.$indexSet(t1, "killed", 0);
    if (!t1.containsKey$1(t1, "wins"))
      t1.$indexSet(t1, "wins", 0);
    if (!t1.containsKey$1(t1, "deaths"))
      t1.$indexSet(t1, "deaths", 0);
    if (!t1.containsKey$1(t1, "totalGames"))
      t1.$indexSet(t1, "totalGames", 0);
    if (!t1.containsKey$1(t1, "highscore"))
      t1.$indexSet(t1, "highscore", 0);
    if (!t1.containsKey$1(t1, "normalKills"))
      t1.$indexSet(t1, "normalKills", 0);
    if (!t1.containsKey$1(t1, "bossKills"))
      t1.$indexSet(t1, "bossKills", 0);
    if (!t1.containsKey$1(t1, "droneKills"))
      t1.$indexSet(t1, "droneKills", 0);
    if (!t1.containsKey$1(t1, "motherKills"))
      t1.$indexSet(t1, "motherKills", 0);
    if (!t1.containsKey$1(t1, "powerups"))
      t1.$indexSet(t1, "powerups", 0);
    if (!t1.containsKey$1(t1, "percentage"))
      t1.$indexSet(t1, "percentage", 0);
    if (!t1.containsKey$1(t1, "bulletsHit"))
      t1.$indexSet(t1, "bulletsHit", 0);
    if (!t1.containsKey$1(t1, "bulletsFired"))
      t1.$indexSet(t1, "bulletsFired", 0);
    t1 = this.Options;
    if (!t1.containsKey$1(t1, "startLives"))
      t1.$indexSet(t1, "startLives", 3);
    if (!t1.containsKey$1(t1, "bulletCap"))
      t1.$indexSet(t1, "bulletCap", 3);
    if (!t1.containsKey$1(t1, "time"))
      t1.$indexSet(t1, "time", 60);
    if (!t1.containsKey$1(t1, "difficulty"))
      t1.$indexSet(t1, "difficulty", 1);
    if (!t1.containsKey$1(t1, "powerups"))
      t1.$indexSet(t1, "powerups", 1);
    if (!t1.containsKey$1(t1, "soundeffects"))
      t1.$indexSet(t1, "soundeffects", 1);
    if (!t1.containsKey$1(t1, "controls"))
      t1.$indexSet(t1, "controls", 1);
    t2 = this.Controls;
    if (!t2.containsKey$1(t2, "left"))
      t2.$indexSet(t2, "left", "left");
    if (!t2.containsKey$1(t2, "right"))
      t2.$indexSet(t2, "right", "right");
    if (!t2.containsKey$1(t2, "fire"))
      t2.$indexSet(t2, "fire", "space");
    t2 = this.Highscores;
    if (!t2.containsKey$1(t2, 1))
      t2.$indexSet(t2, 1, 0);
    if (!t2.containsKey$1(t2, 2))
      t2.$indexSet(t2, 2, 0);
    if (!t2.containsKey$1(t2, 3))
      t2.$indexSet(t2, 3, 0);
    if (!t2.containsKey$1(t2, 4))
      t2.$indexSet(t2, 4, 0);
    if (!t2.containsKey$1(t2, 5))
      t2.$indexSet(t2, 5, 0);
    if (!t2.containsKey$1(t2, 6))
      t2.$indexSet(t2, 6, 0);
    if (!t2.containsKey$1(t2, 7))
      t2.$indexSet(t2, 7, 0);
    if (!t2.containsKey$1(t2, 8))
      t2.$indexSet(t2, 8, 0);
    if (!t2.containsKey$1(t2, 9))
      t2.$indexSet(t2, 9, 0);
    if (!t2.containsKey$1(t2, 10))
      t2.$indexSet(t2, 10, 0);
    t2 = this.Cheats;
    if (!t2.containsKey$1(t2, "spreadshot"))
      t2.$indexSet(t2, "spreadshot", 0);
    if (!t2.containsKey$1(t2, "invincibility"))
      t2.$indexSet(t2, "invincibility", 0);
    if (!t2.containsKey$1(t2, "super"))
      t2.$indexSet(t2, "super", 0);
    if ($.$eq(t1.$index(t1, "soundeffects"), 1))
      this.soundEffectsOn = true;
    else
      this.soundEffectsOn = false;
    this.createWelcomeMenu$0();
    this.createGameOverMenu$0();
    this.createStatsMenu$0();
    this.createPausedMenu$0();
    this.createInstructionsMenu$0();
    this.createLeaderBoardMenu$0();
    this.createCheatsMenu$0();
    for (i = 0; i < 50; ++i)
      this.startStars$0();
    this.set$state(this, 1);
    $.Game.prototype.start$0.call(this, this);
  },
  update$0: function() {
    var t1, t2, t3;
    t1 = this._liblib4$_state;
    if (t1 === 3 || t1 === 2) {
      this.score = $.ceil$0$nx(this.score);
      if (this.input.isKeyJustPressed$1(27))
        this.set$state(this, this._liblib4$_state === 2 ? 3 : 2);
      if (this.enemyAmount <= 0) {
        t1 = this.Stats;
        t2 = t1.$index(t1, "wins");
        if (typeof t2 !== "number")
          return this.update$0$bailout1(1, t2, t1);
        t1.$indexSet(t1, "wins", t2 + 1);
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure0());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure1());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure2());
        this.removeEntitiesByGroup$1("levelEnd");
        this.createLevelEnd$0();
        this.set$state(this, 8);
        this.set$waiting(1);
        if (!this.tutorial)
          this.level = this.level + 1;
        this.visualLevel = this.visualLevel + 1;
      }
      t1 = this.score;
      t2 = this.Stats;
      t3 = t2.$index(t2, "highscore");
      if (typeof t1 !== "number")
        throw t1.$gt();
      if (typeof t3 !== "number")
        throw $.iae(t3);
      if (t1 > t3)
        t2.$indexSet(t2, "highscore", this.score);
      if (this._liblib4$_state === 3) {
        t1 = this.Options;
        t1 = t1.$index(t1, "soundeffects");
        if (typeof t1 !== "number")
          return this.update$0$bailout1(2, t2, t1);
        t1 = t1 === 1;
      } else
        t1 = false;
      if (t1)
        this.newPowerUp$0();
      if (this._liblib4$_state === 3)
        this.newMotherShip$0();
      t1 = this.timer.gameTime;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(3, t2, t1);
      t1 = t1 <= 0;
      if (t1 && !this.bonusStage)
        this.gameOver$0();
      else if (this.bonusStage && t1) {
        t1 = t2.$index(t2, "wins");
        if (typeof t1 !== "number")
          return this.update$0$bailout1(4, t2, t1);
        t2.$indexSet(t2, "wins", t1 + 1);
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure3());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure4());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure5());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure6());
        this.removeEntitiesByGroup$1("levelEnd");
        this.createLevelEnd$0();
        this.set$state(this, 8);
        this.set$waiting(1);
        this.level = this.level + 1;
        this.visualLevel = this.visualLevel + 1;
      }
    }
    t1 = new $.WhereIterable(this.entities, new $.GalagaGame_update_closure7());
    t1.forEach$1(t1, new $.GalagaGame_update_closure8());
    this.newStar$0();
    $.Game.prototype.update$0.call(this);
  },
  update$0$bailout1: function(state0, t2, t1) {
    switch (state0) {
      case 0:
        t1 = this._liblib4$_state;
      default:
        var t3;
        if (state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && (t1 === 3 || t1 === 2))
          switch (state0) {
            case 0:
              this.score = $.ceil$0$nx(this.score);
              if (this.input.isKeyJustPressed$1(27))
                this.set$state(this, this._liblib4$_state === 2 ? 3 : 2);
            case 1:
              if (state0 === 1 || state0 === 0 && this.enemyAmount <= 0)
                switch (state0) {
                  case 0:
                    t1 = this.Stats;
                    t2 = t1.$index(t1, "wins");
                  case 1:
                    state0 = 0;
                    t1.$indexSet(t1, "wins", $.$add$ns(t2, 1));
                    this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure());
                    this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure0());
                    this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure1());
                    this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure2());
                    this.removeEntitiesByGroup$1("levelEnd");
                    this.createLevelEnd$0();
                    this.set$state(this, 8);
                    this.set$waiting(1);
                    if (!this.tutorial)
                      this.level = this.level + 1;
                    this.visualLevel = this.visualLevel + 1;
                }
              t1 = this.score;
              t2 = this.Stats;
              t3 = t2.$index(t2, "highscore");
              if (typeof t1 !== "number")
                throw t1.$gt();
              if (typeof t3 !== "number")
                throw $.iae(t3);
              if (t1 > t3)
                t2.$indexSet(t2, "highscore", this.score);
            case 2:
              if (state0 === 2 || state0 === 0 && this._liblib4$_state === 3)
                switch (state0) {
                  case 0:
                    t1 = this.Options;
                    t1 = t1.$index(t1, "soundeffects");
                  case 2:
                    state0 = 0;
                    t1 = $.$eq(t1, 1);
                }
              else
                t1 = false;
              if (t1)
                this.newPowerUp$0();
              if (this._liblib4$_state === 3)
                this.newMotherShip$0();
              t1 = this.timer.gameTime;
            case 3:
              state0 = 0;
              t3 = $.getInterceptor$n(t1);
            case 4:
              if (state0 === 0 && t3.$le(t1, 0) && !this.bonusStage)
                this.gameOver$0();
              else
                switch (state0) {
                  case 0:
                  case 4:
                    if (state0 === 4 || state0 === 0 && this.bonusStage && t3.$le(t1, 0))
                      switch (state0) {
                        case 0:
                          t1 = t2.$index(t2, "wins");
                        case 4:
                          state0 = 0;
                          t2.$indexSet(t2, "wins", $.$add$ns(t1, 1));
                          this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure3());
                          this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure4());
                          this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure5());
                          this.removeEntitiesByFilter$1(new $.GalagaGame_update_closure6());
                          this.removeEntitiesByGroup$1("levelEnd");
                          this.createLevelEnd$0();
                          this.set$state(this, 8);
                          this.set$waiting(1);
                          this.level = this.level + 1;
                          this.visualLevel = this.visualLevel + 1;
                      }
                }
          }
        t1 = new $.WhereIterable(this.entities, new $.GalagaGame_update_closure7());
        t1.forEach$1(t1, new $.GalagaGame_update_closure8());
        this.newStar$0();
        $.Game.prototype.update$0.call(this);
    }
  },
  startStars$0: function() {
    var t1, w, star;
    t1 = this.colorCount;
    if (t1 < 7)
      this.colorCount = t1 + 1;
    else
      this.colorCount = 1;
    w = $.random(0.5, 3.5, false);
    star = new $.Stars(1, this, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    star.GameEntity$withPosition$7(this, 0, 0, w, w, null, null);
    star.opacity = 0;
    star.starColor = $.random(1, 7, false);
    star.starColor = $.ceil$0$nx(star.starColor);
    star.momentum.yVel = $.random(50, 150, false);
    star._x = $.random(-this.rect.get$halfWidth(), this.rect.get$halfWidth(), false);
    star.updateBox$0();
    star._y = $.random(-this.rect.get$halfHeight(), this.rect.get$halfHeight(), false);
    star.updateBox$0();
    this.entities.push(star);
  },
  newParticle$4: function(x, y, xVel, yVel) {
    var w, particle;
    w = $.random(0.5, 3.5, false);
    particle = $.Particles$(this, x, y, w, w, this.colorCount, xVel, yVel);
    this.entities.push(particle);
  },
  newExplosion$2: function(x, y) {
    var yV, i, w, particle;
    for (yV = 80, i = 0; i < 3; ++i) {
      w = $.random(0.5, 3.5, false);
      particle = $.Particles$(this, x, y, w, w, this.colorCount, 50, yV);
      this.entities.push(particle);
      yV -= 80;
    }
    for (yV = 80, i = 0; i < 3; ++i) {
      w = $.random(0.5, 3.5, false);
      particle = $.Particles$(this, x, y, w, w, this.colorCount, -50, yV);
      this.entities.push(particle);
      yV -= 80;
    }
    this.newParticle$4(x, y, 0, 100);
    this.newParticle$4(x, y, 0, -100);
  },
  newMiniExplosion$2: function(x, y) {
    this.newParticle$4(x, y, 50, 0);
    this.newParticle$4(x, y, -50, 0);
    this.newParticle$4(x, y, 0, 50);
    this.newParticle$4(x, y, 0, -50);
  },
  newStar$0: function() {
    var w, star;
    if ($.random(0, 1, false) > 0.09 || this._liblib4$_state === 2)
      return;
    w = $.random(0.5, 3.5, false);
    this.colorCount = this.colorCount + 1;
    if (this.colorCount > 7)
      this.colorCount = 1;
    star = $.Stars$(this, $.random(-this.rect.get$halfWidth(), this.rect.get$halfWidth(), false), -this.rect.get$halfHeight() - 20, w, w, this.colorCount);
    this.lastStar = this.timer.gameTime;
    this.entities.push(star);
  },
  newBoss$0: function() {
    var enemy = $.Enemy$(this, 0, 0, this.difficulty, "Boss");
    enemy.idNum = this.nextId;
    this.nextId = this.nextId + 1;
    enemy._y = -200;
    enemy.updateBox$0();
    this.entities.push(enemy);
  },
  newBouncer$1: function(sprite) {
    var bouncer = $.bouncingBall$(this, 0, 0, 36, 36, sprite);
    if (sprite === 1) {
      bouncer._height = 42;
      bouncer.updateBox$0();
      bouncer._width = 42;
      bouncer.updateBox$0();
    } else if (sprite === 5) {
      bouncer._height = 12;
      bouncer.updateBox$0();
      bouncer._width = 12;
      bouncer.updateBox$0();
    } else if (sprite === 6) {
      bouncer._height = 42;
      bouncer.updateBox$0();
      bouncer._width = 42;
      bouncer.updateBox$0();
    } else if (sprite === 7) {
      bouncer._height = 42;
      bouncer.updateBox$0();
      bouncer._width = 42;
      bouncer.updateBox$0();
    } else if (sprite === 8) {
      bouncer._height = 42;
      bouncer.updateBox$0();
      bouncer._width = 42;
      bouncer.updateBox$0();
    } else if (sprite === 9) {
      bouncer._height = 72;
      bouncer.updateBox$0();
      bouncer._width = 72;
      bouncer.updateBox$0();
    } else if (sprite === 10) {
      bouncer._height = 36;
      bouncer.updateBox$0();
      bouncer._width = 36;
      bouncer.updateBox$0();
    } else if (sprite === 11) {
      bouncer._height = 62;
      bouncer.updateBox$0();
      bouncer._width = 62;
      bouncer.updateBox$0();
    } else if (sprite === 12) {
      bouncer._height = 42;
      bouncer.updateBox$0();
      bouncer._width = 42;
      bouncer.updateBox$0();
    } else if (sprite === 13) {
      bouncer._height = 62;
      bouncer.updateBox$0();
      bouncer._width = 62;
      bouncer.updateBox$0();
    } else if (sprite === 14) {
      bouncer._height = 42;
      bouncer.updateBox$0();
      bouncer._width = 42;
      bouncer.updateBox$0();
    } else if (sprite === 15) {
      bouncer._height = 42;
      bouncer.updateBox$0();
      bouncer._width = 42;
      bouncer.updateBox$0();
    } else if (sprite === 16) {
      bouncer._height = 42;
      bouncer.updateBox$0();
      bouncer._width = 42;
      bouncer.updateBox$0();
    } else if (sprite === 17) {
      bouncer._height = 42;
      bouncer.updateBox$0();
      bouncer._width = 42;
      bouncer.updateBox$0();
    } else if (sprite === 18) {
      bouncer._height = 42;
      bouncer.updateBox$0();
      bouncer._width = 42;
      bouncer.updateBox$0();
    }
    this.entities.push(bouncer);
  },
  newBossDrone$2: function(x, y) {
    var t1, t2, enemy;
    t1 = {};
    t1.x_0 = 0;
    t2 = new $.WhereIterable(this.entities, new $.GalagaGame_newBossDrone_closure());
    t2.forEach$1(t2, new $.GalagaGame_newBossDrone_closure0(t1));
    if ($.$ge$n(t1.x_0, 6))
      return;
    if ($.random(0, 1, false) < 0.01) {
      enemy = $.Enemy$(this, t1.x_0, y, this.difficulty, "Drone");
      enemy.idNum = this.nextId;
      this.nextId = this.nextId + 1;
      this.entities.push(enemy);
    }
  },
  newMotherShip$1$difficulty: function(difficulty) {
    var t1, t2, enemy;
    t1 = {};
    t1.x_0 = 0;
    t2 = new $.WhereIterable(this.entities, new $.GalagaGame_newMotherShip_closure());
    t2.forEach$1(t2, new $.GalagaGame_newMotherShip_closure0(t1));
    if ($.$ge$n(t1.x_0, 2))
      return;
    if ($.random(0, 1, false) < 0.001) {
      enemy = $.Enemy$(this, -this.rect.get$halfWidth(), -225, difficulty, "MotherShip");
      enemy.idNum = this.nextId;
      this.nextId = this.nextId + 1;
      this.entities.push(enemy);
    }
  },
  newMotherShip$0: function() {
    return this.newMotherShip$1$difficulty(1);
  },
  newEnemy$1: function(difficulty) {
    var enemy, clone;
    enemy = $.Enemy$(this, this.enemyX, this.enemyY, difficulty, "Normal");
    clone = new $.Clone(null, this, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    clone.GameEntity$withPosition$7(this, enemy._x, enemy._y, 36, 36, null, null);
    clone.momentum.xVel = 80;
    clone.opacity = 0;
    clone.color = "0, 255, 0";
    enemy.startY = this.enemyY;
    enemy.cloneNum = this.cloneId;
    clone.Id = this.cloneId;
    this.cloneId = this.cloneId + 1;
    this.enemyX = this.enemyX + 70;
    this.enemyCount = this.enemyCount + 1;
    if (this.enemyCount > 10) {
      this.enemyY = this.enemyY + 65;
      this.enemyX = -400;
      this.enemyCount = 0;
    }
    enemy.idNum = this.nextId;
    this.nextId = this.nextId + 1;
    this.lastEnemy = this.timer.gameTime;
    this.entities.push(enemy);
    this.entities.push(clone);
  },
  newEnemy$0: function() {
    return this.newEnemy$1(1);
  },
  newBulletPowerUp$2: function(x, y) {
    var powerUp = $.PowerUp$(this, x, y, "bulletPower");
    this.entities.push(powerUp);
  },
  newPowerUp$0: function() {
    var powerUp, t1;
    if ($.random(0, 1, false) > 0.001)
      return;
    powerUp = $.PowerUp$(this, 0, 0, null);
    do {
      powerUp._x = $.random(-this.rect.get$halfWidth() + 50, this.rect.get$halfWidth() - 50, false);
      powerUp.updateBox$0();
      powerUp._y = -this.rect.get$halfHeight();
      powerUp.updateBox$0();
    } while (t1 = new $.WhereIterable(this.entities, new $.GalagaGame_newPowerUp_closure()), t1.any$1(t1, new $.GalagaGame_newPowerUp_closure0(powerUp)));
    this.lastPowerUp = this.timer.gameTime;
    this.entities.push(powerUp);
  },
  getEnemyX$1: function(type) {
    var t1 = new $.WhereIterable(this.entities, new $.GalagaGame_getEnemyX_closure());
    t1.forEach$1(t1, new $.GalagaGame_getEnemyX_closure0(type));
    return 0;
  },
  getEnemyY$1: function(type) {
    $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.entities, new $.GalagaGame_getEnemyY_closure()), true), new $.GalagaGame_getEnemyY_closure0(type));
    return 0;
  },
  createCheatsMenu$0: function() {
    var t1, t2;
    t1 = new $.GameText("ECSTACY!", true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "cheats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -240, 10, 10, "", "cheats");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("SpreadShot:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "cheats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, -38, -94, 10, 10, "", "cheats");
    t1.opacity = 0.7;
    this.entities.push(t1);
    t1 = this.Cheats;
    t2 = $.$eq(t1.$index(t1, "spreadshot"), 1) ? "On" : "Off";
    t2 = $.GameButton$(new $.GalagaGame_createCheatsMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "cheats", "", 0.7, 36, t2, 200, -94);
    this.entities.push(t2);
    t2 = new $.GameText("Invincibility:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "cheats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, -38, -64, 10, 10, "", "cheats");
    t2.opacity = 0.7;
    this.entities.push(t2);
    t2 = $.$eq(t1.$index(t1, "invincibility"), 1) ? "On" : "Off";
    t2 = $.GameButton$(new $.GalagaGame_createCheatsMenu_closure0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "cheats", "", 0.7, 36, t2, 200, -64);
    this.entities.push(t2);
    t2 = new $.GameText("SuperShot:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "cheats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, -38, -30, 10, 10, "", "cheats");
    t2.opacity = 0.7;
    this.entities.push(t2);
    t1 = $.$eq(t1.$index(t1, "super"), 1) ? "On" : "Off";
    t1 = $.GameButton$(new $.GalagaGame_createCheatsMenu_closure1(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "cheats", "", 0.7, 36, t1, 200, -30);
    this.entities.push(t1);
    t1 = new $.GameText("Powerups:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "cheats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, -38, 0, 10, 10, "", "cheats");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText(this.powerupChoice, true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "cheats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 200, 0, 10, 10, "", "cheats");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createCheatsMenu_closure2(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "cheats", "", 0.8, 36, "->", 325, 0);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createCheatsMenu_closure3(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "cheats", "", 0.8, 36, "<-", 70, 0);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createCheatsMenu_closure4(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "cheats", "", 0.7, 16, "Made by Cody Smith", 400, 275);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("cheats");
  },
  createLevelEnd$0: function() {
    var t1 = this.visualLevel;
    t1 = t1 !== this.bonusCheck ? "Level " + t1 + " Complete!" : "Prepare for Bonus Stage!";
    t1 = new $.GameText(t1, true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "levelEnd", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -97, 10, 10, "", "levelEnd");
    t1.opacity = 0.7;
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("levelEnd");
  },
  createWelcomeMenu$0: function() {
    var t1, t2, highscore;
    t1 = this._gameOverEvent._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
    t1 = this.Highscores;
    highscore = t1.$index(t1, 1);
    t1 = $.getInterceptor$n(highscore);
    if (t1.$ge(highscore, 1000000))
      this.rank = "Pablo Manrequez";
    else if (t1.$ge(highscore, 500000))
      this.rank = "God of all Dimensions";
    else if (t1.$ge(highscore, 200000))
      this.rank = "Commander of Multi-verse";
    else if (t1.$ge(highscore, 100000))
      this.rank = "Overseer of Multi-verse";
    else if (t1.$ge(highscore, 95000))
      this.rank = "Overlord of the Universe";
    else if (t1.$ge(highscore, 85000))
      this.rank = "Commander of the Universe";
    else if (t1.$ge(highscore, 75000))
      this.rank = "President of the Universe";
    else if (t1.$ge(highscore, 65000))
      this.rank = "Overlord of the Galaxy";
    else if (t1.$ge(highscore, 55000))
      this.rank = "Space Captain";
    else if (t1.$ge(highscore, 45000))
      this.rank = "Space Cadet";
    else if (t1.$ge(highscore, 35000))
      this.rank = "Space Recruit";
    else if (t1.$ge(highscore, 25000))
      this.rank = "Road Warrior";
    else if (t1.$ge(highscore, 15000))
      this.rank = "Amish Mastermind";
    else if (t1.$ge(highscore, 10000))
      this.rank = "Jewish Priest";
    else if ((t1.$ge(highscore, 5000) || t1.$le(highscore, 5000)) && !t1.$eq(highscore, 0))
      this.rank = "Jew";
    else if (t1.$eq(highscore, 0))
      this.rank = "";
    t1 = new $.GameText("You're: " + this.rank, true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -275, 10, 10, "", "welcome");
    t1.opacity = 0.65;
    this.entities.push(t1);
    t1 = new $.GameText("Welcome to Galaga Ecstacy X!", true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -97, 10, 10, "", "welcome");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("Made by Cody Smith", true, "cinnamoncake, Verdana", 16, this, 0, 0, 1, 1, false, false, "", "welcome", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 400, 275, 10, 10, "", "welcome");
    t1.opacity = 0.7;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.7, 36, "Start Game", 0, -31);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_closure0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.7, 36, "Statistics", 0, 14);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_closure1(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.7, 36, "Options", 0, 48);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_closure2(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.7, 36, "Leaderboard", 0, 82);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("welcome");
  },
  createPausedMenu$0: function() {
    var t1 = new $.GameText("PAUSED", true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "paused", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -31, 10, 10, "", "paused");
    t1.opacity = 0.7;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createPausedMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "paused", "", 0.7, 36, "Quit", 0, 15);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("paused");
  },
  createLeaderBoardMenu$0: function() {
    var t1, t2, i, iScore, t3;
    for (t1 = this.HighscoresRank, t2 = this.Highscores, i = 1; i < 11; ++i) {
      iScore = t2.$index(t2, i);
      t3 = $.getInterceptor$n(iScore);
      if (t3.$ge(iScore, 1000000))
        t1.$indexSet(t1, i, "Pablo Manrequez");
      else if (t3.$ge(iScore, 500000))
        t1.$indexSet(t1, i, "God of all Dimensions");
      else if (t3.$ge(iScore, 200000))
        t1.$indexSet(t1, i, "Commander of Multi-verse");
      else if (t3.$ge(iScore, 100000))
        t1.$indexSet(t1, i, "Overseer of Multi-verse");
      else if (t3.$ge(iScore, 95000))
        t1.$indexSet(t1, i, "Overlord of the Universe");
      else if (t3.$ge(iScore, 85000))
        t1.$indexSet(t1, i, "Commander of the Universe");
      else if (t3.$ge(iScore, 75000))
        t1.$indexSet(t1, i, "President of the Universe");
      else if (t3.$ge(iScore, 65000))
        t1.$indexSet(t1, i, "Overlord of the Galaxy");
      else if (t3.$ge(iScore, 55000))
        t1.$indexSet(t1, i, "Space Captain");
      else if (t3.$ge(iScore, 45000))
        t1.$indexSet(t1, i, "Space Cadet");
      else if (t3.$ge(iScore, 35000))
        t1.$indexSet(t1, i, "Space Recruit");
      else if (t3.$ge(iScore, 25000))
        t1.$indexSet(t1, i, "Road Warrior");
      else if (t3.$ge(iScore, 15000))
        t1.$indexSet(t1, i, "Amish Mastermind");
      else if (t3.$ge(iScore, 10000))
        t1.$indexSet(t1, i, "Jewish Priest");
      else if ((t3.$ge(iScore, 5000) || t3.$le(iScore, 5000)) && !t3.$eq(iScore, 0))
        t1.$indexSet(t1, i, "Jew");
      else if (t3.$eq(iScore, 0))
        t1.$indexSet(t1, i, "");
    }
    t3 = new $.GameText("Leaderboard", true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 0, -240, 10, 10, "", "leaders");
    t3.opacity = 0.8;
    this.entities.push(t3);
    t3 = new $.GameText("Made by Cody Smith", true, "cinnamoncake, Verdana", 16, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 400, 275, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText("Score", true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, -175, 10, 10, "", "leaders");
    t3.opacity = 0.8;
    this.entities.push(t3);
    t3 = new $.GameText("Ranking", true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, -175, 10, 10, "", "leaders");
    t3.opacity = 0.8;
    this.entities.push(t3);
    t3 = $.$le$n(t2.$index(t2, 1), 0) ? "" : "1: " + $.S(t2.$index(t2, 1));
    t3 = new $.GameText(t3, true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, -135, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 1)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, -135, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = $.$le$n(t2.$index(t2, 2), 0) ? "" : "2: " + $.S(t2.$index(t2, 2));
    t3 = new $.GameText(t3, true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, -95, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 2)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, -95, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = $.$le$n(t2.$index(t2, 3), 0) ? "" : "3: " + $.S(t2.$index(t2, 3));
    t3 = new $.GameText(t3, true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, -55, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 3)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, -55, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = $.$le$n(t2.$index(t2, 4), 0) ? "" : "4: " + $.S(t2.$index(t2, 4));
    t3 = new $.GameText(t3, true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, -15, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 4)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, -15, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = $.$le$n(t2.$index(t2, 5), 0) ? "" : "5: " + $.S(t2.$index(t2, 5));
    t3 = new $.GameText(t3, true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, 25, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 5)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, 25, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = $.$le$n(t2.$index(t2, 6), 0) ? "" : "6: " + $.S(t2.$index(t2, 6));
    t3 = new $.GameText(t3, true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, 65, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 6)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, 65, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = $.$le$n(t2.$index(t2, 7), 0) ? "" : "7: " + $.S(t2.$index(t2, 7));
    t3 = new $.GameText(t3, true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, 105, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 7)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, 105, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = $.$le$n(t2.$index(t2, 8), 0) ? "" : "8: " + $.S(t2.$index(t2, 8));
    t3 = new $.GameText(t3, true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, 145, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 8)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, 145, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = $.$le$n(t2.$index(t2, 9), 0) ? "" : "9: " + $.S(t2.$index(t2, 9));
    t3 = new $.GameText(t3, true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, -160, 185, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t3 = new $.GameText($.S(t1.$index(t1, 9)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t3.GameEntity$withPosition$7(this, 160, 185, 10, 10, "", "leaders");
    t3.opacity = 0.7;
    this.entities.push(t3);
    t2 = $.$le$n(t2.$index(t2, 10), 0) ? "" : "10: " + $.S(t2.$index(t2, 10));
    t2 = new $.GameText(t2, true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, -160, 225, 10, 10, "", "leaders");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t1 = new $.GameText($.S(t1.$index(t1, 10)), true, "cinnamoncake, Verdana", 42, this, 0, 0, 1, 1, false, false, "", "leaders", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 160, 225, 10, 10, "", "leaders");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createLeaderBoardMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.7, 36, "RESET", 0, 275);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createLeaderBoardMenu_closure0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.7, 36, "Back", -420, -280);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("leaders");
  },
  createStatsMenu$0: function() {
    var t1, t2;
    t1 = new $.GameText("Statistics", true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -280, 10, 10, "", "stats");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("Made by Cody Smith", true, "cinnamoncake, Verdana", 16, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 400, 275, 10, 10, "", "stats");
    t1.opacity = 0.7;
    this.entities.push(t1);
    t1 = this.Stats;
    t2 = new $.GameText("Total Killed: " + $.S(t1.$index(t1, "killed")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -200, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Groupies Annihilated: " + $.S(t1.$index(t1, "normalKills")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -155, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Motherships Deflowered: " + $.S(t1.$index(t1, "bossKills")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -110, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Mothership Drones Overkilled: " + $.S(t1.$index(t1, "droneKills")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -65, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("UFO's Eviscerated: " + $.S(t1.$index(t1, "motherKills")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -20, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Powerups Absorbed: " + $.S(t1.$index(t1, "powerups")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, 25, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Total Completed Levels: " + $.S(t1.$index(t1, "wins")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, 70, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Total Deaths: " + $.S(t1.$index(t1, "deaths")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, 115, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Total Games: " + $.S(t1.$index(t1, "totalGames")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, 160, 10, 10, "", "stats");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t1 = new $.GameText("High Score: " + $.S(t1.$index(t1, "highscore")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "stats", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 205, 10, 10, "", "stats");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createStatsMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.8, 36, "Back", -420, -280);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createStatsMenu_closure0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.8, 36, "RESET", 0, 250);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("stats");
  },
  createOptionsMenu$0: function() {
    var t1, t2, t3;
    t1 = this._gameOverEvent._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
    t1 = new $.GameText("Options", true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -160, 10, 10, "", "options");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 16, "Made by Cody Smith", 400, 275);
    this.entities.push(t1);
    t1 = new $.GameText("Starting Lives:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -30, 10, 10, "", "options");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = this.Options;
    t2 = new $.GameText($.S(t1.$index(t1, "startLives")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 200, -30, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, "->", 245, -30);
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure1(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, "<-", 160, -30);
    this.entities.push(t2);
    t2 = t1.$index(t1, "startLives");
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t2 = new $.GameText("x" + $.S(3 / t2), true, "cinnamoncake, Verdana", 26, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 300, -30, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Time:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, 0, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText($.S(t1.$index(t1, "time")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 200, 0, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure2(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, "->", 245, 0);
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure3(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, "<-", 160, 0);
    this.entities.push(t2);
    t2 = t1.$index(t1, "time");
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t2 = new $.GameText("x" + $.S(60 / t2), true, "cinnamoncake, Verdana", 26, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 300, 0, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Difficulty:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, 30, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText($.S(t1.$index(t1, "difficulty")), true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 200, 30, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure4(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, "->", 245, 30);
    this.entities.push(t2);
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure5(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, "<-", 160, 30);
    this.entities.push(t2);
    t2 = new $.GameText("x" + $.S(t1.$index(t1, "difficulty")) + ".0", true, "cinnamoncake, Verdana", 26, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 300, 30, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Powerups Enabled:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, -38, -64, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = $.$eq(t1.$index(t1, "powerups"), 1) ? "On" : "Off";
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure6(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 36, t2, 200, -64);
    this.entities.push(t2);
    t2 = $.$eq(t1.$index(t1, "powerups"), 1) ? "x1.0" : "x2.0";
    t2 = new $.GameText(t2, true, "cinnamoncake, Verdana", 26, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 300, -64, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = new $.GameText("Input Type:", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, 60, 10, 10, "", "options");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = $.$eq(t1.$index(t1, "controls"), 1) ? "Keyboard" : "Mouse";
    t2 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure7(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.7, 36, t2, 200, 60);
    this.entities.push(t2);
    if ($.$eq(t1.$index(t1, "powerups"), 2)) {
      t2 = t1.$index(t1, "time");
      if (typeof t2 !== "number")
        throw $.iae(t2);
      t3 = t1.$index(t1, "difficulty");
      if (typeof t3 !== "number")
        throw $.iae(t3);
      t1 = t1.$index(t1, "startLives");
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t1 = "x" + $.S(2 * (60 / t2 + t3 + 3 / t1));
    } else {
      t2 = t1.$index(t1, "time");
      if (typeof t2 !== "number")
        throw $.iae(t2);
      t3 = t1.$index(t1, "difficulty");
      if (typeof t3 !== "number")
        throw $.iae(t3);
      t1 = t1.$index(t1, "startLives");
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t1 = "x" + $.S(60 / t2 + t3 + 3 / t1);
    }
    t1 = new $.GameText(t1, true, "cinnamoncake, Verdana", 26, this, 0, 0, 1, 1, false, false, "", "options", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 300, 90, 10, 10, "", "options");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure8(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.7, 36, "Set to Defaults", 10, 150);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure9(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.7, 36, "Instructions", 380, -280);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_closure10(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.7, 36, "Back", -420, -280);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("options");
  },
  createInstructionsMenu$0: function() {
    var t1, t2;
    t1 = new $.GameText("Instructions", true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -225, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("Made by Cody Smith", true, "cinnamoncake, Verdana", 16, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 400, 275, 10, 10, "", "instructions");
    t1.opacity = 0.7;
    this.entities.push(t1);
    t1 = this.Options;
    t2 = $.$eq(t1.$index(t1, "controls"), 1) ? "Move left/right: Left and Right arrow keys." : "Move left/right: Mouse movement.";
    t2 = new $.GameText(t2, true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -145, 10, 10, "", "instructions");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t2 = $.$eq(t1.$index(t1, "controls"), 1) ? "Fire: Spacebar." : "Fire: Left mouse click.";
    t2 = new $.GameText(t2, true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t2.GameEntity$withPosition$7(this, 0, -96, 10, 10, "", "instructions");
    t2.opacity = 0.8;
    this.entities.push(t2);
    t1 = $.$eq(t1.$index(t1, "controls"), 1) ? "Super Bullet: Shift Key. (Needs 15 coins to charge.)" : "Super Bullet: Spacebar. (Needs 15 coins to charge.)";
    t1 = new $.GameText(t1, true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -47, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("Powerups:", true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 2, 10, 10, "", "instructions");
    t1.opacity = 0.9;
    this.entities.push(t1);
    t1 = new $.GameText("FIRE FLOWER: Spread shot upgrade for 15 seconds.", true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 40, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("ENERGY CANISTER: Extra life.", true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 70, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("APPLE: Multiplier times two.", true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 100, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("LIGHTNING BALL: Extra bullet", true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 130, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("COIN: Plus 100 points + Super Bullet charge (1/15).", true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 160, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("SHIELD: Invincible for 5 seconds.", true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 190, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("CLOCK: Extra 15 seconds added.", true, "cinnamoncake, Verdana", 24, this, 0, 0, 1, 1, false, false, "", "instructions", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, 220, 10, 10, "", "instructions");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createInstructionsMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.7, 36, "Back", -420, -280);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("instructions");
  },
  createGameOverMenu$0: function() {
    var t1 = this.enemyAmount <= 0 ? "You Won!" : "You Lost!";
    t1 = new $.GameText(t1, true, "cinnamoncake, Verdana", 56, this, 0, 0, 1, 1, false, false, "", "gameOver", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -97, 10, 10, "", "gameOver");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = new $.GameText("Play again?", true, "cinnamoncake, Verdana", 36, this, 0, 0, 1, 1, false, false, "", "gameOver", null, null, false, null, null, true, 1, "255, 255, 255", true, null);
    t1.GameEntity$withPosition$7(this, 0, -31, 10, 10, "", "gameOver");
    t1.opacity = 0.8;
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createGameOverMenu_closure(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "gameOver", "", 0.8, 36, "Yes", 0, 15);
    this.entities.push(t1);
    t1 = $.GameButton$(new $.GalagaGame_createGameOverMenu_closure0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "gameOver", "", 0.8, 36, "No", 0, 60);
    this.entities.push(t1);
    this.disableEntitiesByGroup$1("gameOver");
  },
  resetLeaderBoard$0: function() {
    var t1 = this.Highscores;
    t1.$indexSet(t1, 1, 0);
    t1.$indexSet(t1, 2, 0);
    t1.$indexSet(t1, 3, 0);
    t1.$indexSet(t1, 4, 0);
    t1.$indexSet(t1, 5, 0);
    t1.$indexSet(t1, 6, 0);
    t1.$indexSet(t1, 7, 0);
    t1.$indexSet(t1, 8, 0);
    t1.$indexSet(t1, 9, 0);
    t1.$indexSet(t1, 10, 0);
    this.set$state(this, 1);
    this.removeEntitiesByGroup$1("leaders");
    this.createLeaderBoardMenu$0();
    this.set$state(this, 9);
  },
  resetStats$0: function() {
    var t1 = this.Stats;
    t1.$indexSet(t1, "killed", 0);
    t1.$indexSet(t1, "wins", 0);
    t1.$indexSet(t1, "loses", 0);
    t1.$indexSet(t1, "totalGames", 0);
    t1.$indexSet(t1, "highscore", 0);
    t1.$indexSet(t1, "normalKills", 0);
    t1.$indexSet(t1, "bossKills", 0);
    t1.$indexSet(t1, "motherKills", 0);
    t1.$indexSet(t1, "powerups", 0);
    t1.$indexSet(t1, "percentage", 0);
    this.set$state(this, 1);
    this.removeEntitiesByGroup$1("stats");
    this.createStatsMenu$0();
    this.set$state(this, 5);
  },
  resetOptions$0: function() {
    var t1 = this.Options;
    t1.$indexSet(t1, "startLives", 3);
    t1.$indexSet(t1, "bulletCap", 3);
    t1.$indexSet(t1, "time", 60);
    t1.$indexSet(t1, "difficulty", 1);
    t1.$indexSet(t1, "soundeffects", 1);
    t1.$indexSet(t1, "controls", 1);
    this.set$state(this, 1);
    this.removeEntitiesByGroup$1("options");
    this.createOptionsMenu$0();
    this.set$state(this, 6);
  },
  resetPowerups$0: function() {
    this.ship.spiralShot = false;
    this.ship.bulletPower = 8;
  },
  matchCloneX$0: function() {
    var t1 = new $.WhereIterable(this.entities, new $.GalagaGame_matchCloneX_closure());
    t1.forEach$1(t1, new $.GalagaGame_matchCloneX_closure0(this));
  },
  switchDirection$0: function() {
    this.goingRight = !this.goingRight;
    var t1 = new $.WhereIterable(this.entities, new $.GalagaGame_switchDirection_closure());
    t1.forEach$1(t1, new $.GalagaGame_switchDirection_closure0());
    t1 = new $.WhereIterable(this.entities, new $.GalagaGame_switchDirection_closure1());
    t1.forEach$1(t1, new $.GalagaGame_switchDirection_closure2());
  },
  removeBullets$0: function() {
    this.removeEntitiesByFilter$1(new $.GalagaGame_removeBullets_closure());
  },
  updateLeaderboard$0: function() {
    var tempMap, t1, k, i, t2, t3, j;
    tempMap = new $.LinkedHashMap(0, null, null, null, null, null, 0);
    for (t1 = this.Highscores, k = 1; k < 11; ++k)
      tempMap.$indexSet(tempMap, k, t1.$index(t1, k));
    for (i = 1; i <= 10; ++i) {
      t2 = this.score;
      t3 = t1.$index(t1, i);
      if (typeof t2 !== "number")
        throw t2.$gt();
      if (typeof t3 !== "number")
        throw $.iae(t3);
      if (t2 > t3) {
        for (j = i + 1; j < 10; ++j)
          t1.$indexSet(t1, j, tempMap.$index(tempMap, j - 1));
        t1.$indexSet(t1, i, this.score);
        t2 = this.Stats;
        t2.$indexSet(t2, "highScore", t1.$index(t1, i));
        break;
      }
    }
    t2 = this.Stats;
    t2.$indexSet(t2, "highscore", t1.$index(t1, 1));
  },
  newGame$0: function() {
    var t1, i, t2, t3, t4;
    t1 = new $.WhereIterable(this.entities, new $.GalagaGame_newGame_closure());
    t1.forEach$1(t1, new $.GalagaGame_newGame_closure0());
    for (i = 0; i < 50; ++i)
      this.startStars$0();
    this.score = 0;
    t1 = this.ship;
    if (t1 != null) {
      t1.removeFromGame$0;
      t1._removeFromGame = true;
    }
    this.removeEntitiesByFilter$1(new $.GalagaGame_newGame_closure1());
    this.removeEntitiesByFilter$1(new $.GalagaGame_newGame_closure2());
    this.removeEntitiesByFilter$1(new $.GalagaGame_newGame_closure3());
    this.removeEntitiesByFilter$1(new $.GalagaGame_newGame_closure4());
    this.enemyX = -400;
    this.enemyY = -165;
    this.enemyAmount = 33;
    this.bonusCheck = 3;
    this.bonusStage = false;
    this.visualLevel = 1;
    this.level = 1;
    this.score = 0;
    t1 = this.Options;
    t2 = t1.$index(t1, "time");
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t3 = t1.$index(t1, "difficulty");
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t4 = t1.$index(t1, "startLives");
    if (typeof t4 !== "number")
      throw $.iae(t4);
    this.pointMultiplier = 60 / t2 + t3 + 3 / t4;
    if ($.$eq(t1.$index(t1, "powerups"), 1))
      this.pointMultiplier = this.pointMultiplier * 2;
    this.pointMultiplier = this.pointMultiplier / 2;
    if (this.level >= this.bonusCheck) {
      this.bonusStage = true;
      this.bonusCheck = this.bonusCheck + 3;
    } else
      this.bonusStage = false;
    for (i = 0; i < 33; ++i)
      this.newEnemy$0();
    this.ship = $.Ship$(this, 0, this.rect.get$halfHeight() - 45);
    t2 = this.ship;
    this.entities.push(t2);
    this.p1Dead = false;
    this.ship.lives = t1.$index(t1, "startLives");
    t2 = this.Stats;
    t2.$indexSet(t2, "totalGames", $.$add$ns(t2.$index(t2, "totalGames"), 1));
    this.set$state(this, 3);
    this.timer.timeDecrease = true;
    this.timer.gameTime = t1.$index(t1, "time");
  },
  gameOver$0: function() {
    var t1, t2;
    this.removeEntitiesByFilter$1(new $.GalagaGame_gameOver_closure());
    this.removeEntitiesByFilter$1(new $.GalagaGame_gameOver_closure0());
    this.removeEntitiesByFilter$1(new $.GalagaGame_gameOver_closure1());
    this.removeEntitiesByFilter$1(new $.GalagaGame_gameOver_closure2());
    this.updateLeaderboard$0();
    t1 = this._gameOverEvent._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
    t1 = this._statUpdateEvent._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
    this.removeEntitiesByGroup$1("gameOver");
    this.createGameOverMenu$0();
    this.set$state(this, 4);
  },
  get$onStatUpdate: function() {
    return this._statUpdateEvent.stream;
  },
  get$onGameOver: function() {
    return this._gameOverEvent.stream;
  },
  get$onShipHit: function() {
    return this._shipHitEvent.stream;
  },
  get$onBossHit: function() {
    return this._bossHitEvent.stream;
  },
  get$onMotherShipHit: function() {
    return this._motherShipEvent.stream;
  },
  get$onNormalHit: function() {
    return this._normalHitEvent.stream;
  },
  get$onFadeEvent: function() {
    return this._normalHitEvent.stream;
  }
},

GalagaGame_waiting_closure: {"": "Closure;this_0",
  call$1: function(t) {
    var t1, i, t2;
    t1 = this.this_0;
    t1.set$_waiting(t1.get$_waiting() + 1);
    if (t1.get$_waiting() === 4) {
      $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(t1.get$entities(), new $.GalagaGame_waiting__closure()), true), new $.GalagaGame_waiting__closure0());
      for (i = 0; i < 50; ++i)
        t1.startStars$0();
      t1.set$enemyX(-400);
      t1.set$enemyY(-165);
      t1.set$enemyAmount(33);
      t2 = t1.get$difficulty();
      if (t2 < 5)
        t1.set$difficulty(t2 + 1);
      if (t1.get$visualLevel() >= t1.get$bonusCheck()) {
        t1.set$bonusStage(true);
        t1.set$tutorial(false);
        t1.set$bonusCheck(t1.get$bonusCheck() + 3);
      } else
        t1.set$bonusStage(false);
      if (t1.get$bonusStage())
        t1.newBoss$0();
      else
        for (i = 0; i < 33; ++i)
          t1.newEnemy$1(t1.get$difficulty());
      t1.set$cloneId(1);
      $.set$state$x(t1, 3);
      t1.get$timer().timeDecrease = true;
      t2 = t1.get$timer();
      t1 = t1.get$Options();
      t2.gameTime = t1.$index(t1, "time");
      t.cancel$0();
    }
  }
},

GalagaGame_waiting__closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isStars;
  }
},

GalagaGame_waiting__closure0: {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  }
},

GalagaGame_update_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isPowerUp;
  }
},

GalagaGame_update_closure0: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isBullet;
  }
},

GalagaGame_update_closure1: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isClone;
  }
},

GalagaGame_update_closure2: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaGame_update_closure3: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isPowerUp;
  }
},

GalagaGame_update_closure4: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isBullet;
  }
},

GalagaGame_update_closure5: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaGame_update_closure6: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isClone;
  }
},

GalagaGame_update_closure7: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isGameButton;
  }
},

GalagaGame_update_closure8: {"": "Closure;",
  call$1: function(e) {
    var t1 = e.get$opacity();
    if (t1 === 1 && e.get$isHighlighted() && e.get$soundReady())
      e.set$soundReady(false);
    else if (t1 < 1)
      e.set$soundReady(true);
  }
},

GalagaGame_newBossDrone_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaGame_newBossDrone_closure0: {"": "Closure;box_0",
  call$1: function(e) {
    var t1;
    if ($.propertyTypeCast(e, "$isEnemy").type === "Drone") {
      t1 = this.box_0;
      t1.x_0 = $.$add$ns(t1.x_0, 1);
    }
  }
},

GalagaGame_newMotherShip_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaGame_newMotherShip_closure0: {"": "Closure;box_0",
  call$1: function(e) {
    var t1;
    if ($.get$type$x(e) === "MotherShip") {
      t1 = this.box_0;
      t1.x_0 = $.$add$ns(t1.x_0, 1);
    }
  }
},

GalagaGame_newPowerUp_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isPowerUp;
  }
},

GalagaGame_newPowerUp_closure0: {"": "Closure;powerUp_0",
  call$1: function(e) {
    return this.powerUp_0.collidesWith$1(e);
  }
},

GalagaGame_getEnemyX_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaGame_getEnemyX_closure0: {"": "Closure;type_0",
  call$1: function(e) {
    var t1 = $.getInterceptor$x(e);
    if (t1.get$type(e) === this.type_0)
      return t1.get$x(e);
  }
},

GalagaGame_getEnemyY_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaGame_getEnemyY_closure0: {"": "Closure;type_0",
  call$1: function(e) {
    var t1 = $.getInterceptor$x(e);
    if (t1.get$type(e) === this.type_0)
      return t1.get$y(e);
  }
},

GalagaGame_createCheatsMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_0;
    t2 = t1.get$Cheats();
    t2 = $.$ge$n(t2.$index(t2, "spreadshot"), 2);
    t3 = t1.get$Cheats();
    if (t2)
      t3.$indexSet(t3, "spreadshot", 1);
    else
      t3.$indexSet(t3, "spreadshot", $.$add$ns(t3.$index(t3, "spreadshot"), 1));
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("cheats");
    t1.createCheatsMenu$0();
    t2.set$state(t1, 10);
  }
},

GalagaGame_createCheatsMenu_closure0: {"": "Closure;this_1",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_1;
    t2 = t1.get$Cheats();
    t2 = $.$ge$n(t2.$index(t2, "invincibility"), 2);
    t3 = t1.get$Cheats();
    if (t2)
      t3.$indexSet(t3, "invincibility", 1);
    else
      t3.$indexSet(t3, "invincibility", $.$add$ns(t3.$index(t3, "invincibility"), 1));
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("cheats");
    t1.createCheatsMenu$0();
    t2.set$state(t1, 10);
  }
},

GalagaGame_createCheatsMenu_closure1: {"": "Closure;this_2",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_2;
    t2 = t1.get$Cheats();
    t2 = $.$ge$n(t2.$index(t2, "super"), 2);
    t3 = t1.get$Cheats();
    if (t2)
      t3.$indexSet(t3, "super", 1);
    else
      t3.$indexSet(t3, "super", $.$add$ns(t3.$index(t3, "super"), 1));
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("cheats");
    t1.createCheatsMenu$0();
    t2.set$state(t1, 10);
  }
},

GalagaGame_createCheatsMenu_closure2: {"": "Closure;this_3",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_3;
    t2 = t1.get$powerupChoice();
    if (t2 === "All") {
      t1.set$powerupChoice("SpiralShot");
      t1.set$spiral(1);
      t1.set$multi(0);
      t1.set$bullet(0);
      t1.set$invincible(0);
      t1.set$time(0);
      t1.set$life(0);
      t1.set$teleporter(0);
    } else if (t2 === "SpiralShot") {
      t1.set$powerupChoice("Multiplier");
      t1.set$spiral(0);
      t1.set$multi(1);
      t1.set$bullet(0);
      t1.set$invincible(0);
      t1.set$time(0);
      t1.set$life(0);
      t1.set$teleporter(0);
    } else if (t2 === "Multiplier") {
      t1.set$powerupChoice("BulletIncrease");
      t1.set$spiral(0);
      t1.set$multi(0);
      t1.set$bullet(1);
      t1.set$invincible(0);
      t1.set$time(0);
      t1.set$life(0);
      t1.set$teleporter(0);
    } else if (t2 === "BulletIncrease") {
      t1.set$powerupChoice("Invincible");
      t1.set$spiral(0);
      t1.set$multi(0);
      t1.set$bullet(0);
      t1.set$invincible(1);
      t1.set$time(0);
      t1.set$life(0);
      t1.set$teleporter(0);
    } else if (t2 === "Invincible") {
      t1.set$powerupChoice("TimeUp");
      t1.set$spiral(0);
      t1.set$multi(0);
      t1.set$bullet(0);
      t1.set$invincible(0);
      t1.set$time(1);
      t1.set$life(0);
      t1.set$teleporter(0);
    } else if (t2 === "TimeUp") {
      t1.set$powerupChoice("ExtraLife");
      t1.set$spiral(0);
      t1.set$multi(0);
      t1.set$bullet(0);
      t1.set$invincible(0);
      t1.set$time(0);
      t1.set$life(1);
      t1.set$teleporter(0);
    } else if (t2 === "ExtraLife") {
      t1.set$powerupChoice("Teleporter");
      t1.set$spiral(0);
      t1.set$multi(0);
      t1.set$bullet(0);
      t1.set$invincible(0);
      t1.set$time(0);
      t1.set$life(0);
      t1.set$teleporter(1);
    } else if (t2 === "Teleporter") {
      t1.set$powerupChoice("All");
      t1.set$teleporter(0.05);
      t1.set$spiral(0.06);
      t1.set$multi(0.25);
      t1.set$bullet(0.55);
      t1.set$invincible(0.7);
      t1.set$time(0.8);
      t1.set$life(1);
    }
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("cheats");
    t1.createCheatsMenu$0();
    t2.set$state(t1, 10);
  }
},

GalagaGame_createCheatsMenu_closure3: {"": "Closure;this_4",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_4;
    t2 = t1.get$powerupChoice();
    if (t2 === "Teleporter") {
      t1.set$powerupChoice("ExtraLife");
      t1.set$spiral(0);
      t1.set$multi(0);
      t1.set$bullet(0);
      t1.set$invincible(0);
      t1.set$time(0);
      t1.set$life(1);
      t1.set$teleporter(0);
    } else if (t2 === "All") {
      t1.set$powerupChoice("Teleporter");
      t1.set$spiral(0);
      t1.set$multi(0);
      t1.set$bullet(0);
      t1.set$invincible(0);
      t1.set$time(0);
      t1.set$life(0);
      t1.set$teleporter(1);
    } else if (t2 === "SpiralShot") {
      t1.set$powerupChoice("All");
      t1.set$teleporter(0.05);
      t1.set$spiral(0.06);
      t1.set$multi(0.25);
      t1.set$bullet(0.55);
      t1.set$invincible(0.7);
      t1.set$time(0.8);
      t1.set$life(1);
    } else if (t2 === "Multiplier") {
      t1.set$powerupChoice("SpiralShot");
      t1.set$spiral(1);
      t1.set$multi(0);
      t1.set$bullet(0);
      t1.set$invincible(0);
      t1.set$time(0);
      t1.set$life(0);
      t1.set$teleporter(0);
    } else if (t2 === "BulletIncrease") {
      t1.set$powerupChoice("Multiplier");
      t1.set$spiral(0);
      t1.set$multi(1);
      t1.set$bullet(0);
      t1.set$invincible(0);
      t1.set$time(0);
      t1.set$life(0);
      t1.set$teleporter(0);
    } else if (t2 === "Invincible") {
      t1.set$powerupChoice("BulletIncrease");
      t1.set$spiral(0);
      t1.set$multi(0);
      t1.set$bullet(1);
      t1.set$invincible(0);
      t1.set$time(0);
      t1.set$life(0);
      t1.set$teleporter(0);
    } else if (t2 === "TimeUp") {
      t1.set$powerupChoice("Invincible");
      t1.set$spiral(0);
      t1.set$multi(0);
      t1.set$bullet(0);
      t1.set$invincible(1);
      t1.set$time(0);
      t1.set$life(0);
      t1.set$teleporter(0);
    } else if (t2 === "ExtraLife") {
      t1.set$powerupChoice("TimeUp");
      t1.set$spiral(0);
      t1.set$multi(0);
      t1.set$bullet(0);
      t1.set$invincible(0);
      t1.set$time(1);
      t1.set$life(0);
      t1.set$teleporter(0);
    }
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("cheats");
    t1.createCheatsMenu$0();
    t2.set$state(t1, 10);
  }
},

GalagaGame_createCheatsMenu_closure4: {"": "Closure;this_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_5;
    t1.removeEntitiesByGroup$1("welcome");
    t1.createWelcomeMenu$0();
    $.set$state$x(t1, 1);
    t1 = t1.get$_fadeEvent()._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
  }
},

GalagaGame_createWelcomeMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2;
    t1 = this.this_0;
    t1.newGame$0();
    t1 = t1.get$_statUpdateEvent()._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
  }
},

GalagaGame_createWelcomeMenu_closure0: {"": "Closure;this_1",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_1;
    t1.removeEntitiesByGroup$1("stats");
    t1.createStatsMenu$0();
    $.set$state$x(t1, 5);
    t2 = t1.get$_fadeEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t1 = t1.get$_statUpdateEvent()._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
  }
},

GalagaGame_createWelcomeMenu_closure1: {"": "Closure;this_2",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_2;
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    $.set$state$x(t1, 6);
    t2 = t1.get$_fadeEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t1 = t1.get$_statUpdateEvent()._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
  }
},

GalagaGame_createWelcomeMenu_closure2: {"": "Closure;this_3",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_3;
    t1.removeEntitiesByGroup$1("leaders");
    t1.createLeaderBoardMenu$0();
    $.set$state$x(t1, 9);
    t2 = t1.get$_fadeEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t1 = t1.get$_statUpdateEvent()._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
  }
},

GalagaGame_createPausedMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_0;
    t2 = t1.get$ship();
    if (t2 != null) {
      t2.removeFromGame$0;
      t2.set$_removeFromGame(true);
    }
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createPausedMenu__closure());
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createPausedMenu__closure0());
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createPausedMenu__closure1());
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createPausedMenu__closure2());
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t1.updateLeaderboard$0();
    t2 = t1.get$_gameOverEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t1.removeEntitiesByGroup$1("welcome");
    t1.createWelcomeMenu$0();
    $.set$state$x(t1, 1);
  }
},

GalagaGame_createPausedMenu__closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isPowerUp;
  }
},

GalagaGame_createPausedMenu__closure0: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isClone;
  }
},

GalagaGame_createPausedMenu__closure1: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isBullet;
  }
},

GalagaGame_createPausedMenu__closure2: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaGame_createLeaderBoardMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    return this.this_0.resetLeaderBoard$0();
  }
},

GalagaGame_createLeaderBoardMenu_closure0: {"": "Closure;this_1",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_1;
    t1.removeEntitiesByGroup$1("welcome");
    t1.createWelcomeMenu$0();
    $.set$state$x(t1, 1);
    t2 = t1.get$_fadeEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t1 = t1.get$_statUpdateEvent()._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
  }
},

GalagaGame_createStatsMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_0;
    t1.removeEntitiesByGroup$1("welcome");
    t1.createWelcomeMenu$0();
    $.set$state$x(t1, 1);
    t2 = t1.get$_fadeEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t1 = t1.get$_statUpdateEvent()._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
  }
},

GalagaGame_createStatsMenu_closure0: {"": "Closure;this_1",
  call$0: function() {
    return this.this_1.resetStats$0();
  }
},

GalagaGame_createOptionsMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2;
    t1 = this.this_0;
    t1.removeEntitiesByGroup$1("cheats");
    t1.createCheatsMenu$0();
    $.set$state$x(t1, 10);
    t1.newBouncer$1(10);
    t1.newBouncer$1(10);
    t1.newBouncer$1(10);
    t1.newBouncer$1(10);
    t1.newBouncer$1(10);
    t1.newBouncer$1(10);
    t1 = t1.get$_fadeEvent()._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
  }
},

GalagaGame_createOptionsMenu_closure0: {"": "Closure;this_1",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_1;
    t2 = t1.get$Options();
    t2 = $.$ge$n(t2.$index(t2, "startLives"), 10);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "startLives", 1);
    else
      t3.$indexSet(t3, "startLives", $.$add$ns(t3.$index(t3, "startLives"), 1));
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure1: {"": "Closure;this_2",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_2;
    t2 = t1.get$Options();
    t2 = $.$le$n(t2.$index(t2, "startLives"), 1);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "startLives", 10);
    else
      t3.$indexSet(t3, "startLives", $.$sub$n(t3.$index(t3, "startLives"), 1));
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure2: {"": "Closure;this_3",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_3;
    t2 = t1.get$Options();
    t2 = $.$ge$n(t2.$index(t2, "time"), 180);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "time", 0);
    else
      t3.$indexSet(t3, "time", $.$add$ns(t3.$index(t3, "time"), 20));
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure3: {"": "Closure;this_4",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_4;
    t2 = t1.get$Options();
    t2 = $.$le$n(t2.$index(t2, "time"), 0);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "time", 180);
    else
      t3.$indexSet(t3, "time", $.$sub$n(t3.$index(t3, "time"), 20));
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure4: {"": "Closure;this_5",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_5;
    t2 = t1.get$Options();
    t2 = $.$ge$n(t2.$index(t2, "difficulty"), 5);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "difficulty", 1);
    else
      t3.$indexSet(t3, "difficulty", $.$add$ns(t3.$index(t3, "difficulty"), 1));
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure5: {"": "Closure;this_6",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_6;
    t2 = t1.get$Options();
    t2 = $.$le$n(t2.$index(t2, "difficulty"), 1);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "difficulty", 5);
    else
      t3.$indexSet(t3, "difficulty", $.$sub$n(t3.$index(t3, "difficulty"), 1));
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure6: {"": "Closure;this_7",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_7;
    t2 = t1.get$Options();
    t2 = $.$ge$n(t2.$index(t2, "powerups"), 2);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "powerups", 1);
    else
      t3.$indexSet(t3, "powerups", $.$add$ns(t3.$index(t3, "powerups"), 1));
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure7: {"": "Closure;this_8",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_8;
    t2 = t1.get$Options();
    t2 = $.$ge$n(t2.$index(t2, "controls"), 2);
    t3 = t1.get$Options();
    if (t2)
      t3.$indexSet(t3, "controls", 1);
    else
      t3.$indexSet(t3, "controls", $.$add$ns(t3.$index(t3, "controls"), 1));
    t2 = t1.get$_statUpdateEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t2.set$state(t1, 6);
  }
},

GalagaGame_createOptionsMenu_closure8: {"": "Closure;this_9",
  call$0: function() {
    return this.this_9.resetOptions$0();
  }
},

GalagaGame_createOptionsMenu_closure9: {"": "Closure;this_10",
  call$0: function() {
    var t1, t2;
    t1 = this.this_10;
    t1.newBouncer$1(1);
    t1.newBouncer$1(2);
    t1.newBouncer$1(3);
    t1.newBouncer$1(4);
    t1.newBouncer$1(5);
    t1.newBouncer$1(6);
    t1.newBouncer$1(7);
    t1.newBouncer$1(8);
    t1.newBouncer$1(9);
    t1.newBouncer$1(10);
    t1.newBouncer$1(12);
    t1.newBouncer$1(13);
    t1.newBouncer$1(14);
    t1.newBouncer$1(15);
    t1.newBouncer$1(16);
    t1.newBouncer$1(17);
    t1.newBouncer$1(18);
    t2 = $.getInterceptor$x(t1);
    t2.set$state(t1, 1);
    t1.removeEntitiesByGroup$1("instructions");
    t1.createInstructionsMenu$0();
    t2.set$state(t1, 7);
    t1 = t1.get$_statUpdateEvent()._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
  }
},

GalagaGame_createOptionsMenu_closure10: {"": "Closure;this_11",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_11;
    t1.removeEntitiesByGroup$1("welcome");
    t1.createWelcomeMenu$0();
    $.set$state$x(t1, 1);
    t2 = t1.get$_fadeEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t1 = t1.get$_statUpdateEvent()._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
  }
},

GalagaGame_createInstructionsMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_0;
    $.set$state$x(t1, 6);
    t2 = t1.get$_fadeEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t1 = t1.get$_statUpdateEvent()._controller;
    t2 = $.get$EventArgs_empty();
    if (t1._state >= 4)
      $.throwExpression(t1._badEventState$0());
    t1._liblib1$_add$1(t2);
  }
},

GalagaGame_createGameOverMenu_closure: {"": "Closure;this_0",
  call$0: function() {
    this.this_0.newGame$0();
  }
},

GalagaGame_createGameOverMenu_closure0: {"": "Closure;this_1",
  call$0: function() {
    var t1, t2;
    t1 = this.this_1;
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createGameOverMenu__closure());
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createGameOverMenu__closure0());
    t2 = t1.get$ship();
    if (t2 != null) {
      t2.removeFromGame$0;
      t2.set$_removeFromGame(true);
    }
    t1.removeEntitiesByGroup$1("welcome");
    t1.createWelcomeMenu$0();
    $.set$state$x(t1, 1);
  }
},

GalagaGame_createGameOverMenu__closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isPowerUp;
  }
},

GalagaGame_createGameOverMenu__closure0: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isBullet;
  }
},

GalagaGame_matchCloneX_closure: {"": "Closure;",
  call$1: function(c) {
    var t1 = $.getInterceptor(c);
    return typeof c === "object" && c !== null && !!t1.$isClone;
  }
},

GalagaGame_matchCloneX_closure0: {"": "Closure;this_0",
  call$1: function(c) {
    var t1 = new $.WhereIterable(this.this_0.get$entities(), new $.GalagaGame_matchCloneX__closure());
    t1.forEach$1(t1, new $.GalagaGame_matchCloneX__closure0(c));
  }
},

GalagaGame_matchCloneX__closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaGame_matchCloneX__closure0: {"": "Closure;c_1",
  call$1: function(e) {
    var t1 = this.c_1;
    if (t1.get$Id() === e.get$cloneNum())
      $.set$targetX$x(e, $.get$x$x(t1));
  }
},

GalagaGame_switchDirection_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaGame_switchDirection_closure0: {"": "Closure;",
  call$1: function(e) {
    var t1, t2;
    t1 = $.getInterceptor$x(e);
    if (t1.get$type(e) === "Normal") {
      t2 = e.get$momentum();
      t2.xVel = $.$mul$n(t2.xVel, -1);
      if ($.$ge$n(e.get$momentum().xVel, 0))
        t1.set$x(e, $.$add$ns(t1.get$x(e), 3));
      else
        t1.set$x(e, $.$sub$n(t1.get$x(e), 3));
    }
  }
},

GalagaGame_switchDirection_closure1: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isClone;
  }
},

GalagaGame_switchDirection_closure2: {"": "Closure;",
  call$1: function(e) {
    var t1 = e.get$momentum();
    t1.xVel = $.$mul$n(t1.xVel, -1);
    t1 = $.getInterceptor$x(e);
    if ($.$ge$n(e.get$momentum().xVel, 0))
      t1.set$x(e, $.$add$ns(t1.get$x(e), 3));
    else
      t1.set$x(e, $.$sub$n(t1.get$x(e), 3));
  }
},

GalagaGame_removeBullets_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isBullet;
  }
},

GalagaGame_newGame_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isStars;
  }
},

GalagaGame_newGame_closure0: {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  }
},

GalagaGame_newGame_closure1: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isPowerUp;
  }
},

GalagaGame_newGame_closure2: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isBullet;
  }
},

GalagaGame_newGame_closure3: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaGame_newGame_closure4: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isClone;
  }
},

GalagaGame_gameOver_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isPowerUp;
  }
},

GalagaGame_gameOver_closure0: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isBullet;
  }
},

GalagaGame_gameOver_closure1: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaGame_gameOver_closure2: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isClone;
  }
},

bouncingBall: {"": "GameEntity;Sprite<,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2, t3;
    t1 = $.get$state$x(this.game);
    if (typeof t1 !== "number")
      return this.update$0$bailout1(1, t1);
    if (t1 !== 7) {
      t1 = $.get$state$x(this.game);
      if (typeof t1 !== "number")
        return this.update$0$bailout1(2, t1);
      t1 = t1 !== 10;
    } else
      t1 = false;
    if (t1)
      this._removeFromGame = true;
    t1 = this._y;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(3, t1);
    t2 = $.get$rect$x(this.game).get$halfHeight();
    t3 = this._height;
    if (typeof t3 !== "number")
      throw t3.$div();
    if (t1 > t2 - t3 / 2) {
      t1 = this.momentum;
      t2 = t1.yVel;
      if (typeof t2 !== "number")
        return this.update$0$bailout1(4, t1, t2);
      t1.yVel = t2 * -1;
      t2 = this._y;
      if (typeof t2 !== "number")
        return this.update$0$bailout1(5, 0, t2);
      this._y = t2 - 2;
      this.updateBox$0();
    }
    t1 = this._y;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(6, t1);
    t2 = $.get$rect$x(this.game).get$halfHeight();
    t3 = this._height;
    if (typeof t3 !== "number")
      throw t3.$div();
    if (t1 < -t2 + t3 / 2) {
      t1 = this.momentum;
      t2 = t1.yVel;
      if (typeof t2 !== "number")
        return this.update$0$bailout1(7, t1, t2);
      t1.yVel = t2 * -1;
      t2 = this._y;
      if (typeof t2 !== "number")
        return this.update$0$bailout1(8, 0, t2);
      this._y = t2 + 2;
      this.updateBox$0();
    }
    t1 = this._x;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(9, t1);
    t2 = $.get$rect$x(this.game).get$halfWidth();
    t3 = this._width;
    if (typeof t3 !== "number")
      throw t3.$div();
    if (t1 > t2 - t3 / 2) {
      t1 = this.momentum;
      t2 = t1.xVel;
      if (typeof t2 !== "number")
        return this.update$0$bailout1(10, t1, t2);
      t1.xVel = t2 * -1;
      t2 = this._x;
      if (typeof t2 !== "number")
        return this.update$0$bailout1(11, 0, t2);
      this._x = t2 - 2;
      this.updateBox$0();
    }
    t1 = this._x;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(12, t1);
    t2 = $.get$rect$x(this.game).get$halfWidth();
    t3 = this._width;
    if (typeof t3 !== "number")
      throw t3.$div();
    if (t1 < -t2 + t3 / 2) {
      t1 = this.momentum;
      t2 = t1.xVel;
      if (typeof t2 !== "number")
        return this.update$0$bailout1(13, t1, t2);
      t1.xVel = t2 * -1;
      t2 = this._x;
      if (typeof t2 !== "number")
        return this.update$0$bailout1(14, 0, t2);
      this._x = t2 + 2;
      this.updateBox$0();
    }
    $.GameEntity.prototype.update$0.call(this);
  },
  update$0$bailout1: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.get$state$x(this.game);
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && !$.$eq(t1, 7))
          switch (state0) {
            case 0:
              t1 = $.get$state$x(this.game);
            case 2:
              state0 = 0;
              t1 = !$.$eq(t1, 10);
          }
        else
          t1 = false;
        if (t1)
          this._removeFromGame = true;
        t1 = this._y;
      case 3:
        state0 = 0;
        t2 = $.get$rect$x(this.game).get$halfHeight();
        t3 = this._height;
        if (typeof t3 !== "number")
          throw t3.$div();
      default:
        if (state0 === 5 || state0 === 4 || state0 === 0 && $.$gt$n(t1, t2 - t3 / 2))
          switch (state0) {
            case 0:
              t1 = this.momentum;
              t2 = t1.yVel;
            case 4:
              state0 = 0;
              t1.yVel = $.$mul$n(t2, -1);
              t2 = this._y;
            case 5:
              state0 = 0;
              this._y = $.$sub$n(t2, 2);
              this.updateBox$0();
          }
        t1 = this._y;
      case 6:
        state0 = 0;
        t2 = $.get$rect$x(this.game).get$halfHeight();
        t3 = this._height;
        if (typeof t3 !== "number")
          throw t3.$div();
      case 7:
      case 8:
        if (state0 === 8 || state0 === 7 || state0 === 0 && $.$lt$n(t1, -t2 + t3 / 2))
          switch (state0) {
            case 0:
              t1 = this.momentum;
              t2 = t1.yVel;
            case 7:
              state0 = 0;
              t1.yVel = $.$mul$n(t2, -1);
              t2 = this._y;
            case 8:
              state0 = 0;
              this._y = $.$add$ns(t2, 2);
              this.updateBox$0();
          }
        t1 = this._x;
      case 9:
        state0 = 0;
        t2 = $.get$rect$x(this.game).get$halfWidth();
        t3 = this._width;
        if (typeof t3 !== "number")
          throw t3.$div();
      case 10:
      case 11:
        if (state0 === 11 || state0 === 10 || state0 === 0 && $.$gt$n(t1, t2 - t3 / 2))
          switch (state0) {
            case 0:
              t1 = this.momentum;
              t2 = t1.xVel;
            case 10:
              state0 = 0;
              t1.xVel = $.$mul$n(t2, -1);
              t2 = this._x;
            case 11:
              state0 = 0;
              this._x = $.$sub$n(t2, 2);
              this.updateBox$0();
          }
        t1 = this._x;
      case 12:
        state0 = 0;
        t2 = $.get$rect$x(this.game).get$halfWidth();
        t3 = this._width;
        if (typeof t3 !== "number")
          throw t3.$div();
      case 13:
      case 14:
        var t3;
        if (state0 === 14 || state0 === 13 || state0 === 0 && $.$lt$n(t1, -t2 + t3 / 2))
          switch (state0) {
            case 0:
              t1 = this.momentum;
              t2 = t1.xVel;
            case 13:
              state0 = 0;
              t1.xVel = $.$mul$n(t2, -1);
              t2 = this._x;
            case 14:
              state0 = 0;
              this._x = $.$add$ns(t2, 2);
              this.updateBox$0();
          }
        $.GameEntity.prototype.update$0.call(this);
    }
  },
  bouncingBall$6: function(game, x, y, h, w, sprite) {
    this.Sprite = sprite;
    this.opacity = 0;
    this.momentum.yVel = $.random(-250, 250, false);
    this.momentum.xVel = $.random(-250, 250, false);
  },
  $isbouncingBall: true,
  static: {
bouncingBall$: function(game, x, y, h, w, sprite) {
  var t1 = new $.bouncingBall(0, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, h, w, null, null);
  t1.bouncingBall$6(game, x, y, h, w, sprite);
  return t1;
}}

},

Bullet: {"": "GameEntity;temp,startX,Type<,_deleteTimer,_waiting@,farRight,farLeft,right,left,straight,_invincibleTimer?,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2;
    t1 = $.get$state$x(this.game);
    if (typeof t1 !== "number")
      return this.update$0$bailout1(1, t1);
    if (t1 !== 2) {
      t1 = $.get$state$x(this.game);
      if (typeof t1 !== "number")
        return this.update$0$bailout1(2, t1);
      if (t1 !== 4) {
        t1 = $.get$state$x(this.game);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(3, t1);
        t1 = t1 === 1;
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1)
      return;
    $.GameEntity.prototype.update$0.call(this);
    if (this.right)
      this.momentum.xVel = 40;
    else if (this.left)
      this.momentum.xVel = -40;
    else if (this.straight)
      this.momentum.xVel = 0;
    t1 = this._width;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(4, t1);
    if (!(t1 <= 0)) {
      t1 = this._height;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(5, t1);
      t1 = t1 <= 0;
    } else
      t1 = true;
    if (t1) {
      t1 = this.momentum.yVel;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(6, t1);
      if (t1 > 0) {
        t1 = this.game;
        t2 = t1.get$score();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(7, t1, t2);
        t1.set$score(t2 + 100);
      }
      this._removeFromGame = true;
    }
    t1 = this._y;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(8, t1);
    if (t1 < -$.get$rect$x(this.game).get$halfHeight()) {
      t1 = this.game.get$ship();
      t2 = t1.get$bullet();
      if (t2 < 3)
        t1.set$bullet(t2 + 1);
      this._removeFromGame = true;
    }
    t1 = this.momentum.yVel;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(9, t1);
    if (t1 !== 0)
      $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.game.get$entities(), new $.Bullet_update_closure(this)), true), new $.Bullet_update_closure0(this));
    t1 = this.momentum.yVel;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(10, t1);
    if (t1 < 0)
      $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.game.get$entities(), new $.Bullet_update_closure1(this)), true), new $.Bullet_update_closure2(this));
    t1 = this.momentum.yVel;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(11, t1);
    if (t1 > 0)
      $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.game.get$entities(), new $.Bullet_update_closure3(this)), true), new $.Bullet_update_closure4(this));
  },
  update$0$bailout1: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.get$state$x(this.game);
      case 1:
        state0 = 0;
      default:
        if (state0 === 3 || state0 === 2 || state0 === 0 && !$.$eq(t1, 2))
          switch (state0) {
            case 0:
              t1 = $.get$state$x(this.game);
            case 2:
              state0 = 0;
            case 3:
              if (state0 === 3 || state0 === 0 && !$.$eq(t1, 4))
                switch (state0) {
                  case 0:
                    t1 = $.get$state$x(this.game);
                  case 3:
                    state0 = 0;
                    t1 = $.$eq(t1, 1);
                }
              else
                t1 = true;
          }
        else
          t1 = true;
        if (t1)
          return;
        $.GameEntity.prototype.update$0.call(this);
        if (this.right)
          this.momentum.xVel = 40;
        else if (this.left)
          this.momentum.xVel = -40;
        else if (this.straight)
          this.momentum.xVel = 0;
        t1 = this._width;
      case 4:
        state0 = 0;
      case 5:
        if (state0 === 5 || state0 === 0 && !$.$le$n(t1, 0))
          switch (state0) {
            case 0:
              t1 = this._height;
            case 5:
              state0 = 0;
              t1 = $.$le$n(t1, 0);
          }
        else
          t1 = true;
      case 6:
      case 7:
        if (state0 === 7 || state0 === 6 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              t1 = this.momentum.yVel;
            case 6:
              state0 = 0;
            case 7:
              if (state0 === 7 || state0 === 0 && $.$gt$n(t1, 0))
                switch (state0) {
                  case 0:
                    t1 = this.game;
                    t2 = t1.get$score();
                  case 7:
                    state0 = 0;
                    t1.set$score($.$add$ns(t2, 100));
                }
              this._removeFromGame = true;
          }
        t1 = this._y;
      case 8:
        state0 = 0;
        if ($.$lt$n(t1, -$.get$rect$x(this.game).get$halfHeight())) {
          t1 = this.game.get$ship();
          t2 = t1.get$bullet();
          if (t2 < 3)
            t1.set$bullet(t2 + 1);
          this._removeFromGame = true;
        }
        t1 = this.momentum.yVel;
      case 9:
        state0 = 0;
        if (!$.$eq(t1, 0))
          $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.game.get$entities(), new $.Bullet_update_closure(this)), true), new $.Bullet_update_closure0(this));
        t1 = this.momentum.yVel;
      case 10:
        state0 = 0;
        if ($.$lt$n(t1, 0))
          $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.game.get$entities(), new $.Bullet_update_closure1(this)), true), new $.Bullet_update_closure2(this));
        t1 = this.momentum.yVel;
      case 11:
        state0 = 0;
        if ($.$gt$n(t1, 0))
          $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.game.get$entities(), new $.Bullet_update_closure3(this)), true), new $.Bullet_update_closure4(this));
    }
  },
  Bullet$7: function(game, x, y, dir, yVel, size, type) {
    this.color = "255, 0, 0";
    this.momentum.yVel = yVel;
    this.startX = x;
    if (dir === "right")
      this.right = true;
    else if (dir === "left")
      this.left = true;
    else if (dir === "straight")
      this.straight = true;
    else if (dir === "farLeft")
      this.farLeft = true;
    else if (dir === "farRight")
      this.farRight = true;
    this.Type = type;
    this.opacity = 0;
    if (size >= 36)
      ;
    if (type === "super") {
      this._width = 64;
      this.updateBox$0();
      this._height = 32;
      this.updateBox$0();
    }
  },
  $isBullet: true,
  static: {
Bullet$: function(game, x, y, dir, yVel, size, type) {
  var t1 = new $.Bullet(0, 0, null, null, 0, false, false, false, false, false, null, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, size, size, null, null);
  t1.Bullet$7(game, x, y, dir, yVel, size, type);
  return t1;
}}

},

Bullet_update_closure: {"": "Closure;this_0",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isBullet && this.this_0.collidesWith$1(e);
  }
},

Bullet_update_closure0: {"": "Closure;this_1",
  call$1: function(e) {
    var t1, t2;
    t1 = this.this_1;
    t2 = $.getInterceptor$x(e);
    if ($.$gt$n(t1.get$_width(), t2.get$width(e)) && $.$gt$n(t1.get$_height(), t2.get$height(e)) && !$.$eq(t2.get$x(e), t1.get$_x()) && !$.$eq(t2.get$y(e), t1.get$_y())) {
      t1 = t1.get$game().get$ship();
      t1.set$bullet(t1.get$bullet() + 1);
      e.removeFromGame$0();
    }
  }
},

Bullet_update_closure1: {"": "Closure;this_2",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy && this.this_2.collidesWith$1(e);
  }
},

Bullet_update_closure2: {"": "Closure;this_3",
  call$1: function(enemy) {
    var t1, t2, t3, t4;
    t1 = this.this_3;
    t2 = $.getInterceptor$x(enemy);
    if ($.$gt$n(t1.get$_width(), t2.get$width(enemy)) && $.$gt$n(t1.get$_height(), t2.get$height(enemy))) {
      t1.set$_width($.$sub$n(t1.get$_width(), t2.get$width(enemy)));
      t1.updateBox$0();
      t1.set$_height($.$sub$n(t1.get$_height(), t2.get$height(enemy)));
      t1.updateBox$0();
    } else if (t1.get$Type() !== "super")
      t1.set$_removeFromGame(true);
    t1.get$game().set$targetId(enemy.get$idNum());
    t3 = t1.get$game().get$Stats();
    t3.$indexSet(t3, "bulletsHit", $.$add$ns(t3.$index(t3, "bulletsHit"), 1));
    t3 = t1.get$game().get$ship();
    t4 = t3.get$bullet();
    if (t4 < 3)
      t3.set$bullet(t4 + 1);
    t3 = t2.get$type(enemy);
    if (t3 === "MotherShip") {
      t1 = t1.get$game().get$_motherShipEvent()._controller;
      t3 = $.get$EventArgs_empty();
      if (t1._state >= 4)
        $.throwExpression(t1._badEventState$0());
      t1._liblib1$_add$1(t3);
    } else if (t3 === "Boss") {
      t1 = t1.get$game().get$_bossHitEvent()._controller;
      t3 = $.get$EventArgs_empty();
      if (t1._state >= 4)
        $.throwExpression(t1._badEventState$0());
      t1._liblib1$_add$1(t3);
    } else if (t3 === "Normal") {
      t1 = t1.get$game().get$_normalHitEvent()._controller;
      t3 = $.get$EventArgs_empty();
      if (t1._state >= 4)
        $.throwExpression(t1._badEventState$0());
      t1._liblib1$_add$1(t3);
    }
    if (t2.get$type(enemy) !== "Boss") {
      t2.set$width(enemy, $.$sub$n(t2.get$width(enemy), 8));
      t2.set$height(enemy, $.$sub$n(t2.get$height(enemy), 8));
    }
    enemy.set$health(enemy.get$health() - 1);
  }
},

Bullet_update_closure3: {"": "Closure;this_4",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isShip && this.this_4.collidesWith$1(e);
  }
},

Bullet_update_closure4: {"": "Closure;this_5",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = this.this_5;
    t2 = t1.get$game().get$Cheats();
    if (!$.$eq(t2.$index(t2, "invincibility"), 1)) {
      t2 = t1.get$game().get$Stats();
      t2.$indexSet(t2, "deaths", $.$add$ns(t2.$index(t2, "deaths"), 1));
      t2 = t1.get$game().get$ship();
      t2.set$lives($.$sub$n(t2.get$lives(), 1));
    }
    t2 = t1.get$game().get$_shipHitEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = t1.get$game().get$Cheats();
    if ($.$eq(t2.$index(t2, "spreadshot"), 2))
      t1.get$game().resetPowerups$0();
    t1.get$game().removeBullets$0();
    t2 = t1.get$game().get$ship();
    t2.set$bullet(t2.get$maxBullet());
    t2 = t1.get$game().get$Cheats();
    t2.$indexSet(t2, "invincibility", 1);
    t2 = new $._ZoneTimer($.get$_Zone__current(), new $.Bullet_update__closure(t1), null);
    t3 = t2._zone;
    t3._openCallbacks = t3._openCallbacks + 1;
    t2._timer = $._createTimer(C.Duration_3000000, t2.get$_run());
    t1.set$_invincibleTimer(t2);
  }
},

Bullet_update__closure: {"": "Closure;this_6",
  call$0: function() {
    var t1 = this.this_6.get$game().get$Cheats();
    t1.$indexSet(t1, "invincibility", 0);
  }
},

Clone: {"": "GameEntity;Id<,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1 = $.get$state$x(this.game);
    if (typeof t1 !== "number")
      return this.update$0$bailout1(1, t1);
    if (t1 === 2)
      return;
    t1 = this._x;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(2, t1);
    if (!(t1 + 16 > $.get$rect$x(this.game).get$halfWidth())) {
      t1 = this._x;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(3, t1);
      t1 = t1 - 16 < -$.get$rect$x(this.game).get$halfWidth();
    } else
      t1 = true;
    if (t1)
      this.game.switchDirection$0();
    $.GameEntity.prototype.update$0.call(this);
  },
  update$0$bailout1: function(state0, t1) {
    switch (state0) {
      case 0:
        t1 = $.get$state$x(this.game);
      case 1:
        state0 = 0;
        if ($.$eq(t1, 2))
          return;
        t1 = this._x;
      case 2:
        state0 = 0;
      case 3:
        if (state0 === 3 || state0 === 0 && !$.$gt$n($.$add$ns(t1, 16), $.get$rect$x(this.game).get$halfWidth()))
          switch (state0) {
            case 0:
              t1 = this._x;
            case 3:
              state0 = 0;
              t1 = $.$lt$n($.$sub$n(t1, 16), -$.get$rect$x(this.game).get$halfWidth());
          }
        else
          t1 = true;
        if (t1)
          this.game.switchDirection$0();
        $.GameEntity.prototype.update$0.call(this);
    }
  },
  $isClone: true
},

Enemy: {"": "GameEntity;type>,startY,difficulty@,bossDifficulty,health@,bossHealth,maxHp,bossMaxHp,belowHalfHp,flicker@,isFalling,isGoingBack,enemyType<,cloneNum<,idNum<,switchAmount,targetX',motherShipType<,_invincibleTimer?,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2, t3, t4;
    t1 = $.get$state$x(this.game);
    if (typeof t1 !== "number")
      return this.update$0$bailout1(1, t1);
    if (t1 !== 2) {
      t1 = $.get$state$x(this.game);
      if (typeof t1 !== "number")
        return this.update$0$bailout1(2, t1);
      if (t1 !== 4) {
        t1 = $.get$state$x(this.game);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(3, t1);
        t1 = t1 === 1;
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1)
      return;
    if (this.health < this.maxHp / 2 || this.bossHealth < this.bossMaxHp / 2)
      this.belowHalfHp = true;
    if (this.type === "Drone") {
      if (this.health <= 0) {
        t1 = this.game;
        t2 = t1.get$score();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(4, t1, t2);
        t1.set$score(t2 + 100 * t1.get$pointMultiplier() * this.difficulty);
        t1 = this.game.get$Stats();
        t2 = t1.$index(t1, "killed");
        if (typeof t2 !== "number")
          return this.update$0$bailout1(5, t1, t2);
        t1.$indexSet(t1, "killed", t2 + 1);
        t2 = this.game.get$Stats();
        t1 = t2.$index(t2, "droneKills");
        if (typeof t1 !== "number")
          return this.update$0$bailout1(6, t1, t2);
        t2.$indexSet(t2, "droneKills", t1 + 1);
        if ($.random(0, 1, false) > 0.5)
          this.game.newBulletPowerUp$2(this._x, this._y);
        this.game.newMiniExplosion$2(this._x, this._y);
        this._removeFromGame = true;
      }
      if ($.random(0, 1, false) <= 0.01) {
        t1 = this.momentum;
        t2 = t1.yVel;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(7, t2);
        if (t2 !== 0)
          t1.yVel = t2 * -1;
        else
          t1.yVel = 60;
      }
      if ($.random(0, 1, false) <= 0.01) {
        t1 = this.momentum;
        t2 = t1.xVel;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(9, t2);
        if (t2 !== 0)
          t1.xVel = t2 * -1;
        else
          t1.xVel = 60;
      }
      t1 = this._y;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(11, t1);
      if (t1 > $.get$rect$x(this.game).get$halfHeight() - 16) {
        t1 = this.momentum;
        t2 = t1.yVel;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(12, t1, t2);
        t1.yVel = t2 * -1;
      }
      t1 = this._y;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(13, t1);
      if (t1 < -$.get$rect$x(this.game).get$halfHeight() + 16) {
        t1 = this.momentum;
        t2 = t1.yVel;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(14, t1, t2);
        t1.yVel = t2 * -1;
      }
      t1 = this._x;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(15, t1);
      if (t1 > $.get$rect$x(this.game).get$halfWidth() - 16) {
        t1 = this.momentum;
        t2 = t1.xVel;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(16, t1, t2);
        t1.xVel = t2 * -1;
      }
      t1 = this._x;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(17, t1);
      if (t1 < -$.get$rect$x(this.game).get$halfWidth() + 16) {
        t1 = this.momentum;
        t2 = t1.xVel;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(18, t1, t2);
        t1.xVel = t2 * -1;
      }
      t1 = this._x;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(19, t1);
      if (t1 > this.game.getEnemyX$1("Boss"))
        if ($.random(0, 1, false) <= 0.05) {
          t1 = this.momentum;
          t2 = t1.xVel;
          if (typeof t2 !== "number")
            return this.update$0$bailout1(20, t1, t2);
          t1.xVel = t2 * -1;
        }
      t1 = this._x;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(21, t1);
      if (t1 < this.game.getEnemyX$1("Boss"))
        if ($.random(0, 1, false) <= 0.05) {
          t1 = this.momentum;
          t2 = t1.xVel;
          if (typeof t2 !== "number")
            return this.update$0$bailout1(22, t1, t2);
          t1.xVel = t2 * -1;
        }
      t1 = this._y;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(23, t1);
      if (t1 > this.game.getEnemyY$1("Boss"))
        if ($.random(0, 1, false) <= 0.05) {
          t1 = this.momentum;
          t2 = t1.yVel;
          if (typeof t2 !== "number")
            return this.update$0$bailout1(24, t1, t2);
          t1.yVel = t2 * -1;
        }
      t1 = this._y;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(25, t1);
      if (t1 < this.game.getEnemyY$1("Boss"))
        if ($.random(0, 1, false) <= 0.05) {
          t1 = this.momentum;
          t2 = t1.yVel;
          if (typeof t2 !== "number")
            return this.update$0$bailout1(26, t1, t2);
          t1.yVel = t2 * -1;
        }
      if ($.random(0, 1, false) <= 0.05) {
        t1 = this.game;
        t2 = this._x;
        t3 = this._y;
        if (typeof t3 !== "number")
          return this.update$0$bailout1(27, t1, t2, t3);
        t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
      }
    }
    if (this.type === "Boss") {
      if (this.health <= 0) {
        t1 = this.game.get$Stats();
        t2 = t1.$index(t1, "wins");
        if (typeof t2 !== "number")
          return this.update$0$bailout1(28, t1, t2);
        t1.$indexSet(t1, "wins", t2 + 1);
        this.game.newExplosion$2(this._x, this._y);
        this.game.removeEntitiesByFilter$1(new $.Enemy_update_closure());
        this.game.removeEntitiesByFilter$1(new $.Enemy_update_closure0());
        this.game.removeEntitiesByFilter$1(new $.Enemy_update_closure1());
        this.game.removeEntitiesByGroup$1("levelEnd");
        this.game.createLevelEnd$0();
        $.set$state$x(this.game, 8);
        this.game.set$waiting(1);
        this.game.set$bonusCheck(3);
        this.game.set$bonusStage(false);
        t2 = this.game;
        t2.set$level(t2.get$level() + 1);
        this.bossHealth = this.bossHealth + 50;
        t1 = this.game;
        if (t1.get$level() >= t1.get$bonusCheck()) {
          t1.set$bonusStage(true);
          t1 = this.game;
          t1.set$bonusCheck(t1.get$bonusCheck() + 3);
        } else
          t1.set$bonusStage(false);
        t1 = this.game;
        t2 = t1.get$score();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(29, t1, t2);
        t1.set$score(t2 + 10000 * t1.get$pointMultiplier() * this.bossDifficulty);
        t1 = this.game.get$Stats();
        t2 = t1.$index(t1, "killed");
        if (typeof t2 !== "number")
          return this.update$0$bailout1(30, t1, t2);
        t1.$indexSet(t1, "killed", t2 + 1);
        t2 = this.game.get$Stats();
        t1 = t2.$index(t2, "bossKills");
        if (typeof t1 !== "number")
          return this.update$0$bailout1(31, t1, t2);
        t2.$indexSet(t2, "bossKills", t1 + 1);
        this.game.set$bonusStage(false);
        this._removeFromGame = true;
      }
      if ($.random(0, 1, false) <= 0.01) {
        t1 = this.momentum;
        t2 = t1.yVel;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(32, t2);
        if (t2 !== 0)
          t1.yVel = t2 * -1;
        else
          t1.yVel = 60;
      }
      if ($.random(0, 1, false) <= 0.01) {
        t1 = this.momentum;
        t2 = t1.xVel;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(34, t2);
        if (t2 !== 0)
          t1.xVel = t2 * -1;
        else
          t1.xVel = 60;
      }
      t1 = this._y;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(36, t1);
      if (t1 > $.get$rect$x(this.game).get$halfHeight() - 250 && $.random(0, 1, false) <= 0.07) {
        t1 = this.momentum;
        t2 = t1.yVel;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(37, t1, t2);
        t1.yVel = t2 * -1;
      }
      t1 = this._y;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(38, t1);
      if (t1 > $.get$rect$x(this.game).get$halfHeight() - 115) {
        t1 = this.momentum;
        t2 = t1.yVel;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(39, t1, t2);
        t1.yVel = t2 * -1;
      }
      t1 = this._y;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(40, t1);
      if (t1 < -$.get$rect$x(this.game).get$halfHeight() + 72) {
        t1 = this.momentum;
        t2 = t1.yVel;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(41, t1, t2);
        t1.yVel = t2 * -1;
      }
      t1 = this._x;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(42, t1);
      if (t1 > $.get$rect$x(this.game).get$halfWidth() - 72) {
        t1 = this.momentum;
        t2 = t1.xVel;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(43, t1, t2);
        t1.xVel = t2 * -1;
      }
      t1 = this._x;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(44, t1);
      if (t1 < -$.get$rect$x(this.game).get$halfWidth() + 72) {
        t1 = this.momentum;
        t2 = t1.xVel;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(45, t1, t2);
        t1.xVel = t2 * -1;
      }
      if (this.belowHalfHp) {
        t1 = this.bossDifficulty;
        if (t1 === 1) {
          if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(46, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
            t3 = this.game;
            t2 = this._x;
            t1 = this._y;
            if (typeof t1 !== "number")
              return this.update$0$bailout1(47, t1, t2, t3);
            t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(48, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
          }
        } else if (t1 === 2) {
          if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(49, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
            t3 = this.game;
            t2 = this._x;
            t1 = this._y;
            if (typeof t1 !== "number")
              return this.update$0$bailout1(50, t1, t2, t3);
            t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(51, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
          }
        } else if (t1 === 3) {
          if ($.random(0, 1, false) <= 0.07)
            if ($.random(0, 1, false) <= 0.1) {
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(52, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t3 = this.game;
              t2 = this._x;
              t1 = this._y;
              if (typeof t1 !== "number")
                return this.update$0$bailout1(53, t1, t2, t3);
              t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(54, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            } else if ($.random(0, 1, false) <= 0.1) {
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(55, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t3 = this.game;
              t2 = this._x;
              t1 = this._y;
              if (typeof t1 !== "number")
                return this.update$0$bailout1(56, t1, t2, t3);
              t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            }
        } else if (t1 === 4) {
          if ($.random(0, 1, false) <= 0.1)
            if ($.random(0, 1, false) <= 0.3) {
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(57, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t3 = this.game;
              t2 = this._x;
              t1 = this._y;
              if (typeof t1 !== "number")
                return this.update$0$bailout1(58, t1, t2, t3);
              t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(59, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            } else if ($.random(0, 1, false) <= 0.3) {
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(60, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t3 = this.game;
              t2 = this._x;
              t1 = this._y;
              if (typeof t1 !== "number")
                return this.update$0$bailout1(61, t1, t2, t3);
              t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            }
        } else if (t1 === 5)
          if ($.random(0, 1, false) <= 0.2) {
            if ($.random(0, 1, false) <= 0.5) {
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(62, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t3 = this.game;
              t2 = this._x;
              t1 = this._y;
              if (typeof t1 !== "number")
                return this.update$0$bailout1(63, t1, t2, t3);
              t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(64, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            } else if ($.random(0, 1, false) <= 0.5) {
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(65, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t3 = this.game;
              t2 = this._x;
              t1 = this._y;
              if (typeof t1 !== "number")
                return this.update$0$bailout1(66, t1, t2, t3);
              t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            }
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(67, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t3 = this.game;
            t2 = this._x;
            t1 = this._y;
            if (typeof t1 !== "number")
              return this.update$0$bailout1(68, t1, t2, t3);
            t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(69, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
          }
      } else {
        t1 = this.bossDifficulty;
        if (t1 === 1) {
          if ($.random(0, 1, false) <= 0.01) {
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(70, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t3 = this.game;
            t2 = this._x;
            t1 = this._y;
            if (typeof t1 !== "number")
              return this.update$0$bailout1(71, t1, t2, t3);
            t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(72, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
          }
        } else if (t1 === 2) {
          if ($.random(0, 1, false) <= 0.03) {
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(73, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t3 = this.game;
            t2 = this._x;
            t1 = this._y;
            if (typeof t1 !== "number")
              return this.update$0$bailout1(74, t1, t2, t3);
            t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(75, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
          }
        } else if (t1 === 3) {
          if ($.random(0, 1, false) <= 0.07)
            if ($.random(0, 1, false) <= 0.1) {
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(76, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(42, 54, false), "super"));
              t3 = this.game;
              t2 = this._x;
              t1 = this._y;
              if (typeof t1 !== "number")
                return this.update$0$bailout1(77, t1, t2, t3);
              t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "left", $.random(350, 400, false), $.random(42, 54, false), "super"));
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(78, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "right", $.random(350, 400, false), $.random(42, 54, false), "super"));
            } else if ($.random(0, 1, false) <= 0.1) {
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(79, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t3 = this.game;
              t2 = this._x;
              t1 = this._y;
              if (typeof t1 !== "number")
                return this.update$0$bailout1(80, t1, t2, t3);
              t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            }
        } else if (t1 === 4) {
          if ($.random(0, 1, false) <= 0.1)
            if ($.random(0, 1, false) <= 0.3) {
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(81, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(42, 54, false), "super"));
              t3 = this.game;
              t2 = this._x;
              t1 = this._y;
              if (typeof t1 !== "number")
                return this.update$0$bailout1(82, t1, t2, t3);
              t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "left", $.random(350, 400, false), $.random(42, 54, false), "super"));
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(83, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "right", $.random(350, 400, false), $.random(42, 54, false), "super"));
            } else if ($.random(0, 1, false) <= 0.3) {
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(84, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t3 = this.game;
              t2 = this._x;
              t1 = this._y;
              if (typeof t1 !== "number")
                return this.update$0$bailout1(85, t1, t2, t3);
              t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            }
        } else if (t1 === 5)
          if ($.random(0, 1, false) <= 0.2) {
            if ($.random(0, 1, false) <= 0.5) {
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(86, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(42, 54, false), "super"));
              t3 = this.game;
              t2 = this._x;
              t1 = this._y;
              if (typeof t1 !== "number")
                return this.update$0$bailout1(87, t1, t2, t3);
              t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "left", $.random(350, 400, false), $.random(42, 54, false), "super"));
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(88, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "right", $.random(350, 400, false), $.random(42, 54, false), "super"));
            } else if ($.random(0, 1, false) <= 0.5) {
              t1 = this.game;
              t2 = this._x;
              t3 = this._y;
              if (typeof t3 !== "number")
                return this.update$0$bailout1(89, t1, t2, t3);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
              t3 = this.game;
              t2 = this._x;
              t1 = this._y;
              if (typeof t1 !== "number")
                return this.update$0$bailout1(90, t1, t2, t3);
              t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
            }
          } else if ($.random(0, 1, false) <= 0.01) {
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(91, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t3 = this.game;
            t2 = this._x;
            t1 = this._y;
            if (typeof t1 !== "number")
              return this.update$0$bailout1(92, t1, t2, t3);
            t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(93, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
          }
      }
      t1 = $.random(0, 1, false) <= 0.5;
      t2 = this.game;
      t3 = this._x;
      if (typeof t3 !== "number")
        return this.update$0$bailout1(94, t1, t2, t3);
      t4 = this._y;
      if (t1) {
        if (typeof t4 !== "number")
          return this.update$0$bailout1(95, t4, t2, t3);
        t2.newBossDrone$2(t3, t4 - 50);
      } else {
        t1 = t3 + 72;
        if (typeof t4 !== "number")
          return this.update$0$bailout1(96, t1, t2, t4);
        t2.newBossDrone$2(t1, t4 - 50);
      }
    }
    if (this.type === "MotherShip") {
      t1 = this._x;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(97, t1);
      if (t1 > $.get$rect$x(this.game).get$halfWidth())
        this._removeFromGame = true;
      this.momentum.xVel = 150;
      if (this.health <= 0) {
        t1 = this.game;
        t2 = t1.get$score();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(98, t1, t2);
        t1.set$score(t2 + 1000 * t1.get$pointMultiplier() * this.difficulty);
        t1 = this.game.get$Stats();
        t2 = t1.$index(t1, "killed");
        if (typeof t2 !== "number")
          return this.update$0$bailout1(99, t1, t2);
        t1.$indexSet(t1, "killed", t2 + 1);
        t2 = this.game.get$Stats();
        t1 = t2.$index(t2, "motherKills");
        if (typeof t1 !== "number")
          return this.update$0$bailout1(100, t1, t2);
        t2.$indexSet(t2, "motherKills", t1 + 1);
        if ($.random(0, 1, false) > 0.5)
          this.game.newBulletPowerUp$2(this._x, this._y);
        this.game.newMiniExplosion$2(this._x, this._y);
        this._removeFromGame = true;
      }
      t1 = this.difficulty;
      if (t1 === 1) {
        t1 = this._x;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(101, t1);
        t2 = $.get$x$x(this.game.get$ship());
        if (typeof t2 !== "number")
          throw $.iae(t2);
        if (t1 + 16 >= t2) {
          t1 = this._x;
          if (typeof t1 !== "number")
            return this.update$0$bailout1(102, t1);
          t2 = $.get$x$x(this.game.get$ship());
          if (typeof t2 !== "number")
            throw $.iae(t2);
          t2 = t1 - 16 <= t2;
          t1 = t2;
        } else
          t1 = false;
        if (t1 && $.random(0, 1, false) <= 0.01) {
          t1 = this.game;
          t2 = this._x;
          t3 = this._y;
          if (typeof t3 !== "number")
            return this.update$0$bailout1(103, t1, t2, t3);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
        }
      } else if (t1 === 2) {
        t1 = this._x;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(104, t1);
        t2 = $.get$x$x(this.game.get$ship());
        if (typeof t2 !== "number")
          throw $.iae(t2);
        if (t1 + 16 >= t2) {
          t1 = this._x;
          if (typeof t1 !== "number")
            return this.update$0$bailout1(105, t1);
          t2 = $.get$x$x(this.game.get$ship());
          if (typeof t2 !== "number")
            throw $.iae(t2);
          t2 = t1 - 16 <= t2;
          t1 = t2;
        } else
          t1 = false;
        if (t1 && $.random(0, 1, false) <= 0.03) {
          t1 = this.game;
          t2 = this._x;
          t3 = this._y;
          if (typeof t3 !== "number")
            return this.update$0$bailout1(106, t1, t2, t3);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
        }
      } else if (t1 === 3) {
        t1 = this._x;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(107, t1);
        t2 = $.get$x$x(this.game.get$ship());
        if (typeof t2 !== "number")
          throw $.iae(t2);
        if (t1 + 16 >= t2) {
          t1 = this._x;
          if (typeof t1 !== "number")
            return this.update$0$bailout1(108, t1);
          t2 = $.get$x$x(this.game.get$ship());
          if (typeof t2 !== "number")
            throw $.iae(t2);
          t2 = t1 - 16 <= t2;
          t1 = t2;
        } else
          t1 = false;
        if (t1 && $.random(0, 1, false) <= 0.07) {
          t1 = this.game;
          t2 = this._x;
          t3 = this._y;
          if (typeof t3 !== "number")
            return this.update$0$bailout1(109, t1, t2, t3);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(110, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t3 = this.game;
            t2 = this._x;
            t1 = this._y;
            if (typeof t1 !== "number")
              return this.update$0$bailout1(111, t1, t2, t3);
            t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          }
        }
      } else if (t1 === 4) {
        t1 = this._x;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(112, t1);
        t2 = $.get$x$x(this.game.get$ship());
        if (typeof t2 !== "number")
          throw $.iae(t2);
        if (t1 + 16 >= t2) {
          t1 = this._x;
          if (typeof t1 !== "number")
            return this.update$0$bailout1(113, t1);
          t2 = $.get$x$x(this.game.get$ship());
          if (typeof t2 !== "number")
            throw $.iae(t2);
          t2 = t1 - 16 <= t2;
          t1 = t2;
        } else
          t1 = false;
        if (t1 && $.random(0, 1, false) <= 0.1) {
          t1 = this.game;
          t2 = this._x;
          t3 = this._y;
          if (typeof t3 !== "number")
            return this.update$0$bailout1(114, t1, t2, t3);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.3) {
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(115, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t3 = this.game;
            t2 = this._x;
            t1 = this._y;
            if (typeof t1 !== "number")
              return this.update$0$bailout1(116, t1, t2, t3);
            t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          }
        }
      } else if (t1 === 5) {
        t1 = this._x;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(117, t1);
        t2 = $.get$x$x(this.game.get$ship());
        if (typeof t2 !== "number")
          throw $.iae(t2);
        if (t1 + 16 >= t2) {
          t1 = this._x;
          if (typeof t1 !== "number")
            return this.update$0$bailout1(118, t1);
          t2 = $.get$x$x(this.game.get$ship());
          if (typeof t2 !== "number")
            throw $.iae(t2);
          t2 = t1 - 16 <= t2;
          t1 = t2;
        } else
          t1 = false;
        if (t1 && $.random(0, 1, false) <= 0.2) {
          t1 = this.game;
          t2 = this._x;
          t3 = this._y;
          if (typeof t3 !== "number")
            return this.update$0$bailout1(119, t1, t2, t3);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.5) {
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(120, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t3 = this.game;
            t2 = this._x;
            t1 = this._y;
            if (typeof t1 !== "number")
              return this.update$0$bailout1(121, t1, t2, t3);
            t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          }
        }
      }
    }
    if (this.type === "Normal") {
      if ($.random(0, 1, false) < 0.0001 && !this.isFalling) {
        this.isFalling = true;
        this.momentum.yVel = 140;
      }
      $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.game.get$entities(), new $.Enemy_update_closure2(this)), true), new $.Enemy_update_closure3(this));
      t1 = this._y;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(122, t1);
      if (t1 > $.get$rect$x(this.game).get$halfHeight() - 45) {
        this.momentum.yVel = -140;
        this.isGoingBack = true;
      }
      if (this.isGoingBack) {
        this.game.matchCloneX$0();
        t1 = this._x;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(123, t1);
        t2 = this.targetX;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(124, t1, t2);
        if (t1 < t2)
          this.momentum.xVel = 100;
        else {
          t3 = this.momentum;
          if (t1 > t2)
            t3.xVel = -100;
          else
            t3.xVel = 0;
        }
      }
      if (this.isFalling && !this.isGoingBack) {
        if ($.random(0, 1, false) < 0.1)
          this.momentum.xVel = $.random(-140, 140, false);
        if ($.random(0, 1, false) < 0.2)
          this.momentum.yVel = $.random(0, 200, false);
        else if ($.random(0, 1, false) < 0.05)
          this.momentum.yVel = $.random(-140, 0, false);
        t1 = this._y;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(125, t1);
        if (t1 < -($.get$rect$x(this.game).get$halfHeight() - 60)) {
          t1 = this.momentum;
          t2 = t1.yVel;
          if (typeof t2 !== "number")
            return this.update$0$bailout1(126, t1, t2);
          t1.yVel = t2 * -1;
        }
        t1 = this._x;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(127, t1);
        if (!(t1 + 16 > $.get$rect$x(this.game).get$halfWidth() - 60)) {
          t1 = this._x;
          if (typeof t1 !== "number")
            return this.update$0$bailout1(128, t1);
          t1 = t1 - 16 < -$.get$rect$x(this.game).get$halfWidth() + 60;
        } else
          t1 = true;
        if (t1) {
          t1 = this.momentum;
          t2 = t1.xVel;
          if (typeof t2 !== "number")
            return this.update$0$bailout1(129, t1, t2);
          t1.xVel = t2 * -1;
        }
      }
      t1 = this._y;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(130, t1);
      t2 = this.startY;
      if (typeof t2 !== "number")
        return this.update$0$bailout1(131, t1, t2);
      if (t1 < t2 && this.isGoingBack) {
        this._y = t2;
        this.updateBox$0();
        this.momentum.yVel = 0;
        t1 = new $.WhereIterable(this.game.get$entities(), new $.Enemy_update_closure4());
        t1.forEach$1(t1, new $.Enemy_update_closure5(this));
        this.isFalling = false;
        this.isGoingBack = false;
      }
      if (this.health <= 0) {
        t1 = this.game;
        t2 = t1.get$score();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(132, t1, t2);
        t1.set$score(t2 + 100 * t1.get$pointMultiplier() * this.difficulty);
        t1 = this.game;
        t1.set$enemyAmount(t1.get$enemyAmount() - 1);
        t1 = this.game.get$Stats();
        t2 = t1.$index(t1, "killed");
        if (typeof t2 !== "number")
          return this.update$0$bailout1(133, t1, t2);
        t1.$indexSet(t1, "killed", t2 + 1);
        t2 = this.game.get$Stats();
        t1 = t2.$index(t2, "normalKills");
        if (typeof t1 !== "number")
          return this.update$0$bailout1(134, t1, t2);
        t2.$indexSet(t2, "normalKills", t1 + 1);
        if ($.random(0, 1, false) > 0.5)
          this.game.newBulletPowerUp$2(this._x, this._y);
        this.game.newMiniExplosion$2(this._x, this._y);
        t1 = new $.WhereIterable(this.game.get$entities(), new $.Enemy_update_closure6());
        t1.forEach$1(t1, new $.Enemy_update_closure7(this));
        this._removeFromGame = true;
      }
      t1 = this._x;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(135, t1);
      if (!(t1 + 16 > $.get$rect$x(this.game).get$halfWidth())) {
        t1 = this._x;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(136, t1);
        t1 = t1 - 16 < -$.get$rect$x(this.game).get$halfWidth() && !this.isFalling;
      } else
        t1 = true;
      if (t1)
        this.game.switchDirection$0();
      t1 = this.difficulty;
      if (t1 === 1) {
        t1 = this._x;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(137, t1);
        t2 = $.get$x$x(this.game.get$ship());
        if (typeof t2 !== "number")
          throw $.iae(t2);
        if (t1 + 16 >= t2) {
          t1 = this._x;
          if (typeof t1 !== "number")
            return this.update$0$bailout1(138, t1);
          t2 = $.get$x$x(this.game.get$ship());
          if (typeof t2 !== "number")
            throw $.iae(t2);
          t2 = t1 - 16 <= t2;
          t1 = t2;
        } else
          t1 = false;
        if (t1 && $.random(0, 1, false) <= 0.01) {
          t1 = this.game;
          t2 = this._x;
          t3 = this._y;
          if (typeof t3 !== "number")
            return this.update$0$bailout1(139, t1, t2, t3);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
        }
      } else if (t1 === 2) {
        t1 = this._x;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(140, t1);
        t2 = $.get$x$x(this.game.get$ship());
        if (typeof t2 !== "number")
          throw $.iae(t2);
        if (t1 + 16 >= t2) {
          t1 = this._x;
          if (typeof t1 !== "number")
            return this.update$0$bailout1(141, t1);
          t2 = $.get$x$x(this.game.get$ship());
          if (typeof t2 !== "number")
            throw $.iae(t2);
          t2 = t1 - 16 <= t2;
          t1 = t2;
        } else
          t1 = false;
        if (t1 && $.random(0, 1, false) <= 0.03) {
          t1 = this.game;
          t2 = this._x;
          t3 = this._y;
          if (typeof t3 !== "number")
            return this.update$0$bailout1(142, t1, t2, t3);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
        }
      } else if (t1 === 3) {
        t1 = this._x;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(143, t1);
        t2 = $.get$x$x(this.game.get$ship());
        if (typeof t2 !== "number")
          throw $.iae(t2);
        if (t1 + 16 >= t2) {
          t1 = this._x;
          if (typeof t1 !== "number")
            return this.update$0$bailout1(144, t1);
          t2 = $.get$x$x(this.game.get$ship());
          if (typeof t2 !== "number")
            throw $.iae(t2);
          t2 = t1 - 16 <= t2;
          t1 = t2;
        } else
          t1 = false;
        if (t1 && $.random(0, 1, false) <= 0.07) {
          t1 = this.game;
          t2 = this._x;
          t3 = this._y;
          if (typeof t3 !== "number")
            return this.update$0$bailout1(145, t1, t2, t3);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.1) {
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(146, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t3 = this.game;
            t2 = this._x;
            t1 = this._y;
            if (typeof t1 !== "number")
              return this.update$0$bailout1(147, t1, t2, t3);
            t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          }
        }
      } else if (t1 === 4) {
        t1 = this._x;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(148, t1);
        t2 = $.get$x$x(this.game.get$ship());
        if (typeof t2 !== "number")
          throw $.iae(t2);
        if (t1 + 16 >= t2) {
          t1 = this._x;
          if (typeof t1 !== "number")
            return this.update$0$bailout1(149, t1);
          t2 = $.get$x$x(this.game.get$ship());
          if (typeof t2 !== "number")
            throw $.iae(t2);
          t2 = t1 - 16 <= t2;
          t1 = t2;
        } else
          t1 = false;
        if (t1 && $.random(0, 1, false) <= 0.1) {
          t1 = this.game;
          t2 = this._x;
          t3 = this._y;
          if (typeof t3 !== "number")
            return this.update$0$bailout1(150, t1, t2, t3);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.3) {
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(151, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t3 = this.game;
            t2 = this._x;
            t1 = this._y;
            if (typeof t1 !== "number")
              return this.update$0$bailout1(152, t1, t2, t3);
            t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          }
        }
      } else if (t1 === 5) {
        t1 = this._x;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(153, t1);
        t2 = $.get$x$x(this.game.get$ship());
        if (typeof t2 !== "number")
          throw $.iae(t2);
        if (t1 + 16 >= t2) {
          t1 = this._x;
          if (typeof t1 !== "number")
            return this.update$0$bailout1(154, t1);
          t2 = $.get$x$x(this.game.get$ship());
          if (typeof t2 !== "number")
            throw $.iae(t2);
          t2 = t1 - 16 <= t2;
          t1 = t2;
        } else
          t1 = false;
        if (t1 && $.random(0, 1, false) <= 0.2) {
          t1 = this.game;
          t2 = this._x;
          t3 = this._y;
          if (typeof t3 !== "number")
            return this.update$0$bailout1(155, t1, t2, t3);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          if ($.random(0, 1, false) <= 0.5) {
            t1 = this.game;
            t2 = this._x;
            t3 = this._y;
            if (typeof t3 !== "number")
              return this.update$0$bailout1(156, t1, t2, t3);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t3 = this.game;
            t2 = this._x;
            t1 = this._y;
            if (typeof t1 !== "number")
              return this.update$0$bailout1(157, t1, t2, t3);
            t3.addEntity$1($.Bullet$(t3, t2, t1 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          }
        }
      }
    }
    $.GameEntity.prototype.update$0.call(this);
  },
  update$0$bailout1: function(state0, t1, t2, t3) {
    switch (state0) {
      case 0:
        t1 = $.get$state$x(this.game);
      case 1:
        state0 = 0;
      default:
        if (state0 === 3 || state0 === 2 || state0 === 0 && !$.$eq(t1, 2))
          switch (state0) {
            case 0:
              t1 = $.get$state$x(this.game);
            case 2:
              state0 = 0;
            case 3:
              if (state0 === 3 || state0 === 0 && !$.$eq(t1, 4))
                switch (state0) {
                  case 0:
                    t1 = $.get$state$x(this.game);
                  case 3:
                    state0 = 0;
                    t1 = $.$eq(t1, 1);
                }
              else
                t1 = true;
          }
        else
          t1 = true;
        if (t1)
          return;
        if (this.health < this.maxHp / 2 || this.bossHealth < this.bossMaxHp / 2)
          this.belowHalfHp = true;
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
        if (state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 0 && this.type === "Drone")
          switch (state0) {
            case 0:
            default:
              if (state0 === 6 || state0 === 5 || state0 === 4 || state0 === 0 && this.health <= 0)
                switch (state0) {
                  case 0:
                    t1 = this.game;
                    t2 = t1.get$score();
                  case 4:
                    state0 = 0;
                    t1.set$score($.$add$ns(t2, 100 * t1.get$pointMultiplier() * this.difficulty));
                    t1 = this.game.get$Stats();
                    t2 = t1.$index(t1, "killed");
                  case 5:
                    state0 = 0;
                    t1.$indexSet(t1, "killed", $.$add$ns(t2, 1));
                    t2 = this.game.get$Stats();
                    t1 = t2.$index(t2, "droneKills");
                  case 6:
                    state0 = 0;
                    t2.$indexSet(t2, "droneKills", $.$add$ns(t1, 1));
                    if ($.random(0, 1, false) > 0.5)
                      this.game.newBulletPowerUp$2(this._x, this._y);
                    this.game.newMiniExplosion$2(this._x, this._y);
                    this._removeFromGame = true;
                }
            case 7:
            case 8:
              if (state0 === 8 || state0 === 7 || state0 === 0 && $.random(0, 1, false) <= 0.01)
                switch (state0) {
                  case 0:
                    t1 = this.momentum.yVel;
                  case 7:
                    state0 = 0;
                    t1 = $.$eq(t1, 0);
                    t2 = this.momentum;
                  case 8:
                    if (state0 === 8 || state0 === 0 && !t1)
                      switch (state0) {
                        case 0:
                          t1 = t2.yVel;
                        case 8:
                          state0 = 0;
                          t2.yVel = $.$mul$n(t1, -1);
                      }
                    else
                      t2.yVel = 60;
                }
            case 9:
            case 10:
              if (state0 === 10 || state0 === 9 || state0 === 0 && $.random(0, 1, false) <= 0.01)
                switch (state0) {
                  case 0:
                    t1 = this.momentum.xVel;
                  case 9:
                    state0 = 0;
                    t1 = $.$eq(t1, 0);
                    t2 = this.momentum;
                  case 10:
                    if (state0 === 10 || state0 === 0 && !t1)
                      switch (state0) {
                        case 0:
                          t1 = t2.xVel;
                        case 10:
                          state0 = 0;
                          t2.xVel = $.$mul$n(t1, -1);
                      }
                    else
                      t2.xVel = 60;
                }
              t1 = this._y;
            case 11:
              state0 = 0;
            case 12:
              if (state0 === 12 || state0 === 0 && $.$gt$n(t1, $.get$rect$x(this.game).get$halfHeight() - 16))
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.yVel;
                  case 12:
                    state0 = 0;
                    t1.yVel = $.$mul$n(t2, -1);
                }
              t1 = this._y;
            case 13:
              state0 = 0;
            case 14:
              if (state0 === 14 || state0 === 0 && $.$lt$n(t1, -$.get$rect$x(this.game).get$halfHeight() + 16))
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.yVel;
                  case 14:
                    state0 = 0;
                    t1.yVel = $.$mul$n(t2, -1);
                }
              t1 = this._x;
            case 15:
              state0 = 0;
            case 16:
              if (state0 === 16 || state0 === 0 && $.$gt$n(t1, $.get$rect$x(this.game).get$halfWidth() - 16))
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.xVel;
                  case 16:
                    state0 = 0;
                    t1.xVel = $.$mul$n(t2, -1);
                }
              t1 = this._x;
            case 17:
              state0 = 0;
            case 18:
              if (state0 === 18 || state0 === 0 && $.$lt$n(t1, -$.get$rect$x(this.game).get$halfWidth() + 16))
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.xVel;
                  case 18:
                    state0 = 0;
                    t1.xVel = $.$mul$n(t2, -1);
                }
              t1 = this._x;
            case 19:
              state0 = 0;
            case 20:
              if (state0 === 20 || state0 === 0 && $.$gt$n(t1, this.game.getEnemyX$1("Boss")))
                switch (state0) {
                  case 0:
                  case 20:
                    if (state0 === 20 || state0 === 0 && $.random(0, 1, false) <= 0.05)
                      switch (state0) {
                        case 0:
                          t1 = this.momentum;
                          t2 = t1.xVel;
                        case 20:
                          state0 = 0;
                          t1.xVel = $.$mul$n(t2, -1);
                      }
                }
              t1 = this._x;
            case 21:
              state0 = 0;
            case 22:
              if (state0 === 22 || state0 === 0 && $.$lt$n(t1, this.game.getEnemyX$1("Boss")))
                switch (state0) {
                  case 0:
                  case 22:
                    if (state0 === 22 || state0 === 0 && $.random(0, 1, false) <= 0.05)
                      switch (state0) {
                        case 0:
                          t1 = this.momentum;
                          t2 = t1.xVel;
                        case 22:
                          state0 = 0;
                          t1.xVel = $.$mul$n(t2, -1);
                      }
                }
              t1 = this._y;
            case 23:
              state0 = 0;
            case 24:
              if (state0 === 24 || state0 === 0 && $.$gt$n(t1, this.game.getEnemyY$1("Boss")))
                switch (state0) {
                  case 0:
                  case 24:
                    if (state0 === 24 || state0 === 0 && $.random(0, 1, false) <= 0.05)
                      switch (state0) {
                        case 0:
                          t1 = this.momentum;
                          t2 = t1.yVel;
                        case 24:
                          state0 = 0;
                          t1.yVel = $.$mul$n(t2, -1);
                      }
                }
              t1 = this._y;
            case 25:
              state0 = 0;
            case 26:
              if (state0 === 26 || state0 === 0 && $.$lt$n(t1, this.game.getEnemyY$1("Boss")))
                switch (state0) {
                  case 0:
                  case 26:
                    if (state0 === 26 || state0 === 0 && $.random(0, 1, false) <= 0.05)
                      switch (state0) {
                        case 0:
                          t1 = this.momentum;
                          t2 = t1.yVel;
                        case 26:
                          state0 = 0;
                          t1.yVel = $.$mul$n(t2, -1);
                      }
                }
            case 27:
              if (state0 === 27 || state0 === 0 && $.random(0, 1, false) <= 0.05)
                switch (state0) {
                  case 0:
                    t1 = this.game;
                    t2 = this._x;
                    t3 = this._y;
                  case 27:
                    state0 = 0;
                    t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                }
          }
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
      case 70:
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 80:
      case 81:
      case 82:
      case 83:
      case 84:
      case 85:
      case 86:
      case 87:
      case 88:
      case 89:
      case 90:
      case 91:
      case 92:
      case 93:
      case 94:
      case 95:
      case 96:
        if (state0 === 96 || state0 === 95 || state0 === 94 || state0 === 93 || state0 === 92 || state0 === 91 || state0 === 90 || state0 === 89 || state0 === 88 || state0 === 87 || state0 === 86 || state0 === 85 || state0 === 84 || state0 === 83 || state0 === 82 || state0 === 81 || state0 === 80 || state0 === 79 || state0 === 78 || state0 === 77 || state0 === 76 || state0 === 75 || state0 === 74 || state0 === 73 || state0 === 72 || state0 === 71 || state0 === 70 || state0 === 69 || state0 === 68 || state0 === 67 || state0 === 66 || state0 === 65 || state0 === 64 || state0 === 63 || state0 === 62 || state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 37 || state0 === 36 || state0 === 35 || state0 === 34 || state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 0 && this.type === "Boss")
          switch (state0) {
            case 0:
            default:
              if (state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 0 && this.health <= 0)
                switch (state0) {
                  case 0:
                    t1 = this.game.get$Stats();
                    t2 = t1.$index(t1, "wins");
                  case 28:
                    state0 = 0;
                    t1.$indexSet(t1, "wins", $.$add$ns(t2, 1));
                    this.game.newExplosion$2(this._x, this._y);
                    this.game.removeEntitiesByFilter$1(new $.Enemy_update_closure());
                    this.game.removeEntitiesByFilter$1(new $.Enemy_update_closure0());
                    this.game.removeEntitiesByFilter$1(new $.Enemy_update_closure1());
                    this.game.removeEntitiesByGroup$1("levelEnd");
                    this.game.createLevelEnd$0();
                    $.set$state$x(this.game, 8);
                    this.game.set$waiting(1);
                    this.game.set$bonusCheck(3);
                    this.game.set$bonusStage(false);
                    t2 = this.game;
                    t2.set$level(t2.get$level() + 1);
                    this.bossHealth = this.bossHealth + 50;
                    t1 = this.game;
                    if (t1.get$level() >= t1.get$bonusCheck()) {
                      t1.set$bonusStage(true);
                      t1 = this.game;
                      t1.set$bonusCheck(t1.get$bonusCheck() + 3);
                    } else
                      t1.set$bonusStage(false);
                    t1 = this.game;
                    t2 = t1.get$score();
                  case 29:
                    state0 = 0;
                    t1.set$score($.$add$ns(t2, 10000 * t1.get$pointMultiplier() * this.bossDifficulty));
                    t1 = this.game.get$Stats();
                    t2 = t1.$index(t1, "killed");
                  case 30:
                    state0 = 0;
                    t1.$indexSet(t1, "killed", $.$add$ns(t2, 1));
                    t2 = this.game.get$Stats();
                    t1 = t2.$index(t2, "bossKills");
                  case 31:
                    state0 = 0;
                    t2.$indexSet(t2, "bossKills", $.$add$ns(t1, 1));
                    this.game.set$bonusStage(false);
                    this._removeFromGame = true;
                }
            case 32:
            case 33:
              if (state0 === 33 || state0 === 32 || state0 === 0 && $.random(0, 1, false) <= 0.01)
                switch (state0) {
                  case 0:
                    t1 = this.momentum.yVel;
                  case 32:
                    state0 = 0;
                    t1 = $.$eq(t1, 0);
                    t2 = this.momentum;
                  case 33:
                    if (state0 === 33 || state0 === 0 && !t1)
                      switch (state0) {
                        case 0:
                          t1 = t2.yVel;
                        case 33:
                          state0 = 0;
                          t2.yVel = $.$mul$n(t1, -1);
                      }
                    else
                      t2.yVel = 60;
                }
            case 34:
            case 35:
              if (state0 === 35 || state0 === 34 || state0 === 0 && $.random(0, 1, false) <= 0.01)
                switch (state0) {
                  case 0:
                    t1 = this.momentum.xVel;
                  case 34:
                    state0 = 0;
                    t1 = $.$eq(t1, 0);
                    t2 = this.momentum;
                  case 35:
                    if (state0 === 35 || state0 === 0 && !t1)
                      switch (state0) {
                        case 0:
                          t1 = t2.xVel;
                        case 35:
                          state0 = 0;
                          t2.xVel = $.$mul$n(t1, -1);
                      }
                    else
                      t2.xVel = 60;
                }
              t1 = this._y;
            case 36:
              state0 = 0;
            case 37:
              if (state0 === 37 || state0 === 0 && $.$gt$n(t1, $.get$rect$x(this.game).get$halfHeight() - 250) && $.random(0, 1, false) <= 0.07)
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.yVel;
                  case 37:
                    state0 = 0;
                    t1.yVel = $.$mul$n(t2, -1);
                }
              t1 = this._y;
            case 38:
              state0 = 0;
            case 39:
              if (state0 === 39 || state0 === 0 && $.$gt$n(t1, $.get$rect$x(this.game).get$halfHeight() - 115))
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.yVel;
                  case 39:
                    state0 = 0;
                    t1.yVel = $.$mul$n(t2, -1);
                }
              t1 = this._y;
            case 40:
              state0 = 0;
            case 41:
              if (state0 === 41 || state0 === 0 && $.$lt$n(t1, -$.get$rect$x(this.game).get$halfHeight() + 72))
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.yVel;
                  case 41:
                    state0 = 0;
                    t1.yVel = $.$mul$n(t2, -1);
                }
              t1 = this._x;
            case 42:
              state0 = 0;
            case 43:
              if (state0 === 43 || state0 === 0 && $.$gt$n(t1, $.get$rect$x(this.game).get$halfWidth() - 72))
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.xVel;
                  case 43:
                    state0 = 0;
                    t1.xVel = $.$mul$n(t2, -1);
                }
              t1 = this._x;
            case 44:
              state0 = 0;
            case 45:
              if (state0 === 45 || state0 === 0 && $.$lt$n(t1, -$.get$rect$x(this.game).get$halfWidth() + 72))
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.xVel;
                  case 45:
                    state0 = 0;
                    t1.xVel = $.$mul$n(t2, -1);
                }
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
              if (state0 === 69 || state0 === 68 || state0 === 67 || state0 === 66 || state0 === 65 || state0 === 64 || state0 === 63 || state0 === 62 || state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 0 && this.belowHalfHp)
                switch (state0) {
                  case 0:
                    t1 = this.bossDifficulty;
                  default:
                    if (state0 === 48 || state0 === 47 || state0 === 46 || state0 === 0 && t1 === 1)
                      switch (state0) {
                        case 0:
                        default:
                          if (state0 === 48 || state0 === 47 || state0 === 46 || state0 === 0 && $.random(0, 1, false) <= 0.1)
                            switch (state0) {
                              case 0:
                                t1 = this.game;
                                t2 = this._x;
                                t3 = this._y;
                              case 46:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                t3 = this.game;
                                t2 = this._x;
                                t1 = this._y;
                              case 47:
                                state0 = 0;
                                t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                t1 = this.game;
                                t2 = this._x;
                                t3 = this._y;
                              case 48:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                        default:
                          if (state0 === 51 || state0 === 50 || state0 === 49 || state0 === 0 && t1 === 2)
                            switch (state0) {
                              case 0:
                              default:
                                if (state0 === 51 || state0 === 50 || state0 === 49 || state0 === 0 && $.random(0, 1, false) <= 0.1)
                                  switch (state0) {
                                    case 0:
                                      t1 = this.game;
                                      t2 = this._x;
                                      t3 = this._y;
                                    case 49:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                      t3 = this.game;
                                      t2 = this._x;
                                      t1 = this._y;
                                    case 50:
                                      state0 = 0;
                                      t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                      t1 = this.game;
                                      t2 = this._x;
                                      t3 = this._y;
                                    case 51:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                  }
                            }
                          else
                            switch (state0) {
                              case 0:
                              default:
                                if (state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 0 && t1 === 3)
                                  switch (state0) {
                                    case 0:
                                    default:
                                      if (state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 0 && $.random(0, 1, false) <= 0.07)
                                        switch (state0) {
                                          case 0:
                                          default:
                                            if (state0 === 54 || state0 === 53 || state0 === 52 || state0 === 0 && $.random(0, 1, false) <= 0.1)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this._x;
                                                  t3 = this._y;
                                                case 52:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                  t3 = this.game;
                                                  t2 = this._x;
                                                  t1 = this._y;
                                                case 53:
                                                  state0 = 0;
                                                  t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                  t1 = this.game;
                                                  t2 = this._x;
                                                  t3 = this._y;
                                                case 54:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                              }
                                            else
                                              switch (state0) {
                                                case 0:
                                                default:
                                                  if (state0 === 56 || state0 === 55 || state0 === 0 && $.random(0, 1, false) <= 0.1)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this._x;
                                                        t3 = this._y;
                                                      case 55:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                        t3 = this.game;
                                                        t2 = this._x;
                                                        t1 = this._y;
                                                      case 56:
                                                        state0 = 0;
                                                        t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                    }
                                              }
                                        }
                                  }
                                else
                                  switch (state0) {
                                    case 0:
                                    default:
                                      if (state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 0 && t1 === 4)
                                        switch (state0) {
                                          case 0:
                                          default:
                                            if (state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 0 && $.random(0, 1, false) <= 0.1)
                                              switch (state0) {
                                                case 0:
                                                default:
                                                  if (state0 === 59 || state0 === 58 || state0 === 57 || state0 === 0 && $.random(0, 1, false) <= 0.3)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this._x;
                                                        t3 = this._y;
                                                      case 57:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                        t3 = this.game;
                                                        t2 = this._x;
                                                        t1 = this._y;
                                                      case 58:
                                                        state0 = 0;
                                                        t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                        t1 = this.game;
                                                        t2 = this._x;
                                                        t3 = this._y;
                                                      case 59:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                    }
                                                  else
                                                    switch (state0) {
                                                      case 0:
                                                      default:
                                                        if (state0 === 61 || state0 === 60 || state0 === 0 && $.random(0, 1, false) <= 0.3)
                                                          switch (state0) {
                                                            case 0:
                                                              t1 = this.game;
                                                              t2 = this._x;
                                                              t3 = this._y;
                                                            case 60:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                              t3 = this.game;
                                                              t2 = this._x;
                                                              t1 = this._y;
                                                            case 61:
                                                              state0 = 0;
                                                              t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                          }
                                                    }
                                              }
                                        }
                                      else
                                        switch (state0) {
                                          case 0:
                                          default:
                                            if (state0 === 69 || state0 === 68 || state0 === 67 || state0 === 66 || state0 === 65 || state0 === 64 || state0 === 63 || state0 === 62 || state0 === 0 && t1 === 5)
                                              switch (state0) {
                                                case 0:
                                                default:
                                                  if (state0 === 69 || state0 === 68 || state0 === 67 || state0 === 66 || state0 === 65 || state0 === 64 || state0 === 63 || state0 === 62 || state0 === 0 && $.random(0, 1, false) <= 0.2)
                                                    switch (state0) {
                                                      case 0:
                                                      default:
                                                        if (state0 === 64 || state0 === 63 || state0 === 62 || state0 === 0 && $.random(0, 1, false) <= 0.5)
                                                          switch (state0) {
                                                            case 0:
                                                              t1 = this.game;
                                                              t2 = this._x;
                                                              t3 = this._y;
                                                            case 62:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                              t3 = this.game;
                                                              t2 = this._x;
                                                              t1 = this._y;
                                                            case 63:
                                                              state0 = 0;
                                                              t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                              t1 = this.game;
                                                              t2 = this._x;
                                                              t3 = this._y;
                                                            case 64:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                          }
                                                        else
                                                          switch (state0) {
                                                            case 0:
                                                            default:
                                                              if (state0 === 66 || state0 === 65 || state0 === 0 && $.random(0, 1, false) <= 0.5)
                                                                switch (state0) {
                                                                  case 0:
                                                                    t1 = this.game;
                                                                    t2 = this._x;
                                                                    t3 = this._y;
                                                                  case 65:
                                                                    state0 = 0;
                                                                    t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                                    t3 = this.game;
                                                                    t2 = this._x;
                                                                    t1 = this._y;
                                                                  case 66:
                                                                    state0 = 0;
                                                                    t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                                }
                                                          }
                                                        t1 = this.game;
                                                        t2 = this._x;
                                                        t3 = this._y;
                                                      case 67:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
                                                        t3 = this.game;
                                                        t2 = this._x;
                                                        t1 = this._y;
                                                      case 68:
                                                        state0 = 0;
                                                        t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
                                                        t1 = this.game;
                                                        t2 = this._x;
                                                        t3 = this._y;
                                                      case 69:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
                                                    }
                                              }
                                        }
                                  }
                            }
                      }
                }
              else
                switch (state0) {
                  case 0:
                    t1 = this.bossDifficulty;
                  default:
                    if (state0 === 72 || state0 === 71 || state0 === 70 || state0 === 0 && t1 === 1)
                      switch (state0) {
                        case 0:
                        default:
                          if (state0 === 72 || state0 === 71 || state0 === 70 || state0 === 0 && $.random(0, 1, false) <= 0.01)
                            switch (state0) {
                              case 0:
                                t1 = this.game;
                                t2 = this._x;
                                t3 = this._y;
                              case 70:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
                                t3 = this.game;
                                t2 = this._x;
                                t1 = this._y;
                              case 71:
                                state0 = 0;
                                t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
                                t1 = this.game;
                                t2 = this._x;
                                t3 = this._y;
                              case 72:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                        default:
                          if (state0 === 75 || state0 === 74 || state0 === 73 || state0 === 0 && t1 === 2)
                            switch (state0) {
                              case 0:
                              default:
                                if (state0 === 75 || state0 === 74 || state0 === 73 || state0 === 0 && $.random(0, 1, false) <= 0.03)
                                  switch (state0) {
                                    case 0:
                                      t1 = this.game;
                                      t2 = this._x;
                                      t3 = this._y;
                                    case 73:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
                                      t3 = this.game;
                                      t2 = this._x;
                                      t1 = this._y;
                                    case 74:
                                      state0 = 0;
                                      t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
                                      t1 = this.game;
                                      t2 = this._x;
                                      t3 = this._y;
                                    case 75:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
                                  }
                            }
                          else
                            switch (state0) {
                              case 0:
                              default:
                                if (state0 === 80 || state0 === 79 || state0 === 78 || state0 === 77 || state0 === 76 || state0 === 0 && t1 === 3)
                                  switch (state0) {
                                    case 0:
                                    default:
                                      if (state0 === 80 || state0 === 79 || state0 === 78 || state0 === 77 || state0 === 76 || state0 === 0 && $.random(0, 1, false) <= 0.07)
                                        switch (state0) {
                                          case 0:
                                          default:
                                            if (state0 === 78 || state0 === 77 || state0 === 76 || state0 === 0 && $.random(0, 1, false) <= 0.1)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this._x;
                                                  t3 = this._y;
                                                case 76:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(42, 54, false), "super"));
                                                  t3 = this.game;
                                                  t2 = this._x;
                                                  t1 = this._y;
                                                case 77:
                                                  state0 = 0;
                                                  t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "left", $.random(350, 400, false), $.random(42, 54, false), "super"));
                                                  t1 = this.game;
                                                  t2 = this._x;
                                                  t3 = this._y;
                                                case 78:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "right", $.random(350, 400, false), $.random(42, 54, false), "super"));
                                              }
                                            else
                                              switch (state0) {
                                                case 0:
                                                default:
                                                  if (state0 === 80 || state0 === 79 || state0 === 0 && $.random(0, 1, false) <= 0.1)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this._x;
                                                        t3 = this._y;
                                                      case 79:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                        t3 = this.game;
                                                        t2 = this._x;
                                                        t1 = this._y;
                                                      case 80:
                                                        state0 = 0;
                                                        t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                    }
                                              }
                                        }
                                  }
                                else
                                  switch (state0) {
                                    case 0:
                                    default:
                                      if (state0 === 85 || state0 === 84 || state0 === 83 || state0 === 82 || state0 === 81 || state0 === 0 && t1 === 4)
                                        switch (state0) {
                                          case 0:
                                          default:
                                            if (state0 === 85 || state0 === 84 || state0 === 83 || state0 === 82 || state0 === 81 || state0 === 0 && $.random(0, 1, false) <= 0.1)
                                              switch (state0) {
                                                case 0:
                                                default:
                                                  if (state0 === 83 || state0 === 82 || state0 === 81 || state0 === 0 && $.random(0, 1, false) <= 0.3)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this._x;
                                                        t3 = this._y;
                                                      case 81:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(42, 54, false), "super"));
                                                        t3 = this.game;
                                                        t2 = this._x;
                                                        t1 = this._y;
                                                      case 82:
                                                        state0 = 0;
                                                        t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "left", $.random(350, 400, false), $.random(42, 54, false), "super"));
                                                        t1 = this.game;
                                                        t2 = this._x;
                                                        t3 = this._y;
                                                      case 83:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "right", $.random(350, 400, false), $.random(42, 54, false), "super"));
                                                    }
                                                  else
                                                    switch (state0) {
                                                      case 0:
                                                      default:
                                                        if (state0 === 85 || state0 === 84 || state0 === 0 && $.random(0, 1, false) <= 0.3)
                                                          switch (state0) {
                                                            case 0:
                                                              t1 = this.game;
                                                              t2 = this._x;
                                                              t3 = this._y;
                                                            case 84:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                              t3 = this.game;
                                                              t2 = this._x;
                                                              t1 = this._y;
                                                            case 85:
                                                              state0 = 0;
                                                              t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                          }
                                                    }
                                              }
                                        }
                                      else
                                        switch (state0) {
                                          case 0:
                                          default:
                                            if (state0 === 93 || state0 === 92 || state0 === 91 || state0 === 90 || state0 === 89 || state0 === 88 || state0 === 87 || state0 === 86 || state0 === 0 && t1 === 5)
                                              switch (state0) {
                                                case 0:
                                                default:
                                                  if (state0 === 90 || state0 === 89 || state0 === 88 || state0 === 87 || state0 === 86 || state0 === 0 && $.random(0, 1, false) <= 0.2)
                                                    switch (state0) {
                                                      case 0:
                                                      default:
                                                        if (state0 === 88 || state0 === 87 || state0 === 86 || state0 === 0 && $.random(0, 1, false) <= 0.5)
                                                          switch (state0) {
                                                            case 0:
                                                              t1 = this.game;
                                                              t2 = this._x;
                                                              t3 = this._y;
                                                            case 86:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(42, 54, false), "super"));
                                                              t3 = this.game;
                                                              t2 = this._x;
                                                              t1 = this._y;
                                                            case 87:
                                                              state0 = 0;
                                                              t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "left", $.random(350, 400, false), $.random(42, 54, false), "super"));
                                                              t1 = this.game;
                                                              t2 = this._x;
                                                              t3 = this._y;
                                                            case 88:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "right", $.random(350, 400, false), $.random(42, 54, false), "super"));
                                                          }
                                                        else
                                                          switch (state0) {
                                                            case 0:
                                                            default:
                                                              if (state0 === 90 || state0 === 89 || state0 === 0 && $.random(0, 1, false) <= 0.5)
                                                                switch (state0) {
                                                                  case 0:
                                                                    t1 = this.game;
                                                                    t2 = this._x;
                                                                    t3 = this._y;
                                                                  case 89:
                                                                    state0 = 0;
                                                                    t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                                    t3 = this.game;
                                                                    t2 = this._x;
                                                                    t1 = this._y;
                                                                  case 90:
                                                                    state0 = 0;
                                                                    t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "super"));
                                                                }
                                                          }
                                                    }
                                                  else
                                                    switch (state0) {
                                                      case 0:
                                                      default:
                                                        if (state0 === 93 || state0 === 92 || state0 === 91 || state0 === 0 && $.random(0, 1, false) <= 0.01)
                                                          switch (state0) {
                                                            case 0:
                                                              t1 = this.game;
                                                              t2 = this._x;
                                                              t3 = this._y;
                                                            case 91:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "super"));
                                                              t3 = this.game;
                                                              t2 = this._x;
                                                              t1 = this._y;
                                                            case 92:
                                                              state0 = 0;
                                                              t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "super"));
                                                              t1 = this.game;
                                                              t2 = this._x;
                                                              t3 = this._y;
                                                            case 93:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "super"));
                                                          }
                                                    }
                                              }
                                        }
                                  }
                            }
                      }
                }
              t1 = $.random(0, 1, false) <= 0.5;
              t2 = this.game;
              t3 = this._x;
            case 94:
              state0 = 0;
            case 95:
            case 96:
              if (state0 === 95 || state0 === 0 && t1)
                switch (state0) {
                  case 0:
                    t1 = this._y;
                  case 95:
                    state0 = 0;
                    t2.newBossDrone$2(t3, $.$sub$n(t1, 50));
                }
              else
                switch (state0) {
                  case 0:
                    t1 = $.$add$ns(t3, 72);
                    t3 = this._y;
                  case 96:
                    state0 = 0;
                    t2.newBossDrone$2(t1, $.$sub$n(t3, 50));
                }
          }
      case 97:
      case 98:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 111:
      case 112:
      case 113:
      case 114:
      case 115:
      case 116:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
        if (state0 === 121 || state0 === 120 || state0 === 119 || state0 === 118 || state0 === 117 || state0 === 116 || state0 === 115 || state0 === 114 || state0 === 113 || state0 === 112 || state0 === 111 || state0 === 110 || state0 === 109 || state0 === 108 || state0 === 107 || state0 === 106 || state0 === 105 || state0 === 104 || state0 === 103 || state0 === 102 || state0 === 101 || state0 === 100 || state0 === 99 || state0 === 98 || state0 === 97 || state0 === 0 && this.type === "MotherShip")
          switch (state0) {
            case 0:
              t1 = this._x;
            case 97:
              state0 = 0;
              if ($.$gt$n(t1, $.get$rect$x(this.game).get$halfWidth()))
                this._removeFromGame = true;
              this.momentum.xVel = 150;
            default:
              if (state0 === 100 || state0 === 99 || state0 === 98 || state0 === 0 && this.health <= 0)
                switch (state0) {
                  case 0:
                    t1 = this.game;
                    t2 = t1.get$score();
                  case 98:
                    state0 = 0;
                    t1.set$score($.$add$ns(t2, 1000 * t1.get$pointMultiplier() * this.difficulty));
                    t1 = this.game.get$Stats();
                    t2 = t1.$index(t1, "killed");
                  case 99:
                    state0 = 0;
                    t1.$indexSet(t1, "killed", $.$add$ns(t2, 1));
                    t2 = this.game.get$Stats();
                    t1 = t2.$index(t2, "motherKills");
                  case 100:
                    state0 = 0;
                    t2.$indexSet(t2, "motherKills", $.$add$ns(t1, 1));
                    if ($.random(0, 1, false) > 0.5)
                      this.game.newBulletPowerUp$2(this._x, this._y);
                    this.game.newMiniExplosion$2(this._x, this._y);
                    this._removeFromGame = true;
                }
              t1 = this.difficulty;
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
              if (state0 === 103 || state0 === 102 || state0 === 101 || state0 === 0 && t1 === 1)
                switch (state0) {
                  case 0:
                    t1 = this._x;
                  case 101:
                    state0 = 0;
                    t1 = $.$add$ns(t1, 16);
                    t2 = $.get$x$x(this.game.get$ship());
                    if (typeof t2 !== "number")
                      throw $.iae(t2);
                  case 102:
                    if (state0 === 102 || state0 === 0 && $.$ge$n(t1, t2))
                      switch (state0) {
                        case 0:
                          t1 = this._x;
                        case 102:
                          state0 = 0;
                          t1 = $.$sub$n(t1, 16);
                          t2 = $.get$x$x(this.game.get$ship());
                          if (typeof t2 !== "number")
                            throw $.iae(t2);
                          t2 = $.$le$n(t1, t2);
                          t1 = t2;
                      }
                    else
                      t1 = false;
                  case 103:
                    if (state0 === 103 || state0 === 0 && t1 && $.random(0, 1, false) <= 0.01)
                      switch (state0) {
                        case 0:
                          t1 = this.game;
                          t2 = this._x;
                          t3 = this._y;
                        case 103:
                          state0 = 0;
                          t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                      }
                }
              else
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 106 || state0 === 105 || state0 === 104 || state0 === 0 && t1 === 2)
                      switch (state0) {
                        case 0:
                          t1 = this._x;
                        case 104:
                          state0 = 0;
                          t1 = $.$add$ns(t1, 16);
                          t2 = $.get$x$x(this.game.get$ship());
                          if (typeof t2 !== "number")
                            throw $.iae(t2);
                        case 105:
                          if (state0 === 105 || state0 === 0 && $.$ge$n(t1, t2))
                            switch (state0) {
                              case 0:
                                t1 = this._x;
                              case 105:
                                state0 = 0;
                                t1 = $.$sub$n(t1, 16);
                                t2 = $.get$x$x(this.game.get$ship());
                                if (typeof t2 !== "number")
                                  throw $.iae(t2);
                                t2 = $.$le$n(t1, t2);
                                t1 = t2;
                            }
                          else
                            t1 = false;
                        case 106:
                          if (state0 === 106 || state0 === 0 && t1 && $.random(0, 1, false) <= 0.03)
                            switch (state0) {
                              case 0:
                                t1 = this.game;
                                t2 = this._x;
                                t3 = this._y;
                              case 106:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                        default:
                          if (state0 === 111 || state0 === 110 || state0 === 109 || state0 === 108 || state0 === 107 || state0 === 0 && t1 === 3)
                            switch (state0) {
                              case 0:
                                t1 = this._x;
                              case 107:
                                state0 = 0;
                                t1 = $.$add$ns(t1, 16);
                                t2 = $.get$x$x(this.game.get$ship());
                                if (typeof t2 !== "number")
                                  throw $.iae(t2);
                              case 108:
                                if (state0 === 108 || state0 === 0 && $.$ge$n(t1, t2))
                                  switch (state0) {
                                    case 0:
                                      t1 = this._x;
                                    case 108:
                                      state0 = 0;
                                      t1 = $.$sub$n(t1, 16);
                                      t2 = $.get$x$x(this.game.get$ship());
                                      if (typeof t2 !== "number")
                                        throw $.iae(t2);
                                      t2 = $.$le$n(t1, t2);
                                      t1 = t2;
                                  }
                                else
                                  t1 = false;
                              default:
                                if (state0 === 111 || state0 === 110 || state0 === 109 || state0 === 0 && t1 && $.random(0, 1, false) <= 0.07)
                                  switch (state0) {
                                    case 0:
                                      t1 = this.game;
                                      t2 = this._x;
                                      t3 = this._y;
                                    case 109:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                    default:
                                      if (state0 === 111 || state0 === 110 || state0 === 0 && $.random(0, 1, false) <= 0.1)
                                        switch (state0) {
                                          case 0:
                                            t1 = this.game;
                                            t2 = this._x;
                                            t3 = this._y;
                                          case 110:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                            t3 = this.game;
                                            t2 = this._x;
                                            t1 = this._y;
                                          case 111:
                                            state0 = 0;
                                            t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                        }
                                  }
                            }
                          else
                            switch (state0) {
                              case 0:
                              default:
                                if (state0 === 116 || state0 === 115 || state0 === 114 || state0 === 113 || state0 === 112 || state0 === 0 && t1 === 4)
                                  switch (state0) {
                                    case 0:
                                      t1 = this._x;
                                    case 112:
                                      state0 = 0;
                                      t1 = $.$add$ns(t1, 16);
                                      t2 = $.get$x$x(this.game.get$ship());
                                      if (typeof t2 !== "number")
                                        throw $.iae(t2);
                                    case 113:
                                      if (state0 === 113 || state0 === 0 && $.$ge$n(t1, t2))
                                        switch (state0) {
                                          case 0:
                                            t1 = this._x;
                                          case 113:
                                            state0 = 0;
                                            t1 = $.$sub$n(t1, 16);
                                            t2 = $.get$x$x(this.game.get$ship());
                                            if (typeof t2 !== "number")
                                              throw $.iae(t2);
                                            t2 = $.$le$n(t1, t2);
                                            t1 = t2;
                                        }
                                      else
                                        t1 = false;
                                    default:
                                      if (state0 === 116 || state0 === 115 || state0 === 114 || state0 === 0 && t1 && $.random(0, 1, false) <= 0.1)
                                        switch (state0) {
                                          case 0:
                                            t1 = this.game;
                                            t2 = this._x;
                                            t3 = this._y;
                                          case 114:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                          default:
                                            if (state0 === 116 || state0 === 115 || state0 === 0 && $.random(0, 1, false) <= 0.3)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this._x;
                                                  t3 = this._y;
                                                case 115:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                  t3 = this.game;
                                                  t2 = this._x;
                                                  t1 = this._y;
                                                case 116:
                                                  state0 = 0;
                                                  t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                              }
                                        }
                                  }
                                else
                                  switch (state0) {
                                    case 0:
                                    default:
                                      if (state0 === 121 || state0 === 120 || state0 === 119 || state0 === 118 || state0 === 117 || state0 === 0 && t1 === 5)
                                        switch (state0) {
                                          case 0:
                                            t1 = this._x;
                                          case 117:
                                            state0 = 0;
                                            t1 = $.$add$ns(t1, 16);
                                            t2 = $.get$x$x(this.game.get$ship());
                                            if (typeof t2 !== "number")
                                              throw $.iae(t2);
                                          case 118:
                                            if (state0 === 118 || state0 === 0 && $.$ge$n(t1, t2))
                                              switch (state0) {
                                                case 0:
                                                  t1 = this._x;
                                                case 118:
                                                  state0 = 0;
                                                  t1 = $.$sub$n(t1, 16);
                                                  t2 = $.get$x$x(this.game.get$ship());
                                                  if (typeof t2 !== "number")
                                                    throw $.iae(t2);
                                                  t2 = $.$le$n(t1, t2);
                                                  t1 = t2;
                                              }
                                            else
                                              t1 = false;
                                          default:
                                            if (state0 === 121 || state0 === 120 || state0 === 119 || state0 === 0 && t1 && $.random(0, 1, false) <= 0.2)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this._x;
                                                  t3 = this._y;
                                                case 119:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                default:
                                                  if (state0 === 121 || state0 === 120 || state0 === 0 && $.random(0, 1, false) <= 0.5)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this._x;
                                                        t3 = this._y;
                                                      case 120:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                        t3 = this.game;
                                                        t2 = this._x;
                                                        t1 = this._y;
                                                      case 121:
                                                        state0 = 0;
                                                        t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                    }
                                              }
                                        }
                                  }
                            }
                      }
                }
          }
      case 122:
      case 123:
      case 124:
      case 125:
      case 126:
      case 127:
      case 128:
      case 129:
      case 130:
      case 131:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 144:
      case 145:
      case 146:
      case 147:
      case 148:
      case 149:
      case 150:
      case 151:
      case 152:
      case 153:
      case 154:
      case 155:
      case 156:
      case 157:
        if (state0 === 157 || state0 === 156 || state0 === 155 || state0 === 154 || state0 === 153 || state0 === 152 || state0 === 151 || state0 === 150 || state0 === 149 || state0 === 148 || state0 === 147 || state0 === 146 || state0 === 145 || state0 === 144 || state0 === 143 || state0 === 142 || state0 === 141 || state0 === 140 || state0 === 139 || state0 === 138 || state0 === 137 || state0 === 136 || state0 === 135 || state0 === 134 || state0 === 133 || state0 === 132 || state0 === 131 || state0 === 130 || state0 === 129 || state0 === 128 || state0 === 127 || state0 === 126 || state0 === 125 || state0 === 124 || state0 === 123 || state0 === 122 || state0 === 0 && this.type === "Normal")
          switch (state0) {
            case 0:
              if ($.random(0, 1, false) < 0.0001 && !this.isFalling) {
                this.isFalling = true;
                this.momentum.yVel = 140;
              }
              $.IterableMixinWorkaround_forEach($.List_List$from(new $.WhereIterable(this.game.get$entities(), new $.Enemy_update_closure2(this)), true), new $.Enemy_update_closure3(this));
              t1 = this._y;
            case 122:
              state0 = 0;
              if ($.$gt$n(t1, $.get$rect$x(this.game).get$halfHeight() - 45)) {
                this.momentum.yVel = -140;
                this.isGoingBack = true;
              }
            default:
              if (state0 === 124 || state0 === 123 || state0 === 0 && this.isGoingBack)
                switch (state0) {
                  case 0:
                    this.game.matchCloneX$0();
                    t1 = this._x;
                  case 123:
                    state0 = 0;
                    t2 = this.targetX;
                  case 124:
                    state0 = 0;
                    t3 = $.getInterceptor$n(t1);
                    if (t3.$lt(t1, t2))
                      this.momentum.xVel = 100;
                    else {
                      t1 = t3.$gt(t1, t2);
                      t2 = this.momentum;
                      if (t1)
                        t2.xVel = -100;
                      else
                        t2.xVel = 0;
                    }
                }
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
              if (state0 === 129 || state0 === 128 || state0 === 127 || state0 === 126 || state0 === 125 || state0 === 0 && this.isFalling && !this.isGoingBack)
                switch (state0) {
                  case 0:
                    if ($.random(0, 1, false) < 0.1)
                      this.momentum.xVel = $.random(-140, 140, false);
                    if ($.random(0, 1, false) < 0.2)
                      this.momentum.yVel = $.random(0, 200, false);
                    else if ($.random(0, 1, false) < 0.05)
                      this.momentum.yVel = $.random(-140, 0, false);
                    t1 = this._y;
                  case 125:
                    state0 = 0;
                  case 126:
                    if (state0 === 126 || state0 === 0 && $.$lt$n(t1, -($.get$rect$x(this.game).get$halfHeight() - 60)))
                      switch (state0) {
                        case 0:
                          t1 = this.momentum;
                          t2 = t1.yVel;
                        case 126:
                          state0 = 0;
                          t1.yVel = $.$mul$n(t2, -1);
                      }
                    t1 = this._x;
                  case 127:
                    state0 = 0;
                  case 128:
                    if (state0 === 128 || state0 === 0 && !$.$gt$n($.$add$ns(t1, 16), $.get$rect$x(this.game).get$halfWidth() - 60))
                      switch (state0) {
                        case 0:
                          t1 = this._x;
                        case 128:
                          state0 = 0;
                          t1 = $.$lt$n($.$sub$n(t1, 16), -$.get$rect$x(this.game).get$halfWidth() + 60);
                      }
                    else
                      t1 = true;
                  case 129:
                    if (state0 === 129 || state0 === 0 && t1)
                      switch (state0) {
                        case 0:
                          t1 = this.momentum;
                          t2 = t1.xVel;
                        case 129:
                          state0 = 0;
                          t1.xVel = $.$mul$n(t2, -1);
                      }
                }
              t1 = this._y;
            case 130:
              state0 = 0;
              t2 = this.startY;
            case 131:
              state0 = 0;
              if ($.$lt$n(t1, t2) && this.isGoingBack) {
                this._y = t2;
                this.updateBox$0();
                this.momentum.yVel = 0;
                t1 = new $.WhereIterable(this.game.get$entities(), new $.Enemy_update_closure4());
                t1.forEach$1(t1, new $.Enemy_update_closure5(this));
                this.isFalling = false;
                this.isGoingBack = false;
              }
            case 132:
            case 133:
            case 134:
              if (state0 === 134 || state0 === 133 || state0 === 132 || state0 === 0 && this.health <= 0)
                switch (state0) {
                  case 0:
                    t1 = this.game;
                    t2 = t1.get$score();
                  case 132:
                    state0 = 0;
                    t1.set$score($.$add$ns(t2, 100 * t1.get$pointMultiplier() * this.difficulty));
                    t1 = this.game;
                    t1.set$enemyAmount(t1.get$enemyAmount() - 1);
                    t1 = this.game.get$Stats();
                    t2 = t1.$index(t1, "killed");
                  case 133:
                    state0 = 0;
                    t1.$indexSet(t1, "killed", $.$add$ns(t2, 1));
                    t2 = this.game.get$Stats();
                    t1 = t2.$index(t2, "normalKills");
                  case 134:
                    state0 = 0;
                    t2.$indexSet(t2, "normalKills", $.$add$ns(t1, 1));
                    if ($.random(0, 1, false) > 0.5)
                      this.game.newBulletPowerUp$2(this._x, this._y);
                    this.game.newMiniExplosion$2(this._x, this._y);
                    t1 = new $.WhereIterable(this.game.get$entities(), new $.Enemy_update_closure6());
                    t1.forEach$1(t1, new $.Enemy_update_closure7(this));
                    this._removeFromGame = true;
                }
              t1 = this._x;
            case 135:
              state0 = 0;
            case 136:
              if (state0 === 136 || state0 === 0 && !$.$gt$n($.$add$ns(t1, 16), $.get$rect$x(this.game).get$halfWidth()))
                switch (state0) {
                  case 0:
                    t1 = this._x;
                  case 136:
                    state0 = 0;
                    t1 = $.$lt$n($.$sub$n(t1, 16), -$.get$rect$x(this.game).get$halfWidth()) && !this.isFalling;
                }
              else
                t1 = true;
              if (t1)
                this.game.switchDirection$0();
              t1 = this.difficulty;
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
              if (state0 === 139 || state0 === 138 || state0 === 137 || state0 === 0 && t1 === 1)
                switch (state0) {
                  case 0:
                    t1 = this._x;
                  case 137:
                    state0 = 0;
                    t1 = $.$add$ns(t1, 16);
                    t2 = $.get$x$x(this.game.get$ship());
                    if (typeof t2 !== "number")
                      throw $.iae(t2);
                  case 138:
                    if (state0 === 138 || state0 === 0 && $.$ge$n(t1, t2))
                      switch (state0) {
                        case 0:
                          t1 = this._x;
                        case 138:
                          state0 = 0;
                          t1 = $.$sub$n(t1, 16);
                          t2 = $.get$x$x(this.game.get$ship());
                          if (typeof t2 !== "number")
                            throw $.iae(t2);
                          t2 = $.$le$n(t1, t2);
                          t1 = t2;
                      }
                    else
                      t1 = false;
                  case 139:
                    if (state0 === 139 || state0 === 0 && t1 && $.random(0, 1, false) <= 0.01)
                      switch (state0) {
                        case 0:
                          t1 = this.game;
                          t2 = this._x;
                          t3 = this._y;
                        case 139:
                          state0 = 0;
                          t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                      }
                }
              else
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 142 || state0 === 141 || state0 === 140 || state0 === 0 && t1 === 2)
                      switch (state0) {
                        case 0:
                          t1 = this._x;
                        case 140:
                          state0 = 0;
                          t1 = $.$add$ns(t1, 16);
                          t2 = $.get$x$x(this.game.get$ship());
                          if (typeof t2 !== "number")
                            throw $.iae(t2);
                        case 141:
                          if (state0 === 141 || state0 === 0 && $.$ge$n(t1, t2))
                            switch (state0) {
                              case 0:
                                t1 = this._x;
                              case 141:
                                state0 = 0;
                                t1 = $.$sub$n(t1, 16);
                                t2 = $.get$x$x(this.game.get$ship());
                                if (typeof t2 !== "number")
                                  throw $.iae(t2);
                                t2 = $.$le$n(t1, t2);
                                t1 = t2;
                            }
                          else
                            t1 = false;
                        case 142:
                          if (state0 === 142 || state0 === 0 && t1 && $.random(0, 1, false) <= 0.03)
                            switch (state0) {
                              case 0:
                                t1 = this.game;
                                t2 = this._x;
                                t3 = this._y;
                              case 142:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                        default:
                          if (state0 === 147 || state0 === 146 || state0 === 145 || state0 === 144 || state0 === 143 || state0 === 0 && t1 === 3)
                            switch (state0) {
                              case 0:
                                t1 = this._x;
                              case 143:
                                state0 = 0;
                                t1 = $.$add$ns(t1, 16);
                                t2 = $.get$x$x(this.game.get$ship());
                                if (typeof t2 !== "number")
                                  throw $.iae(t2);
                              case 144:
                                if (state0 === 144 || state0 === 0 && $.$ge$n(t1, t2))
                                  switch (state0) {
                                    case 0:
                                      t1 = this._x;
                                    case 144:
                                      state0 = 0;
                                      t1 = $.$sub$n(t1, 16);
                                      t2 = $.get$x$x(this.game.get$ship());
                                      if (typeof t2 !== "number")
                                        throw $.iae(t2);
                                      t2 = $.$le$n(t1, t2);
                                      t1 = t2;
                                  }
                                else
                                  t1 = false;
                              default:
                                if (state0 === 147 || state0 === 146 || state0 === 145 || state0 === 0 && t1 && $.random(0, 1, false) <= 0.07)
                                  switch (state0) {
                                    case 0:
                                      t1 = this.game;
                                      t2 = this._x;
                                      t3 = this._y;
                                    case 145:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                    default:
                                      if (state0 === 147 || state0 === 146 || state0 === 0 && $.random(0, 1, false) <= 0.1)
                                        switch (state0) {
                                          case 0:
                                            t1 = this.game;
                                            t2 = this._x;
                                            t3 = this._y;
                                          case 146:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                            t3 = this.game;
                                            t2 = this._x;
                                            t1 = this._y;
                                          case 147:
                                            state0 = 0;
                                            t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                        }
                                  }
                            }
                          else
                            switch (state0) {
                              case 0:
                              default:
                                if (state0 === 152 || state0 === 151 || state0 === 150 || state0 === 149 || state0 === 148 || state0 === 0 && t1 === 4)
                                  switch (state0) {
                                    case 0:
                                      t1 = this._x;
                                    case 148:
                                      state0 = 0;
                                      t1 = $.$add$ns(t1, 16);
                                      t2 = $.get$x$x(this.game.get$ship());
                                      if (typeof t2 !== "number")
                                        throw $.iae(t2);
                                    case 149:
                                      if (state0 === 149 || state0 === 0 && $.$ge$n(t1, t2))
                                        switch (state0) {
                                          case 0:
                                            t1 = this._x;
                                          case 149:
                                            state0 = 0;
                                            t1 = $.$sub$n(t1, 16);
                                            t2 = $.get$x$x(this.game.get$ship());
                                            if (typeof t2 !== "number")
                                              throw $.iae(t2);
                                            t2 = $.$le$n(t1, t2);
                                            t1 = t2;
                                        }
                                      else
                                        t1 = false;
                                    default:
                                      if (state0 === 152 || state0 === 151 || state0 === 150 || state0 === 0 && t1 && $.random(0, 1, false) <= 0.1)
                                        switch (state0) {
                                          case 0:
                                            t1 = this.game;
                                            t2 = this._x;
                                            t3 = this._y;
                                          case 150:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                          default:
                                            if (state0 === 152 || state0 === 151 || state0 === 0 && $.random(0, 1, false) <= 0.3)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this._x;
                                                  t3 = this._y;
                                                case 151:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                  t3 = this.game;
                                                  t2 = this._x;
                                                  t1 = this._y;
                                                case 152:
                                                  state0 = 0;
                                                  t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                              }
                                        }
                                  }
                                else
                                  switch (state0) {
                                    case 0:
                                    default:
                                      if (state0 === 157 || state0 === 156 || state0 === 155 || state0 === 154 || state0 === 153 || state0 === 0 && t1 === 5)
                                        switch (state0) {
                                          case 0:
                                            t1 = this._x;
                                          case 153:
                                            state0 = 0;
                                            t1 = $.$add$ns(t1, 16);
                                            t2 = $.get$x$x(this.game.get$ship());
                                            if (typeof t2 !== "number")
                                              throw $.iae(t2);
                                          case 154:
                                            if (state0 === 154 || state0 === 0 && $.$ge$n(t1, t2))
                                              switch (state0) {
                                                case 0:
                                                  t1 = this._x;
                                                case 154:
                                                  state0 = 0;
                                                  t1 = $.$sub$n(t1, 16);
                                                  t2 = $.get$x$x(this.game.get$ship());
                                                  if (typeof t2 !== "number")
                                                    throw $.iae(t2);
                                                  t2 = $.$le$n(t1, t2);
                                                  t1 = t2;
                                              }
                                            else
                                              t1 = false;
                                          default:
                                            if (state0 === 157 || state0 === 156 || state0 === 155 || state0 === 0 && t1 && $.random(0, 1, false) <= 0.2)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this._x;
                                                  t3 = this._y;
                                                case 155:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                default:
                                                  if (state0 === 157 || state0 === 156 || state0 === 0 && $.random(0, 1, false) <= 0.5)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this._x;
                                                        t3 = this._y;
                                                      case 156:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$add$ns(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                        t3 = this.game;
                                                        t2 = this._x;
                                                        t1 = this._y;
                                                      case 157:
                                                        state0 = 0;
                                                        t3.addEntity$1($.Bullet$(t3, t2, $.$add$ns(t1, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                    }
                                              }
                                        }
                                  }
                            }
                      }
                }
          }
        $.GameEntity.prototype.update$0.call(this);
    }
  },
  Enemy$5: function(game, x, y, diff, Type) {
    var rType, t1;
    rType = $.random(0, 1, false);
    this.type = Type;
    this.difficulty = diff;
    this.opacity = 0;
    this.enemyType = $.random(0, 1, false);
    if (this.type === "Normal") {
      this.color = "255, 0, 255";
      this.momentum.xVel = 80;
      t1 = this.difficulty;
      if (t1 <= 2)
        this.health = t1;
    }
    if (this.type === "MotherShip") {
      this.color = "0, 0, 255";
      this.momentum.xVel = 40;
      this.health = 3;
      if (rType < 0.25)
        this.motherShipType = 1;
      else if (rType < 0.5)
        this.motherShipType = 2;
      else if (rType < 0.75)
        this.motherShipType = 3;
      else if (rType < 1)
        this.motherShipType = 4;
      this._width = 42;
      this.updateBox$0();
      this._height = 42;
      this.updateBox$0();
    }
    if (this.type === "Boss") {
      this.momentum.xVel = 0;
      this._width = 72;
      this.updateBox$0();
      this._height = 72;
      this.updateBox$0();
      this.health = this.bossHealth;
    }
    if (this.type === "Drone") {
      this.momentum.xVel = 80;
      this._width = 16;
      this.updateBox$0();
      this._height = 16;
      this.updateBox$0();
      this.health = this.bossDifficulty;
    }
    this.maxHp = this.health;
    this.bossMaxHp = this.bossHealth;
    this.bossDifficulty = game.level / 3;
    this.startY = y;
  },
  $isEnemy: true,
  static: {
Enemy$: function(game, x, y, diff, Type) {
  var t1 = new $.Enemy(null, 0, 1, 1, 1, 100, 1, 100, false, false, false, false, 0, 1, 1, 0, 0, 1, null, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 36, 36, null, null);
  t1.Enemy$5(game, x, y, diff, Type);
  return t1;
}}

},

Enemy_update_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isPowerUp;
  }
},

Enemy_update_closure0: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isBullet;
  }
},

Enemy_update_closure1: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

Enemy_update_closure2: {"": "Closure;this_0",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isShip && this.this_0.collidesWith$1(e);
  }
},

Enemy_update_closure3: {"": "Closure;this_1",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = this.this_1;
    t2 = t1.get$game().get$Cheats();
    if (!$.$eq(t2.$index(t2, "invincibility"), 1)) {
      t2 = t1.get$game().get$Stats();
      t2.$indexSet(t2, "deaths", $.$add$ns(t2.$index(t2, "deaths"), 1));
      t2 = t1.get$game().get$ship();
      t2.set$lives($.$sub$n(t2.get$lives(), 1));
    }
    t2 = t1.get$game().get$_shipHitEvent()._controller;
    t3 = $.get$EventArgs_empty();
    if (t2._state >= 4)
      $.throwExpression(t2._badEventState$0());
    t2._liblib1$_add$1(t3);
    t2 = t1.get$game().get$Cheats();
    if ($.$eq(t2.$index(t2, "spreadshot"), 2))
      t1.get$game().resetPowerups$0();
    t1.get$game().removeBullets$0();
    t2 = t1.get$game().get$ship();
    t2.set$bullet(t2.get$maxBullet());
    t2 = t1.get$game().get$Cheats();
    t2.$indexSet(t2, "invincibility", 1);
    t2 = new $._ZoneTimer($.get$_Zone__current(), new $.Enemy_update__closure3(t1), null);
    t3 = t2._zone;
    t3._openCallbacks = t3._openCallbacks + 1;
    t2._timer = $._createTimer(C.Duration_3000000, t2.get$_run());
    t1.set$_invincibleTimer(t2);
  }
},

Enemy_update__closure3: {"": "Closure;this_2",
  call$0: function() {
    var t1 = this.this_2.get$game().get$Cheats();
    t1.$indexSet(t1, "invincibility", 0);
  }
},

Enemy_update_closure4: {"": "Closure;",
  call$1: function(c) {
    var t1 = $.getInterceptor(c);
    return typeof c === "object" && c !== null && !!t1.$isClone;
  }
},

Enemy_update_closure5: {"": "Closure;this_3",
  call$1: function(c) {
    var t1 = new $.WhereIterable(this.this_3.get$game().get$entities(), new $.Enemy_update__closure1());
    t1.forEach$1(t1, new $.Enemy_update__closure2(c));
  }
},

Enemy_update__closure1: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

Enemy_update__closure2: {"": "Closure;c_4",
  call$1: function(e) {
    var t1 = this.c_4;
    if (t1.get$Id() === e.get$cloneNum())
      e.get$momentum().xVel = t1.get$momentum().xVel;
  }
},

Enemy_update_closure6: {"": "Closure;",
  call$1: function(c) {
    var t1 = $.getInterceptor(c);
    return typeof c === "object" && c !== null && !!t1.$isClone;
  }
},

Enemy_update_closure7: {"": "Closure;this_5",
  call$1: function(c) {
    var t1 = new $.WhereIterable(this.this_5.get$game().get$entities(), new $.Enemy_update__closure());
    t1.forEach$1(t1, new $.Enemy_update__closure0(c));
  }
},

Enemy_update__closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

Enemy_update__closure0: {"": "Closure;c_6",
  call$1: function(e) {
    var t1 = this.c_6;
    if (t1.get$Id() === e.get$cloneNum())
      t1.removeFromGame$0();
  }
},

Particles: {"": "GameEntity;_deleteTimer,_waiting@,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2, milliseconds;
    t1 = $.get$state$x(this.game);
    if (typeof t1 !== "number")
      return this.update$0$bailout1(1, t1);
    if (t1 === 2)
      return;
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.Particles_update_closure(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t2 = t1.get$_run();
    milliseconds = C.JSNumber_methods.$tdiv(C.Duration_1000000._duration, 1000);
    t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
    this._deleteTimer = t1;
    t1 = this._y;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(2, t1);
    if (t1 > $.get$rect$x(this.game).get$halfHeight())
      this._removeFromGame = true;
    t1 = this._y;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(3, t1);
    if (t1 < -$.get$rect$x(this.game).get$halfHeight())
      this._removeFromGame = true;
    t1 = this._x;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(4, t1);
    if (t1 > $.get$rect$x(this.game).get$halfWidth())
      this._removeFromGame = true;
    t1 = this._x;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(5, t1);
    if (t1 < -$.get$rect$x(this.game).get$halfWidth())
      this._removeFromGame = true;
    $.GameEntity.prototype.update$0.call(this);
  },
  update$0$bailout1: function(state0, t1) {
    switch (state0) {
      case 0:
        t1 = $.get$state$x(this.game);
      case 1:
        state0 = 0;
        if ($.$eq(t1, 2))
          return;
        t1 = new $._ZoneTimer($.get$_Zone__current(), new $.Particles_update_closure(this), null);
        t2 = t1._zone;
        t2._openCallbacks = t2._openCallbacks + 1;
        t2 = t1.get$_run();
        milliseconds = C.JSNumber_methods.$tdiv(C.Duration_1000000._duration, 1000);
        t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
        this._deleteTimer = t1;
        t1 = this._y;
      case 2:
        state0 = 0;
        if ($.$gt$n(t1, $.get$rect$x(this.game).get$halfHeight()))
          this._removeFromGame = true;
        t1 = this._y;
      case 3:
        state0 = 0;
        if ($.$lt$n(t1, -$.get$rect$x(this.game).get$halfHeight()))
          this._removeFromGame = true;
        t1 = this._x;
      case 4:
        state0 = 0;
        if ($.$gt$n(t1, $.get$rect$x(this.game).get$halfWidth()))
          this._removeFromGame = true;
        t1 = this._x;
      case 5:
        var t2, milliseconds;
        state0 = 0;
        if ($.$lt$n(t1, -$.get$rect$x(this.game).get$halfWidth()))
          this._removeFromGame = true;
        $.GameEntity.prototype.update$0.call(this);
    }
  },
  Particles$8: function(game, x, y, h, w, col, xVel, yVel) {
    this.opacity = $.random(0.5, 1, false);
    if (col === 1)
      this.color = "200, 0, 50";
    if (col === 2)
      this.color = "100, 255, 50";
    if (col === 3)
      this.color = "20, 100, 200";
    if (col === 4)
      this.color = "105, 255, 100";
    if (col === 5)
      this.color = "200, 255, 50";
    if (col === 6)
      this.color = "255, 100, 150";
    if (col === 7)
      this.color = "255, 150, 50";
    this.momentum.yVel = yVel;
    this.momentum.xVel = xVel;
  },
  static: {
Particles$: function(game, x, y, h, w, col, xVel, yVel) {
  var t1 = new $.Particles(null, 0, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, h, w, null, null);
  t1.Particles$8(game, x, y, h, w, col, xVel, yVel);
  return t1;
}}

},

Particles_update_closure: {"": "Closure;this_0",
  call$0: function() {
    this.this_0.set$_removeFromGame(true);
    return;
  }
},

PowerUp: {"": "GameEntity;type>,_deactivate,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2, milliseconds, t3, milliseconds0;
    if ($.$eq($.get$state$x(this.game), 2) || $.$eq($.get$state$x(this.game), 4) || $.$eq($.get$state$x(this.game), 1))
      return;
    if (this.type === "bulletPower") {
      t1 = $.$gt$n($.get$x$x(this.game.get$ship()), this._x);
      t2 = this.momentum;
      if (t1)
        t2.xVel = 40;
      else
        t2.xVel = -40;
    }
    if (this.collidesWith$1(this.game.get$ship())) {
      switch (this.type) {
        case "SpiralShot":
          t1 = this.game.get$ship();
          if (t1.get$spiralShot())
            t1.set$spiralShot(false);
          t1 = this.game.get$ship();
          if (!t1.get$spiralShot())
            t1.set$spiralShot(true);
          t1 = this.game.get$Stats();
          t1.$indexSet(t1, "powerups", $.$add$ns(t1.$index(t1, "powerups"), 1));
          t1 = this.game;
          t1.set$score($.$add$ns(t1.get$score(), 300 * t1.get$pointMultiplier()));
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_1000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure0(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_2000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure1(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_3000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure2(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_4000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure3(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_5000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure4(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_6000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure5(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_7000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure6(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_8000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure7(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_9000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure8(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_10000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure9(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_11000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure10(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_12000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure11(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_13000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure12(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_14000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure13(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_15000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          break;
        case "Multiplier":
          t1 = this.game;
          t1.set$pointMultiplier(t1.get$pointMultiplier() * 2);
          t1 = this.game.get$Stats();
          t1.$indexSet(t1, "powerups", $.$add$ns(t1.$index(t1, "powerups"), 1));
          t1 = this.game;
          t1.set$score($.$add$ns(t1.get$score(), 300 * t1.get$pointMultiplier()));
          break;
        case "BulletIncrease":
          t1 = this.game.get$ship();
          t1.set$maxBullet(t1.get$maxBullet() + 1);
          t1 = this.game.get$Stats();
          t1.$indexSet(t1, "powerups", $.$add$ns(t1.$index(t1, "powerups"), 1));
          t1 = this.game;
          t1.set$score($.$add$ns(t1.get$score(), 300 * t1.get$pointMultiplier()));
          break;
        case "ExtraLife":
          t1 = this.game.get$ship();
          t1.set$lives($.$add$ns(t1.get$lives(), 1));
          t1 = this.game.get$Stats();
          t1.$indexSet(t1, "powerups", $.$add$ns(t1.$index(t1, "powerups"), 1));
          t1 = this.game;
          t1.set$score($.$add$ns(t1.get$score(), 300 * t1.get$pointMultiplier()));
          break;
        case "bulletPower":
          t1 = this.game;
          t1.set$score($.$add$ns(t1.get$score(), 100 * t1.get$pointMultiplier()));
          t1 = this.game.get$ship();
          t1.set$chargedLevel(t1.get$chargedLevel() + 1);
          break;
        case "invincible":
          t1 = this.game;
          t1.set$score($.$add$ns(t1.get$score(), 300 * t1.get$pointMultiplier()));
          t1 = this.game.get$Cheats();
          if (!$.$eq(t1.$index(t1, "invincibility"), 1)) {
            t1 = this.game.get$Cheats();
            t1.$indexSet(t1, "invincibility", 1);
            t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure14(this), null);
            t2 = t1._zone;
            t2._openCallbacks = t2._openCallbacks + 1;
            t2 = t1.get$_run();
            milliseconds = C.JSNumber_methods.$tdiv(C.Duration_5000000._duration, 1000);
            t3 = milliseconds < 0;
            t1._timer = $.TimerImpl$(t3 ? 0 : milliseconds, t2);
            this._deactivate = t1;
            t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure15(this), null);
            t2 = t1._zone;
            t2._openCallbacks = t2._openCallbacks + 1;
            t2 = t1.get$_run();
            milliseconds0 = C.JSNumber_methods.$tdiv(C.Duration_1000000._duration, 1000);
            t1._timer = $.TimerImpl$(milliseconds0 < 0 ? 0 : milliseconds0, t2);
            t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure16(this), null);
            t2 = t1._zone;
            t2._openCallbacks = t2._openCallbacks + 1;
            t2 = t1.get$_run();
            milliseconds0 = C.JSNumber_methods.$tdiv(C.Duration_2000000._duration, 1000);
            t1._timer = $.TimerImpl$(milliseconds0 < 0 ? 0 : milliseconds0, t2);
            t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure17(this), null);
            t2 = t1._zone;
            t2._openCallbacks = t2._openCallbacks + 1;
            t2 = t1.get$_run();
            milliseconds0 = C.JSNumber_methods.$tdiv(C.Duration_3000000._duration, 1000);
            t1._timer = $.TimerImpl$(milliseconds0 < 0 ? 0 : milliseconds0, t2);
            t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure18(this), null);
            t2 = t1._zone;
            t2._openCallbacks = t2._openCallbacks + 1;
            t2 = t1.get$_run();
            milliseconds0 = C.JSNumber_methods.$tdiv(C.Duration_4000000._duration, 1000);
            t1._timer = $.TimerImpl$(milliseconds0 < 0 ? 0 : milliseconds0, t2);
            t1 = new $._ZoneTimer($.get$_Zone__current(), new $.PowerUp_update_closure19(this), null);
            t2 = t1._zone;
            t2._openCallbacks = t2._openCallbacks + 1;
            t2 = t1.get$_run();
            t1._timer = $.TimerImpl$(t3 ? 0 : milliseconds, t2);
          }
          break;
        case "timeUp":
          t1 = this.game.get$timer();
          t1.gameTime = $.$add$ns(t1.gameTime, 15);
          break;
        case "teleporter":
          t1 = new $.WhereIterable(this.game.get$entities(), new $.PowerUp_update_closure20());
          t1.forEach$1(t1, new $.PowerUp_update_closure21(this));
          break;
        default:
      }
      this._removeFromGame = true;
    }
    if ($.$gt$n(this._y, $.get$rect$x(this.game).get$halfHeight() + 20))
      this._removeFromGame = true;
    $.GameEntity.prototype.update$0.call(this);
  },
  PowerUp$4: function(game, x, y, Type) {
    var rType, rColor;
    rType = $.random(0, 1, false);
    if (rType < game.teleporter) {
      this.color = "0, 255, 0";
      this.type = "teleporter";
    } else if (rType < game.spiral) {
      this.color = "0, 255, 0";
      this.type = "SpiralShot";
    } else if (rType < game.multi) {
      this.color = "255, 0, 0";
      this.type = "Multiplier";
    } else if (rType < game.bullet) {
      this.color = "0, 0, 255";
      this.type = "BulletIncrease";
    } else if (rType < game.invincible) {
      this.color = "0, 255, 255";
      this.type = "invincible";
    } else if (rType < game.time) {
      this.color = "0, 255, 255";
      this.type = "timeUp";
    } else if (rType < game.life) {
      this.color = "255, 255, 0";
      this.type = "ExtraLife";
    }
    if (Type != null) {
      this.type = Type;
      if (this.type === "bulletPower") {
        rColor = $.random(0, 1, false);
        if (rColor < 0.2)
          this.color = "0, 255, 0";
        else if (rColor < 0.4)
          this.color = "0, 255, 255";
        else if (rColor < 0.6)
          this.color = "0, 0, 255";
        else if (rColor < 0.1)
          this.color = "255, 255, 0";
        this._width = 12;
        this.updateBox$0();
        this._height = 12;
        this.updateBox$0();
      }
    }
    this.opacity = 0;
    this.momentum.yVel = 65;
  },
  $isPowerUp: true,
  static: {
PowerUp$: function(game, x, y, Type) {
  var t1 = new $.PowerUp(null, null, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 36, 36, null, null);
  t1.PowerUp$4(game, x, y, Type);
  return t1;
}}

},

PowerUp_update_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2;
    t1 = this.this_0.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure0: {"": "Closure;this_1",
  call$0: function() {
    var t1, t2;
    t1 = this.this_1.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure1: {"": "Closure;this_2",
  call$0: function() {
    var t1, t2;
    t1 = this.this_2.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure2: {"": "Closure;this_3",
  call$0: function() {
    var t1, t2;
    t1 = this.this_3.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure3: {"": "Closure;this_4",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure4: {"": "Closure;this_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_5.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure5: {"": "Closure;this_6",
  call$0: function() {
    var t1, t2;
    t1 = this.this_6.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure6: {"": "Closure;this_7",
  call$0: function() {
    var t1, t2;
    t1 = this.this_7.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure7: {"": "Closure;this_8",
  call$0: function() {
    var t1, t2;
    t1 = this.this_8.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure8: {"": "Closure;this_9",
  call$0: function() {
    var t1, t2;
    t1 = this.this_9.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure9: {"": "Closure;this_10",
  call$0: function() {
    var t1, t2;
    t1 = this.this_10.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure10: {"": "Closure;this_11",
  call$0: function() {
    var t1, t2;
    t1 = this.this_11.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure11: {"": "Closure;this_12",
  call$0: function() {
    var t1, t2;
    t1 = this.this_12.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure12: {"": "Closure;this_13",
  call$0: function() {
    var t1, t2;
    t1 = this.this_13.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure13: {"": "Closure;this_14",
  call$0: function() {
    var t1, t2;
    t1 = this.this_14.get$game();
    t2 = t1.get$rendererTemp2();
    t1.set$rendererTemp2(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure14: {"": "Closure;this_15",
  call$0: function() {
    var t1 = this.this_15.get$game().get$Cheats();
    t1.$indexSet(t1, "invincibility", 0);
  }
},

PowerUp_update_closure15: {"": "Closure;this_16",
  call$0: function() {
    var t1, t2;
    t1 = this.this_16.get$game();
    t2 = t1.get$rendererTemp1();
    t1.set$rendererTemp1(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure16: {"": "Closure;this_17",
  call$0: function() {
    var t1, t2;
    t1 = this.this_17.get$game();
    t2 = t1.get$rendererTemp1();
    t1.set$rendererTemp1(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure17: {"": "Closure;this_18",
  call$0: function() {
    var t1, t2;
    t1 = this.this_18.get$game();
    t2 = t1.get$rendererTemp1();
    t1.set$rendererTemp1(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure18: {"": "Closure;this_19",
  call$0: function() {
    var t1, t2;
    t1 = this.this_19.get$game();
    t2 = t1.get$rendererTemp1();
    t1.set$rendererTemp1(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure19: {"": "Closure;this_20",
  call$0: function() {
    var t1, t2;
    t1 = this.this_20.get$game();
    t2 = t1.get$rendererTemp1();
    t1.set$rendererTemp1(t2 - 1);
    return t2;
  }
},

PowerUp_update_closure20: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

PowerUp_update_closure21: {"": "Closure;this_21",
  call$1: function(e) {
    var t1;
    e.removeFromGame$0();
    t1 = this.this_21.get$game();
    t1.set$enemyAmount(t1.get$enemyAmount() - 1);
  }
},

Ship: {"": "GameEntity;bulletPower,bullet@,maxBullet@,bulletsFired,bulletsHit,lives@,soundLevel,chargedLevel@,superCharged,isPoweringUp,spiralShot@,lastShotFired,_spreadWaiting@,_invincibleTimer?,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2, milliseconds, t3;
    t1 = $.get$state$x(this.game);
    if (typeof t1 !== "number")
      return this.update$0$bailout1(1, t1);
    if (t1 !== 2) {
      t1 = $.get$state$x(this.game);
      if (typeof t1 !== "number")
        return this.update$0$bailout1(2, t1);
      if (t1 !== 4) {
        t1 = $.get$state$x(this.game);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(3, t1);
        t1 = t1 === 1;
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1)
      return;
    this._width = 32;
    this.updateBox$0();
    this._height = 32;
    this.updateBox$0();
    this.opacity = 0;
    t1 = this._width;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(4, t1);
    if (!(t1 > 36)) {
      t1 = this._height;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(5, t1);
      t1 = t1 > 36;
    } else
      t1 = true;
    if (t1) {
      this._width = 36;
      this.updateBox$0();
      this._height = 36;
      this.updateBox$0();
    }
    t1 = this.lives;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(6, t1);
    if (t1 <= 0) {
      this.game.set$p1Dead(true);
      this._removeFromGame = true;
      this.game.gameOver$0();
    }
    t1 = this.game.get$Cheats();
    t1 = t1.$index(t1, "spreadshot");
    if (typeof t1 !== "number")
      return this.update$0$bailout1(7, t1);
    if (t1 === 1)
      this.spiralShot = true;
    if (this.spiralShot) {
      t1 = this.game.get$Cheats();
      t1 = t1.$index(t1, "spreadshot");
      if (typeof t1 !== "number")
        return this.update$0$bailout1(8, t1);
      t1 = t1 !== 1;
    } else
      t1 = false;
    if (t1) {
      t1 = new $._ZoneTimer($.get$_Zone__current(), new $.Ship_update_closure(this), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t2 = t1.get$_run();
      milliseconds = C.JSNumber_methods.$tdiv(C.Duration_15000000._duration, 1000);
      t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
      this._invincibleTimer = t1;
    }
    t1 = this.game.get$Options();
    t1 = t1.$index(t1, "controls");
    if (typeof t1 !== "number")
      return this.update$0$bailout1(9, t1);
    if (t1 === 1)
      if (this.game.get$input().isKeyDown$1(37))
        this.momentum.xVel = -250;
      else {
        t1 = this.game.get$input().isKeyDown$1(39);
        t2 = this.momentum;
        if (t1)
          t2.xVel = 250;
        else
          t2.xVel = 0;
      }
    t1 = this.bullet;
    t2 = this.maxBullet;
    if (t1 > t2)
      this.bullet = t2;
    if (this.bullet < 0)
      this.bullet = 0;
    t1 = $.get$state$x(this.game);
    if (typeof t1 !== "number")
      return this.update$0$bailout1(10, t1);
    if (t1 === 1)
      return;
    t1 = this.game;
    if (t1.get$input().get$mouse() != null) {
      t1 = t1.get$Options();
      t1 = t1.$index(t1, "controls");
      if (typeof t1 !== "number")
        return this.update$0$bailout1(11, t1);
      t1 = t1 === 2;
    } else
      t1 = false;
    if (t1) {
      this._x = this.game.get$input().get$mouse().x;
      this.updateBox$0();
    }
    t1 = this._x;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(12, t1);
    if (t1 + 16 > $.get$rect$x(this.game).get$halfWidth()) {
      this._x = $.get$rect$x(this.game).get$halfWidth() - 16;
      this.updateBox$0();
    }
    t1 = this._x;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(13, t1);
    if (t1 - 16 < -$.get$rect$x(this.game).get$halfWidth()) {
      this._x = -$.get$rect$x(this.game).get$halfWidth() + 16;
      this.updateBox$0();
    }
    if (this.chargedLevel >= 15) {
      this.superCharged = this.superCharged + 1;
      this.chargedLevel = 0;
    }
    if (this.bullet > 0) {
      if (this.game.get$input().isKeyJustPressed$1(32)) {
        t1 = this.game.get$Options();
        t1 = t1.$index(t1, "controls");
        if (typeof t1 !== "number")
          return this.update$0$bailout1(14, t1);
        t1 = t1 === 1;
      } else
        t1 = false;
      if (t1)
        this.fire$0();
      t1 = this.game;
      if ($.get$click$x(t1.get$input()) != null) {
        t1 = t1.get$Options();
        t1 = t1.$index(t1, "controls");
        if (typeof t1 !== "number")
          return this.update$0$bailout1(15, t1);
        t1 = t1 === 2;
      } else
        t1 = false;
      if (t1)
        this.fire$0();
      t1 = this.game.get$Cheats();
      t1 = t1.$index(t1, "super");
      if (typeof t1 !== "number")
        return this.update$0$bailout1(16, t1);
      if (!(t1 === 1 && this.game.get$input().isKeyJustPressed$1(16)))
        if (this.game.get$input().isKeyJustPressed$1(16))
          if (this.superCharged > 0) {
            t1 = this.game.get$Options();
            t1 = t1.$index(t1, "controls");
            if (typeof t1 !== "number")
              return this.update$0$bailout1(17, t1);
            t1 = t1 === 1;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      if (t1) {
        t1 = this.game;
        t2 = this._x;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(18, t1, t2);
        t2 -= 25;
        t3 = this._y;
        if (typeof t3 !== "number")
          return this.update$0$bailout1(19, t1, t2, t3);
        t1.addEntity$1($.Bullet$(t1, t2, t3 - 30, "straight", -350, this.bulletPower, "super"));
        this.superCharged = this.superCharged - 1;
      }
      t1 = this.game.get$Cheats();
      t1 = t1.$index(t1, "super");
      if (typeof t1 !== "number")
        return this.update$0$bailout1(20, t1);
      if (!(t1 === 1 && this.game.get$input().isKeyJustPressed$1(32)))
        if (this.game.get$input().isKeyJustPressed$1(32))
          if (this.superCharged > 0) {
            t1 = this.game.get$Options();
            t1 = t1.$index(t1, "controls");
            if (typeof t1 !== "number")
              return this.update$0$bailout1(21, t1);
            t1 = t1 === 2;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      if (t1) {
        t1 = this.game;
        t2 = this._x;
        if (typeof t2 !== "number")
          return this.update$0$bailout1(22, t1, t2);
        t2 -= 25;
        t3 = this._y;
        if (typeof t3 !== "number")
          return this.update$0$bailout1(23, t1, t2, t3);
        t1.addEntity$1($.Bullet$(t1, t2, t3 - 30, "straight", -350, this.bulletPower, "super"));
        this.superCharged = this.superCharged - 1;
      }
    }
    $.GameEntity.prototype.update$0.call(this);
  },
  update$0$bailout1: function(state0, t1, t2, t3) {
    switch (state0) {
      case 0:
        t1 = $.get$state$x(this.game);
      case 1:
        state0 = 0;
      default:
        if (state0 === 3 || state0 === 2 || state0 === 0 && !$.$eq(t1, 2))
          switch (state0) {
            case 0:
              t1 = $.get$state$x(this.game);
            case 2:
              state0 = 0;
            case 3:
              if (state0 === 3 || state0 === 0 && !$.$eq(t1, 4))
                switch (state0) {
                  case 0:
                    t1 = $.get$state$x(this.game);
                  case 3:
                    state0 = 0;
                    t1 = $.$eq(t1, 1);
                }
              else
                t1 = true;
          }
        else
          t1 = true;
        if (t1)
          return;
        this._width = 32;
        this.updateBox$0();
        this._height = 32;
        this.updateBox$0();
        this.opacity = 0;
        t1 = this._width;
      case 4:
        state0 = 0;
      case 5:
        if (state0 === 5 || state0 === 0 && !$.$gt$n(t1, 36))
          switch (state0) {
            case 0:
              t1 = this._height;
            case 5:
              state0 = 0;
              t1 = $.$gt$n(t1, 36);
          }
        else
          t1 = true;
        if (t1) {
          this._width = 36;
          this.updateBox$0();
          this._height = 36;
          this.updateBox$0();
        }
        t1 = this.lives;
      case 6:
        state0 = 0;
        if ($.$le$n(t1, 0)) {
          this.game.set$p1Dead(true);
          this._removeFromGame = true;
          this.game.gameOver$0();
        }
        t1 = this.game.get$Cheats();
        t1 = t1.$index(t1, "spreadshot");
      case 7:
        state0 = 0;
        if ($.$eq(t1, 1))
          this.spiralShot = true;
      case 8:
        if (state0 === 8 || state0 === 0 && this.spiralShot)
          switch (state0) {
            case 0:
              t1 = this.game.get$Cheats();
              t1 = t1.$index(t1, "spreadshot");
            case 8:
              state0 = 0;
              t1 = !$.$eq(t1, 1);
          }
        else
          t1 = false;
        if (t1) {
          t1 = new $._ZoneTimer($.get$_Zone__current(), new $.Ship_update_closure(this), null);
          t2 = t1._zone;
          t2._openCallbacks = t2._openCallbacks + 1;
          t2 = t1.get$_run();
          milliseconds = C.JSNumber_methods.$tdiv(C.Duration_15000000._duration, 1000);
          t1._timer = $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, t2);
          this._invincibleTimer = t1;
        }
        t1 = this.game.get$Options();
        t1 = t1.$index(t1, "controls");
      case 9:
        state0 = 0;
        if ($.$eq(t1, 1))
          if (this.game.get$input().isKeyDown$1(37))
            this.momentum.xVel = -250;
          else {
            t1 = this.game.get$input().isKeyDown$1(39);
            t2 = this.momentum;
            if (t1)
              t2.xVel = 250;
            else
              t2.xVel = 0;
          }
        t1 = this.bullet;
        t2 = this.maxBullet;
        if (t1 > t2)
          this.bullet = t2;
        if (this.bullet < 0)
          this.bullet = 0;
        t1 = $.get$state$x(this.game);
      case 10:
        state0 = 0;
        if ($.$eq(t1, 1))
          return;
        t1 = this.game;
      case 11:
        if (state0 === 11 || state0 === 0 && t1.get$input().get$mouse() != null)
          switch (state0) {
            case 0:
              t1 = t1.get$Options();
              t1 = t1.$index(t1, "controls");
            case 11:
              state0 = 0;
              t1 = $.$eq(t1, 2);
          }
        else
          t1 = false;
        if (t1) {
          this._x = this.game.get$input().get$mouse().x;
          this.updateBox$0();
        }
        t1 = this._x;
      case 12:
        state0 = 0;
        if ($.$gt$n($.$add$ns(t1, 16), $.get$rect$x(this.game).get$halfWidth())) {
          this._x = $.get$rect$x(this.game).get$halfWidth() - 16;
          this.updateBox$0();
        }
        t1 = this._x;
      case 13:
        state0 = 0;
        if ($.$lt$n($.$sub$n(t1, 16), -$.get$rect$x(this.game).get$halfWidth())) {
          this._x = -$.get$rect$x(this.game).get$halfWidth() + 16;
          this.updateBox$0();
        }
        if (this.chargedLevel >= 15) {
          this.superCharged = this.superCharged + 1;
          this.chargedLevel = 0;
        }
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
        var milliseconds;
        if (state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 0 && this.bullet > 0)
          switch (state0) {
            case 0:
            case 14:
              if (state0 === 14 || state0 === 0 && this.game.get$input().isKeyJustPressed$1(32))
                switch (state0) {
                  case 0:
                    t1 = this.game.get$Options();
                    t1 = t1.$index(t1, "controls");
                  case 14:
                    state0 = 0;
                    t1 = $.$eq(t1, 1);
                }
              else
                t1 = false;
              if (t1)
                this.fire$0();
              t1 = this.game;
            case 15:
              if (state0 === 15 || state0 === 0 && $.get$click$x(t1.get$input()) != null)
                switch (state0) {
                  case 0:
                    t1 = t1.get$Options();
                    t1 = t1.$index(t1, "controls");
                  case 15:
                    state0 = 0;
                    t1 = $.$eq(t1, 2);
                }
              else
                t1 = false;
              if (t1)
                this.fire$0();
              t1 = this.game.get$Cheats();
              t1 = t1.$index(t1, "super");
            case 16:
              state0 = 0;
            case 17:
              if (state0 === 17 || state0 === 0 && !($.$eq(t1, 1) && this.game.get$input().isKeyJustPressed$1(16)))
                switch (state0) {
                  case 0:
                  case 17:
                    if (state0 === 17 || state0 === 0 && this.game.get$input().isKeyJustPressed$1(16))
                      switch (state0) {
                        case 0:
                        case 17:
                          if (state0 === 17 || state0 === 0 && this.superCharged > 0)
                            switch (state0) {
                              case 0:
                                t1 = this.game.get$Options();
                                t1 = t1.$index(t1, "controls");
                              case 17:
                                state0 = 0;
                                t1 = $.$eq(t1, 1);
                            }
                          else
                            t1 = false;
                      }
                    else
                      t1 = false;
                }
              else
                t1 = true;
            default:
              if (state0 === 19 || state0 === 18 || state0 === 0 && t1)
                switch (state0) {
                  case 0:
                    t1 = this.game;
                    t2 = this._x;
                  case 18:
                    state0 = 0;
                    t2 = $.$sub$n(t2, 25);
                    t3 = this._y;
                  case 19:
                    state0 = 0;
                    t1.addEntity$1($.Bullet$(t1, t2, $.$sub$n(t3, 30), "straight", -350, this.bulletPower, "super"));
                    this.superCharged = this.superCharged - 1;
                }
              t1 = this.game.get$Cheats();
              t1 = t1.$index(t1, "super");
            case 20:
              state0 = 0;
            case 21:
              if (state0 === 21 || state0 === 0 && !($.$eq(t1, 1) && this.game.get$input().isKeyJustPressed$1(32)))
                switch (state0) {
                  case 0:
                  case 21:
                    if (state0 === 21 || state0 === 0 && this.game.get$input().isKeyJustPressed$1(32))
                      switch (state0) {
                        case 0:
                        case 21:
                          if (state0 === 21 || state0 === 0 && this.superCharged > 0)
                            switch (state0) {
                              case 0:
                                t1 = this.game.get$Options();
                                t1 = t1.$index(t1, "controls");
                              case 21:
                                state0 = 0;
                                t1 = $.$eq(t1, 2);
                            }
                          else
                            t1 = false;
                      }
                    else
                      t1 = false;
                }
              else
                t1 = true;
            case 22:
            case 23:
              if (state0 === 23 || state0 === 22 || state0 === 0 && t1)
                switch (state0) {
                  case 0:
                    t1 = this.game;
                    t2 = this._x;
                  case 22:
                    state0 = 0;
                    t2 = $.$sub$n(t2, 25);
                    t3 = this._y;
                  case 23:
                    state0 = 0;
                    t1.addEntity$1($.Bullet$(t1, t2, $.$sub$n(t3, 30), "straight", -350, this.bulletPower, "super"));
                    this.superCharged = this.superCharged - 1;
                }
          }
        $.GameEntity.prototype.update$0.call(this);
    }
  },
  fire$0: function() {
    var t1, t2, t3, t4;
    this.soundLevel = this.bulletPower * 0.02;
    if (this.soundLevel > 1)
      this.soundLevel = 1;
    t1 = this.spiralShot;
    t2 = this.game;
    t3 = this._x;
    t4 = this._y;
    if (t1) {
      t2.addEntity$1($.Bullet$(t2, t3, $.$sub$n(t4, 30), "straight", -350, this.bulletPower, "normal"));
      t1 = this.game;
      t1.addEntity$1($.Bullet$(t1, this._x, $.$sub$n(this._y, 30), "right", -350, this.bulletPower, "normal"));
      t1 = this.game;
      t1.addEntity$1($.Bullet$(t1, this._x, $.$sub$n(this._y, 30), "left", -350, this.bulletPower, "normal"));
      t1 = this.game.get$Stats();
      t1.$indexSet(t1, "bulletsHit", $.$add$ns(t1.$index(t1, "bulletsHit"), 3));
    } else {
      t2.addEntity$1($.Bullet$(t2, t3, $.$sub$n(t4, 30), "straight", -350, this.bulletPower, "normal"));
      t1 = this.game.get$Stats();
      t1.$indexSet(t1, "bulletsHit", $.$add$ns(t1.$index(t1, "bulletsHit"), 1));
    }
    t1 = this.bullet;
    if (t1 > 0)
      this.bullet = t1 - 1;
  },
  Ship$3: function(game, x, y) {
    this.opacity = 0.2;
    this.maxBullet = 3;
    this.bullet = this.maxBullet;
  },
  $isShip: true,
  static: {
Ship$: function(game, x, y) {
  var t1 = new $.Ship(8, 3, 3, 0, 0, 3, 0, 0, 0, false, false, 0, 0, null, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 36, 36, null, null);
  t1.Ship$3(game, x, y);
  return t1;
}}

},

Ship_update_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.set$_spreadWaiting(t1.get$_spreadWaiting() + 1);
    t1.set$spiralShot(false);
  }
},

Stars: {"": "GameEntity;starColor<,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1 = $.get$state$x(this.game);
    if (typeof t1 !== "number")
      return this.update$0$bailout1(1, t1);
    if (t1 === 2)
      return;
    t1 = this._y;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(2, t1);
    if (t1 > $.get$rect$x(this.game).get$halfHeight())
      this._removeFromGame = true;
    $.GameEntity.prototype.update$0.call(this);
  },
  update$0$bailout1: function(state0, t1) {
    switch (state0) {
      case 0:
        t1 = $.get$state$x(this.game);
      case 1:
        state0 = 0;
        if ($.$eq(t1, 2))
          return;
        t1 = this._y;
      case 2:
        state0 = 0;
        if ($.$gt$n(t1, $.get$rect$x(this.game).get$halfHeight()))
          this._removeFromGame = true;
        $.GameEntity.prototype.update$0.call(this);
    }
  },
  Stars$6: function(game, x, y, h, w, col) {
    this.opacity = 0;
    this.starColor = $.random(1, 7, false);
    this.starColor = $.ceil$0$nx(this.starColor);
    this.momentum.yVel = $.random(50, 150, false);
  },
  $isStars: true,
  static: {
Stars$: function(game, x, y, h, w, col) {
  var t1 = new $.Stars(1, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, h, w, null, null);
  t1.Stars$6(game, x, y, h, w, col);
  return t1;
}}

}}],
["galaga_html", "package:galaga/galaga_html.dart", , {
GalagaRenderer: {"": "CanvasGameRenderer;timeLeft,temp,ship<,invincibleShip<,upgradedShip,enemy<,enemy2<,boss<,mothership1<,mothership2<,mothership3<,mothership4<,bosshp<,spreadup<,lifeup<,multiplierup<,bulletup<,invincible@,timeUp<,coin<,shipbullet<,enemybullet<,superBullet<,bossSuperBullet<,chargeBar,star1<,star2<,star3<,star4<,star5<,star6<,star7<,skull<,clone,teleporter@,enemyFlicker,shipFlicker?,targetId,ctx,defaultRenderer,assetManager,textRenderer,ownMouse,canvas,_game,rect",
  init$0: function() {
    var t1, t2;
    t1 = this._game.get$Stats();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("killed") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("killed"), null, new $.GalagaRenderer_init_closure());
    } else
      t2 = 0;
    t1.$indexSet(t1, "killed", t2);
    t2 = this._game.get$Stats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("wins") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("wins"), null, new $.GalagaRenderer_init_closure0());
    } else
      t1 = 0;
    t2.$indexSet(t2, "wins", t1);
    t1 = this._game.get$Stats();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("loses") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("loses"), null, new $.GalagaRenderer_init_closure1());
    } else
      t2 = 0;
    t1.$indexSet(t1, "loses", t2);
    t2 = this._game.get$Stats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("totalGames") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("totalGames"), null, new $.GalagaRenderer_init_closure2());
    } else
      t1 = 0;
    t2.$indexSet(t2, "totalGames", t1);
    t1 = this._game.get$Stats();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("highscore") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("highscore"), null, new $.GalagaRenderer_init_closure3());
    } else
      t2 = 0;
    t1.$indexSet(t1, "highscore", t2);
    t2 = this._game.get$Stats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("normalKills") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("normalKills"), null, new $.GalagaRenderer_init_closure4());
    } else
      t1 = 0;
    t2.$indexSet(t2, "normalKills", t1);
    t1 = this._game.get$Stats();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("bossKills") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("bossKills"), null, new $.GalagaRenderer_init_closure5());
    } else
      t2 = 0;
    t1.$indexSet(t1, "bossKills", t2);
    t2 = this._game.get$Stats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("motherKills") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("motherKills"), null, new $.GalagaRenderer_init_closure6());
    } else
      t1 = 0;
    t2.$indexSet(t2, "motherKills", t1);
    t1 = this._game.get$Stats();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("powerups") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("powerups"), null, new $.GalagaRenderer_init_closure7());
    } else
      t2 = 0;
    t1.$indexSet(t1, "powerups", t2);
    t2 = this._game.get$Stats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("percentage") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("percentage"), null, new $.GalagaRenderer_init_closure8());
    } else
      t1 = 0;
    t2.$indexSet(t2, "percentage", t1);
    t1 = this._game.get$Stats();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("bulletsFired") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("bulletsFired"), null, new $.GalagaRenderer_init_closure9());
    } else
      t2 = 0;
    t1.$indexSet(t1, "bulletsFired", t2);
    t2 = this._game.get$Stats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("bulletsHit") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("bulletsHit"), null, new $.GalagaRenderer_init_closure10());
    } else
      t1 = 0;
    t2.$indexSet(t2, "bulletsHit", t1);
    t1 = this._game.get$Options();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("startLives") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("startLives"), null, new $.GalagaRenderer_init_closure11());
    } else
      t2 = 3;
    t1.$indexSet(t1, "startLives", t2);
    t2 = this._game.get$Options();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("bulletCap") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("bulletCap"), null, new $.GalagaRenderer_init_closure12());
    } else
      t1 = 3;
    t2.$indexSet(t2, "bulletCap", t1);
    t1 = this._game.get$Options();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("time") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("time"), null, new $.GalagaRenderer_init_closure13());
    } else
      t2 = 60;
    t1.$indexSet(t1, "time", t2);
    t2 = this._game.get$Options();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("difficulty") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("difficulty"), null, new $.GalagaRenderer_init_closure14());
    } else
      t1 = 1;
    t2.$indexSet(t2, "difficulty", t1);
    t1 = this._game.get$Options();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("powerups") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("powerups"), null, new $.GalagaRenderer_init_closure15());
    } else
      t2 = 1;
    t1.$indexSet(t1, "powerups", t2);
    t2 = this._game.get$Options();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("soundeffects") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("soundeffects"), null, new $.GalagaRenderer_init_closure16());
    } else
      t1 = 1;
    t2.$indexSet(t2, "soundeffects", t1);
    t1 = this._game.get$Options();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("controls") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("controls"), null, new $.GalagaRenderer_init_closure17());
    } else
      t2 = 1;
    t1.$indexSet(t1, "controls", t2);
    t2 = this._game.get$Highscores();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("Score1") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("Score1"), null, new $.GalagaRenderer_init_closure18());
    } else
      t1 = 0;
    t2.$indexSet(t2, 1, t1);
    t1 = this._game.get$Highscores();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("Score2") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("Score2"), null, new $.GalagaRenderer_init_closure19());
    } else
      t2 = 0;
    t1.$indexSet(t1, 2, t2);
    t2 = this._game.get$Highscores();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("Score3") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("Score3"), null, new $.GalagaRenderer_init_closure20());
    } else
      t1 = 0;
    t2.$indexSet(t2, 3, t1);
    t1 = this._game.get$Highscores();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("Score4") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("Score4"), null, new $.GalagaRenderer_init_closure21());
    } else
      t2 = 0;
    t1.$indexSet(t1, 4, t2);
    t2 = this._game.get$Highscores();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("Score5") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("Score5"), null, new $.GalagaRenderer_init_closure22());
    } else
      t1 = 0;
    t2.$indexSet(t2, 5, t1);
    t1 = this._game.get$Highscores();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("Score6") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("Score6"), null, new $.GalagaRenderer_init_closure23());
    } else
      t2 = 0;
    t1.$indexSet(t1, 6, t2);
    t2 = this._game.get$Highscores();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("Score7") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("Score7"), null, new $.GalagaRenderer_init_closure24());
    } else
      t1 = 0;
    t2.$indexSet(t2, 7, t1);
    t1 = this._game.get$Highscores();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("Score8") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("Score8"), null, new $.GalagaRenderer_init_closure25());
    } else
      t2 = 0;
    t1.$indexSet(t1, 8, t2);
    t2 = this._game.get$Highscores();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("Score9") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("Score9"), null, new $.GalagaRenderer_init_closure26());
    } else
      t1 = 0;
    t2.$indexSet(t2, 9, t1);
    t1 = this._game.get$Highscores();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("Score10") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("Score10"), null, new $.GalagaRenderer_init_closure27());
    } else
      t2 = 0;
    t1.$indexSet(t1, 10, t2);
    t2 = this._game.get$Cheats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("spreadshot") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("spreadshot"), null, new $.GalagaRenderer_init_closure28());
    } else
      t1 = 1;
    t2.$indexSet(t2, "spreadshot", t1);
    t1 = this._game.get$Cheats();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("invincibility") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("invincibility"), null, new $.GalagaRenderer_init_closure29());
    } else
      t2 = 1;
    t1.$indexSet(t1, "invincibility", t2);
    t2 = this._game.get$Cheats();
    t1 = window.localStorage;
    t1.containsKey$1;
    if (t1.getItem("freeze") != null) {
      t1 = window.localStorage;
      t1.$index;
      t1 = $.Primitives_parseInt(t1.getItem("freeze"), null, new $.GalagaRenderer_init_closure30());
    } else
      t1 = 1;
    t2.$indexSet(t2, "freeze", t1);
    t1 = this._game.get$Cheats();
    t2 = window.localStorage;
    t2.containsKey$1;
    if (t2.getItem("super") != null) {
      t2 = window.localStorage;
      t2.$index;
      t2 = $.Primitives_parseInt(t2.getItem("super"), null, new $.GalagaRenderer_init_closure31());
    } else
      t2 = 1;
    t1.$indexSet(t1, "super", t2);
    this._game.get$onGameOver().listen$1(new $.GalagaRenderer_init_closure32(this));
    this._game.get$onShipHit().listen$1(new $.GalagaRenderer_init_closure33(this));
    this._game.get$onStatUpdate().listen$1(new $.GalagaRenderer_init_closure34(this));
    this._game.get$onMotherShipHit().listen$1(new $.GalagaRenderer_init_closure35(this));
    this._game.get$onBossHit().listen$1(new $.GalagaRenderer_init_closure36(this));
    this._game.get$onNormalHit().listen$1(new $.GalagaRenderer_init_closure37(this));
    this._game.get$onFadeEvent().listen$1(new $.GalagaRenderer_init_closure38(this));
  },
  gameOver$0: function() {
    this.subtleBgFade$0();
    this.updateStats$0();
  },
  updateStats$0: function() {
    var t1, t2;
    t1 = window.localStorage;
    t2 = this._game.get$Stats();
    t2 = $.toString$0(t2.$index(t2, "killed"));
    t1.$indexSet;
    t1.setItem("killed", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Stats();
    t1 = $.toString$0(t1.$index(t1, "wins"));
    t2.$indexSet;
    t2.setItem("wins", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Stats();
    t2 = $.toString$0(t2.$index(t2, "loses"));
    t1.$indexSet;
    t1.setItem("loses", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Stats();
    t1 = $.toString$0(t1.$index(t1, "totalGames"));
    t2.$indexSet;
    t2.setItem("totalGames", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Stats();
    t2 = $.toString$0(t2.$index(t2, "highscore"));
    t1.$indexSet;
    t1.setItem("highscore", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Stats();
    t1 = $.toString$0(t1.$index(t1, "normalKills"));
    t2.$indexSet;
    t2.setItem("normalKills", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Stats();
    t2 = $.toString$0(t2.$index(t2, "bossKills"));
    t1.$indexSet;
    t1.setItem("bossKills", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Stats();
    t1 = $.toString$0(t1.$index(t1, "motherKills"));
    t2.$indexSet;
    t2.setItem("motherKills", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Stats();
    t2 = $.toString$0(t2.$index(t2, "powerups"));
    t1.$indexSet;
    t1.setItem("powerups", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Stats();
    t1 = $.toString$0(t1.$index(t1, "percentage"));
    t2.$indexSet;
    t2.setItem("percentage", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Stats();
    t2 = $.toString$0(t2.$index(t2, "powerups"));
    t1.$indexSet;
    t1.setItem("powerups", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Stats();
    t1 = $.toString$0(t1.$index(t1, "percentage"));
    t2.$indexSet;
    t2.setItem("percentage", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Options();
    t2 = $.toString$0(t2.$index(t2, "startLives"));
    t1.$indexSet;
    t1.setItem("startLives", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Options();
    t1 = $.toString$0(t1.$index(t1, "bulletCap"));
    t2.$indexSet;
    t2.setItem("bulletCap", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Options();
    t2 = $.toString$0(t2.$index(t2, "time"));
    t1.$indexSet;
    t1.setItem("time", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Options();
    t1 = $.toString$0(t1.$index(t1, "difficulty"));
    t2.$indexSet;
    t2.setItem("difficulty", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Options();
    t2 = $.toString$0(t2.$index(t2, "powerups"));
    t1.$indexSet;
    t1.setItem("powerups", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Options();
    t1 = $.toString$0(t1.$index(t1, "soundeffects"));
    t2.$indexSet;
    t2.setItem("soundeffects", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Options();
    t2 = $.toString$0(t2.$index(t2, "controls"));
    t1.$indexSet;
    t1.setItem("controls", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Highscores();
    t1 = $.toString$0(t1.$index(t1, 1));
    t2.$indexSet;
    t2.setItem("score1", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Highscores();
    t2 = $.toString$0(t2.$index(t2, 2));
    t1.$indexSet;
    t1.setItem("score2", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Highscores();
    t1 = $.toString$0(t1.$index(t1, 3));
    t2.$indexSet;
    t2.setItem("score3", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Highscores();
    t2 = $.toString$0(t2.$index(t2, 4));
    t1.$indexSet;
    t1.setItem("score4", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Highscores();
    t1 = $.toString$0(t1.$index(t1, 5));
    t2.$indexSet;
    t2.setItem("score5", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Highscores();
    t2 = $.toString$0(t2.$index(t2, 6));
    t1.$indexSet;
    t1.setItem("score6", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Highscores();
    t1 = $.toString$0(t1.$index(t1, 7));
    t2.$indexSet;
    t2.setItem("score7", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Highscores();
    t2 = $.toString$0(t2.$index(t2, 8));
    t1.$indexSet;
    t1.setItem("score8", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Highscores();
    t1 = $.toString$0(t1.$index(t1, 9));
    t2.$indexSet;
    t2.setItem("score9", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Highscores();
    t2 = $.toString$0(t2.$index(t2, 10));
    t1.$indexSet;
    t1.setItem("score10", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Options();
    t1 = $.toString$0(t1.$index(t1, "spreadshot"));
    t2.$indexSet;
    t2.setItem("spreadshot", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Options();
    t2 = $.toString$0(t2.$index(t2, "invincibility"));
    t1.$indexSet;
    t1.setItem("invincibility", t2);
    t2 = window.localStorage;
    t1 = this._game.get$Options();
    t1 = $.toString$0(t1.$index(t1, "freeze"));
    t2.$indexSet;
    t2.setItem("freeze", t1);
    t1 = window.localStorage;
    t2 = this._game.get$Options();
    t2 = $.toString$0(t2.$index(t2, "super"));
    t1.$indexSet;
    t1.setItem("super", t2);
  },
  drawStars$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_drawStars_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_drawStars_closure0(this));
  },
  drawBouncer$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_drawBouncer_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_drawBouncer_closure0(this));
  },
  drawBullets$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_drawBullets_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_drawBullets_closure0(this));
  },
  drawPowerUps$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_drawPowerUps_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_drawPowerUps_closure0(this));
  },
  drawChargeBar$0: function() {
    var t1, t2, t3;
    this.ctx.strokeStyle = "rgba(255, 255, 255, 1.0)";
    this.ctx.lineWidth = 3;
    this.ctx.beginPath();
    t1 = this._game.get$Cheats();
    t1 = $.$eq(t1.$index(t1, "super"), 1);
    t2 = this.ctx;
    t3 = this.chargeBar;
    if (t1)
      t2.drawImage(t3, -145, -224, 225, 12);
    else {
      t2.drawImage(t3, -145, -224, this._game.get$ship().chargedLevel * 15, 12);
      this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
      this.ctx.font = "16px cinnamoncake, Verdana";
      this.ctx.fillText("" + this._game.get$ship().superCharged, -170, -215);
    }
    this.ctx.stroke();
  },
  drawShip$0: function() {
    var t1, t2, t3, t4;
    if (!this.shipFlicker) {
      this.ctx.strokeStyle = "rgba(255, 255, 255, 1.0)";
      this.ctx.lineWidth = 3;
      this.ctx.beginPath();
      t1 = this._game.get$Cheats();
      if (!$.$eq(t1.$index(t1, "invincibility"), 1)) {
        t1 = this.ctx;
        t2 = this.ship;
        t3 = this._game.get$ship();
        t3.get$x;
        t3 = $.$sub$n(t3._x, 22);
        t4 = this._game.get$ship();
        t4.get$y;
        t1.drawImage(t2, t3, $.$sub$n(t4._y, 25), 42, 42);
      } else {
        t1 = this._game.get$Cheats();
        if ($.$eq(t1.$index(t1, "invincibility"), 1)) {
          t1 = this.ctx;
          t2 = this._game.get$ship();
          t2.get$x;
          t2 = $.$sub$n(t2._x, 31);
          t3 = this._game.get$ship();
          t3.get$y;
          t1.drawImage(this.invincibleShip, t2, $.$sub$n(t3._y, 31), 62, 62);
        }
      }
      this.drawChargeBar$0();
      this.ctx.stroke();
    }
  },
  drawEnemys$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_drawEnemys_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_drawEnemys_closure0(this));
  },
  shipHit$0: function() {
    var t1, t2;
    this.bgFade$0();
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_shipHit_closure(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_25000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_shipHit_closure0(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_75000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_shipHit_closure1(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_150000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_shipHit_closure2(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_225000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_shipHit_closure3(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_300000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_shipHit_closure4(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_375000, t1.get$_run());
    this.subtleBgFade$0();
  },
  bossHit$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_bossHit_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_bossHit_closure0(this));
  },
  motherShipHit$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_motherShipHit_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_motherShipHit_closure0(this));
  },
  normalShipHit$0: function() {
    var t1 = new $.WhereIterable(this._game.entities, new $.GalagaRenderer_normalShipHit_closure());
    t1.forEach$1(t1, new $.GalagaRenderer_normalShipHit_closure0(this));
  },
  drawEtc$0: function() {
    var t1, tempHigh, digits, t2, i, t3;
    t1 = this._game.get$Stats();
    tempHigh = t1.$index(t1, "highscore");
    if (typeof tempHigh !== "number")
      return this.drawEtc$0$bailout(1, tempHigh);
    for (digits = 0; tempHigh !== 0;) {
      tempHigh /= 10;
      ++digits;
    }
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    t1 = this.ctx;
    t2 = this._game.get$Stats();
    t1.fillText("High Score: " + $.S(t2.$index(t2, "highscore")) + " ", 225 - digits / 10, -(this._game.rect.get$halfHeight() - 30));
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    this.ctx.fillText("Level: " + this._game.get$level(), 375, this._game.rect.get$halfHeight() - 5);
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    this.ctx.fillText("Time: " + $.S($.round$0$nx(this._game.timer.gameTime)) + " ", -100, -(this._game.rect.get$halfHeight() - 30));
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    this.ctx.fillText("Score: " + $.S(this._game.get$score()) + " ", -475, -(this._game.rect.get$halfHeight() - 30));
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    this.ctx.fillText("x" + $.S(this._game.get$pointMultiplier()), -475, -(this._game.rect.get$halfHeight() - 60));
    this.ctx.beginPath();
    i = 0;
    while (true) {
      t1 = this._game;
      t2 = t1.get$ship().lives;
      if (typeof t2 !== "number")
        throw $.iae(t2);
      t3 = this.ctx;
      if (!(i < t2))
        break;
      t3.drawImage(this.ship, -475 + 35 * i, t1.rect.get$halfHeight() - 30, 24, 24);
      ++i;
    }
    t3.stroke();
  },
  drawEtc$0$bailout: function(state0, tempHigh) {
    var digits, t1, t2, i, t3;
    for (digits = 0; !$.$eq(tempHigh, 0);) {
      if (typeof tempHigh !== "number")
        throw tempHigh.$div();
      tempHigh /= 10;
      ++digits;
    }
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    t1 = this.ctx;
    t2 = this._game.get$Stats();
    t1.fillText("High Score: " + $.S(t2.$index(t2, "highscore")) + " ", 225 - digits / 10, -(this._game.rect.get$halfHeight() - 30));
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    this.ctx.fillText("Level: " + this._game.get$level(), 375, this._game.rect.get$halfHeight() - 5);
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    this.ctx.fillText("Time: " + $.S($.round$0$nx(this._game.timer.gameTime)) + " ", -100, -(this._game.rect.get$halfHeight() - 30));
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    this.ctx.fillText("Score: " + $.S(this._game.get$score()) + " ", -475, -(this._game.rect.get$halfHeight() - 30));
    this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
    this.ctx.font = "32px cinnamoncake, Verdana";
    this.ctx.fillText("x" + $.S(this._game.get$pointMultiplier()), -475, -(this._game.rect.get$halfHeight() - 60));
    this.ctx.beginPath();
    i = 0;
    while (true) {
      t1 = this._game;
      t2 = t1.get$ship().lives;
      if (typeof t2 !== "number")
        throw $.iae(t2);
      t3 = this.ctx;
      if (!(i < t2))
        break;
      t3.drawImage(this.ship, -475 + 35 * i, t1.rect.get$halfHeight() - 30, 24, 24);
      ++i;
    }
    t3.stroke();
  },
  drawInvincibleCountDown$0: function() {
    var t1, t2, t3;
    t1 = this._game.get$Cheats();
    if ($.$eq(t1.$index(t1, "invincibility"), 1)) {
      this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
      this.ctx.font = "24px cinnamoncake, Verdana";
      t1 = this._game;
      if (t1.get$ship().spiralShot) {
        t1 = t1.get$Cheats();
        t1 = $.$eq(t1.$index(t1, "invincibility"), 1);
      } else
        t1 = false;
      t1 = t1 || this._game.get$ship().spiralShot;
      t2 = this.ctx;
      t3 = this._game;
      if (t1)
        t2.fillText("Invincible: " + t3.get$rendererTemp1(), -475, -(this._game.rect.get$halfHeight() - 100));
      else
        t2.fillText("Invincible: " + t3.get$rendererTemp1(), -475, -(this._game.rect.get$halfHeight() - 80));
    } else
      this._game.set$rendererTemp1(5);
  },
  drawSpreadCountDown$0: function() {
    var t1, t2, t3;
    t1 = this._game;
    if (t1.get$ship().spiralShot) {
      this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
      this.ctx.font = "24px cinnamoncake, Verdana";
      t1 = this._game;
      if (t1.get$ship().spiralShot) {
        t1 = t1.get$Cheats();
        t1 = $.$eq(t1.$index(t1, "invincibility"), 1);
      } else
        t1 = false;
      if (t1)
        this.ctx.fillText("Spreadshot: " + this._game.get$rendererTemp2(), -475, -(this._game.rect.get$halfHeight() - 80));
      else {
        t1 = this._game;
        t2 = t1.get$ship().spiralShot;
        t1 = t1.get$rendererTemp2();
        t3 = this.ctx;
        if (t2)
          t3.fillText("Spreadshot: " + t1, -475, -(this._game.rect.get$halfHeight() - 100));
        else
          t3.fillText("Spreadshot: " + t1, -475, -(this._game.rect.get$halfHeight() - 80));
      }
    } else
      t1.set$rendererTemp2(5);
  },
  drawCountDown$0: function() {
    var t1, temp;
    t1 = this._game;
    if (t1.get$state(t1) === 8) {
      this.ctx.fillStyle = "rgba(255, 255, 255, 1)";
      this.ctx.font = "52px cinnamoncake, Verdana";
      t1 = this._game;
      if (t1.get$waiting() === 1)
        temp = 3;
      else if (t1.get$waiting() === 2)
        temp = 2;
      else
        temp = t1.get$waiting() === 3 ? 1 : 0;
      this.ctx.fillText("Next Level In: " + temp, -165, 0);
    }
  },
  getRenderer$1: function(e) {
    var t1 = $.getInterceptor(e);
    if (typeof e === "object" && e !== null && !!t1.$isEnemy) {
      t1 = this._game;
      t1 = t1.get$state(t1) === 4;
    } else
      t1 = false;
    if (t1)
      return;
    return $.CanvasGameRenderer.prototype.getRenderer$1.call(this, e);
  },
  drawBeforeCtxRestore$0: function() {
    this.drawBouncer$0();
    this.drawCountDown$0();
    this.drawStars$0();
    var t1 = this._game;
    if (t1.get$state(t1) === 3 || t1.get$state(t1) === 2) {
      this.drawPowerUps$0();
      this.drawBullets$0();
      this.drawEtc$0();
      this.drawShip$0();
      this.drawEnemys$0();
      this.drawSpreadCountDown$0();
      this.drawInvincibleCountDown$0();
    }
    $.CanvasGameRenderer.prototype.drawBeforeCtxRestore$0.call(this);
  },
  subtleBgFade$0: function() {
    var t1, t2;
    this._game.bgStyle = "rgba(0, 0, 0, 0.85)";
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_25000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure0(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_50000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure1(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_75000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure2(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_100000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure3(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_125000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure4(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_150000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure5(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_175000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure6(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_200000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure7(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_225000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure8(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_175000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure9(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_200000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure10(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_225000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure11(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_175000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure12(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_200000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure13(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_225000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure14(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_250000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure15(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_275000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure16(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_300000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure17(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_325000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure18(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_350000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure19(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_375000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure20(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_400000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure21(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_425000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure22(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_450000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure23(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_475000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure24(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_500000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure25(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_525000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure26(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_550000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure27(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_575000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure28(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_600000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure29(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_625000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_subtleBgFade_closure30(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_650000, t1.get$_run());
  },
  bgFade$0: function() {
    var t1, t2;
    this._game.bgStyle = "rgba(0, 0, 0, 0.8)";
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_bgFade_closure(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_25000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_bgFade_closure0(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_50000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_bgFade_closure1(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_75000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_bgFade_closure2(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_100000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_bgFade_closure3(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_125000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_bgFade_closure4(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_150000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_bgFade_closure5(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_175000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_bgFade_closure6(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_200000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_bgFade_closure7(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_225000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_bgFade_closure8(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_250000, t1.get$_run());
    t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_bgFade_closure9(this), null);
    t2 = t1._zone;
    t2._openCallbacks = t2._openCallbacks + 1;
    t1._timer = $._createTimer(C.Duration_275000, t1.get$_run());
  },
  GalagaRenderer$1: function(targetId) {
    $.set$src$x(this.ship, "../web/images/Ship.png");
    $.set$src$x(this.invincibleShip, "../web/images/InvincibleShip.png");
    $.set$src$x(this.upgradedShip, "../web/images/UpgradedShip.png");
    $.set$src$x(this.enemy, "../web/images/enemy.png");
    $.set$src$x(this.enemy2, "../web/images/enemy2.png");
    $.set$src$x(this.boss, "../web/images/boss.png");
    $.set$src$x(this.mothership1, "../web/images/mothership1.png");
    $.set$src$x(this.mothership2, "../web/images/mothership2.png");
    $.set$src$x(this.mothership3, "../web/images/mothership3.png");
    $.set$src$x(this.mothership4, "../web/images/mothership4.png");
    $.set$src$x(this.bosshp, "../web/images/bosshp.png");
    $.set$src$x(this.spreadup, "../web/images/powerup1.png");
    $.set$src$x(this.lifeup, "../web/images/powerup2.png");
    $.set$src$x(this.multiplierup, "../web/images/powerup3.png");
    $.set$src$x(this.bulletup, "../web/images/powerup4.png");
    $.set$src$x(this.invincible, "../web/images/invincible.png");
    $.set$src$x(this.timeUp, "../web/images/clock.png");
    $.set$src$x(this.coin, "../web/images/coin.png");
    $.set$src$x(this.shipbullet, "../web/images/BulletUp.png");
    $.set$src$x(this.enemybullet, "../web/images/BulletDown.png");
    $.set$src$x(this.superBullet, "../web/images/SuperAttack.png");
    $.set$src$x(this.bossSuperBullet, "../web/images/bossShot.png");
    $.set$src$x(this.chargeBar, "../web/images/chargeBar.png");
    $.set$src$x(this.star1, "../web/images/Star1.png");
    $.set$src$x(this.star2, "../web/images/Star2.png");
    $.set$src$x(this.star3, "../web/images/Star3.png");
    $.set$src$x(this.star4, "../web/images/Star4.png");
    $.set$src$x(this.star5, "../web/images/Star5.png");
    $.set$src$x(this.star6, "../web/images/Star6.png");
    $.set$src$x(this.star7, "../web/images/Star7.png");
    $.set$src$x(this.skull, "../web/images/skull.png");
    $.set$src$x(this.clone, "../web/images/clone.png");
    $.set$src$x(this.teleporter, "../web/images/Teleporter.png");
  },
  static: {
GalagaRenderer$: function(targetId) {
  var t1 = new $.GalagaRenderer(0, 5, $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), $.ImageElement_ImageElement(null, null, null), false, false, targetId, null, null, null, null, null, null, null, null);
  t1.CanvasGameRenderer$1(targetId);
  t1.GalagaRenderer$1(targetId);
  return t1;
}}

},

GalagaRenderer_init_closure: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure0: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure1: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure2: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure3: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure4: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure5: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure6: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure7: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure8: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure9: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure10: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure11: {"": "Closure;",
  call$1: function(val) {
    return 3;
  }
},

GalagaRenderer_init_closure12: {"": "Closure;",
  call$1: function(val) {
    return 3;
  }
},

GalagaRenderer_init_closure13: {"": "Closure;",
  call$1: function(val) {
    return 60;
  }
},

GalagaRenderer_init_closure14: {"": "Closure;",
  call$1: function(val) {
    return 1;
  }
},

GalagaRenderer_init_closure15: {"": "Closure;",
  call$1: function(val) {
    return 1;
  }
},

GalagaRenderer_init_closure16: {"": "Closure;",
  call$1: function(val) {
    return 1;
  }
},

GalagaRenderer_init_closure17: {"": "Closure;",
  call$1: function(val) {
    return 1;
  }
},

GalagaRenderer_init_closure18: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure19: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure20: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure21: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure22: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure23: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure24: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure25: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure26: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure27: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure28: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure29: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure30: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure31: {"": "Closure;",
  call$1: function(val) {
    return 0;
  }
},

GalagaRenderer_init_closure32: {"": "Closure;this_0",
  call$1: function(e) {
    var t1 = this.this_0;
    t1.subtleBgFade$0();
    t1.updateStats$0();
    return;
  }
},

GalagaRenderer_init_closure33: {"": "Closure;this_1",
  call$1: function(e) {
    return this.this_1.shipHit$0();
  }
},

GalagaRenderer_init_closure34: {"": "Closure;this_2",
  call$1: function(e) {
    return this.this_2.updateStats$0();
  }
},

GalagaRenderer_init_closure35: {"": "Closure;this_3",
  call$1: function(e) {
    return this.this_3.motherShipHit$0();
  }
},

GalagaRenderer_init_closure36: {"": "Closure;this_4",
  call$1: function(e) {
    return this.this_4.bossHit$0();
  }
},

GalagaRenderer_init_closure37: {"": "Closure;this_5",
  call$1: function(e) {
    return this.this_5.normalShipHit$0();
  }
},

GalagaRenderer_init_closure38: {"": "Closure;this_6",
  call$1: function(e) {
    return this.this_6.subtleBgFade$0();
  }
},

GalagaRenderer_drawStars_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isStars;
  }
},

GalagaRenderer_drawStars_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2, t3, t4, t5, t6, t7;
    t1 = this.this_0;
    t1.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
    t1.get$ctx().lineWidth = 3;
    t1.get$ctx().beginPath();
    if ($.$eq(e.get$starColor(), 1)) {
      t2 = t1.get$ctx();
      t3 = t1.get$star1();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if ($.$eq(e.get$starColor(), 2)) {
      t2 = t1.get$ctx();
      t3 = t1.get$star2();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if ($.$eq(e.get$starColor(), 3)) {
      t2 = t1.get$ctx();
      t3 = t1.get$star3();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if ($.$eq(e.get$starColor(), 4)) {
      t2 = t1.get$ctx();
      t3 = t1.get$star4();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if ($.$eq(e.get$starColor(), 5)) {
      t2 = t1.get$ctx();
      t3 = t1.get$star5();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if ($.$eq(e.get$starColor(), 6)) {
      t2 = t1.get$ctx();
      t3 = t1.get$star6();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if ($.$eq(e.get$starColor(), 7)) {
      t2 = t1.get$ctx();
      t3 = t1.get$star7();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    }
    t1.get$ctx().stroke();
  }
},

GalagaRenderer_drawBouncer_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isbouncingBall;
  }
},

GalagaRenderer_drawBouncer_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2, t3, t4, t5, t6, t7;
    t1 = this.this_0;
    t1.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
    t1.get$ctx().lineWidth = 3;
    t1.get$ctx().beginPath();
    t2 = e.get$Sprite();
    if (t2 === 1) {
      t2 = t1.get$ctx();
      t3 = t1.get$spreadup();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 2) {
      t2 = t1.get$ctx();
      t3 = t1.get$lifeup();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 3) {
      t2 = t1.get$ctx();
      t3 = t1.get$multiplierup();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 4) {
      t2 = t1.get$ctx();
      t3 = t1.get$bulletup();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 5) {
      t2 = t1.get$ctx();
      t3 = t1.get$coin();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 6) {
      t2 = t1.get$ctx();
      t3 = t1.get$ship();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 7) {
      t2 = t1.get$ctx();
      t3 = t1.get$enemy();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 8) {
      t2 = t1.get$ctx();
      t3 = t1.get$enemy2();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 9) {
      t2 = t1.get$ctx();
      t3 = t1.get$boss();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 10) {
      t2 = t1.get$ctx();
      t3 = t1.get$skull();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 11) {
      t2 = t1.get$ctx();
      t3 = t1.get$invincible();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 12) {
      t2 = t1.get$ctx();
      t3 = t1.get$timeUp();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 13) {
      t2 = t1.get$ctx();
      t3 = t1.get$invincibleShip();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 14) {
      t2 = t1.get$ctx();
      t3 = t1.get$teleporter();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 15) {
      t2 = t1.get$ctx();
      t3 = t1.get$mothership1();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 16) {
      t2 = t1.get$ctx();
      t3 = t1.get$mothership2();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 17) {
      t2 = t1.get$ctx();
      t3 = t1.get$mothership3();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    } else if (t2 === 18) {
      t2 = t1.get$ctx();
      t3 = t1.get$mothership4();
      t4 = $.getInterceptor$x(e);
      t5 = t4.get$x(e);
      t6 = t4.get$width(e);
      if (typeof t6 !== "number")
        throw t6.$div();
      t6 = $.$sub$n(t5, t6 / 2);
      t5 = t4.get$y(e);
      t7 = t4.get$height(e);
      if (typeof t7 !== "number")
        throw t7.$div();
      t2.drawImage(t3, t6, $.$sub$n(t5, t7 / 2), t4.get$width(e), t4.get$height(e));
    }
    t1.get$ctx().stroke();
  }
},

GalagaRenderer_drawBullets_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isBullet;
  }
},

GalagaRenderer_drawBullets_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = e.get$momentum().yVel;
    t2 = $.getInterceptor$n(t1);
    if (t2.$lt(t1, 0) && e.get$Type() === "super") {
      t1 = this.this_0;
      t1.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t1.get$ctx().lineWidth = 3;
      t1.get$ctx().beginPath();
      t2 = $.getInterceptor$x(e);
      t1.get$ctx().drawImage(t1.get$superBullet(), $.$sub$n(t2.get$x(e), 8), $.$sub$n(t2.get$y(e), 8), 64, 32);
      t1.get$ctx().stroke();
    } else if (t2.$gt(t1, 0) && e.get$Type() === "super") {
      t1 = this.this_0;
      t1.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t1.get$ctx().lineWidth = 3;
      t1.get$ctx().beginPath();
      t2 = $.getInterceptor$x(e);
      t1.get$ctx().drawImage(t1.get$bossSuperBullet(), $.$sub$n(t2.get$x(e), 72), $.$sub$n(t2.get$y(e), 8), 64, 64);
      t1.get$ctx().stroke();
    } else if (t2.$lt(t1, 0) && e.get$Type() !== "super") {
      t1 = this.this_0;
      t1.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t1.get$ctx().lineWidth = 3;
      t1.get$ctx().beginPath();
      t2 = $.getInterceptor$x(e);
      t1.get$ctx().drawImage(t1.get$shipbullet(), $.$sub$n(t2.get$x(e), 8), $.$sub$n(t2.get$y(e), 8), 16, 16);
      t1.get$ctx().stroke();
    } else if (t2.$gt(t1, 0) && e.get$Type() !== "super") {
      t1 = this.this_0;
      t1.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t1.get$ctx().lineWidth = 3;
      t1.get$ctx().beginPath();
      t2 = $.getInterceptor$x(e);
      t1.get$ctx().drawImage(t1.get$enemybullet(), $.$sub$n(t2.get$x(e), 8), $.$sub$n(t2.get$y(e), 8), 16, 16);
      t1.get$ctx().stroke();
    }
  }
},

GalagaRenderer_drawPowerUps_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isPowerUp;
  }
},

GalagaRenderer_drawPowerUps_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = this.this_0;
    t1.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
    t1.get$ctx().lineWidth = 3;
    t1.get$ctx().beginPath();
    t2 = $.getInterceptor$x(e);
    t3 = t2.get$type(e);
    if (t3 === "SpiralShot")
      t1.get$ctx().drawImage(t1.get$spreadup(), $.$sub$n(t2.get$x(e), 20), $.$sub$n(t2.get$y(e), 20), 36, 36);
    else if (t3 === "ExtraLife")
      t1.get$ctx().drawImage(t1.get$lifeup(), $.$sub$n(t2.get$x(e), 20), $.$sub$n(t2.get$y(e), 20), 36, 36);
    else if (t3 === "Multiplier")
      t1.get$ctx().drawImage(t1.get$multiplierup(), $.$sub$n(t2.get$x(e), 20), $.$sub$n(t2.get$y(e), 20), 36, 36);
    else if (t3 === "BulletIncrease")
      t1.get$ctx().drawImage(t1.get$bulletup(), $.$sub$n(t2.get$x(e), 20), $.$sub$n(t2.get$y(e), 20), 36, 36);
    else if (t3 === "bulletPower")
      t1.get$ctx().drawImage(t1.get$coin(), $.$sub$n(t2.get$x(e), 8), $.$sub$n(t2.get$y(e), 8), 12, 12);
    else if (t3 === "invincible")
      t1.get$ctx().drawImage(t1.get$invincible(), $.$sub$n(t2.get$x(e), 31), $.$sub$n(t2.get$y(e), 31), 62, 62);
    else if (t3 === "timeUp")
      t1.get$ctx().drawImage(t1.get$timeUp(), $.$sub$n(t2.get$x(e), 22), $.$sub$n(t2.get$y(e), 25), 42, 42);
    else if (t3 === "teleporter")
      t1.get$ctx().drawImage(t1.get$teleporter(), $.$sub$n(t2.get$x(e), 22), $.$sub$n(t2.get$y(e), 25), 42, 42);
    t1.get$ctx().stroke();
  }
},

GalagaRenderer_drawEnemys_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaRenderer_drawEnemys_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2, t3, t4;
    t1 = $.getInterceptor$x(e);
    t2 = t1.get$type(e);
    if (t2 === "Drone" && !e.get$flicker()) {
      t2 = this.this_0;
      t2.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t2.get$ctx().lineWidth = 3;
      t2.get$ctx().beginPath();
      t2.get$ctx().drawImage(t2.get$enemy(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 12, 12);
      t2.get$ctx().stroke();
    } else if (t2 === "MotherShip" && !e.get$flicker()) {
      t2 = this.this_0;
      t2.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t2.get$ctx().lineWidth = 3;
      t2.get$ctx().beginPath();
      t3 = e.get$motherShipType();
      if (t3 === 1)
        t2.get$ctx().drawImage(t2.get$mothership1(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 42, 42);
      else if (t3 === 2)
        t2.get$ctx().drawImage(t2.get$mothership2(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 42, 42);
      else if (t3 === 3)
        t2.get$ctx().drawImage(t2.get$mothership3(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 42, 42);
      else if (t3 === 4)
        t2.get$ctx().drawImage(t2.get$mothership4(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 42, 42);
      t2.get$ctx().stroke();
    } else if (t2 === "Boss") {
      t2 = this.this_0;
      t2.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t2.get$ctx().lineWidth = 3;
      t2.get$ctx().beginPath();
      if (!e.get$flicker())
        t2.get$ctx().drawImage(t2.get$boss(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 72, 72);
      t2.get$ctx().drawImage(t2.get$bosshp(), -300, -250, e.get$health() * 6, 12);
      t2.get$ctx().stroke();
    } else if (t2 === "Normal" && !e.get$flicker()) {
      t2 = this.this_0;
      t2.get$ctx().strokeStyle = "rgba(255, 255, 255, 1.0)";
      t2.get$ctx().lineWidth = 3;
      t2.get$ctx().beginPath();
      t3 = e.get$enemyType();
      t4 = t2.get$ctx();
      if (t3 > 0.5)
        t4.drawImage(t2.get$enemy(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 42, 42);
      else
        t4.drawImage(t2.get$enemy2(), $.$sub$n(t1.get$x(e), 22), $.$sub$n(t1.get$y(e), 25), 36, 36);
      t2.get$ctx().stroke();
    }
  }
},

GalagaRenderer_shipHit_closure: {"": "Closure;this_0",
  call$0: function() {
    this.this_0.set$shipFlicker(true);
    return true;
  }
},

GalagaRenderer_shipHit_closure0: {"": "Closure;this_1",
  call$0: function() {
    this.this_1.set$shipFlicker(false);
    return false;
  }
},

GalagaRenderer_shipHit_closure1: {"": "Closure;this_2",
  call$0: function() {
    this.this_2.set$shipFlicker(true);
    return true;
  }
},

GalagaRenderer_shipHit_closure2: {"": "Closure;this_3",
  call$0: function() {
    this.this_3.set$shipFlicker(false);
    return false;
  }
},

GalagaRenderer_shipHit_closure3: {"": "Closure;this_4",
  call$0: function() {
    this.this_4.set$shipFlicker(true);
    return true;
  }
},

GalagaRenderer_shipHit_closure4: {"": "Closure;this_5",
  call$0: function() {
    this.this_5.set$shipFlicker(false);
    return false;
  }
},

GalagaRenderer_bossHit_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaRenderer_bossHit_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    if ($.get$type$x(e) === "Boss" && e.get$idNum() === this.this_0.get$_game().get$targetId()) {
      t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_bossHit__closure(e), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t1._timer = $._createTimer(C.Duration_25000, t1.get$_run());
      t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_bossHit__closure0(e), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t1._timer = $._createTimer(C.Duration_75000, t1.get$_run());
      this.this_0.subtleBgFade$0();
    }
  }
},

GalagaRenderer_bossHit__closure: {"": "Closure;e_1",
  call$0: function() {
    this.e_1.set$flicker(true);
    return true;
  }
},

GalagaRenderer_bossHit__closure0: {"": "Closure;e_2",
  call$0: function() {
    this.e_2.set$flicker(false);
    return false;
  }
},

GalagaRenderer_motherShipHit_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaRenderer_motherShipHit_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    if ($.get$type$x(e) === "MotherShip" && e.get$idNum() === this.this_0.get$_game().get$targetId()) {
      t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_motherShipHit__closure(e), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t1._timer = $._createTimer(C.Duration_25000, t1.get$_run());
      t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_motherShipHit__closure0(e), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t1._timer = $._createTimer(C.Duration_75000, t1.get$_run());
      t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_motherShipHit__closure1(e), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t1._timer = $._createTimer(C.Duration_150000, t1.get$_run());
      t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_motherShipHit__closure2(e), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t1._timer = $._createTimer(C.Duration_225000, t1.get$_run());
      t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_motherShipHit__closure3(e), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t1._timer = $._createTimer(C.Duration_300000, t1.get$_run());
      t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_motherShipHit__closure4(e), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t1._timer = $._createTimer(C.Duration_375000, t1.get$_run());
      this.this_0.subtleBgFade$0();
    }
  }
},

GalagaRenderer_motherShipHit__closure: {"": "Closure;e_1",
  call$0: function() {
    this.e_1.set$flicker(true);
    return true;
  }
},

GalagaRenderer_motherShipHit__closure0: {"": "Closure;e_2",
  call$0: function() {
    this.e_2.set$flicker(false);
    return false;
  }
},

GalagaRenderer_motherShipHit__closure1: {"": "Closure;e_3",
  call$0: function() {
    this.e_3.set$flicker(true);
    return true;
  }
},

GalagaRenderer_motherShipHit__closure2: {"": "Closure;e_4",
  call$0: function() {
    this.e_4.set$flicker(false);
    return false;
  }
},

GalagaRenderer_motherShipHit__closure3: {"": "Closure;e_5",
  call$0: function() {
    this.e_5.set$flicker(true);
    return true;
  }
},

GalagaRenderer_motherShipHit__closure4: {"": "Closure;e_6",
  call$0: function() {
    this.e_6.set$flicker(false);
    return false;
  }
},

GalagaRenderer_normalShipHit_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isEnemy;
  }
},

GalagaRenderer_normalShipHit_closure0: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    if ($.get$type$x(e) === "Normal" && e.get$idNum() === this.this_0.get$_game().get$targetId()) {
      t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_normalShipHit__closure(e), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t1._timer = $._createTimer(C.Duration_25000, t1.get$_run());
      t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_normalShipHit__closure0(e), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t1._timer = $._createTimer(C.Duration_75000, t1.get$_run());
      t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_normalShipHit__closure1(e), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t1._timer = $._createTimer(C.Duration_150000, t1.get$_run());
      t1 = new $._ZoneTimer($.get$_Zone__current(), new $.GalagaRenderer_normalShipHit__closure2(e), null);
      t2 = t1._zone;
      t2._openCallbacks = t2._openCallbacks + 1;
      t1._timer = $._createTimer(C.Duration_225000, t1.get$_run());
      this.this_0.subtleBgFade$0();
    }
  }
},

GalagaRenderer_normalShipHit__closure: {"": "Closure;e_1",
  call$0: function() {
    this.e_1.set$flicker(true);
    return true;
  }
},

GalagaRenderer_normalShipHit__closure0: {"": "Closure;e_2",
  call$0: function() {
    this.e_2.set$flicker(false);
    return false;
  }
},

GalagaRenderer_normalShipHit__closure1: {"": "Closure;e_3",
  call$0: function() {
    this.e_3.set$flicker(true);
    return true;
  }
},

GalagaRenderer_normalShipHit__closure2: {"": "Closure;e_4",
  call$0: function() {
    this.e_4.set$flicker(false);
    return false;
  }
},

GalagaRenderer_subtleBgFade_closure: {"": "Closure;this_0",
  call$0: function() {
    this.this_0.get$_game().bgStyle = "rgba(0, 0, 0, 0.83)";
    return "rgba(0, 0, 0, 0.83)";
  }
},

GalagaRenderer_subtleBgFade_closure0: {"": "Closure;this_1",
  call$0: function() {
    this.this_1.get$_game().bgStyle = "rgba(0, 0, 0, 0.81)";
    return "rgba(0, 0, 0, 0.81)";
  }
},

GalagaRenderer_subtleBgFade_closure1: {"": "Closure;this_2",
  call$0: function() {
    this.this_2.get$_game().bgStyle = "rgba(0, 0, 0, 0.79)";
    return "rgba(0, 0, 0, 0.79)";
  }
},

GalagaRenderer_subtleBgFade_closure2: {"": "Closure;this_3",
  call$0: function() {
    this.this_3.get$_game().bgStyle = "rgba(0, 0, 0, 0.77)";
    return "rgba(0, 0, 0, 0.77)";
  }
},

GalagaRenderer_subtleBgFade_closure3: {"": "Closure;this_4",
  call$0: function() {
    this.this_4.get$_game().bgStyle = "rgba(0, 0, 0, 0.75)";
    return "rgba(0, 0, 0, 0.75)";
  }
},

GalagaRenderer_subtleBgFade_closure4: {"": "Closure;this_5",
  call$0: function() {
    this.this_5.get$_game().bgStyle = "rgba(0, 0, 0, 0.73)";
    return "rgba(0, 0, 0, 0.73)";
  }
},

GalagaRenderer_subtleBgFade_closure5: {"": "Closure;this_6",
  call$0: function() {
    this.this_6.get$_game().bgStyle = "rgba(0, 0, 0, 0.71)";
    return "rgba(0, 0, 0, 0.71)";
  }
},

GalagaRenderer_subtleBgFade_closure6: {"": "Closure;this_7",
  call$0: function() {
    this.this_7.get$_game().bgStyle = "rgba(0, 0, 0, 0.69)";
    return "rgba(0, 0, 0, 0.69)";
  }
},

GalagaRenderer_subtleBgFade_closure7: {"": "Closure;this_8",
  call$0: function() {
    this.this_8.get$_game().bgStyle = "rgba(0, 0, 0, 0.67)";
    return "rgba(0, 0, 0, 0.67)";
  }
},

GalagaRenderer_subtleBgFade_closure8: {"": "Closure;this_9",
  call$0: function() {
    this.this_9.get$_game().bgStyle = "rgba(0, 0, 0, 0.65)";
    return "rgba(0, 0, 0, 0.65)";
  }
},

GalagaRenderer_subtleBgFade_closure9: {"": "Closure;this_10",
  call$0: function() {
    this.this_10.get$_game().bgStyle = "rgba(0, 0, 0, 0.63)";
    return "rgba(0, 0, 0, 0.63)";
  }
},

GalagaRenderer_subtleBgFade_closure10: {"": "Closure;this_11",
  call$0: function() {
    this.this_11.get$_game().bgStyle = "rgba(0, 0, 0, 0.61)";
    return "rgba(0, 0, 0, 0.61)";
  }
},

GalagaRenderer_subtleBgFade_closure11: {"": "Closure;this_12",
  call$0: function() {
    this.this_12.get$_game().bgStyle = "rgba(0, 0, 0, 0.59)";
    return "rgba(0, 0, 0, 0.59)";
  }
},

GalagaRenderer_subtleBgFade_closure12: {"": "Closure;this_13",
  call$0: function() {
    this.this_13.get$_game().bgStyle = "rgba(0, 0, 0, 0.57)";
    return "rgba(0, 0, 0, 0.57)";
  }
},

GalagaRenderer_subtleBgFade_closure13: {"": "Closure;this_14",
  call$0: function() {
    this.this_14.get$_game().bgStyle = "rgba(0, 0, 0, 0.55)";
    return "rgba(0, 0, 0, 0.55)";
  }
},

GalagaRenderer_subtleBgFade_closure14: {"": "Closure;this_15",
  call$0: function() {
    this.this_15.get$_game().bgStyle = "rgba(0, 0, 0, 0.53)";
    return "rgba(0, 0, 0, 0.53)";
  }
},

GalagaRenderer_subtleBgFade_closure15: {"": "Closure;this_16",
  call$0: function() {
    this.this_16.get$_game().bgStyle = "rgba(0, 0, 0, 0.55)";
    return "rgba(0, 0, 0, 0.55)";
  }
},

GalagaRenderer_subtleBgFade_closure16: {"": "Closure;this_17",
  call$0: function() {
    this.this_17.get$_game().bgStyle = "rgba(0, 0, 0, 0.57)";
    return "rgba(0, 0, 0, 0.57)";
  }
},

GalagaRenderer_subtleBgFade_closure17: {"": "Closure;this_18",
  call$0: function() {
    this.this_18.get$_game().bgStyle = "rgba(0, 0, 0, 0.59)";
    return "rgba(0, 0, 0, 0.59)";
  }
},

GalagaRenderer_subtleBgFade_closure18: {"": "Closure;this_19",
  call$0: function() {
    this.this_19.get$_game().bgStyle = "rgba(0, 0, 0, 0.61)";
    return "rgba(0, 0, 0, 0.61)";
  }
},

GalagaRenderer_subtleBgFade_closure19: {"": "Closure;this_20",
  call$0: function() {
    this.this_20.get$_game().bgStyle = "rgba(0, 0, 0, 0.63)";
    return "rgba(0, 0, 0, 0.63)";
  }
},

GalagaRenderer_subtleBgFade_closure20: {"": "Closure;this_21",
  call$0: function() {
    this.this_21.get$_game().bgStyle = "rgba(0, 0, 0, 0.65)";
    return "rgba(0, 0, 0, 0.65)";
  }
},

GalagaRenderer_subtleBgFade_closure21: {"": "Closure;this_22",
  call$0: function() {
    this.this_22.get$_game().bgStyle = "rgba(0, 0, 0, 0.67)";
    return "rgba(0, 0, 0, 0.67)";
  }
},

GalagaRenderer_subtleBgFade_closure22: {"": "Closure;this_23",
  call$0: function() {
    this.this_23.get$_game().bgStyle = "rgba(0, 0, 0, 0.69)";
    return "rgba(0, 0, 0, 0.69)";
  }
},

GalagaRenderer_subtleBgFade_closure23: {"": "Closure;this_24",
  call$0: function() {
    this.this_24.get$_game().bgStyle = "rgba(0, 0, 0, 0.71)";
    return "rgba(0, 0, 0, 0.71)";
  }
},

GalagaRenderer_subtleBgFade_closure24: {"": "Closure;this_25",
  call$0: function() {
    this.this_25.get$_game().bgStyle = "rgba(0, 0, 0, 0.73)";
    return "rgba(0, 0, 0, 0.73)";
  }
},

GalagaRenderer_subtleBgFade_closure25: {"": "Closure;this_26",
  call$0: function() {
    this.this_26.get$_game().bgStyle = "rgba(0, 0, 0, 0.75)";
    return "rgba(0, 0, 0, 0.75)";
  }
},

GalagaRenderer_subtleBgFade_closure26: {"": "Closure;this_27",
  call$0: function() {
    this.this_27.get$_game().bgStyle = "rgba(0, 0, 0, 0.77)";
    return "rgba(0, 0, 0, 0.77)";
  }
},

GalagaRenderer_subtleBgFade_closure27: {"": "Closure;this_28",
  call$0: function() {
    this.this_28.get$_game().bgStyle = "rgba(0, 0, 0, 0.79)";
    return "rgba(0, 0, 0, 0.79)";
  }
},

GalagaRenderer_subtleBgFade_closure28: {"": "Closure;this_29",
  call$0: function() {
    this.this_29.get$_game().bgStyle = "rgba(0, 0, 0, 0.81)";
    return "rgba(0, 0, 0, 0.81)";
  }
},

GalagaRenderer_subtleBgFade_closure29: {"": "Closure;this_30",
  call$0: function() {
    this.this_30.get$_game().bgStyle = "rgba(0, 0, 0, 0.83)";
    return "rgba(0, 0, 0, 0.83)";
  }
},

GalagaRenderer_subtleBgFade_closure30: {"": "Closure;this_31",
  call$0: function() {
    this.this_31.get$_game().bgStyle = "rgba(0, 0, 0, 0.85)";
    return "rgba(0, 0, 0, 0.85)";
  }
},

GalagaRenderer_bgFade_closure: {"": "Closure;this_0",
  call$0: function() {
    this.this_0.get$_game().bgStyle = "rgba(0, 0, 0, 0.75)";
    return "rgba(0, 0, 0, 0.75)";
  }
},

GalagaRenderer_bgFade_closure0: {"": "Closure;this_1",
  call$0: function() {
    this.this_1.get$_game().bgStyle = "rgba(0, 0, 0, 0.70)";
    return "rgba(0, 0, 0, 0.70)";
  }
},

GalagaRenderer_bgFade_closure1: {"": "Closure;this_2",
  call$0: function() {
    this.this_2.get$_game().bgStyle = "rgba(0, 0, 0, 0.65)";
    return "rgba(0, 0, 0, 0.65)";
  }
},

GalagaRenderer_bgFade_closure2: {"": "Closure;this_3",
  call$0: function() {
    this.this_3.get$_game().bgStyle = "rgba(0, 0, 0, 0.60)";
    return "rgba(0, 0, 0, 0.60)";
  }
},

GalagaRenderer_bgFade_closure3: {"": "Closure;this_4",
  call$0: function() {
    this.this_4.get$_game().bgStyle = "rgba(0, 0, 0, 0.55)";
    return "rgba(0, 0, 0, 0.55)";
  }
},

GalagaRenderer_bgFade_closure4: {"": "Closure;this_5",
  call$0: function() {
    this.this_5.get$_game().bgStyle = "rgba(0, 0, 0, 0.60)";
    return "rgba(0, 0, 0, 0.60)";
  }
},

GalagaRenderer_bgFade_closure5: {"": "Closure;this_6",
  call$0: function() {
    this.this_6.get$_game().bgStyle = "rgba(0, 0, 0, 0.65)";
    return "rgba(0, 0, 0, 0.65)";
  }
},

GalagaRenderer_bgFade_closure6: {"": "Closure;this_7",
  call$0: function() {
    this.this_7.get$_game().bgStyle = "rgba(0, 0, 0, 0.70)";
    return "rgba(0, 0, 0, 0.70)";
  }
},

GalagaRenderer_bgFade_closure7: {"": "Closure;this_8",
  call$0: function() {
    this.this_8.get$_game().bgStyle = "rgba(0, 0, 0, 0.75)";
    return "rgba(0, 0, 0, 0.75)";
  }
},

GalagaRenderer_bgFade_closure8: {"": "Closure;this_9",
  call$0: function() {
    this.this_9.get$_game().bgStyle = "rgba(0, 0, 0, 0.80)";
    return "rgba(0, 0, 0, 0.80)";
  }
},

GalagaRenderer_bgFade_closure9: {"": "Closure;this_10",
  call$0: function() {
    this.this_10.get$_game().bgStyle = "rgba(0, 0, 0, 0.85)";
    return "rgba(0, 0, 0, 0.85)";
  }
}}],
["html_common", "dart:html_common", , {
convertNativeToDart_DateTime: function(date) {
  return $.DateTime$fromMillisecondsSinceEpoch(date.getTime(), true);
},

convertNativeToDart_AcceptStructuredClone: function(object, mustCopy) {
  var copies = [];
  return new $.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $.convertNativeToDart_AcceptStructuredClone_findSlot([], copies), new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
},

JenkinsSmiHash_combine: function(hash, value) {
  if (typeof value !== "number")
    throw $.iae(value);
  hash = 536870911 & hash + value;
  hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
  return (hash ^ C.JSInt_methods.$shr(hash, 6)) >>> 0;
},

JenkinsSmiHash_finish: function(hash) {
  hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash = (hash ^ C.JSInt_methods.$shr(hash, 11)) >>> 0;
  return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
},

convertNativeToDart_AcceptStructuredClone_findSlot: {"": "Closure;values_0,copies_1",
  call$1: function(value) {
    var t1, $length, i, t2;
    t1 = this.values_0;
    $length = t1.length;
    for (i = 0; i < $length; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    t1.push(value);
    this.copies_1.push(null);
    return $length;
  }
},

convertNativeToDart_AcceptStructuredClone_readSlot: {"": "Closure;copies_2",
  call$1: function(i) {
    var t1 = this.copies_2;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    return t1[i];
  }
},

convertNativeToDart_AcceptStructuredClone_writeSlot: {"": "Closure;copies_3",
  call$2: function(i, x) {
    var t1 = this.copies_3;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    t1[i] = x;
  }
},

convertNativeToDart_AcceptStructuredClone_walk: {"": "Closure;mustCopy_4,findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var slot, copy, t1, key, $length, i;
    if (typeof e !== "object" || e === null || e.constructor !== Array || !!e.fixed$length)
      return this.call$1$bailout(1, e);
    if (e instanceof Date)
      return $.convertNativeToDart_DateTime(e);
    if (e instanceof RegExp)
      throw $.wrapException(new $.UnimplementedError("structured clone of RegExp"));
    if (Object.getPrototypeOf(e) === Object.prototype) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      copy = $.makeLiteralMap([]);
      this.writeSlot_7.call$2(slot, copy);
      for (t1 = Object.keys(e), t1 = new $.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
        key = t1._liblib$_current;
        copy.$indexSet(copy, key, this.call$1(e[key]));
      }
      return copy;
    }
    if (e instanceof Array) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      $length = e.length;
      if (this.mustCopy_4)
        copy = new Array($length);
      else
        copy = e;
      this.writeSlot_7.call$2(slot, copy);
      for (i = 0; i < $length; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        t1 = this.call$1(e[i]);
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
    }
    return e;
  },
  call$1$bailout: function(state0, e) {
    var slot, copy, t1, key, $length, t2, i;
    if (e == null)
      return e;
    if (typeof e === "boolean")
      return e;
    if (typeof e === "number")
      return e;
    if (typeof e === "string")
      return e;
    if (e instanceof Date)
      return $.convertNativeToDart_DateTime(e);
    if (e instanceof RegExp)
      throw $.wrapException(new $.UnimplementedError("structured clone of RegExp"));
    if (Object.getPrototypeOf(e) === Object.prototype) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      copy = $.makeLiteralMap([]);
      this.writeSlot_7.call$2(slot, copy);
      for (t1 = Object.keys(e), t1 = new $.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
        key = t1._liblib$_current;
        copy.$indexSet(copy, key, this.call$1(e[key]));
      }
      return copy;
    }
    if (e instanceof Array) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      t1 = $.getInterceptor$asx(e);
      $length = t1.get$length(e);
      copy = this.mustCopy_4 ? new Array($length) : e;
      this.writeSlot_7.call$2(slot, copy);
      if (typeof $length !== "number")
        throw $.iae($length);
      t2 = $.getInterceptor$ax(copy);
      i = 0;
      for (; i < $length; ++i)
        t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
      return copy;
    }
    return e;
  }
}}],
]);
Isolate.$finishClasses($$, $, null);
$$ = null;

$.IsolateNatives__processWorkerMessage$closure = new $.Closure$_processWorkerMessage($.IsolateNatives__processWorkerMessage, "IsolateNatives__processWorkerMessage$closure");
$.Primitives__throwFormatException$closure = new $.Closure$_throwFormatException($.Primitives__throwFormatException, "Primitives__throwFormatException$closure");
$.toStringWrapper$closure = new $.Closure$toStringWrapper($.toStringWrapper, "toStringWrapper$closure");
$.invokeClosure$closure = new $.Closure$invokeClosure($.invokeClosure, "invokeClosure$closure");
$.typeNameInChrome$closure = new $.Closure$typeNameInChrome($.typeNameInChrome, "typeNameInChrome$closure");
$.typeNameInSafari$closure = new $.Closure$typeNameInSafari($.typeNameInSafari, "typeNameInSafari$closure");
$.typeNameInOpera$closure = new $.Closure$typeNameInOpera($.typeNameInOpera, "typeNameInOpera$closure");
$.typeNameInFirefox$closure = new $.Closure$typeNameInFirefox($.typeNameInFirefox, "typeNameInFirefox$closure");
$.typeNameInIE$closure = new $.Closure$typeNameInIE($.typeNameInIE, "typeNameInIE$closure");
$.constructorNameFallback$closure = new $.Closure$constructorNameFallback($.constructorNameFallback, "constructorNameFallback$closure");
$.callDartFunctionWith1Arg$closure = new $.Closure$callDartFunctionWith1Arg($.callDartFunctionWith1Arg, "callDartFunctionWith1Arg$closure");
$._asyncRunCallback$closure = new $.Closure$_asyncRunCallback($._asyncRunCallback, "_asyncRunCallback$closure");
$._nullDataHandler$closure = new $.Closure$_nullDataHandler($._nullDataHandler, "_nullDataHandler$closure");
$._nullErrorHandler$closure = new $.Closure$_nullErrorHandler($._nullErrorHandler, "_nullErrorHandler$closure");
$._nullDoneHandler$closure = new $.Closure$_nullDoneHandler($._nullDoneHandler, "_nullDoneHandler$closure");
$.main$closure = new $.Closure$main($.main, "main$closure");
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$asx = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$ax = function(receiver) {
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof $.Object))
    return $.UnknownJavaScriptObject.prototype;
  return receiver;
};
$.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof $.Object))
    return $.UnknownJavaScriptObject.prototype;
  return receiver;
};
$.getInterceptor$nx = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof $.Object))
    return $.UnknownJavaScriptObject.prototype;
  return receiver;
};
$.getInterceptor$x = function(receiver) {
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  return $.getNativeInterceptor(receiver);
};
var C = {};
C.C_CloseToken = new $.CloseToken();
C.C_UnknownJavaScriptObject = new $.UnknownJavaScriptObject();
C.C__DelayedDone = new $._DelayedDone();
C.C__Random = new $._Random();
C.Duration_0 = new $.Duration(0);
C.Duration_100000 = new $.Duration(100000);
C.Duration_1000000 = new $.Duration(1000000);
C.Duration_10000000 = new $.Duration(10000000);
C.Duration_11000000 = new $.Duration(11000000);
C.Duration_12000000 = new $.Duration(12000000);
C.Duration_125000 = new $.Duration(125000);
C.Duration_13000000 = new $.Duration(13000000);
C.Duration_14000000 = new $.Duration(14000000);
C.Duration_150000 = new $.Duration(150000);
C.Duration_15000000 = new $.Duration(15000000);
C.Duration_175000 = new $.Duration(175000);
C.Duration_200000 = new $.Duration(200000);
C.Duration_2000000 = new $.Duration(2000000);
C.Duration_225000 = new $.Duration(225000);
C.Duration_25000 = new $.Duration(25000);
C.Duration_250000 = new $.Duration(250000);
C.Duration_275000 = new $.Duration(275000);
C.Duration_300000 = new $.Duration(300000);
C.Duration_3000000 = new $.Duration(3000000);
C.Duration_325000 = new $.Duration(325000);
C.Duration_350000 = new $.Duration(350000);
C.Duration_375000 = new $.Duration(375000);
C.Duration_400000 = new $.Duration(400000);
C.Duration_4000000 = new $.Duration(4000000);
C.Duration_425000 = new $.Duration(425000);
C.Duration_450000 = new $.Duration(450000);
C.Duration_475000 = new $.Duration(475000);
C.Duration_50000 = new $.Duration(50000);
C.Duration_500000 = new $.Duration(500000);
C.Duration_5000000 = new $.Duration(5000000);
C.Duration_525000 = new $.Duration(525000);
C.Duration_550000 = new $.Duration(550000);
C.Duration_575000 = new $.Duration(575000);
C.Duration_600000 = new $.Duration(600000);
C.Duration_6000000 = new $.Duration(6000000);
C.Duration_625000 = new $.Duration(625000);
C.Duration_650000 = new $.Duration(650000);
C.Duration_7000000 = new $.Duration(7000000);
C.Duration_75000 = new $.Duration(75000);
C.Duration_8000000 = new $.Duration(8000000);
C.Duration_9000000 = new $.Duration(9000000);
C.EventStreamProvider_click = new $.EventStreamProvider("click");
C.EventStreamProvider_keydown = new $.EventStreamProvider("keydown");
C.EventStreamProvider_keyup = new $.EventStreamProvider("keyup");
C.EventStreamProvider_mousedown = new $.EventStreamProvider("mousedown");
C.EventStreamProvider_mousemove = new $.EventStreamProvider("mousemove");
C.EventStreamProvider_mouseup = new $.EventStreamProvider("mouseup");
C.EventStreamProvider_touchmove = new $.EventStreamProvider("touchmove");
C.EventStreamProvider_touchstart = new $.EventStreamProvider("touchstart");
C.EventStreamProvider_webkitpointerlockchange = new $.EventStreamProvider("webkitpointerlockchange");
C.JSArray_methods = $.JSArray.prototype;
C.JSDouble_methods = $.JSDouble.prototype;
C.JSInt_methods = $.JSInt.prototype;
C.JSNull_methods = $.JSNull.prototype;
C.JSNumber_methods = $.JSNumber.prototype;
C.JSString_methods = $.JSString.prototype;
C.JS_CONST_ZYJ =     ((typeof version == "function" && typeof os == "object" && "system" in os)
    || (typeof navigator == "object"
        && navigator.userAgent.indexOf('Chrome') != -1))
        ? function(x) { return x.$dartCachedLength || x.length; }
        : function(x) { return x.length; };
;
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
C.List_empty = Isolate.makeConstantList([]);
C.Window_methods = $.Window.prototype;
$.dispatchPropertyName = null;
$.lazyPort = null;
$.ReceivePortImpl__nextFreeId = 1;
$.Primitives_mirrorFunctionCacheName = "$cachedFunction";
$.Primitives_mirrorInvokeCacheName = "$cachedInvocation";
$.interceptorsByTag = null;
$.leafTags = null;
$.interceptorToTag = null;
$._callbacksAreEnqueued = false;
$.Expando__keyCount = 0;
$.Game_debugMode = false;
$.$$dom_addEventListener$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).$$dom_addEventListener$3(receiver, a0, a1, a2);
};
$.$$dom_removeEventListener$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).$$dom_removeEventListener$3(receiver, a0, a1, a2);
};
$.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return $.getInterceptor$ns(receiver).$add(receiver, a0);
};
$.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (typeof receiver != "object")
    return a0 != null && receiver === a0;
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return $.getInterceptor$n(receiver).$ge(receiver, a0);
};
$.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return $.getInterceptor$n(receiver).$gt(receiver, a0);
};
$.$index$asx = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string" || $.isJsIndexable(receiver, receiver[$.dispatchPropertyName]))
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return $.getInterceptor$asx(receiver).$index(receiver, a0);
};
$.$indexSet$ax = function(receiver, a0, a1) {
  if ((receiver.constructor == Array || $.isJsIndexable(receiver, receiver[$.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return $.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
};
$.$le$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver <= a0;
  return $.getInterceptor$n(receiver).$le(receiver, a0);
};
$.$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return $.getInterceptor$n(receiver).$lt(receiver, a0);
};
$.$mul$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return $.getInterceptor$n(receiver).$mul(receiver, a0);
};
$.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return $.getInterceptor$n(receiver).$sub(receiver, a0);
};
$.abs$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).abs$0(receiver);
};
$.add$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).add$1(receiver, a0);
};
$.ceil$0$nx = function(receiver) {
  return $.getInterceptor$nx(receiver).ceil$0(receiver);
};
$.complete$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).complete$0(receiver);
};
$.forEach$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).forEach$1(receiver, a0);
};
$.get$_key$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$_key(receiver);
};
$.get$click$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$click(receiver);
};
$.get$context2d$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$context2d(receiver);
};
$.get$fill$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$fill(receiver);
};
$.get$hashCode$ = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.get$isEmpty$asx = function(receiver) {
  return $.getInterceptor$asx(receiver).get$isEmpty(receiver);
};
$.get$iterator$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).get$iterator(receiver);
};
$.get$keyCode$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$keyCode(receiver);
};
$.get$length$asx = function(receiver) {
  return $.getInterceptor$asx(receiver).get$length(receiver);
};
$.get$rect$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$rect(receiver);
};
$.get$state$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$state(receiver);
};
$.get$type$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$type(receiver);
};
$.get$values$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$values(receiver);
};
$.get$x$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$x(receiver);
};
$.get$y$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$y(receiver);
};
$.pause$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).pause$0(receiver);
};
$.preventDefault$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).preventDefault$0(receiver);
};
$.reset$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).reset$0(receiver);
};
$.round$0$nx = function(receiver) {
  return $.getInterceptor$nx(receiver).round$0(receiver);
};
$.set$click$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$click(receiver, value);
};
$.set$src$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$src(receiver, value);
};
$.set$state$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$state(receiver, value);
};
$.set$targetX$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$targetX(receiver, value);
};
$.start$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).start$0(receiver);
};
$.start$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).start$1(receiver, a0);
};
$.toList$0$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).toList$0(receiver);
};
$.toString$0 = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.mapTypeToInterceptor = [];
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return function() { return this; }();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== void 0;
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "workerIds", "IsolateNatives_workerIds", "get$IsolateNatives_workerIds", function() {
  return new $.Expando(null);
});
Isolate.$lazy($, "noSuchMethodPattern", "TypeErrorDecoder_noSuchMethodPattern", "get$TypeErrorDecoder_noSuchMethodPattern", function() {
  return $.TypeErrorDecoder_extractPattern($.TypeErrorDecoder_provokeCallErrorOn({ toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "notClosurePattern", "TypeErrorDecoder_notClosurePattern", "get$TypeErrorDecoder_notClosurePattern", function() {
  return $.TypeErrorDecoder_extractPattern($.TypeErrorDecoder_provokeCallErrorOn({ $method$: null, toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "nullCallPattern", "TypeErrorDecoder_nullCallPattern", "get$TypeErrorDecoder_nullCallPattern", function() {
  return $.TypeErrorDecoder_extractPattern($.TypeErrorDecoder_provokeCallErrorOn(null));
});
Isolate.$lazy($, "nullLiteralCallPattern", "TypeErrorDecoder_nullLiteralCallPattern", "get$TypeErrorDecoder_nullLiteralCallPattern", function() {
  return $.TypeErrorDecoder_extractPattern($.TypeErrorDecoder_provokeCallErrorOnNull());
});
Isolate.$lazy($, "undefinedCallPattern", "TypeErrorDecoder_undefinedCallPattern", "get$TypeErrorDecoder_undefinedCallPattern", function() {
  return $.TypeErrorDecoder_extractPattern($.TypeErrorDecoder_provokeCallErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralCallPattern", "TypeErrorDecoder_undefinedLiteralCallPattern", "get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
  return $.TypeErrorDecoder_extractPattern($.TypeErrorDecoder_provokeCallErrorOnUndefined());
});
Isolate.$lazy($, "nullPropertyPattern", "TypeErrorDecoder_nullPropertyPattern", "get$TypeErrorDecoder_nullPropertyPattern", function() {
  return $.TypeErrorDecoder_extractPattern($.TypeErrorDecoder_provokePropertyErrorOn(null));
});
Isolate.$lazy($, "nullLiteralPropertyPattern", "TypeErrorDecoder_nullLiteralPropertyPattern", "get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
  return $.TypeErrorDecoder_extractPattern($.TypeErrorDecoder_provokePropertyErrorOnNull());
});
Isolate.$lazy($, "undefinedPropertyPattern", "TypeErrorDecoder_undefinedPropertyPattern", "get$TypeErrorDecoder_undefinedPropertyPattern", function() {
  return $.TypeErrorDecoder_extractPattern($.TypeErrorDecoder_provokePropertyErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralPropertyPattern", "TypeErrorDecoder_undefinedLiteralPropertyPattern", "get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
  return $.TypeErrorDecoder_extractPattern($.TypeErrorDecoder_provokePropertyErrorOnUndefined());
});
Isolate.$lazy($, "getTypeNameOf", "getTypeNameOf", "get$getTypeNameOf", function() {
  return $.getFunctionForTypeNameOf();
});
Isolate.$lazy($, "_toStringList", "IterableMixinWorkaround__toStringList", "get$IterableMixinWorkaround__toStringList", function() {
  return $.List_List(null);
});
Isolate.$lazy($, "_stackTraceExpando", "_stackTraceExpando", "get$_stackTraceExpando", function() {
  return new $.Expando("asynchronous error");
});
Isolate.$lazy($, "_asyncCallbacks", "_asyncCallbacks", "get$_asyncCallbacks", function() {
  return $.ListQueue$(null);
});
Isolate.$lazy($, "_current", "_Zone__current", "get$_Zone__current", function() {
  return new $._DefaultZone(null, [], 0, false);
});
Isolate.$lazy($, "_toStringList", "ListMixin__toStringList", "get$ListMixin__toStringList", function() {
  return $.List_List(null);
});
Isolate.$lazy($, "_toStringList", "Maps__toStringList", "get$Maps__toStringList", function() {
  return $.List_List(null);
});
Isolate.$lazy($, "empty", "EventArgs_empty", "get$EventArgs_empty", function() {
  return new $.EventArgs();
});
// Native classes
$.defineNativeMethods("ArrayBuffer|CanvasGradient|CanvasPattern|DOMError|FileError|MediaError|MediaKeyError|Navigator|NavigatorUserMediaError|PositionError|SQLError|SVGAnimatedEnumeration|SVGAnimatedInteger|SVGAnimatedLength|SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList|Touch", $.Interceptor);

$.defineNativeMethods("HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDialogElement|HTMLDivElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLLabelElement|HTMLLegendElement|HTMLMapElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOptGroupElement|HTMLOptionElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLShadowElement|HTMLSpanElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableElement|HTMLTableHeaderCellElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTemplateElement|HTMLTitleElement|HTMLUListElement|HTMLUnknownElement", $.HtmlElement);

$.defineNativeMethodsNonleaf("HTMLElement", $.HtmlElement);

$.defineNativeMethods("HTMLAnchorElement", $.AnchorElement);

$.defineNativeMethods("Blob|File", $.Blob);

$.defineNativeMethods("HTMLButtonElement", $.ButtonElement);

$.defineNativeMethods("HTMLCanvasElement", $.CanvasElement);

$.defineNativeMethodsNonleaf("CanvasRenderingContext", $.CanvasRenderingContext);

$.defineNativeMethods("CanvasRenderingContext2D", $.CanvasRenderingContext2D);

$.defineNativeMethods("CDATASection|CharacterData|Comment|ProcessingInstruction|Text", $.CharacterData);

$.defineNativeMethods("DOMException", $.DomException);

$.defineNativeMethodsNonleaf("Element", $.Element);

$.defineNativeMethods("HTMLEmbedElement", $.EmbedElement);

$.defineNativeMethods("AudioProcessingEvent|AutocompleteErrorEvent|BeforeLoadEvent|CSSFontFaceLoadEvent|CloseEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|HashChangeEvent|IDBVersionChangeEvent|MIDIConnectionEvent|MIDIMessageEvent|MediaKeyEvent|MediaKeyMessageEvent|MediaKeyNeededEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|ProgressEvent|RTCDTMFToneChangeEvent|RTCDataChannelEvent|RTCIceCandidateEvent|ResourceProgressEvent|SecurityPolicyViolationEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|SpeechSynthesisEvent|StorageEvent|TrackEvent|TransitionEvent|WebGLContextEvent|WebKitAnimationEvent|WebKitTransitionEvent|XMLHttpRequestProgressEvent", $.Event);

$.defineNativeMethodsNonleaf("Event", $.Event);

$.defineNativeMethods("MediaStream", $.EventTarget);

$.defineNativeMethodsNonleaf("EventTarget", $.EventTarget);

$.defineNativeMethods("HTMLFieldSetElement", $.FieldSetElement);

$.defineNativeMethods("HTMLFormElement", $.FormElement);

$.defineNativeMethods("HTMLIFrameElement", $.IFrameElement);

$.defineNativeMethods("HTMLImageElement", $.ImageElement);

$.defineNativeMethods("HTMLInputElement", $.InputElement);

$.defineNativeMethods("KeyboardEvent", $.KeyboardEvent);

$.defineNativeMethods("HTMLKeygenElement", $.KeygenElement);

$.defineNativeMethods("HTMLLIElement", $.LIElement);

$.defineNativeMethods("HTMLLinkElement", $.LinkElement);

$.defineNativeMethods("HTMLAudioElement", $.MediaElement);

$.defineNativeMethodsNonleaf("HTMLMediaElement", $.MediaElement);

$.defineNativeMethods("DragEvent|MSPointerEvent|MouseEvent|MouseScrollEvent|MouseWheelEvent|PointerEvent|WheelEvent", $.MouseEvent);

$.defineNativeMethods("Attr|Document|DocumentFragment|DocumentType|Entity|HTMLDocument|Notation|SVGDocument|ShadowRoot", $.Node);

$.defineNativeMethodsNonleaf("Node", $.Node);

$.defineNativeMethods("HTMLOListElement", $.OListElement);

$.defineNativeMethods("HTMLObjectElement", $.ObjectElement);

$.defineNativeMethods("HTMLOutputElement", $.OutputElement);

$.defineNativeMethods("PopStateEvent", $.PopStateEvent);

$.defineNativeMethods("HTMLScriptElement", $.ScriptElement);

$.defineNativeMethods("HTMLSelectElement", $.SelectElement);

$.defineNativeMethods("HTMLSourceElement", $.SourceElement);

$.defineNativeMethods("Storage", $.Storage);

$.defineNativeMethods("HTMLStyleElement", $.StyleElement);

$.defineNativeMethods("HTMLTextAreaElement", $.TextAreaElement);

$.defineNativeMethods("TextMetrics", $.TextMetrics);

$.defineNativeMethods("TouchEvent", $.TouchEvent);

$.defineNativeMethods("TouchList", $.TouchList);

$.defineNativeMethods("HTMLTrackElement", $.TrackElement);

$.defineNativeMethods("CompositionEvent|FocusEvent|SVGZoomEvent|TextEvent", $.UIEvent);

$.defineNativeMethodsNonleaf("UIEvent", $.UIEvent);

$.defineNativeMethods("HTMLVideoElement", $.VideoElement);

$.defineNativeMethods("DOMWindow|Window", $.Window);

$.defineNativeMethods("ClientRect", $._ClientRect);

$.defineNativeMethods("SVGFEBlendElement", $.FEBlendElement);

$.defineNativeMethods("SVGFEColorMatrixElement", $.FEColorMatrixElement);

$.defineNativeMethods("SVGFEComponentTransferElement", $.FEComponentTransferElement);

$.defineNativeMethods("SVGFECompositeElement", $.FECompositeElement);

$.defineNativeMethods("SVGFEConvolveMatrixElement", $.FEConvolveMatrixElement);

$.defineNativeMethods("SVGFEDiffuseLightingElement", $.FEDiffuseLightingElement);

$.defineNativeMethods("SVGFEDisplacementMapElement", $.FEDisplacementMapElement);

$.defineNativeMethods("SVGFEFloodElement", $.FEFloodElement);

$.defineNativeMethods("SVGFEGaussianBlurElement", $.FEGaussianBlurElement);

$.defineNativeMethods("SVGFEImageElement", $.FEImageElement);

$.defineNativeMethods("SVGFEMergeElement", $.FEMergeElement);

$.defineNativeMethods("SVGFEMorphologyElement", $.FEMorphologyElement);

$.defineNativeMethods("SVGFEOffsetElement", $.FEOffsetElement);

$.defineNativeMethods("SVGFEPointLightElement", $.FEPointLightElement);

$.defineNativeMethods("SVGFESpecularLightingElement", $.FESpecularLightingElement);

$.defineNativeMethods("SVGFESpotLightElement", $.FESpotLightElement);

$.defineNativeMethods("SVGFETileElement", $.FETileElement);

$.defineNativeMethods("SVGFETurbulenceElement", $.FETurbulenceElement);

$.defineNativeMethods("SVGFilterElement", $.FilterElement);

$.defineNativeMethods("SVGForeignObjectElement", $.ForeignObjectElement);

$.defineNativeMethods("SVGAElement|SVGCircleElement|SVGClipPathElement|SVGDefsElement|SVGEllipseElement|SVGGElement|SVGLineElement|SVGPathElement|SVGPolygonElement|SVGPolylineElement|SVGSwitchElement", $.GraphicsElement);

$.defineNativeMethodsNonleaf("SVGGraphicsElement", $.GraphicsElement);

$.defineNativeMethods("SVGImageElement", $.ImageElement0);

$.defineNativeMethods("SVGMaskElement", $.MaskElement);

$.defineNativeMethods("SVGPatternElement", $.PatternElement);

$.defineNativeMethods("SVGRectElement", $.RectElement);

$.defineNativeMethods("SVGScriptElement", $.ScriptElement0);

$.defineNativeMethods("SVGStyleElement", $.StyleElement0);

$.defineNativeMethods("SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimationElement|SVGComponentTransferFunctionElement|SVGDescElement|SVGFEDistantLightElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEMergeNodeElement|SVGGradientElement|SVGLinearGradientElement|SVGMarkerElement|SVGMetadataElement|SVGRadialGradientElement|SVGSetElement|SVGStopElement|SVGSymbolElement|SVGTitleElement|SVGViewElement", $.SvgElement);

$.defineNativeMethodsNonleaf("SVGElement", $.SvgElement);

$.defineNativeMethods("SVGSVGElement", $.SvgSvgElement);

$.defineNativeMethods("SVGTextPathElement", $.TextContentElement);

$.defineNativeMethodsNonleaf("SVGTextContentElement", $.TextContentElement);

$.defineNativeMethods("SVGAltGlyphElement|SVGTSpanElement|SVGTextElement|SVGTextPositioningElement", $.TextPositioningElement);

$.defineNativeMethods("SVGUseElement", $.UseElement);

$.defineNativeMethods("DataView", $.TypedData);

$.defineNativeMethodsExtended("ArrayBufferView", $.TypedData, [$.TypedData_ListMixin, $.TypedData_ListMixin_FixedLengthListMixin, $.TypedData_ListMixin0, $.TypedData_ListMixin_FixedLengthListMixin0, $.TypedData_ListMixin1, $.TypedData_ListMixin_FixedLengthListMixin1, $.TypedData_ListMixin2, $.TypedData_ListMixin_FixedLengthListMixin2, $.TypedData_ListMixin3, $.TypedData_ListMixin_FixedLengthListMixin3, $.TypedData_ListMixin4, $.TypedData_ListMixin_FixedLengthListMixin4, $.TypedData_ListMixin5, $.TypedData_ListMixin_FixedLengthListMixin5, $.TypedData_ListMixin6, $.TypedData_ListMixin_FixedLengthListMixin6, $.Int64List, $.Uint64List]);

$.defineNativeMethods("Float32Array", $.Float32List);

$.defineNativeMethods("Float64Array", $.Float64List);

$.defineNativeMethods("Int16Array", $.Int16List);

$.defineNativeMethods("Int32Array", $.Int32List);

$.defineNativeMethods("Int8Array", $.Int8List);

$.defineNativeMethods("Uint16Array", $.Uint16List);

$.defineNativeMethods("Uint32Array", $.Uint32List);

$.defineNativeMethods("CanvasPixelArray|Uint8ClampedArray", $.Uint8ClampedList);

$.defineNativeMethodsNonleaf("Uint8Array", $.Uint8List);


init.metadata = [];
$ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
$ = new Isolate();
!function() {
  var objectProto = Object.prototype;
  for (var i = 0;; i++) {
    var property = "___dart_dispatch_record_ZxYxX_0_";
    if (i > 0)
      property = rootProperty + "_" + i;
    if (!(property in objectProto))
      return init.dispatchPropertyName = property;
  }
}();
// BEGIN invoke [main].
;(function (callback) {
  if (typeof document === "undefined") {
    callback(null);
    return;
  }
  if (document.currentScript) {
    callback(document.currentScript);
    return;
  }

  var scripts = document.scripts;
  function onLoad(event) {
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].removeEventListener("load", onLoad, false);
    }
    callback(event.target);
  }
  for (var i = 0; i < scripts.length; ++i) {
    scripts[i].addEventListener("load", onLoad, false);
  }
})(function(currentScript) {
  init.currentScript = currentScript;

  if (typeof console !== "undefined" && typeof document !== "undefined" &&
      document.readyState == "loading") {
    console.warn("Dart script executed synchronously, use <script src='" +
        currentScript.src + "' defer></scr" + "ipt> to execute after parsing " +
        "has completed. See also http://dartbug.com/12281.");
  }
  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { $.startRootIsolate($.main$closure); });
  } else {
    $.startRootIsolate($.main$closure);
  }
});
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(field, prototype) {
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    var reflectable = false;
    if (code == 45) {
      len--;
      code = field.charCodeAt(len - 1);
      field = field.substring(0, len);
      reflectable = true;
    }
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        prototype["get$" + accessorName] = new Function(args, body);
        if (!reflectable) {
          prototype["get$" + accessorName].$reflectable = false;
        }
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        prototype["set$" + accessorName] = new Function(args, body);
        if (!reflectable) {
          prototype["set$" + accessorName].$reflectable = false;
        }
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(name, cls, fields, prototype) {
    var constructor;
    if (typeof fields == "function") {
      constructor = fields;
    } else {
      var str = "function " + cls + "(";
      var body = "";
      for (var i = 0; i < fields.length; i++) {
        if (i != 0)
          str += ", ";
        var field = generateAccessor(fields[i], prototype);
        var parameter = "parameter_" + field;
        str += parameter;
        body += "this." + field + " = " + parameter + ";\n";
      }
      str += ") {" + body + "}\nreturn " + cls;
      constructor = new Function(str)();
    }
    constructor.prototype = prototype;
    constructor.builtin$cls = name;
    return constructor;
  }
  var supportsProto = false;
  var tmp = defineClass("c", "c", ["f<"], {}).prototype;
  if (tmp.__proto__) {
    tmp.__proto__ = {};
    if (typeof tmp.get$f != "undefined")
      supportsProto = true;
  }
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        var classData = desc[""], supr, name = cls, fields = classData;
        if (typeof classData == "string") {
          var split = classData.split("/");
          if (split.length == 2) {
            name = split[0];
            fields = split[1];
          }
        }
        if (typeof fields == "string") {
          var s = fields.split(";");
          fields = s[1] == "" ? [] : s[1].split(",");
          supr = s[0];
        } else {
          supr = desc.super;
          if (!!desc.$name)
            name = desc.$name;
        }
        if (supr && supr.indexOf("+") > 0) {
          s = supr.split("+");
          supr = s[0];
          var mixin = collectedClasses[s[1]];
          for (var d in mixin) {
            if (hasOwnProperty.call(mixin, d) && !hasOwnProperty.call(desc, d))
              desc[d] = mixin[d];
          }
        }
        var constructor = defineClass(name, cls, fields, desc);
        isolateProperties[cls] = constructor;
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    var finishedClasses = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass || typeof superclass != "string")
        return;
      finishClass(superclass);
      var constructor = isolateProperties[cls];
      var superConstructor = isolateProperties[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = constructor.prototype;
      if (supportsProto) {
        prototype.__proto__ = superConstructor.prototype;
        prototype.constructor = constructor;
      } else {
        function tmp() {
        }
        tmp.prototype = superConstructor.prototype;
        var newPrototype = new tmp();
        constructor.prototype = newPrototype;
        newPrototype.constructor = constructor;
        for (var member in prototype) {
          if (!member)
            continue;
          if (hasOwnProperty.call(prototype, member)) {
            newPrototype[member] = prototype[member];
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var getter = new Function("{ return this." + fieldName + ";}");
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            $.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = getter;
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    var isolatePrototype = oldIsolate.prototype;
    var str = "{\n";
    str += "var properties = arguments.callee.$isolateProperties;\n";
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var staticName in isolateProperties) {
      if (hasOwnProperty.call(isolateProperties, staticName)) {
        str += "this." + staticName + "= properties." + staticName + ";\n";
      }
    }
    str += "}\n";
    var Constants = function() {
    };
    Constants.prototype = C;
    var newIsolate = new Function(str);
    newIsolate.prototype = isolatePrototype;
    isolatePrototype.constructor = newIsolate;
    newIsolate.$isolateProperties = isolateProperties;
    newIsolate.makeConstantList = oldIsolate.makeConstantList;
    newIsolate.$finishClasses = oldIsolate.$finishClasses;
    return newIsolate;
  };
}
})()

//# sourceMappingURL=galaga.dart.js.map
//@ sourceMappingURL=galaga.dart.js.map
