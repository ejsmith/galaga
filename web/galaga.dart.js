// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.DartError = {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function() {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString$0$abfnosu(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper.call$0;
  }
};

$$.StackTrace = {"": "Object;stack",
  toString$0: function() {
    var t1 = this.stack;
    return t1 != null ? t1 : "";
  }
};

$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  }
};

$$.Dynamic_ = {"": "Object;"};

$$.Null = {"": "Object;"};

$$.CastErrorImplementation = {"": "Object;message",
  toString$0: function() {
    return this.message;
  }
};

$$.MetaInfo = {"": "Object;_tag>,_tags,_set>"};

$$.JSSyntaxRegExp = {"": "Object;_pattern,_isMultiLine,_isCaseSensitive",
  firstMatch$1: function(str) {
    var m, matchStart, t1;
    m = $.regExpExec(this, $.checkString(str));
    if (m == null)
      return;
    matchStart = m.index;
    t1 = $.get$length$as($.$$index$a(m, 0));
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchStart + t1, m);
  },
  hasMatch$1: function(str) {
    return $.regExpTest(this, $.checkString(str));
  },
  allMatches$1: function(str) {
    $.checkString(str);
    return $._AllMatchesIterable$(this, str);
  },
  get$pattern: function() {
    return this._pattern;
  },
  get$isMultiLine: function() {
    return this._isMultiLine;
  },
  get$isCaseSensitive: function() {
    return this._isCaseSensitive;
  },
  $isJSSyntaxRegExp: true
};

$$._MatchImplementation = {"": "Object;pattern>,str,start,end,_groups",
  start$0: function() {
    return this.start.call$0();
  },
  start$1: function(arg0) {
    return this.start.call$1(arg0);
  },
  $index: function(index) {
    var t1 = this._groups;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, index, t1) {
    return $.$$index$as(t1, index);
  }
};

$$._AllMatchesIterable = {"": "Iterable;_re,_str",
  get$iterator: function() {
    return $._AllMatchesIterator$(this._re, this._str);
  }
};

$$._AllMatchesIterator = {"": "Object;_re,_str,_liblib2$_current",
  get$current: function() {
    return this._liblib2$_current;
  },
  moveNext$0: function() {
    this._liblib2$_current = this._re.firstMatch$1(this._str);
    return this._liblib2$_current != null;
  }
};

$$.StringMatch = {"": "Object;start,str,pattern>",
  $index: function(g) {
    return this.group$1(g);
  },
  group$1: function(group_) {
    if ($.$$eq$o(group_, 0) !== true)
      throw $.$$throw($.RangeError$value(group_));
    return this.pattern;
  },
  start$0: function() {
    return this.start.call$0();
  },
  start$1: function(arg0) {
    return this.start.call$1(arg0);
  }
};

$$.Collection = {"": "Iterable;",
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return null;
  }
};

$$.DateTime = {"": "Object;millisecondsSinceEpoch>,isUtc",
  $eq: function(other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isDateTime))
      return false;
    return $.$$eq$o(this.millisecondsSinceEpoch, other.millisecondsSinceEpoch) === true && $.$$eq$o(this.isUtc, other.isUtc) === true;
  },
  $lt: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$lt$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$lt$bailout(2, 0, t1, t3);
    return t1 < t3;
  },
  $$lt$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$lt$n(t1, t3);
    }
  },
  $le: function(other) {
    return $.$$le$n(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  $gt: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$gt$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$gt$bailout(2, 0, t1, t3);
    return t1 > t3;
  },
  $$gt$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$gt$n(t1, t3);
    }
  },
  $ge: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$ge$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$ge$bailout(2, 0, t1, t3);
    return t1 >= t3;
  },
  $$ge$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$ge$n(t1, t3);
    }
  },
  get$hashCode: function() {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function() {
    var t1, t2, t3, y, m, d, h, min, sec, ms;
    t1 = new $.DateTime_toString_fourDigits();
    t2 = new $.DateTime_toString_threeDigits();
    t3 = new $.DateTime_toString_twoDigits();
    y = t1.call$1(this.get$year());
    m = t3.call$1(this.get$month());
    d = t3.call$1(this.get$day());
    h = t3.call$1(this.get$hour());
    min = t3.call$1(this.get$minute());
    sec = t3.call$1(this.get$second());
    ms = t2.call$1(this.get$millisecond());
    if (this.isUtc === true)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(duration) {
    var ms, t2;
    ms = this.millisecondsSinceEpoch;
    t2 = duration.get$inMilliseconds();
    if (typeof ms !== "number")
      return this.add$1$bailout(1, duration, ms);
    if (typeof t2 !== "number")
      return this.add$1$bailout(2, 0, ms, t2);
    return $.DateTime$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
  },
  add$1$bailout: function(state0, duration, ms, t2) {
    switch (state0) {
      case 0:
        ms = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t2 = duration.get$inMilliseconds();
      case 2:
        state0 = 0;
        return $.DateTime$fromMillisecondsSinceEpoch($.$$add$n(ms, t2), this.isUtc);
    }
  },
  get$year: function() {
    return $.Primitives_getYear(this);
  },
  get$month: function() {
    return $.Primitives_getMonth(this);
  },
  get$day: function() {
    return $.Primitives_getDay(this);
  },
  get$hour: function() {
    return $.Primitives_getHours(this);
  },
  get$minute: function() {
    return $.Primitives_getMinutes(this);
  },
  get$second: function() {
    return $.Primitives_getSeconds(this);
  },
  get$millisecond: function() {
    return $.Primitives_getMilliseconds(this);
  },
  DateTime$_now$0: function() {
    $.Primitives_lazyAsJsDate(this);
  },
  DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
    if ($.abs$0$n(millisecondsSinceEpoch) > 8640000000000000)
      throw $.$$throw($.ArgumentError$(millisecondsSinceEpoch));
    if (isUtc == null)
      throw $.$$throw($.ArgumentError$(isUtc));
  },
  $isDateTime: true
};

$$.Duration = {"": "Object;inMilliseconds>",
  $add: function(other) {
    return $.Duration$(0, 0, $.$$add$n(this.inMilliseconds, other.get$inMilliseconds()), 0, 0);
  },
  $sub: function(other) {
    return $.Duration$(0, 0, $.$$sub$n(this.inMilliseconds, other.get$inMilliseconds()), 0, 0);
  },
  $mul: function(factor) {
    var t2 = this.inMilliseconds;
    if (typeof t2 !== "number")
      return this.$$mul$bailout(2, factor, t2);
    if (typeof factor !== "number")
      return this.$$mul$bailout(1, factor);
    return $.Duration$(0, 0, t2 * factor, 0, 0);
  },
  $$mul$bailout: function(state0, factor, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this.inMilliseconds;
      case 2:
        state0 = 0;
        return $.Duration$(0, 0, $.$$mul$n(t2, factor), 0, 0);
    }
  },
  $tdiv: function(quotient) {
    if (quotient === 0)
      throw $.$$throw($.IntegerDivisionByZeroException$());
    return $.Duration$(0, 0, $.$$tdiv$n(this.inMilliseconds, quotient), 0, 0);
  },
  $lt: function(other) {
    return $.$$lt$n(this.inMilliseconds, other.get$inMilliseconds());
  },
  $gt: function(other) {
    return $.$$gt$n(this.inMilliseconds, other.get$inMilliseconds());
  },
  $le: function(other) {
    return $.$$le$n(this.inMilliseconds, other.get$inMilliseconds());
  },
  $ge: function(other) {
    return $.$$ge$n(this.inMilliseconds, other.get$inMilliseconds());
  },
  get$inHours: function() {
    return $.$$tdiv$n(this.inMilliseconds, 3600000);
  },
  get$inMinutes: function() {
    return $.$$tdiv$n(this.inMilliseconds, 60000);
  },
  get$inSeconds: function() {
    return $.$$tdiv$n(this.inMilliseconds, 1000);
  },
  $eq: function(other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isDuration))
      return false;
    return $.$$eq$o(this.inMilliseconds, other.inMilliseconds);
  },
  get$hashCode: function() {
    return $.get$hashCode$abnosu(this.inMilliseconds);
  },
  toString$0: function() {
    var t1, t2, t3, t4, twoDigitMinutes, twoDigitSeconds, threeDigitMs;
    t1 = new $.Duration_toString_threeDigits();
    t2 = new $.Duration_toString_twoDigits();
    t3 = this.inMilliseconds;
    t4 = $.getInterceptor$n(t3);
    if (t4.$lt(t3, 0) === true)
      return "-" + $.S($.Duration$(0, 0, t4.$negate(t3), 0, 0));
    twoDigitMinutes = t2.call$1($.remainder$1$n(this.get$inMinutes(), 60));
    twoDigitSeconds = t2.call$1($.remainder$1$n(this.get$inSeconds(), 60));
    threeDigitMs = t1.call$1(t4.remainder$1(t3, 1000));
    return $.S(this.get$inHours()) + ":" + $.S(twoDigitMinutes) + ":" + $.S(twoDigitSeconds) + "." + $.S(threeDigitMs);
  },
  $isDuration: true
};

$$.NullThrownError = {"": "Object;",
  toString$0: function() {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (t1 != null)
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function() {
    return "RangeError: " + $.S(this.message);
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function() {
    var t1, t2, t3, t4, actualParameters, i, formalParameters;
    t1 = {};
    t1.sb_0 = $.StringBuffer$("");
    t1.i_1 = 0;
    t2 = this._arguments;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout1(1, t1, t2);
    for (; $.$$lt$n(t1.i_1, t2.length) === true; t1.i_1 = $.$$add$n(t1.i_1, 1)) {
      if ($.$$gt$n(t1.i_1, 0) === true)
        $.add$1$a(t1.sb_0, ", ");
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      $.add$1$a(t3, $.Error_safeToString(t2[t4]));
    }
    t2 = this._namedArguments;
    if (t2 != null)
      $.forEach$1$a(t2, new $.NoSuchMethodError_toString_anon(t1));
    t2 = this._existingArgumentNames;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout1(2, t1, t2);
    actualParameters = $.toString$0$abfnosu(t1.sb_0);
    t1.sb_0 = $.StringBuffer$("");
    for (i = 0; i < t2.length; ++i) {
      if (i > 0)
        $.add$1$a(t1.sb_0, ", ");
      t3 = t1.sb_0;
      if (i >= t2.length)
        throw $.ioore(i);
      $.add$1$a(t3, t2[i]);
    }
    formalParameters = $.toString$0$abfnosu(t1.sb_0);
    t2 = this._memberName;
    return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t2) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t2) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t2) + "(" + $.S(formalParameters) + ")";
  },
  toString$0$bailout1: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = {};
        t1.sb_0 = $.StringBuffer$("");
        t1.i_1 = 0;
        t2 = this._arguments;
      case 1:
        state0 = 0;
        if (t2 != null)
          for (t3 = $.getInterceptor$as(t2); $.$$lt$n(t1.i_1, t3.get$length(t2)) === true; t1.i_1 = $.$$add$n(t1.i_1, 1)) {
            if ($.$$gt$n(t1.i_1, 0) === true)
              $.add$1$a(t1.sb_0, ", ");
            $.add$1$a(t1.sb_0, $.Error_safeToString(t3.$index(t2, t1.i_1)));
          }
        t2 = this._namedArguments;
        if (t2 != null)
          $.forEach$1$a(t2, new $.NoSuchMethodError_toString_anon(t1));
        t2 = this._existingArgumentNames;
      case 2:
        var t3, actualParameters, i, formalParameters;
        state0 = 0;
        if (t2 == null)
          return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
        else {
          actualParameters = $.toString$0$abfnosu(t1.sb_0);
          t1.sb_0 = $.StringBuffer$("");
          for (t3 = $.getInterceptor$as(t2), i = 0; $.CONSTANT15.$lt(i, t3.get$length(t2)); ++i) {
            if (i > 0)
              $.add$1$a(t1.sb_0, ", ");
            $.add$1$a(t1.sb_0, t3.$index(t2, i));
          }
          formalParameters = $.toString$0$abfnosu(t1.sb_0);
          t2 = this._memberName;
          return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t2) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t2) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t2) + "(" + $.S(formalParameters) + ")";
        }
    }
  }
};

$$.UnsupportedError = {"": "Object;message",
  toString$0: function() {
    return "Unsupported operation: " + this.message;
  }
};

$$.UnimplementedError = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    return t1 != null ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
  }
};

$$.StateError = {"": "Object;message",
  toString$0: function() {
    return "Bad state: " + this.message;
  }
};

$$.ConcurrentModificationError = {"": "Object;modifiedObject",
  toString$0: function() {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.S($.Error_safeToString(t1)) + ".";
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function() {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message",
  toString$0: function() {
    return "RuntimeError: " + this.message;
  }
};

$$._ExceptionImplementation = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
};

$$.FormatException = {"": "Object;message",
  toString$0: function() {
    return "FormatException: " + $.S(this.message);
  },
  $isException: true
};

$$.IllegalJSRegExpException = {"": "FormatException;message"};

$$.IntegerDivisionByZeroException = {"": "Object;",
  toString$0: function() {
    return "IntegerDivisionByZeroException";
  },
  $isException: true
};

$$.Iterable = {"": "Object;",
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  contains$1: function(element) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      if ($.$$eq$o(t1.get$current(), element) === true)
        return true;
    return false;
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  join$1: function(separator) {
    var iterator, buffer;
    if (typeof separator !== "string")
      return this.join$1$bailout(1, separator);
    iterator = this.get$iterator();
    if (iterator.moveNext$0() !== true)
      return "";
    buffer = $.StringBuffer$("");
    if (separator === "")
      do
        buffer.add$1($.S(iterator.get$current()));
      while (iterator.moveNext$0() === true);
    else {
      buffer.add$1($.S(iterator.get$current()));
      for (; iterator.moveNext$0() === true;) {
        buffer.add$1(separator);
        buffer.add$1($.S(iterator.get$current()));
      }
    }
    return buffer.toString$0();
  },
  join$1$bailout: function(state0, separator) {
    var iterator, buffer;
    iterator = this.get$iterator();
    if (iterator.moveNext$0() !== true)
      return "";
    buffer = $.StringBuffer$("");
    if (separator == null || $.$$eq$o(separator, "") === true)
      do
        buffer.add$1($.S(iterator.get$current()));
      while (iterator.moveNext$0() === true);
    else {
      buffer.add$1($.S(iterator.get$current()));
      for (; iterator.moveNext$0() === true;) {
        buffer.add$1(separator);
        buffer.add$1($.S(iterator.get$current()));
      }
    }
    return buffer.toString$0();
  },
  any$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) === true)
        return true;
    return false;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$length: function() {
    var it, count;
    it = this.get$iterator();
    for (count = 0; it.moveNext$0() === true;)
      ++count;
    return count;
  },
  get$isEmpty: function() {
    return this.get$iterator().moveNext$0() !== true;
  },
  elementAt$1: function(index) {
    var t1, remaining, t2;
    if (typeof index !== "number")
      return this.elementAt$1$bailout(1, index);
    if (!(typeof index === "number" && Math.floor(index) === index) || index < 0)
      throw $.$$throw($.RangeError$value(index));
    for (t1 = this.get$iterator(), remaining = index; t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if (remaining === 0)
        return t2;
      --remaining;
    }
    throw $.$$throw($.RangeError$value(index));
  },
  elementAt$1$bailout: function(state0, index) {
    var t1, remaining, t2, t3;
    if (!(typeof index === "number" && Math.floor(index) === index) || index < 0)
      throw $.$$throw($.RangeError$value(index));
    for (t1 = this.get$iterator(), remaining = index; t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      t3 = $.getInterceptor(remaining);
      if (t3.$eq(remaining, 0) === true)
        return t2;
      remaining = t3.$sub(remaining, 1);
    }
    throw $.$$throw($.RangeError$value(index));
  }
};

$$.Iterator = {"": "Object;"};

$$.Object = {"": ";",
  $eq: function(other) {
    if (other == null)
      return false;
    return this === other;
  },
  get$hashCode: function() {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function() {
    return "Instance of '" + $.S($.Primitives_objectTypeName(this)) + "'";
  }
};

$$.StringBuffer = {"": "Object;_contents",
  get$length: function() {
    return $.get$length$as(this._contents);
  },
  get$isEmpty: function() {
    return $.$$eq$o(this.get$length(), 0);
  },
  add$1: function(obj) {
    return this.write$1(obj);
  },
  write$1: function(obj) {
    var str = typeof obj === "string" ? obj : $.S(obj);
    this._contents = this._contents + str;
  },
  toString$0: function() {
    return this._contents;
  },
  StringBuffer$1: function($content) {
    if (typeof $content === "string")
      this._contents = $content;
    else
      this.write$1($content);
  }
};

$$.ObjectInterceptor = {"": "Object;",
  $and: function(receiver, a0) {
    return receiver.$and(a0);
  },
  $mul: function(receiver, a0) {
    return receiver.$mul(a0);
  },
  $add: function(receiver, a0) {
    return receiver.$add(a0);
  },
  $sub: function(receiver, a0) {
    return receiver.$sub(a0);
  },
  $div: function(receiver, a0) {
    return receiver.$div(a0);
  },
  $lt: function(receiver, a0) {
    return receiver.$lt(a0);
  },
  $shl: function(receiver, a0) {
    return receiver.$shl(a0);
  },
  $le: function(receiver, a0) {
    return receiver.$le(a0);
  },
  $eq: function(receiver, a0) {
    return receiver.$eq(a0);
  },
  $gt: function(receiver, a0) {
    return receiver.$gt(a0);
  },
  $ge: function(receiver, a0) {
    return receiver.$ge(a0);
  },
  $shr: function(receiver, a0) {
    return receiver.$shr(a0);
  },
  abs$0: function(receiver) {
    return receiver.abs$0();
  },
  add$1: function(receiver, a0) {
    return receiver.add$1(a0);
  },
  allMatches$1: function(receiver, a0) {
    return receiver.allMatches$1(a0);
  },
  any$1: function(receiver, a0) {
    return receiver.any$1(a0);
  },
  charCodeAt$1: function(receiver, a0) {
    return receiver.charCodeAt$1(a0);
  },
  codeUnitAt$1: function(receiver, a0) {
    return receiver.codeUnitAt$1(a0);
  },
  contains$1: function(receiver, a0) {
    return receiver.contains$1(a0);
  },
  elementAt$1: function(receiver, a0) {
    return receiver.elementAt$1(a0);
  },
  endsWith$1: function(receiver, a0) {
    return receiver.endsWith$1(a0);
  },
  forEach$1: function(receiver, a0) {
    return receiver.forEach$1(a0);
  },
  get$hashCode: function(receiver) {
    return receiver.get$hashCode();
  },
  indexOf$2: function(receiver, a0, a1) {
    return receiver.indexOf$2(a0, a1);
  },
  get$isEmpty: function(receiver) {
    return receiver.get$isEmpty();
  },
  get$isNaN: function(receiver) {
    return receiver.get$isNaN();
  },
  get$isNegative: function(receiver) {
    return receiver.get$isNegative();
  },
  get$iterator: function(receiver) {
    return receiver.get$iterator();
  },
  join$1: function(receiver, a0) {
    return receiver.join$1(a0);
  },
  get$length: function(receiver) {
    return receiver.get$length();
  },
  set$length: function(receiver, value) {
    return receiver.set$length(value);
  },
  remainder$1: function(receiver, a0) {
    return receiver.remainder$1(a0);
  },
  remove$1: function(receiver, a0) {
    return receiver.remove$1(a0);
  },
  removeLast$0: function(receiver) {
    return receiver.removeLast$0();
  },
  removeRange$2: function(receiver, a0, a1) {
    return receiver.removeRange$2(a0, a1);
  },
  replaceAll$2: function(receiver, a0, a1) {
    return receiver.replaceAll$2(a0, a1);
  },
  round$0: function(receiver) {
    return receiver.round$0();
  },
  setRange$4: function(receiver, a0, a1, a2, a3) {
    return receiver.setRange$4(a0, a1, a2, a3);
  },
  split$1: function(receiver, a0) {
    return receiver.split$1(a0);
  },
  substring$1: function(receiver, a0) {
    return receiver.substring$1(a0);
  },
  substring$2: function(receiver, a0, a1) {
    return receiver.substring$2(a0, a1);
  },
  toList$0: function(receiver) {
    return receiver.toList$0();
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase$0();
  },
  toString$0: function(receiver) {
    return receiver.toString$0();
  },
  toStringAsFixed$1: function(receiver, a0) {
    return receiver.toStringAsFixed$1(a0);
  },
  trim$0: function(receiver) {
    return receiver.trim$0();
  },
  truncate$0: function(receiver) {
    return receiver.truncate$0();
  },
  where$1: function(receiver, a0) {
    return receiver.where$1(a0);
  },
  $index: function(receiver, a0) {
    return receiver.$index(a0);
  },
  $indexSet: function(receiver, a0, a1) {
    return receiver.$indexSet(a0, a1);
  },
  $xor: function(receiver, a0) {
    return receiver.$xor(a0);
  },
  $negate: function(receiver) {
    return receiver.$negate();
  },
  $or: function(receiver, a0) {
    return receiver.$or(a0);
  },
  $tdiv: function(receiver, a0) {
    return receiver.$tdiv(a0);
  }
};

$$.JSFunction = {"": "Object;",
  toString$0: function(receiver) {
    return "Closure";
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSBool = {"": "Object;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNull = {"": "Object;",
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  },
  $eq: function(receiver, a) {
    return receiver == a;
  }
};

$$.JSArray = {"": "Object;",
  add$1: function(receiver, value) {
    $.checkGrowable(receiver, "add");
    receiver.push(value);
  },
  removeLast$0: function(receiver) {
    $.checkGrowable(receiver, "removeLast");
    if (receiver.length === 0)
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  },
  remove$1: function(receiver, element) {
    var i;
    $.checkGrowable(receiver, "remove");
    for (i = 0; i < receiver.length; ++i)
      if ($.$$eq$o(receiver[i], element) === true) {
        receiver.splice(i, 1);
        return;
      }
  },
  where$1: function(receiver, f) {
    return $.WhereIterable$(receiver, f);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(receiver, separator) {
    var list, i, t1;
    if (separator == null)
      separator = "";
    list = $.List_List(receiver.length);
    for (i = 0; i < receiver.length; ++i) {
      t1 = $.S(receiver[i]);
      if (i >= list.length)
        throw $.ioore(i);
      list[i] = t1;
    }
    return list.join(separator);
  },
  elementAt$1: function(receiver, index) {
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  removeRange$2: function(receiver, start, $length) {
    var receiverLength, t1, t2;
    $.checkGrowable(receiver, "removeRange");
    if ($length === 0)
      return;
    $.checkNull(start);
    $.checkNull($length);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if ($length < 0)
      throw $.$$throw($.ArgumentError$($length));
    receiverLength = receiver.length;
    if (start < 0 || start >= receiverLength)
      throw $.$$throw($.RangeError$value(start));
    t1 = start + $length;
    if (t1 > receiverLength)
      throw $.$$throw($.RangeError$value(t1));
    t2 = receiverLength - $length;
    $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
    this.set$length(receiver, t2);
  },
  setRange$4: function(receiver, start, $length, from, startFrom) {
    var t1;
    $.checkMutable(receiver, "set range");
    if ($.$$eq$o($length, 0) === true)
      return;
    $.checkNull(start);
    $.checkNull($length);
    $.checkNull(from);
    $.checkNull(startFrom);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof $length === "number" && Math.floor($length) === $length))
      throw $.$$throw($.ArgumentError$($length));
    if (!(typeof startFrom === "number" && Math.floor(startFrom) === startFrom))
      throw $.$$throw($.ArgumentError$(startFrom));
    if ($length < 0)
      throw $.$$throw($.ArgumentError$($length));
    if (start < 0)
      throw $.$$throw($.RangeError$value(start));
    t1 = start + $length;
    if (t1 > receiver.length)
      throw $.$$throw($.RangeError$value(t1));
    $.Arrays_copy(from, startFrom, receiver, start, $length);
  },
  any$1: function(receiver, f) {
    return $.IterableMixinWorkaround_any(receiver, f);
  },
  contains$1: function(receiver, other) {
    var t1, i;
    for (t1 = $.getInterceptor(other), i = 0; i < receiver.length; ++i)
      if (t1.$eq(other, receiver[i]) === true)
        return true;
    return false;
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.ToString_collectionToString(receiver);
  },
  toList$0: function(receiver) {
    return $.List_List$from(receiver);
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (!(typeof newLength === "number" && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    $.checkMutable(receiver, "indexed set");
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    receiver[index] = value;
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return null;
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNumber = {"": "Object;",
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  remainder$1: function(receiver, b) {
    $.checkNull(b);
    return receiver % b;
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  round$0: function(receiver) {
    if (receiver < 0)
      return -Math.round(-receiver);
    else
      return Math.round(receiver);
  },
  truncate$0: function(receiver) {
    return receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
  },
  toStringAsFixed$1: function(receiver, fractionDigits) {
    var result;
    $.checkNum(fractionDigits);
    if (fractionDigits < 0 || fractionDigits > 20)
      throw $.$$throw($.RangeError$(fractionDigits));
    result = receiver.toFixed(fractionDigits);
    if (receiver === 0 && this.get$isNegative(receiver) === true)
      return "-" + result;
    return result;
  },
  toString$0: function(receiver) {
    if (receiver === 0 && (1 / receiver) < 0)
      return "-0.0";
    else
      return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $negate: function(receiver) {
    return -receiver;
  },
  $add: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver - other;
  },
  $div: function(receiver, other) {
    return receiver / other;
  },
  $mul: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver * other;
  },
  $tdiv: function(receiver, other) {
    return this.truncate$0(receiver / other);
  },
  $shl: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (other > 31)
      return 0;
    return (receiver << other) >>> 0;
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return (receiver >> other) >>> 0;
  },
  $and: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver & other) >>> 0;
  },
  $or: function(receiver, other) {
    return (receiver | other) >>> 0;
  },
  $xor: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver ^ other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver >= other;
  },
  $isJSNumber: true,
  $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSInt = {"": "JSNumber;", $is$int: true, $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSDouble = {"": "JSNumber;", $is$double: true, $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSString = {"": "Object;",
  charCodeAt$1: function(receiver, index) {
    return this.codeUnitAt$1(receiver, index);
  },
  codeUnitAt$1: function(receiver, index) {
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  allMatches$1: function(receiver, str) {
    $.checkString(str);
    return $.allMatchesInStringUnchecked(receiver, str);
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  split$1: function(receiver, pattern) {
    $.checkNull(pattern);
    return receiver.split(pattern);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    var t1;
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    t1 = $.getInterceptor$n(startIndex);
    if (t1.$lt(startIndex, 0) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if (t1.$gt(startIndex, endIndex) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.$$gt$n(endIndex, receiver.length) === true)
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase();
  },
  trim$0: function(receiver) {
    return receiver.trim();
  },
  indexOf$2: function(receiver, other, start) {
    $.checkNull(other);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (start < 0)
      return -1;
    return receiver.indexOf(other, start);
  },
  contains$2: function(receiver, other, startIndex) {
    $.checkNull(other);
    return $.stringContainsUnchecked(receiver, other, startIndex);
  },
  contains$1: function($receiver, other) {
    return this.contains$2($receiver, other, 0);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var hash, i, hash0, hash1;
    for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
      hash0 = 536870911 & hash + receiver.charCodeAt(i);
      hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
      hash1 = hash1 ^ (hash1 >> 6);
    }
    hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash0 = hash0 ^ (hash0 >> 11);
    return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $isString: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.ListQueue = {"": "Collection;_table>,_head,_tail,_modificationCount>",
  get$iterator: function() {
    return $._ListQueueIterator$(this);
  },
  forEach$1: function(action) {
    var modificationCount, i, i0, t1;
    modificationCount = this._modificationCount;
    i = this._head;
    if (i !== (i | 0))
      return this.forEach$1$bailout1(1, action, modificationCount, i);
    for (; i !== this._tail; i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      action.call$1(t1[i]);
      this._checkModification$1(modificationCount);
    }
  },
  forEach$1$bailout1: function(state0, action, modificationCount, i) {
    var i0, t1;
    for (; i !== this._tail; i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
      t1 = this._table;
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      action.call$1(t1[i]);
      this._checkModification$1(modificationCount);
    }
  },
  get$isEmpty: function() {
    return this._head === this._tail;
  },
  get$length: function() {
    var t1, t3;
    t1 = this._tail;
    t3 = this._head;
    if (t1 !== (t1 | 0))
      return this.get$length$bailout1(1, t1);
    if (t3 !== (t3 | 0))
      return this.get$length$bailout1(2, t1, t3);
    return (t1 - t3 & this._table.length - 1) >>> 0;
  },
  get$length$bailout1: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this._tail;
      case 1:
        state0 = 0;
        t3 = this._head;
      case 2:
        state0 = 0;
        t3 = $.$$sub$n(t1, t3);
      case 3:
        state0 = 0;
        return $.$$and$n(t3, this._table.length - 1);
    }
  },
  elementAt$1: function(index) {
    var t1, t2, t3, t4;
    t1 = $.getInterceptor$n(index);
    if (t1.$lt(index, 0) === true || t1.$gt(index, this.get$length()) === true)
      throw $.$$throw($.RangeError$range(index, 0, this.get$length()));
    t1 = this._table;
    t2 = this._head;
    if (typeof index !== "number")
      throw $.iae(index);
    t3 = t1.length;
    t4 = (t2 + index & t3 - 1) >>> 0;
    if (t4 < 0 || t4 >= t3)
      throw $.ioore(t4);
    return t1[t4];
  },
  toList$0: function() {
    var list = $.List_List(this.get$length());
    this._writeToList$1(list);
    return list;
  },
  add$1: function(element) {
    this._liblib3$_add$1(element);
  },
  remove$1: function(object) {
    var i, i0, t1;
    i = this._head;
    if (i !== (i | 0))
      return this.remove$1$bailout1(1, object, i);
    for (; i !== this._tail; i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq$o(t1[i], object) === true) {
        this._remove$1(i);
        return;
      }
    }
    this._modificationCount = this._modificationCount + 1;
  },
  remove$1$bailout1: function(state0, object, i) {
    var i0, t1;
    for (; i !== this._tail; i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
      t1 = this._table;
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq$o(t1[i], object) === true) {
        this._remove$1(i);
        return;
      }
    }
    this._modificationCount = this._modificationCount + 1;
  },
  toString$0: function() {
    return $.ToString_collectionToString(this);
  },
  addLast$1: function(element) {
    this._liblib3$_add$1(element);
  },
  removeFirst$0: function() {
    var t1, t2, t3, result;
    if (this._head === this._tail)
      throw $.$$throw($.StateError$("No elements"));
    this._modificationCount = this._modificationCount + 1;
    t1 = this._table;
    t2 = this._head;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw $.ioore(t2);
    result = t1[t2];
    this._head = (t2 + 1 & t3 - 1) >>> 0;
    return result;
  },
  removeLast$0: function() {
    var t1, t2;
    if (this._head === this._tail)
      throw $.$$throw($.StateError$("No elements"));
    this._modificationCount = this._modificationCount + 1;
    this._tail = $.$$and$n($.$$sub$n(this._tail, 1), this._table.length - 1);
    t1 = this._table;
    t2 = this._tail;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  _checkModification$1: function(expectedModificationCount) {
    var t2 = this._modificationCount;
    if (typeof expectedModificationCount !== "number")
      return this._checkModification$1$bailout(1, expectedModificationCount);
    if (expectedModificationCount !== t2)
      throw $.$$throw($.ConcurrentModificationError$(this));
  },
  _checkModification$1$bailout: function(state0, expectedModificationCount) {
    if ($.$$eq$o(expectedModificationCount, this._modificationCount) !== true)
      throw $.$$throw($.ConcurrentModificationError$(this));
  },
  _liblib3$_add$1: function(element) {
    var t1, t2;
    t1 = this._table;
    t2 = this._tail;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    t1[t2] = element;
    this._tail = $.$$and$n(t2 + 1, this._table.length - 1);
    if (this._head === this._tail)
      this._grow$0();
    this._modificationCount = this._modificationCount + 1;
  },
  _remove$1: function(offset) {
    var mask, t1, t2, i, t3, prevOffset, nextOffset;
    if (offset !== (offset | 0))
      return this._remove$1$bailout(1, offset);
    mask = this._table.length - 1;
    if ((offset - this._head & mask) >>> 0 < $.$$and$n($.$$sub$n(this._tail, offset), mask)) {
      for (t1 = this._table, t2 = t1.length, i = offset; t3 = this._head, i !== t3; i = prevOffset) {
        prevOffset = (i - 1 & mask) >>> 0;
        if (prevOffset < 0 || prevOffset >= t2)
          throw $.ioore(prevOffset);
        t3 = t1[prevOffset];
        if (i < 0 || i >= t2)
          throw $.ioore(i);
        t1[i] = t3;
      }
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t2)
        throw $.ioore(t3);
      t1[t3] = null;
      this._head = (t3 + 1 & mask) >>> 0;
      return (offset + 1 & mask) >>> 0;
    } else {
      this._tail = $.$$and$n($.$$sub$n(this._tail, 1), mask);
      for (t1 = this._table, t2 = t1.length, i = offset; t3 = this._tail, i !== t3; i = nextOffset) {
        nextOffset = (i + 1 & mask) >>> 0;
        if (nextOffset < 0 || nextOffset >= t2)
          throw $.ioore(nextOffset);
        t3 = t1[nextOffset];
        if (i < 0 || i >= t2)
          throw $.ioore(i);
        t1[i] = t3;
      }
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t2)
        throw $.ioore(t3);
      t1[t3] = null;
      return offset;
    }
  },
  _remove$1$bailout: function(state0, offset) {
    var mask, t1, i, t2, prevOffset, t3, t4, t5, nextOffset;
    mask = this._table.length - 1;
    t1 = $.getInterceptor$n(offset);
    if ($.$$and$n(t1.$sub(offset, this._head), mask) < $.$$and$n($.$$sub$n(this._tail, offset), mask)) {
      for (i = offset; t2 = $.getInterceptor(i), t2.$eq(i, this._head) !== true; i = prevOffset) {
        prevOffset = $.$$and$n(t2.$sub(i, 1), mask);
        t3 = this._table;
        if (prevOffset !== (prevOffset | 0))
          throw $.iae(prevOffset);
        t4 = t3.length;
        if (prevOffset < 0 || prevOffset >= t4)
          throw $.ioore(prevOffset);
        t5 = t3[prevOffset];
        if (i !== (i | 0))
          throw $.iae(i);
        if (i < 0 || i >= t4)
          throw $.ioore(i);
        t3[i] = t5;
      }
      t2 = this._table;
      t3 = this._head;
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t2.length)
        throw $.ioore(t3);
      t2[t3] = null;
      this._head = (t3 + 1 & mask) >>> 0;
      return $.$$and$n(t1.$add(offset, 1), mask);
    } else {
      this._tail = $.$$and$n($.$$sub$n(this._tail, 1), mask);
      for (i = offset; t1 = $.getInterceptor(i), t1.$eq(i, this._tail) !== true; i = nextOffset) {
        nextOffset = $.$$and$n(t1.$add(i, 1), mask);
        t2 = this._table;
        if (nextOffset !== (nextOffset | 0))
          throw $.iae(nextOffset);
        t3 = t2.length;
        if (nextOffset < 0 || nextOffset >= t3)
          throw $.ioore(nextOffset);
        t4 = t2[nextOffset];
        if (i !== (i | 0))
          throw $.iae(i);
        if (i < 0 || i >= t3)
          throw $.ioore(i);
        t2[i] = t4;
      }
      t1 = this._table;
      t2 = this._tail;
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t1[t2] = null;
      return offset;
    }
  },
  _grow$0: function() {
    var newTable, t1, t2, t3, split;
    newTable = $.List_List$fixedLength(this._table.length * 2, null);
    t1 = this._table;
    t2 = t1.length;
    t3 = this._head;
    split = t2 - t3;
    $.CONSTANT11.setRange$4(newTable, 0, split, t1, t3);
    $.CONSTANT11.setRange$4(newTable, split, this._head, this._table, 0);
    this._head = 0;
    this._tail = this._table.length;
    this._table = newTable;
  },
  _writeToList$1: function(target) {
    var t1, t2, $length, firstPartSize;
    t1 = $.CONSTANT15.$le(this._head, this._tail);
    t2 = this._head;
    if (t1) {
      $length = $.$$sub$n(this._tail, t2);
      $.CONSTANT11.setRange$4(target, 0, $length, this._table, this._head);
      return $length;
    } else {
      t1 = this._table;
      firstPartSize = t1.length - t2;
      $.CONSTANT11.setRange$4(target, 0, firstPartSize, t1, t2);
      $.CONSTANT11.setRange$4(target, firstPartSize, this._tail, this._table, 0);
      return $.$$add$n(this._tail, firstPartSize);
    }
  },
  ListQueue$1: function(initialCapacity) {
    if (initialCapacity == null || $.$$lt$n(initialCapacity, 8) === true)
      initialCapacity = 8;
    else if ($.ListQueue__isPowerOf2(initialCapacity) !== true)
      initialCapacity = $.ListQueue__nextPowerOf2(initialCapacity);
    this._table = $.List_List$fixedLength(initialCapacity, null);
  },
  $asCollection: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  }
};

$$._ListQueueIterator = {"": "Object;_queue,_end,_modificationCount>,_liblib3$_position,_liblib3$_current",
  get$current: function() {
    return this._liblib3$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3, t4;
    t1 = this._queue;
    t1._checkModification$1(this._modificationCount);
    if ($.$$eq$o(this._liblib3$_position, this._end) === true) {
      this._liblib3$_current = null;
      return false;
    }
    t2 = t1._table;
    t3 = this._liblib3$_position;
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    this._liblib3$_current = t2[t3];
    t4 = this._liblib3$_position;
    if (t4 !== (t4 | 0))
      return this.moveNext$0$bailout(1, t4, t1);
    this._liblib3$_position = (t4 + 1 & t1._table.length - 1) >>> 0;
    return true;
  },
  moveNext$0$bailout: function(state0, t4, t1) {
    switch (state0) {
      case 0:
        t1 = this._queue;
        t1._checkModification$1(this._modificationCount);
        if ($.$$eq$o(this._liblib3$_position, this._end) === true) {
          this._liblib3$_current = null;
          return false;
        }
        t2 = t1._table;
        t3 = this._liblib3$_position;
        if (t3 !== (t3 | 0))
          throw $.iae(t3);
        if (t3 < 0 || t3 >= t2.length)
          throw $.ioore(t3);
        this._liblib3$_current = t2[t3];
        t4 = this._liblib3$_position;
      case 1:
        state0 = 0;
        t4 = $.$$add$n(t4, 1);
      case 2:
        var t2, t3;
        state0 = 0;
        this._liblib3$_position = $.$$and$n(t4, t1._table.length - 1);
        return true;
    }
  }
};

$$._DeadEntry = {"": "Object;"};

$$._NullKey = {"": "Object;",
  get$hashCode: function() {
    return $.CONSTANT14.get$hashCode(null);
  }
};

$$._HashTable = {"": "Object;_table>,_modificationCount>",
  _key$1: function(offset) {
    var t1, key;
    t1 = this._table;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this._key$1$bailout(1, offset, t1);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    key = t1[offset];
    if (key !== $.CONSTANT13)
      return key;
    return;
  },
  _key$1$bailout: function(state0, offset, t1) {
    var key = $.$$index$as(t1, offset);
    if (key !== $.CONSTANT13)
      return key;
    return;
  },
  get$_elementCount: function() {
    return $.$$sub$n(this._entryCount, this._deletedCount);
  },
  get$_entrySize: function() {
    return 1;
  },
  _checkModification$1: function(expectedModificationCount) {
    if (this._modificationCount !== expectedModificationCount)
      throw $.$$throw($.ConcurrentModificationError$(this._container));
  },
  _recordModification$0: function() {
    this._modificationCount = this._modificationCount + 1 & 1073741823;
  },
  _createTable$1: function(capacity) {
    return $.List_List$fixedLength($.$$mul$n(capacity, this.get$_entrySize()), null);
  },
  _nextProbe$3: function(previousIndex, probeCount, capacity) {
    if (typeof capacity !== "number")
      return this._nextProbe$3$bailout(1, previousIndex, probeCount, capacity);
    return (previousIndex + probeCount & capacity - 1) >>> 0;
  },
  _nextProbe$3$bailout: function(state0, previousIndex, probeCount, capacity) {
    var t2 = $.$$sub$n(capacity, 1);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    return (previousIndex + probeCount & t2) >>> 0;
  },
  _isFree$1: function(marker) {
    return marker == null || marker === $.CONSTANT12;
  },
  _probeForAdd$2: function(hashCode, object) {
    var entrySize, index, t1, firstTombstone, probeCount, offset, entry;
    entrySize = this.get$_entrySize();
    index = $.$$and$n(hashCode, $.$$sub$n(this._capacity, 1));
    for (t1 = null == object, firstTombstone = -1, probeCount = 0; true;) {
      offset = index * entrySize;
      entry = $.$$index$as(this._table, offset);
      if (entry === $.CONSTANT12) {
        if (firstTombstone < 0)
          firstTombstone = offset;
      } else if (entry == null) {
        if (firstTombstone < 0)
          return offset;
        return firstTombstone;
      } else if (($.CONSTANT13 === entry ? t1 : $.$$eq$o(entry, object)) === true)
        return offset;
      ++probeCount;
      index = this._nextProbe$3(index, probeCount, this._capacity);
    }
  },
  _probeForLookup$2: function(hashCode, object) {
    var entrySize, index, t1, probeCount, offset, entry;
    entrySize = this.get$_entrySize();
    index = $.$$and$n(hashCode, $.$$sub$n(this._capacity, 1));
    for (t1 = null == object, probeCount = 0; true;) {
      offset = index * entrySize;
      entry = $.$$index$as(this._table, offset);
      if (entry == null)
        return -1;
      else if ($.CONSTANT12 !== entry)
        if (($.CONSTANT13 === entry ? t1 : $.$$eq$o(entry, object)) === true)
          return offset;
      ++probeCount;
      index = this._nextProbe$3(index, probeCount, this._capacity);
    }
  },
  _checkCapacity$0: function() {
    var freeCount, t1;
    freeCount = $.$$sub$n(this._capacity, this._entryCount);
    t1 = $.getInterceptor$n(freeCount);
    if ($.$$lt$n(t1.$mul(freeCount, 4), this._capacity) === true || t1.$lt(freeCount, this._deletedCount) === true)
      this._grow$1($.$$sub$n(this._entryCount, this._deletedCount));
  },
  _grow$1: function(contentCount) {
    var capacity, minCapacity, oldTable;
    capacity = this._capacity;
    if (typeof capacity !== "number")
      return this._grow$1$bailout(1, contentCount, capacity);
    minCapacity = $.$$mul$n(contentCount, 2);
    if (typeof minCapacity !== "number")
      return this._grow$1$bailout(2, 0, capacity, minCapacity);
    for (; capacity < minCapacity;)
      capacity *= 2;
    oldTable = this._table;
    this._table = this._createTable$1(capacity);
    this._capacity = capacity;
    this._entryCount = 0;
    this._deletedCount = 0;
    this._addAllEntries$1(oldTable);
    this._recordModification$0();
  },
  _grow$1$bailout: function(state0, contentCount, capacity, minCapacity) {
    switch (state0) {
      case 0:
        capacity = this._capacity;
      case 1:
        state0 = 0;
        minCapacity = $.$$mul$n(contentCount, 2);
      case 2:
        var t1, oldTable;
        state0 = 0;
        for (; t1 = $.getInterceptor$n(capacity), t1.$lt(capacity, minCapacity) === true;)
          capacity = t1.$mul(capacity, 2);
        oldTable = this._table;
        this._table = this._createTable$1(capacity);
        this._capacity = capacity;
        this._entryCount = 0;
        this._deletedCount = 0;
        this._addAllEntries$1(oldTable);
        this._recordModification$0();
    }
  },
  _addAllEntries$1: function(oldTable) {
    var i, t1, object;
    if (typeof oldTable !== "string" && (typeof oldTable !== "object" || oldTable === null || oldTable.constructor !== Array && !oldTable.$isJavaScriptIndexingBehavior()))
      return this._addAllEntries$1$bailout(1, oldTable);
    for (i = 0; t1 = oldTable.length, i < t1; i += this.get$_entrySize()) {
      if (i < 0)
        throw $.ioore(i);
      object = oldTable[i];
      if (!(object == null || object === $.CONSTANT12))
        this._copyEntry$3(oldTable, i, this._put$1(object));
    }
  },
  _addAllEntries$1$bailout: function(state0, oldTable) {
    var t1, i, object;
    for (t1 = $.getInterceptor$as(oldTable), i = 0; $.CONSTANT15.$lt(i, t1.get$length(oldTable)); i += this.get$_entrySize()) {
      object = t1.$index(oldTable, i);
      if (!(object == null || object === $.CONSTANT12))
        this._copyEntry$3(oldTable, i, this._put$1(object));
    }
  },
  _copyEntry$3: function(fromTable, fromOffset, toOffset) {
  },
  _get$1: function(key) {
    return this._probeForLookup$2($.get$hashCode$abnosu(key), key);
  },
  _put$1: function(key) {
    var offset, t1, oldEntry;
    offset = this._probeForAdd$2($.get$hashCode$abnosu(key), key);
    t1 = this._table;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this._put$1$bailout(1, key, t1, offset);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    oldEntry = t1[offset];
    if (oldEntry == null) {
      t1 = this._entryCount;
      if (typeof t1 !== "number")
        return this._put$1$bailout(2, key, t1, offset);
      this._entryCount = t1 + 1;
    } else if (oldEntry === $.CONSTANT12) {
      t1 = this._deletedCount;
      if (typeof t1 !== "number")
        return this._put$1$bailout(3, key, t1, offset);
      this._deletedCount = t1 - 1;
    } else
      return offset;
    if (key == null)
      key = $.CONSTANT13;
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._put$1$bailout(4, key, t1, offset);
    if (offset >= t1.length)
      throw $.ioore(offset);
    t1[offset] = key;
    this._recordModification$0();
    return offset;
  },
  _put$1$bailout: function(state0, key, t1, offset) {
    switch (state0) {
      case 0:
        offset = this._probeForAdd$2($.get$hashCode$abnosu(key), key);
        t1 = this._table;
      case 1:
        state0 = 0;
        oldEntry = $.$$index$as(t1, offset);
      default:
        if (state0 === 2 || state0 === 0 && oldEntry == null)
          switch (state0) {
            case 0:
              t1 = this._entryCount;
            case 2:
              state0 = 0;
              this._entryCount = $.$$add$n(t1, 1);
          }
        else
          switch (state0) {
            case 0:
            case 3:
              if (state0 === 3 || state0 === 0 && oldEntry === $.CONSTANT12)
                switch (state0) {
                  case 0:
                    t1 = this._deletedCount;
                  case 3:
                    state0 = 0;
                    this._deletedCount = $.$$sub$n(t1, 1);
                }
              else
                return offset;
          }
        if (key == null)
          key = $.CONSTANT13;
        t1 = this._table;
      case 4:
        var oldEntry;
        state0 = 0;
        $.$$indexSet$a(t1, offset, key);
        this._recordModification$0();
        return offset;
    }
  },
  _remove$1: function(key) {
    var offset = this._probeForLookup$2($.get$hashCode$abnosu(key), key);
    if ($.$$ge$n(offset, 0) === true)
      this._deleteEntry$1(offset);
    return offset;
  },
  _deleteEntry$1: function(offset) {
    var key = $.CONSTANT12;
    $.$$indexSet$a(this._table, offset, key);
    this._deletedCount = $.$$add$n(this._deletedCount, 1);
    this._recordModification$0();
  },
  _HashTable$1: function(initialCapacity) {
    this._table = this._createTable$1(initialCapacity);
  }
};

$$._HashTableIterable = {"": "Iterable;",
  get$length: function() {
    return this._hashTable.get$_elementCount();
  },
  get$isEmpty: function() {
    var t1 = this._hashTable.get$_elementCount();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout1(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout1: function(state0, t1) {
    return $.$$eq$o(t1, 0);
  },
  forEach$1: function(action) {
    var t1, entrySize, table, modificationCount, offset, t2, entry;
    t1 = this._hashTable;
    entrySize = t1.get$_entrySize();
    table = t1._table;
    if (typeof table !== "string" && (typeof table !== "object" || table === null || table.constructor !== Array && !table.$isJavaScriptIndexingBehavior()))
      return this.forEach$1$bailout1(1, action, entrySize, t1, table);
    modificationCount = t1._modificationCount;
    for (offset = 0; t2 = table.length, offset < t2; offset += entrySize) {
      if (offset < 0)
        throw $.ioore(offset);
      entry = table[offset];
      if (!t1._isFree$1(entry))
        action.call$1(this._valueAt$2(offset, entry));
      t1._checkModification$1(modificationCount);
    }
  },
  forEach$1$bailout1: function(state0, action, entrySize, t1, table) {
    var modificationCount, t2, offset, entry;
    modificationCount = t1._modificationCount;
    for (t2 = $.getInterceptor$as(table), offset = 0; $.CONSTANT15.$lt(offset, t2.get$length(table)); offset += entrySize) {
      entry = t2.$index(table, offset);
      if (!t1._isFree$1(entry))
        action.call$1(this._valueAt$2(offset, entry));
      t1._checkModification$1(modificationCount);
    }
  }
};

$$._HashTableIterator = {"": "Object;_modificationCount>",
  moveNext$0: function() {
    var t1, table, entrySize, t2, t3, entry;
    t1 = this._hashTable;
    t1._checkModification$1(this._modificationCount);
    table = t1.get$_table();
    if (typeof table !== "string" && (typeof table !== "object" || table === null || table.constructor !== Array && !table.$isJavaScriptIndexingBehavior()))
      return this.moveNext$0$bailout(1, t1, table);
    entrySize = t1.get$_entrySize();
    for (; t2 = this._offset, t3 = table.length, t2 < t3;) {
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t3)
        throw $.ioore(t2);
      entry = table[t2];
      this._offset = t2 + entrySize;
      if (!t1._isFree$1(entry)) {
        this._liblib3$_current = this._valueAt$2(t2, entry);
        return true;
      }
    }
    this._liblib3$_current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, table, entrySize, t3, t2, t4) {
    switch (state0) {
      case 0:
        t1 = this._hashTable;
        t1._checkModification$1(this._modificationCount);
        table = t1.get$_table();
      case 1:
        state0 = 0;
        entrySize = t1.get$_entrySize();
        t2 = $.getInterceptor$as(table);
      case 2:
        var currentOffset, entry;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t3 = this._offset;
                t4 = t2.get$length(table);
              case 2:
                state0 = 0;
                if (!$.CONSTANT15.$lt(t3, t4))
                  break L0;
                currentOffset = this._offset;
                entry = t2.$index(table, currentOffset);
                this._offset = currentOffset + entrySize;
                if (!t1._isFree$1(entry)) {
                  this._liblib3$_current = this._valueAt$2(currentOffset, entry);
                  return true;
                }
            }
        this._liblib3$_current = null;
        return false;
    }
  },
  get$current: function() {
    return this._liblib3$_current;
  }
};

$$._HashTableKeyIterable = {"": "_HashTableIterable;_hashTable",
  get$iterator: function() {
    return $._HashTableKeyIterator$(this._hashTable);
  },
  _valueAt$2: function(offset, key) {
    if (key === $.CONSTANT13)
      return;
    return key;
  },
  contains$1: function(value) {
    return $.$$ge$n(this._hashTable._get$1(value), 0);
  }
};

$$._HashTableKeyIterator = {"": "_HashTableIterator;_hashTable,_modificationCount,_offset,_liblib3$_current",
  _valueAt$2: function(offset, key) {
    if (key === $.CONSTANT13)
      return;
    return key;
  }
};

$$._HashTableValueIterable = {"": "_HashTableIterable;_entryIndex,_hashTable",
  get$iterator: function() {
    return $._HashTableValueIterator$(this._hashTable, this._entryIndex);
  },
  _valueAt$2: function(offset, key) {
    var t1, t3;
    t1 = this._hashTable._table;
    t3 = this._entryIndex;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this._valueAt$2$bailout1(1, offset, t1);
    t3 = offset + t3;
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  _valueAt$2$bailout1: function(state0, offset, t1) {
    return $.$$index$as(t1, offset + this._entryIndex);
  }
};

$$._HashTableValueIterator = {"": "_HashTableIterator;_entryIndex,_hashTable,_modificationCount,_offset,_liblib3$_current",
  _valueAt$2: function(offset, key) {
    return $.$$index$as(this._hashTable.get$_table(), $.$$add$n(offset, this._entryIndex));
  }
};

$$._HashMapTable = {"": "_HashTable;_table,_capacity,_entryCount,_deletedCount,_modificationCount,_container",
  get$_entrySize: function() {
    return 2;
  },
  _value$1: function(offset) {
    return $.$$index$as(this._table, $.$$add$n(offset, 1));
  },
  _setValue$2: function(offset, value) {
    $.$$indexSet$a(this._table, $.$$add$n(offset, 1), value);
  },
  _copyEntry$3: function(fromTable, fromOffset, toOffset) {
    var t2, t4, t5;
    t2 = this._table;
    if (typeof toOffset !== "number")
      return this._copyEntry$3$bailout1(1, fromTable, fromOffset, toOffset);
    t4 = toOffset + 1;
    if (typeof fromTable !== "string" && (typeof fromTable !== "object" || fromTable === null || fromTable.constructor !== Array && !fromTable.$isJavaScriptIndexingBehavior()))
      return this._copyEntry$3$bailout1(1, fromTable, fromOffset, toOffset);
    t5 = fromOffset + 1;
    if (t5 < 0 || t5 >= fromTable.length)
      throw $.ioore(t5);
    t5 = fromTable[t5];
    if (typeof t2 !== "object" || t2 === null || (t2.constructor !== Array || !!t2.immutable$list) && !t2.$isJavaScriptIndexingBehavior())
      return this._copyEntry$3$bailout1(2, fromTable, fromOffset, toOffset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    t2[t4] = t5;
  },
  _copyEntry$3$bailout1: function(state0, fromTable, fromOffset, toOffset, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._table;
      case 2:
        state0 = 0;
        $.$$indexSet$a(t2, $.$$add$n(toOffset, 1), $.$$index$as(fromTable, fromOffset + 1));
    }
  }
};

$$.HashMap = {"": "Object;_hashTable",
  containsKey$1: function(key) {
    return $.$$ge$n(this._hashTable._get$1(key), 0);
  },
  $index: function(key) {
    var t1, offset;
    t1 = this._hashTable;
    offset = t1._get$1(key);
    if (typeof offset !== "number")
      return this.$$index$bailout(1, t1, offset);
    if (offset >= 0)
      return t1._value$1(offset);
    return;
  },
  $$index$bailout: function(state0, t1, offset) {
    if ($.$$ge$n(offset, 0) === true)
      return t1._value$1(offset);
    return;
  },
  $indexSet: function(key, value) {
    var t1 = this._hashTable;
    t1._setValue$2(t1._put$1(key), value);
    t1._checkCapacity$0();
  },
  remove$1: function(key) {
    var t1, offset, oldValue;
    t1 = this._hashTable;
    offset = t1._remove$1(key);
    if ($.$$lt$n(offset, 0) === true)
      return;
    oldValue = t1._value$1(offset);
    t1._setValue$2(offset, null);
    t1._checkCapacity$0();
    return oldValue;
  },
  forEach$1: function(action) {
    var t1, modificationCount, table, entrySize, offset, t2, entry;
    t1 = this._hashTable;
    modificationCount = t1._modificationCount;
    table = t1._table;
    if (typeof table !== "string" && (typeof table !== "object" || table === null || table.constructor !== Array && !table.$isJavaScriptIndexingBehavior()))
      return this.forEach$1$bailout(1, action, table, t1, modificationCount);
    entrySize = t1.get$_entrySize();
    for (offset = 0; t2 = table.length, offset < t2; offset += entrySize) {
      if (offset < 0)
        throw $.ioore(offset);
      entry = table[offset];
      if (!t1._isFree$1(entry)) {
        action.call$2(entry, t1._value$1(offset));
        t1._checkModification$1(modificationCount);
      }
    }
  },
  forEach$1$bailout: function(state0, action, table, t1, modificationCount) {
    var entrySize, t2, offset, entry;
    entrySize = t1.get$_entrySize();
    for (t2 = $.getInterceptor$as(table), offset = 0; $.CONSTANT15.$lt(offset, t2.get$length(table)); offset += entrySize) {
      entry = t2.$index(table, offset);
      if (!t1._isFree$1(entry)) {
        action.call$2(entry, t1._value$1(offset));
        t1._checkModification$1(modificationCount);
      }
    }
  },
  get$keys: function() {
    return $._HashTableKeyIterable$(this._hashTable);
  },
  get$values: function() {
    return $._HashTableValueIterable$(this._hashTable, 1);
  },
  get$length: function() {
    return this._hashTable.get$_elementCount();
  },
  get$isEmpty: function() {
    return $.$$eq$o(this._hashTable.get$_elementCount(), 0);
  },
  toString$0: function() {
    return $.ToString_mapToString(this);
  },
  HashMap$0: function() {
    this._hashTable._container = this;
  },
  $isMap: function() {
    return true;
  },
  $asMap: function() {
    return null;
  }
};

$$._LinkedHashTableHeadMarker = {"": "Object;"};

$$._LinkedHashTable = {"": "_HashTable;_table,_capacity,_entryCount,_deletedCount,_modificationCount,_container",
  get$_entrySize: function() {
    return 3;
  },
  _createTable$1: function(capacity) {
    var result, t1;
    result = $.List_List$fixedLength($.$$mul$n(capacity, this.get$_entrySize()), null);
    t1 = result.length;
    if (0 >= t1)
      throw $.ioore(0);
    result[0] = $.CONSTANT16;
    if (1 >= t1)
      throw $.ioore(1);
    result[1] = 0;
    if (2 >= t1)
      throw $.ioore(2);
    result[2] = 0;
    return result;
  },
  _next$1: function(offset) {
    var t2, t4;
    t2 = this._table;
    if (typeof offset !== "number")
      return this._next$1$bailout(1, offset);
    t4 = offset + 1;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this._next$1$bailout(2, offset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    return t2[t4];
  },
  _next$1$bailout: function(state0, offset, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._table;
      case 2:
        state0 = 0;
        return $.$$index$as(t2, $.$$add$n(offset, 1));
    }
  },
  _linkLast$1: function(offset) {
    var last, t1;
    last = $.$$index$as(this._table, 2);
    t1 = $.getInterceptor$n(offset);
    $.$$indexSet$a(this._table, t1.$add(offset, 1), 0);
    $.$$indexSet$a(this._table, t1.$add(offset, 2), last);
    $.$$indexSet$a(this._table, $.$$add$n(last, 1), offset);
    $.$$indexSet$a(this._table, 2, offset);
  },
  _unlink$1: function(offset) {
    var t1, next, prev;
    t1 = $.getInterceptor$n(offset);
    next = $.$$index$as(this._table, t1.$add(offset, 1));
    prev = $.$$index$as(this._table, t1.$add(offset, 2));
    $.$$indexSet$a(this._table, t1.$add(offset, 1), null);
    $.$$indexSet$a(this._table, t1.$add(offset, 2), null);
    $.$$indexSet$a(this._table, $.$$add$n(prev, 1), next);
    $.$$indexSet$a(this._table, $.$$add$n(next, 2), prev);
  },
  _addAllEntries$1: function(oldTable) {
    var t1, offset, object, t2, nextOffset;
    if (typeof oldTable !== "string" && (typeof oldTable !== "object" || oldTable === null || oldTable.constructor !== Array && !oldTable.$isJavaScriptIndexingBehavior()))
      return this._addAllEntries$1$bailout1(1, oldTable);
    t1 = $.getInterceptor$as(oldTable);
    if (1 >= oldTable.length)
      throw $.ioore(1);
    offset = oldTable[1];
    if (typeof offset !== "number")
      return this._addAllEntries$1$bailout1(2, oldTable, offset, t1);
    for (; !$.$$eq$o(offset, 0); offset = nextOffset) {
      if (offset !== (offset | 0))
        throw $.iae(offset);
      t1 = oldTable.length;
      if (offset < 0 || offset >= t1)
        throw $.ioore(offset);
      object = oldTable[offset];
      t2 = offset + 1;
      if (t2 >= t1)
        throw $.ioore(t2);
      nextOffset = oldTable[t2];
      this._copyEntry$3(oldTable, offset, this._put$1(object));
    }
  },
  _addAllEntries$1$bailout1: function(state0, oldTable, offset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$as(oldTable);
        offset = t1.$index(oldTable, 1);
      case 2:
        var t2, object, nextOffset;
        state0 = 0;
        for (; t2 = $.getInterceptor(offset), t2.$eq(offset, 0) !== true; offset = nextOffset) {
          object = t1.$index(oldTable, offset);
          nextOffset = t1.$index(oldTable, t2.$add(offset, 1));
          this._copyEntry$3(oldTable, offset, this._put$1(object));
        }
    }
  },
  _put$1: function(key) {
    var offset, t1, oldEntry;
    offset = this._probeForAdd$2($.get$hashCode$abnosu(key), key);
    t1 = this._table;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this._put$1$bailout1(1, key, t1, offset);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    oldEntry = t1[offset];
    if (oldEntry === $.CONSTANT12) {
      t1 = this._deletedCount;
      if (typeof t1 !== "number")
        return this._put$1$bailout1(2, key, t1, offset);
      this._deletedCount = t1 - 1;
    } else if (oldEntry == null) {
      t1 = this._entryCount;
      if (typeof t1 !== "number")
        return this._put$1$bailout1(3, key, t1, offset);
      this._entryCount = t1 + 1;
    } else
      return offset;
    this._recordModification$0();
    if (key == null)
      key = $.CONSTANT13;
    t1 = this._table;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this._put$1$bailout1(4, key, t1, offset);
    if (offset >= t1.length)
      throw $.ioore(offset);
    t1[offset] = key;
    this._linkLast$1(offset);
    return offset;
  },
  _put$1$bailout1: function(state0, key, t1, offset) {
    switch (state0) {
      case 0:
        offset = this._probeForAdd$2($.get$hashCode$abnosu(key), key);
        t1 = this._table;
      case 1:
        state0 = 0;
        oldEntry = $.$$index$as(t1, offset);
      default:
        if (state0 === 2 || state0 === 0 && oldEntry === $.CONSTANT12)
          switch (state0) {
            case 0:
              t1 = this._deletedCount;
            case 2:
              state0 = 0;
              this._deletedCount = $.$$sub$n(t1, 1);
          }
        else
          switch (state0) {
            case 0:
            case 3:
              if (state0 === 3 || state0 === 0 && oldEntry == null)
                switch (state0) {
                  case 0:
                    t1 = this._entryCount;
                  case 3:
                    state0 = 0;
                    this._entryCount = $.$$add$n(t1, 1);
                }
              else
                return offset;
          }
        this._recordModification$0();
        if (key == null)
          key = $.CONSTANT13;
        t1 = this._table;
      case 4:
        var oldEntry;
        state0 = 0;
        $.$$indexSet$a(t1, offset, key);
        this._linkLast$1(offset);
        return offset;
    }
  },
  _deleteEntry$1: function(offset) {
    var key;
    this._unlink$1(offset);
    key = $.CONSTANT12;
    $.$$indexSet$a(this._table, offset, key);
    this._deletedCount = $.$$add$n(this._deletedCount, 1);
    this._recordModification$0();
  }
};

$$._LinkedHashTableKeyIterable = {"": "Iterable;_table>",
  get$iterator: function() {
    return $._LinkedHashTableKeyIterator$(this._table);
  },
  contains$1: function(value) {
    return $.$$ge$n(this._table._get$1(value), 0);
  },
  get$length: function() {
    return this._table.get$_elementCount();
  }
};

$$._LinkedHashTableKeyIterator = {"": "_LinkedHashTableIterator;_hashTable,_modificationCount,_offset,_liblib3$_current",
  _getCurrent$1: function(offset) {
    return this._hashTable._key$1(offset);
  }
};

$$._LinkedHashTableValueIterable = {"": "Iterable;_hashTable,_valueIndex",
  get$iterator: function() {
    return $._LinkedHashTableValueIterator$(this._hashTable, this._valueIndex);
  },
  get$length: function() {
    return this._hashTable.get$_elementCount();
  }
};

$$._LinkedHashTableValueIterator = {"": "_LinkedHashTableIterator;_valueIndex,_hashTable,_modificationCount,_offset,_liblib3$_current",
  _getCurrent$1: function(offset) {
    return $.$$index$as(this._hashTable.get$_table(), $.$$add$n(offset, this._valueIndex));
  }
};

$$._LinkedHashTableIterator = {"": "Object;_modificationCount>",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._hashTable;
    t1._checkModification$1(this._modificationCount);
    t2 = this._offset;
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout(1, t1, t2);
    if (t2 === 0) {
      this._liblib3$_current = null;
      return false;
    }
    this._liblib3$_current = this._getCurrent$1(t2);
    this._offset = t1._next$1(this._offset);
    return true;
  },
  moveNext$0$bailout: function(state0, t1, t2) {
    if ($.$$eq$o(t2, 0) === true) {
      this._liblib3$_current = null;
      return false;
    }
    this._liblib3$_current = this._getCurrent$1(this._offset);
    this._offset = t1._next$1(this._offset);
    return true;
  },
  get$current: function() {
    return this._liblib3$_current;
  }
};

$$.LinkedHashSet = {"": "Collection;_table>",
  get$iterator: function() {
    return $._LinkedHashTableKeyIterator$(this._table);
  },
  forEach$1: function(action) {
    var offset, modificationCount;
    offset = this._table._next$1(0);
    if (typeof offset !== "number")
      return this.forEach$1$bailout1(1, action, offset);
    modificationCount = this._table._modificationCount;
    for (; !$.$$eq$o(offset, 0);) {
      action.call$1(this._table._key$1(offset));
      this._table._checkModification$1(modificationCount);
      offset = this._table._next$1(offset);
    }
  },
  forEach$1$bailout1: function(state0, action, offset) {
    var modificationCount = this._table._modificationCount;
    for (; $.$$eq$o(offset, 0) !== true;) {
      action.call$1(this._table._key$1(offset));
      this._table._checkModification$1(modificationCount);
      offset = this._table._next$1(offset);
    }
  },
  get$isEmpty: function() {
    return $.$$eq$o(this._table.get$_elementCount(), 0);
  },
  contains$1: function(object) {
    return $.$$ge$n(this._table._get$1(object), 0);
  },
  add$1: function(element) {
    this._table._put$1(element);
    this._table._checkCapacity$0();
  },
  remove$1: function(object) {
    if ($.$$ge$n(this._table._remove$1(object), 0) === true) {
      this._table._checkCapacity$0();
      return true;
    }
    return false;
  },
  toString$0: function() {
    return $.ToString_collectionToString(this);
  },
  LinkedHashSet$0: function() {
    this._table._container = this;
  },
  $asCollection: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  }
};

$$._LinkedHashMapTable = {"": "_LinkedHashTable;_table,_capacity,_entryCount,_deletedCount,_modificationCount,_container",
  get$_entrySize: function() {
    return 4;
  },
  _value$1: function(offset) {
    var t2, t4;
    t2 = this._table;
    if (typeof offset !== "number")
      return this._value$1$bailout(1, offset);
    t4 = offset + 3;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this._value$1$bailout(2, offset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    return t2[t4];
  },
  _value$1$bailout: function(state0, offset, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._table;
      case 2:
        state0 = 0;
        return $.$$index$as(t2, $.$$add$n(offset, 3));
    }
  },
  _setValue$2: function(offset, value) {
    $.$$indexSet$a(this._table, $.$$add$n(offset, 3), value);
  },
  _copyEntry$3: function(oldTable, fromOffset, toOffset) {
    var t2, t4, t5;
    t2 = this._table;
    if (typeof toOffset !== "number")
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    t4 = toOffset + 3;
    if (typeof fromOffset !== "number")
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    t5 = fromOffset + 3;
    if (typeof oldTable !== "string" && (typeof oldTable !== "object" || oldTable === null || oldTable.constructor !== Array && !oldTable.$isJavaScriptIndexingBehavior()))
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= oldTable.length)
      throw $.ioore(t5);
    t5 = oldTable[t5];
    if (typeof t2 !== "object" || t2 === null || (t2.constructor !== Array || !!t2.immutable$list) && !t2.$isJavaScriptIndexingBehavior())
      return this._copyEntry$3$bailout1(2, oldTable, fromOffset, toOffset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    t2[t4] = t5;
  },
  _copyEntry$3$bailout1: function(state0, oldTable, fromOffset, toOffset, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._table;
      case 2:
        state0 = 0;
        $.$$indexSet$a(t2, $.$$add$n(toOffset, 3), $.$$index$as(oldTable, $.$$add$n(fromOffset, 3)));
    }
  }
};

$$.LinkedHashMap = {"": "Object;_hashTable",
  containsKey$1: function(key) {
    return $.$$ge$n(this._hashTable._get$1(key), 0);
  },
  $index: function(key) {
    var t1, offset;
    t1 = this._hashTable;
    offset = t1._get$1(key);
    if (typeof offset !== "number")
      return this.$$index$bailout(1, t1, offset);
    if (offset >= 0)
      return t1._value$1(offset);
    return;
  },
  $$index$bailout: function(state0, t1, offset) {
    if ($.$$ge$n(offset, 0) === true)
      return t1._value$1(offset);
    return;
  },
  $indexSet: function(key, value) {
    var t1 = this._hashTable;
    t1._setValue$2(t1._put$1(key), value);
    t1._checkCapacity$0();
  },
  remove$1: function(key) {
    var t1, offset, oldValue;
    t1 = this._hashTable;
    offset = t1._remove$1(key);
    if ($.$$lt$n(offset, 0) === true)
      return;
    oldValue = t1._value$1(offset);
    t1._setValue$2(offset, null);
    t1._checkCapacity$0();
    return oldValue;
  },
  forEach$1: function(action) {
    var t1, modificationCount, offset;
    t1 = this._hashTable;
    modificationCount = t1._modificationCount;
    offset = t1._next$1(0);
    if (typeof offset !== "number")
      return this.forEach$1$bailout(1, t1, modificationCount, action, offset);
    for (; !$.$$eq$o(offset, 0); offset = t1._next$1(offset)) {
      action.call$2(t1._key$1(offset), t1._value$1(offset));
      t1._checkModification$1(modificationCount);
    }
  },
  forEach$1$bailout: function(state0, t1, modificationCount, action, offset) {
    for (; $.$$eq$o(offset, 0) !== true; offset = t1._next$1(offset)) {
      action.call$2(t1._key$1(offset), t1._value$1(offset));
      t1._checkModification$1(modificationCount);
    }
  },
  get$keys: function() {
    return $._LinkedHashTableKeyIterable$(this._hashTable);
  },
  get$values: function() {
    return $._LinkedHashTableValueIterable$(this._hashTable, 3);
  },
  get$length: function() {
    return this._hashTable.get$_elementCount();
  },
  get$isEmpty: function() {
    return $.$$eq$o(this._hashTable.get$_elementCount(), 0);
  },
  toString$0: function() {
    return $.ToString_mapToString(this);
  },
  LinkedHashMap$0: function() {
    this._hashTable._container = this;
  },
  $isMap: function() {
    return true;
  },
  $asMap: function() {
    return null;
  }
};

$$.ListIterator = {"": "Object;_iterable,_length,_index,_current",
  get$current: function() {
    return this._current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._length;
    t2 = this._iterable;
    if (t1 !== t2.length)
      throw $.$$throw($.ConcurrentModificationError$(t2));
    t3 = this._index;
    if (t3 === t1) {
      this._current = null;
      return false;
    }
    this._current = $.CONSTANT11.elementAt$1(t2, t3);
    this._index = this._index + 1;
    return true;
  }
};

$$.WhereIterable = {"": "Iterable;_iterable,_f",
  get$iterator: function() {
    return $.WhereIterator$($.get$iterator$a(this._iterable), this._f);
  }
};

$$.WhereIterator = {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0() === true;)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  }
};

$$._Manager = {"": "Object;nextIsolateId=,currentManagerId,nextManagerId,currentContext>,rootContext,topEventLoop>,fromCommandLine,isWorker>,supportsWorkers,isolates,mainManager,managers",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = $.get$globalWorker() != null && $.get$IsolateNatives_thisScript() != null;
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { $.IsolateNatives__processWorkerMessage.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  maybeCloseWorker$0: function() {
    if (this.isWorker === true && $.get$isEmpty$as(this.isolates) === true && $.$$eq$o(this.topEventLoop.get$activeTimerCount(), 0) === true)
      this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "close"])));
  },
  _Manager$0: function() {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map();
    this.managers = $.Map_Map();
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
};

$$._IsolateContext = {"": "Object;id=,ports>,isolateStatics",
  eval$1: function(code) {
    var old, result;
    old = $globalState.currentContext;
    $globalState.currentContext = this;
    $ = this.isolateStatics;
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.currentContext = old;
      if (old != null)
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    return $.$$index$as(this.ports, portId);
  },
  register$2: function(portId, port) {
    if (this.ports.containsKey$1(portId) === true)
      throw $.$$throw($._ExceptionImplementation$("Registry: ports must be registered only once."));
    $.$$indexSet$a(this.ports, portId, port);
    $.$$indexSet$a($globalState.isolates, this.id, this);
  },
  unregister$1: function(portId) {
    $.remove$1$a(this.ports, portId);
    if ($.get$isEmpty$as(this.ports) === true)
      $.remove$1$a($globalState.isolates, this.id);
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.get$nextIsolateId();
    t1.set$nextIsolateId($.$$add$n(t2, 1));
    this.id = t2;
    this.ports = $.Map_Map();
    this.isolateStatics = new Isolate;
  }
};

$$._EventLoop = {"": "Object;events,activeTimerCount=",
  enqueue$3: function(isolate, fn, msg) {
    this.events.addLast$1($._IsolateEvent$(isolate, fn, msg));
  },
  dequeue$0: function() {
    var t1 = this.events;
    if (t1.get$isEmpty() === true)
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if ($globalState.rootContext != null && $globalState.isolates.containsKey$1($globalState.rootContext.get$id()) === true && $globalState.fromCommandLine === true && $.get$isEmpty$as($globalState.rootContext.get$ports()) === true)
      throw $.$$throw($._ExceptionImplementation$("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      $globalState.maybeCloseWorker$0();
      return false;
    }
    $event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if ($.get$globalWindow() != null)
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0();)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1;
    if ($globalState.isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
      }

  }
};

$$._IsolateEvent = {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
};

$$._MainManagerStub = {"": "Object;",
  get$id: function() {
    return 0;
  },
  set$id: function(i) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  postMessage$1: function(msg) {
    $.get$globalThis().postMessage(msg);
  },
  terminate$0: function() {
  }
};

$$._BaseSendPort = {"": "Object;_isolateId>",
  _checkReplyTo$1: function(replyTo) {
    if (replyTo != null && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_NativeJsSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_WorkerSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_BufferingSendPort))
      throw $.$$throw($._ExceptionImplementation$("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $._CompleterImpl$();
    port = $.ReceivePortImpl$();
    this.send$2(message, port.toSendPort$0());
    port.receive$1(new $._BaseSendPort_call_anon(completer, port));
    return completer.future;
  },
  $isSendPort: true
};

$$._NativeJsSendPort = {"": "_BaseSendPort;_receivePort>,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
  },
  $eq: function(other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!other.$is_NativeJsSendPort && $.$$eq$o(this._receivePort, other._receivePort) === true;
  },
  get$hashCode: function() {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
};

$$._WorkerSendPort = {"": "_BaseSendPort;_workerId>,_receivePortId,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
  },
  $eq: function(other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other === "object" && other !== null && !!other.$is_WorkerSendPort)
      t1 = $.$$eq$o(this._workerId, other._workerId) === true && $.$$eq$o(this._isolateId, other._isolateId) === true && $.$$eq$o(this._receivePortId, other._receivePortId) === true;
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function() {
    var t1, t2;
    t1 = $.$$xor$n($.$$shl$n(this._workerId, 16), $.$$shl$n(this._isolateId, 8));
    t2 = this._receivePortId;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    return (t1 ^ t2) >>> 0;
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
};

$$.ReceivePortImpl = {"": "Object;_id>,_liblib5$_callback>",
  _liblib5$_callback$2: function(arg0, arg1) {
    return this._liblib5$_callback.call$2(arg0, arg1);
  },
  receive$1: function(onMessage) {
    this._liblib5$_callback = onMessage;
  },
  close$0: function() {
    this._liblib5$_callback = null;
    $globalState.currentContext.unregister$1(this._id);
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $globalState.currentContext.get$id());
  },
  ReceivePortImpl$0: function() {
    $._globalState().get$currentContext().register$2(this._id, this);
  }
};

$$._PendingSendPortFinder = {"": "_MessageTraverser;ports>,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    if ($.$$index$as(this._visited, list) != null)
      return;
    $.$$indexSet$a(this._visited, list, true);
    $.forEach$1$a(list, new $._PendingSendPortFinder_visitList_anon(this));
  },
  visitMap$1: function(map) {
    if ($.$$index$as(this._visited, map) != null)
      return;
    $.$$indexSet$a(this._visited, map, true);
    $.forEach$1$a(map.get$values(), new $._PendingSendPortFinder_visitMap_anon(this));
  },
  visitSendPort$1: function(port) {
    if (!!port.$is_BufferingSendPort && port.get$_port() == null)
      this.ports.push(port.get$_futurePort());
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsSerializer = {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return ["sendport", $globalState.currentManagerId, port._isolateId, port._receivePort.get$_id()];
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port.get$_port();
    if (t1 != null)
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsCopier = {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(this.get$p()));
  },
  visitNativeJsSendPort$1: function(port) {
    return $._NativeJsSendPort$(port._receivePort, port._isolateId);
  },
  visitWorkerSendPort$1: function(port) {
    return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port.get$_port();
    if (t1 != null)
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsDeserializer = {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(x) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = $.getInterceptor$as(x);
    managerId = t1.$index(x, 1);
    isolateId = t1.$index(x, 2);
    receivePortId = t1.$index(x, 3);
    if ($.$$eq$o(managerId, $globalState.currentManagerId) === true) {
      isolate = $.$$index$as($globalState.isolates, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  }
};

$$._JsVisitedMap = {"": "Object;tagged",
  $index: function(object) {
    return object['__MessageTraverser__attached_info__'];
  },
  $indexSet: function(object, info) {
    $.add$1$a(this.tagged, object);
    object['__MessageTraverser__attached_info__'] = info;
  },
  reset$0: function() {
    this.tagged = $.List_List(0);
  },
  cleanup$0: function() {
    var $length, i;
    $length = $.get$length$a(this.tagged);
    if (typeof $length !== "number")
      return this.cleanup$0$bailout(1, $length);
    i = 0;
    for (; i < $length; ++i)
      $.$$index$a(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  },
  cleanup$0$bailout: function(state0, $length) {
    var i = 0;
    for (; $.CONSTANT15.$lt(i, $length); ++i)
      $.$$index$a(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  }
};

$$._MessageTraverserVisitedMap = {"": "Object;",
  $index: function(object) {
    return;
  },
  $indexSet: function(object, info) {
  },
  reset$0: function() {
  },
  cleanup$0: function() {
  }
};

$$._MessageTraverser = {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    t1 = x;
    if (t1 == null || typeof t1 === "string" || typeof t1 === "number" || typeof t1 === "boolean")
      return this.visitPrimitive$1(x);
    this._visited.reset$0();
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || x.$isList()))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && x.$isMap())
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPortSync)
      return this.visitSendPortSync$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
  }
};

$$._Copier = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var copy, len, i, t1;
    if (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior())
      return this.visitList$1$bailout1(1, list);
    copy = $.$$index$as(this._visited, list);
    if (copy != null)
      return copy;
    len = list.length;
    copy = $.List_List(len);
    $.$$indexSet$a(this._visited, list, copy);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  },
  visitList$1$bailout1: function(state0, list) {
    var copy, t1, len, i, t2;
    copy = $.$$index$as(this._visited, list);
    if (copy != null)
      return copy;
    t1 = $.getInterceptor$as(list);
    len = t1.get$length(list);
    copy = $.List_List(len);
    $.$$indexSet$a(this._visited, list, copy);
    for (i = 0; $.CONSTANT15.$lt(i, len); ++i) {
      t2 = this._dispatch$1(t1.$index(list, i));
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t2;
    }
    return copy;
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t1.copy_0 = $.$$index$as(this._visited, map);
    t2 = t1.copy_0;
    if (t2 != null)
      return t2;
    t1.copy_0 = $.HashMap$();
    $.$$indexSet$a(this._visited, map, t1.copy_0);
    map.forEach$1(new $._Copier_visitMap_anon(t1, this));
    return t1.copy_0;
  }
};

$$._Serializer = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var copyId, id;
    copyId = $.$$index$as(this._visited, list);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet$a(this._visited, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var copyId, id;
    copyId = $.$$index$as(this._visited, map);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet$a(this._visited, map, id);
    return ["map", id, this._serializeList$1($.toList$0$a(map.get$keys())), this._serializeList$1($.toList$0$a(map.get$values()))];
  },
  _serializeList$1: function(list) {
    var len, result, i, t1;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$as(list);
        len = t1.get$length(list);
      case 2:
        var result, i, t2;
        state0 = 0;
        result = $.List_List(len);
        for (i = 0; $.CONSTANT15.$lt(i, len); ++i) {
          t2 = this._dispatch$1(t1.$index(list, i));
          if (i >= result.length)
            throw $.ioore(i);
          result[i] = t2;
        }
        return result;
    }
  }
};

$$._Deserializer = {"": "Object;",
  deserialize$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    this._deserialized = $.HashMap$();
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    switch ($.$$index$as(x, 0)) {
      case "ref":
        return this._deserializeRef$1(x);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeRef$1: function(x) {
    var id = $.$$index$as(x, 1);
    return $.$$index$as(this._deserialized, id);
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = $.getInterceptor$as(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.$isJavaScriptIndexingBehavior())
      return this._deserializeList$1$bailout(1, dartList, id);
    $.$$indexSet$a(this._deserialized, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id) {
    var t2, len, i;
    $.$$indexSet$a(this._deserialized, id, dartList);
    t2 = $.getInterceptor$as(dartList);
    len = t2.get$length(dartList);
    for (i = 0; $.CONSTANT15.$lt(i, len); ++i)
      t2.$indexSet(dartList, i, this._deserializeHelper$1(t2.$index(dartList, i)));
    return dartList;
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, keys, values, len, i, key;
    result = $.HashMap$();
    t1 = $.getInterceptor$as(x);
    id = t1.$index(x, 1);
    $.$$indexSet$a(this._deserialized, id, result);
    keys = t1.$index(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !keys.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(1, x, result, keys, t1);
    values = t1.$index(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !values.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(2, 0, result, keys, 0, values);
    len = keys.length;
    for (i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      result.$indexSet(key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, x, result, keys, t1, values, t3, len) {
    switch (state0) {
      case 0:
        result = $.HashMap$();
        t1 = $.getInterceptor$as(x);
        id = t1.$index(x, 1);
        $.$$indexSet$a(this._deserialized, id, result);
        keys = t1.$index(x, 2);
      case 1:
        state0 = 0;
        values = t1.$index(x, 3);
      case 2:
        state0 = 0;
        t3 = $.getInterceptor$as(keys);
        len = t3.get$length(keys);
      case 3:
        var id, i;
        state0 = 0;
        for (t1 = $.getInterceptor$as(values), i = 0; $.CONSTANT15.$lt(i, len); ++i)
          result.$indexSet(this._deserializeHelper$1(t3.$index(keys, i)), this._deserializeHelper$1(t1.$index(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.$$throw("Unexpected serialized object");
  }
};

$$.TimerImpl = {"": "Object;_once,_inEventLoop,_handle<",
  cancel$0: function() {
    if ($.get$globalThis().setTimeout != null) {
      if (this._inEventLoop === true)
        throw $.$$throw($.UnsupportedError$("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      var t1 = $globalState.topEventLoop;
      t1.set$activeTimerCount($.$$sub$n(t1.get$activeTimerCount(), 1));
      if (this._once)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw $.$$throw($.UnsupportedError$("Canceling a timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1;
    if ($.$$eq$o(milliseconds, 0) === true)
      t1 = !$.hasTimer() || $._globalState().get$isWorker() === true;
    else
      t1 = false;
    if (t1) {
      $._globalState().get$topEventLoop().enqueue$3($._globalState().get$currentContext(), callback, "timer");
      this._inEventLoop = true;
    } else if ($.hasTimer()) {
      t1 = $._globalState().get$topEventLoop();
      t1.set$activeTimerCount($.$$add$n(t1.get$activeTimerCount(), 1));
      t1 = new $.internalCallback(this, callback);
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(t1, 0), milliseconds);
    } else
      throw $.$$throw($.UnsupportedError$("Timer greater than 0."));
  },
  TimerImpl$repeating$2: function(milliseconds, callback) {
    var t1;
    if ($.hasTimer() === true) {
      t1 = $._globalState().get$topEventLoop();
      t1.set$activeTimerCount($.$$add$n(t1.get$activeTimerCount(), 1));
      this._handle = $.get$globalThis().setInterval($.convertDartClosureToJS(new $.anon(this, callback), 0), milliseconds);
    } else
      throw $.$$throw($.UnsupportedError$("Repeating timer."));
  }
};

$$.AsyncError = {"": "Object;error>,stackTrace>,cause>",
  _writeOn$1: function(buffer) {
    var message, exception, t1;
    buffer.add$1("'");
    message = null;
    try {
      message = $.toString$0$abfnosu(this.error);
    } catch (exception) {
      $.unwrapException(exception);
      message = $.Error_safeToString(this.error);
    }

    buffer.add$1(message);
    buffer.add$1("'\n");
    t1 = this.stackTrace;
    if (t1 != null) {
      buffer.add$1("Stack trace:\n");
      buffer.add$1($.toString$0$abfnosu(t1));
      buffer.add$1("\n");
    }
  },
  toString$0: function() {
    var buffer, cause;
    buffer = $.StringBuffer$("");
    buffer.add$1("AsyncError: ");
    this._writeOn$1(buffer);
    cause = this.cause;
    for (; cause != null;) {
      buffer.add$1("Caused by: ");
      cause._writeOn$1(buffer);
      cause = cause.get$cause();
    }
    return buffer.toString$0();
  },
  throwDelayed$0: function() {
    var reportError, exception;
    reportError = new $.AsyncError_throwDelayed_reportError(this);
    try {
      $.Timer_Timer($.CONSTANT8, new $.AsyncError_throwDelayed_anon(this, reportError));
    } catch (exception) {
      $.unwrapException(exception);
      reportError.call$0();
    }

  },
  $isAsyncError: true
};

$$._CompleterImpl = {"": "Object;future>,_isComplete",
  complete$1: function(value) {
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    this.future._liblib0$_setValue$1(value);
  },
  completeError$2: function(error, stackTrace) {
    var asyncError;
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    asyncError = typeof error === "object" && error !== null && !!error.$isAsyncError ? error : $.AsyncError$(error, stackTrace);
    this.future._setError$1(asyncError);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  }
};

$$._FutureListenerWrapper = {"": "Object;future>,_nextListener=",
  _sendValue$1: function(value) {
    this.future._liblib0$_setValue$1(value);
  },
  _sendError$1: function(error) {
    this.future._setError$1(error);
  }
};

$$._FutureImpl = {"": "Object;_state=,_resultOrListeners>",
  get$_isComplete: function() {
    return $.$$eq$o(this._state, 0) !== true;
  },
  get$_hasValue: function() {
    return $.$$eq$o(this._state, 1);
  },
  get$_hasError: function() {
    return $.$$and$n(this._state, 2) !== 0;
  },
  get$_hasUnhandledError: function() {
    return $.$$and$n(this._state, 4) !== 0;
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (this.get$_isComplete() !== true) {
      if (onError == null) {
        t1 = $._ThenFuture$(f);
        t1._subscribeTo$1(this);
        return t1;
      }
      t1 = $._SubscribeFuture$(f, onError);
      t1._subscribeTo$1(this);
      return t1;
    }
    if (this.get$_hasError() === true) {
      if (onError != null)
        return this._handleError$2(onError, null);
      return $._FutureWrapper$(this);
    } else
      return this._handleValue$1(f);
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1;
    if (this.get$_hasValue() === true)
      return $._FutureWrapper$(this);
    if (this.get$_isComplete() !== true) {
      t1 = $._CatchErrorFuture$(f, test);
      t1._subscribeTo$1(this);
      return t1;
    } else
      return this._handleError$2(f, test);
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  _handleValue$1: function(onValue) {
    var thenFuture = $._ThenFuture$(onValue);
    $.Timer_Timer($.CONSTANT8, new $._FutureImpl__handleValue_anon(thenFuture, this._resultOrListeners));
    return thenFuture;
  },
  _handleError$2: function(onError, test) {
    var error, errorFuture;
    this._state = $.$$and$n(this._state, 4294967291);
    error = this._resultOrListeners;
    errorFuture = $._CatchErrorFuture$(onError, test);
    $.Timer_Timer($.CONSTANT8, new $._FutureImpl__handleError_anon(error, errorFuture));
    return errorFuture;
  },
  _liblib0$_setValue$1: function(value) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 1;
    this._resultOrListeners = value;
    for (; listeners != null; listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  get$_liblib0$_setValue: function() {
    return new $.BoundClosure$1(this, "_liblib0$_setValue$1");
  },
  _setError$1: function(error) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 2;
    this._resultOrListeners = error;
    if (listeners == null) {
      this._scheduleUnhandledError$0();
      return;
    }
    do {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
      if (listeners0 != null) {
        listeners = listeners0;
        continue;
      } else
        break;
    } while (true);
  },
  get$_setError: function() {
    return new $.BoundClosure$1(this, "_setError$1");
  },
  _scheduleUnhandledError$0: function() {
    this._state = $.$$or$n(this._state, 4);
    $.Timer_Timer($.CONSTANT8, new $._FutureImpl__scheduleUnhandledError_anon(this));
  },
  _addListener$1: function(listener) {
    listener.set$_nextListener(this._resultOrListeners);
    this._resultOrListeners = listener;
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; current != null; prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    if (this.get$_isComplete() !== true)
      this._addListener$1(future._asListener$0());
    else if (this.get$_hasValue() === true)
      future._liblib0$_setValue$1(this._resultOrListeners);
    else {
      this._state = $.$$and$n(this._state, 4294967291);
      future._setError$1(this._resultOrListeners);
    }
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!result.$isFuture)
      if (!!result.$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_liblib0$_setValue(), this.get$_setError());
        return;
      }
    else
      this._liblib0$_setValue$1(result);
  },
  _asListener$0: function() {
    return $._FutureListenerWrapper$(this);
  },
  _FutureImpl$immediate$1: function(value) {
    this._state = 1;
    this._resultOrListeners = value;
  },
  $is_FutureImpl: true,
  $isFuture: true
};

$$._TransformFuture = {"": "_FutureImpl;_nextListener=",
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._ThenFuture = {"": "_TransformFuture;_onValue,_nextListener,_state,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _sendValue$1: function(value) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  _sendError$1: function(error) {
    this._setError$1(error);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._CatchErrorFuture = {"": "_TransformFuture;_test,_onError,_nextListener,_state,_resultOrListeners",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendValue$1: function(value) {
    this._liblib0$_setValue$1(value);
  },
  _sendError$1: function(error) {
    var matchesTest, e, s, result, e0, e1, s0, exception, t1;
    if (this._test != null) {
      matchesTest = null;
      try {
        matchesTest = this._test$1(error.get$error());
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e, s, error));
        return;
      }

      if (matchesTest !== true) {
        this._setError$1(error);
        return;
      }
    }
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e0 = t1;
        this._setError$1(e0);
        return;
      } else {
        e1 = t1;
        s0 = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e1, s0, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: null,
  $asFuture: null
};

$$._SubscribeFuture = {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendError$1: function(error) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e0, s, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._FutureWrapper = {"": "Object;_future",
  then$2$onError: function($function, onError) {
    return this._future.then$2$onError($function, onError);
  },
  then$1: function($function) {
    return this.then$2$onError($function, null);
  },
  catchError$2$test: function($function, test) {
    return this._future.catchError$2$test($function, test);
  },
  catchError$1: function($function) {
    return this.catchError$2$test($function, null);
  },
  $isFuture: true
};

$$.Stream = {"": "Object;",
  where$1: function(test) {
    return $._WhereStream$(this, test);
  },
  contains$1: function(match) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_contains_anon(t1, match, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_contains_anon0(future), t3, true);
    return future;
  },
  any$1: function(test) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_any_anon(t1, test, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_any_anon0(future), t3, true);
    return future;
  },
  get$length: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.count_0 = 0;
    t2 = new $.Stream_length_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_length_anon0(t1, future), t3, true);
    return future;
  },
  get$isEmpty: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_isEmpty_anon(t1, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_isEmpty_anon0(future), t3, true);
    return future;
  },
  toList$0: function() {
    var result, future, t1, t2;
    result = [];
    future = $._FutureImpl$();
    t1 = new $.Stream_toList_anon(result);
    t2 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t1, new $.Stream_toList_anon0(result, future), t2, true);
    return future;
  },
  elementAt$1: function(index) {
    var t1, t2, future, t3;
    t1 = {};
    t1.index_0 = index;
    t2 = t1.index_0;
    if (!(typeof t2 === "number" && Math.floor(t2) === t2) || $.$$lt$n(t2, 0) === true)
      throw $.$$throw($.ArgumentError$(t1.index_0));
    future = $._FutureImpl$();
    t1.subscription_1 = null;
    t2 = new $.Stream_elementAt_anon(t1, future);
    t3 = future.get$_setError();
    t1.subscription_1 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_elementAt_anon0(future), t3, true);
    return future;
  }
};

$$.StreamSubscription = {"": "Object;"};

$$.StreamController = {"": "Object;stream",
  add$1: function(value) {
    return this.stream._add$1(value);
  },
  close$0: function() {
    this.stream._close$0();
  }
};

$$._MultiControllerStream = {"": "_MultiStreamImpl;_subscriptionHandler,_pauseHandler,_nextLink,_previousLink,_state,_pendingEvents",
  _subscriptionHandler$0: function() {
    return this._subscriptionHandler.call$0();
  },
  _pauseHandler$0: function() {
    return this._pauseHandler.call$0();
  },
  _onSubscriptionStateChange$0: function() {
    if (this._subscriptionHandler != null)
      this._subscriptionHandler$0();
  },
  _onPauseStateChange$0: function() {
    if (this._pauseHandler != null)
      this._pauseHandler$0();
  }
};

$$._StreamImpl = {"": "Stream;_state=",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    var subscription;
    if (this.get$_isComplete() === true)
      return $._DoneSubscription$(onDone);
    if (onData == null)
      onData = $._nullDataHandler;
    if (onError == null)
      onError = $._nullErrorHandler;
    if (onDone == null)
      onDone = $._nullDoneHandler;
    subscription = this._createSubscription$4(onData, onError, onDone, true === unsubscribeOnError);
    this._addListener$1(subscription);
    return subscription;
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, onDone, onError, null);
  },
  _add$1: function(value) {
    if (this.get$_isClosed() === true)
      throw $.$$throw($.StateError$("Sending on closed stream"));
    if (!this.get$_canFireEvent()) {
      this._addPendingEvent$1($._DelayedData$(value));
      return;
    }
    this._sendData$1(value);
    this._handlePendingEvents$0();
  },
  _close$0: function() {
    if (this.get$_isClosed() === true)
      return;
    this._state = $.$$or$n(this._state, 1);
    if (!this.get$_canFireEvent()) {
      this._addPendingEvent$1($.CONSTANT36);
      return;
    }
    this._sendDone$0();
  },
  get$_isClosed: function() {
    return $.$$and$n(this._state, 1) !== 0;
  },
  get$_isComplete: function() {
    return $.$$and$n(this._state, 2) !== 0;
  },
  get$_isPaused: function() {
    var t1 = this._state;
    if (typeof t1 !== "number")
      return this.get$_isPaused$bailout(1, t1);
    return t1 >= 32;
  },
  get$_isPaused$bailout: function(state0, t1) {
    return $.$$ge$n(t1, 32);
  },
  get$_isInCallback: function() {
    return $.$$and$n(this._state, 16) !== 0;
  },
  get$_hasPendingEvent: function() {
    var t1 = this._pendingEvents;
    return t1 != null && $.get$isEmpty$as(t1) !== true;
  },
  get$_isFiring: function() {
    return $.$$and$n(this._state, 8) !== 0;
  },
  get$_mayFireState: function() {
    return $.$$and$n(this._state, 4294967288) === 0;
  },
  get$_currentEventIdBit: function() {
    var t1 = this._state;
    if (t1 !== (t1 | 0))
      return this.get$_currentEventIdBit$bailout(1, t1);
    return $.CONSTANT15.$shr(t1 & 4, 2);
  },
  get$_currentEventIdBit$bailout: function(state0, t1) {
    switch (state0) {
      case 0:
        t1 = this._state;
      case 1:
        state0 = 0;
        t1 = $.$$and$n(t1, 4);
      case 2:
        state0 = 0;
        return $.CONSTANT15.$shr(t1, 2);
    }
  },
  get$_canFireEvent: function() {
    return this.get$_mayFireState() === true && !this.get$_hasPendingEvent();
  },
  _updatePauseCount$1: function(by) {
    var oldState, t1;
    oldState = this._state;
    t1 = $.getInterceptor$n(oldState);
    if (by >= 0)
      this._state = t1.$add(oldState, by << 5 >>> 0);
    else
      this._state = t1.$sub(oldState, -by << 5 >>> 0);
  },
  _startFiring$0: function() {
    this._state = $.$$xor$n(this._state, 12);
  },
  _endFiring$0: function() {
    this._state = $.$$xor$n(this._state, 8);
    if (!this.get$_hasSubscribers())
      this._callOnSubscriptionStateChange$0();
    else if (this.get$_isPaused() === true)
      this._callOnPauseStateChange$0();
  },
  _callOnPauseStateChange$0: function() {
    if (this.get$_isClosed() === true)
      return;
    if (this.get$_isInCallback() !== true) {
      this._state = $.$$or$n(this._state, 16);
      this._onPauseStateChange$0();
      this._state = $.$$xor$n(this._state, 16);
    } else
      this._onPauseStateChange$0();
  },
  _callOnSubscriptionStateChange$0: function() {
    if (this.get$_isInCallback() !== true) {
      this._state = $.$$or$n(this._state, 16);
      this._onSubscriptionStateChange$0();
      this._state = $.$$xor$n(this._state, 16);
    } else
      this._onSubscriptionStateChange$0();
  },
  _onPauseStateChange$0: function() {
  },
  _onSubscriptionStateChange$0: function() {
  },
  _addPendingEvent$1: function($event) {
    if (this._pendingEvents == null)
      this._pendingEvents = $._StreamImplEvents$();
    $.add$1$a(this._pendingEvents, $event);
  },
  _handlePendingEvents$0: function() {
    var events, t1;
    events = this._pendingEvents;
    t1 = $.getInterceptor(events);
    if (events == null)
      return;
    while (true) {
      if (!(t1.get$isEmpty(events) !== true && this.get$_isPaused() !== true))
        break;
      events.handleNext$1(this);
    }
  },
  _sendData$1: function(value) {
    this._forEachSubscriber$1(new $._StreamImpl__sendData_anon(value));
  },
  _sendError$1: function(error) {
    this._forEachSubscriber$1(new $._StreamImpl__sendError_anon(error));
  },
  _sendDone$0: function() {
    this._state = $.$$or$n(this._state, 2);
    if (!this.get$_hasSubscribers())
      return;
    this._forEachSubscriber$1(new $._StreamImpl__sendDone_anon(this));
  }
};

$$._MultiStreamImpl = {"": "_StreamImpl;_nextLink=,_previousLink=",
  get$_hasSubscribers: function() {
    return !$._InternalLinkList_isEmpty(this);
  },
  _createSubscription$4: function(onData, onError, onDone, unsubscribeOnError) {
    return $._StreamSubscriptionImpl$(this, onData, onError, onDone, unsubscribeOnError);
  },
  _forEachSubscriber$1: function(action) {
    var cursor, cursor0;
    if (!this.get$_hasSubscribers())
      return;
    this._startFiring$0();
    cursor = this._nextLink;
    for (; cursor !== this; cursor = cursor0) {
      if (cursor._needsEvent$1(this.get$_currentEventIdBit()) === true) {
        action.call$1(cursor);
        cursor._toggleEventReceived$0();
      }
      cursor0 = cursor.get$_nextLink();
      if (cursor.get$_isPendingUnsubscribe() === true)
        this._removeListener$1(cursor);
    }
    this._endFiring$0();
  },
  _addListener$1: function(listener) {
    var t1;
    listener._setSubscribed$1(this.get$_currentEventIdBit());
    t1 = this.get$_hasSubscribers();
    $._InternalLinkList_add(this, listener);
    if (!t1)
      this._callOnSubscriptionStateChange$0();
  },
  _cancel$1: function(listener) {
    var t1, wasPaused;
    t1 = listener.get$_nextLink();
    if (listener == null ? t1 == null : listener === t1)
      return;
    if (this.get$_isFiring() === true)
      if (listener._needsEvent$1(this.get$_currentEventIdBit()) === true)
        listener._setPendingUnsubscribe$0();
      else
        this._removeListener$1(listener);
    else {
      wasPaused = this.get$_isPaused();
      this._removeListener$1(listener);
      if ($.$$eq$o(wasPaused, this.get$_isPaused()) !== true)
        this._onPauseStateChange$0();
      if (!this.get$_hasSubscribers())
        this._callOnSubscriptionStateChange$0();
    }
  },
  _removeListener$1: function(listener) {
    var pauseCount = listener._setUnsubscribed$0();
    if (typeof pauseCount !== "number")
      return this._removeListener$1$bailout(1, listener, pauseCount);
    this._updatePauseCount$1(-pauseCount);
    $._InternalLink_unlink(listener);
  },
  _removeListener$1$bailout: function(state0, listener, pauseCount) {
    this._updatePauseCount$1($.$$negate$n(pauseCount));
    $._InternalLink_unlink(listener);
  },
  _MultiStreamImpl$0: function() {
    this._previousLink = this;
    this._nextLink = this;
  }
};

$$._StreamSubscriptionImpl = {"": "_StreamListener;_unsubscribeOnError,_liblib0$_onData,_onError,_onDone,_source,_state,_nextLink,_previousLink",
  _liblib0$_onData$1: function(arg0) {
    return this._liblib0$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _onDone$0: function() {
    return this._onDone.call$0();
  },
  _sendData$1: function(data) {
    this._liblib0$_onData$1(data);
  },
  _sendError$1: function(error) {
    this._onError$1(error);
    if (this._unsubscribeOnError)
      this._source._cancel$1(this);
  },
  _sendDone$0: function() {
    this._onDone$0();
  },
  cancel$0: function() {
    this._source._cancel$1(this);
  }
};

$$._DelayedEvent = {"": "Object;next="};

$$._DelayedData = {"": "_DelayedEvent;value>,next",
  perform$1: function(stream) {
    stream._sendData$1(this.value);
  }
};

$$._DelayedDone = {"": "Object;",
  perform$1: function(stream) {
    stream._sendDone$0();
  },
  get$next: function() {
    return;
  },
  set$next: function(_) {
    throw $.$$throw($.StateError$("No events after a done."));
  }
};

$$._InternalLink = {"": "Object;_nextLink=,_previousLink=",
  _InternalLink$0: function() {
    this._nextLink = this;
    this._previousLink = this;
  }
};

$$._StreamListener = {"": "_InternalLink;_state=",
  get$_isPendingUnsubscribe: function() {
    var t1 = this._state;
    if (t1 !== (t1 | 0))
      return this.get$_isPendingUnsubscribe$bailout(1, t1);
    return (t1 & 2) !== 0;
  },
  get$_isPendingUnsubscribe$bailout: function(state0, t1) {
    return $.$$and$n(t1, 2) !== 0;
  },
  _needsEvent$1: function(currentEventIdBit) {
    var t1 = this._state;
    if (t1 !== (t1 | 0))
      return this._needsEvent$1$bailout(1, currentEventIdBit, t1);
    return $.CONSTANT15.$shr(t1 & 4, 2) !== currentEventIdBit;
  },
  _needsEvent$1$bailout: function(state0, currentEventIdBit, t1) {
    switch (state0) {
      case 0:
        t1 = this._state;
      case 1:
        state0 = 0;
        t1 = $.$$and$n(t1, 4);
      case 2:
        state0 = 0;
        return $.CONSTANT15.$shr(t1, 2) !== currentEventIdBit;
    }
  },
  _toggleEventReceived$0: function() {
    var t1 = this._state;
    if (t1 !== (t1 | 0))
      return this._toggleEventReceived$0$bailout(1, t1);
    this._state = (t1 ^ 4) >>> 0;
  },
  _toggleEventReceived$0$bailout: function(state0, t1) {
    this._state = $.$$xor$n(t1, 4);
  },
  _setSubscribed$1: function(eventIdBit) {
    var t1 = $.$$shl$n(eventIdBit, 2);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    this._state = (1 | t1) >>> 0;
  },
  _setPendingUnsubscribe$0: function() {
    this._state = $.$$or$n(this._state, 2);
  },
  _setUnsubscribed$0: function() {
    var timesPaused = $.$$shr$n(this._state, 3);
    this._state = 0;
    return timesPaused;
  }
};

$$._PendingEvents = {"": "Object;",
  get$isScheduled: function() {
    return this.scheduleTimer != null;
  }
};

$$._StreamImplEvents = {"": "_PendingEvents;firstPendingEvent,lastPendingEvent,scheduleTimer",
  get$isEmpty: function() {
    return this.lastPendingEvent == null;
  },
  get$isScheduled: function() {
    return this.scheduleTimer != null;
  },
  add$1: function($event) {
    var t1 = this.lastPendingEvent;
    if (t1 == null) {
      this.lastPendingEvent = $event;
      this.firstPendingEvent = $event;
    } else {
      t1.set$next($event);
      this.lastPendingEvent = $event;
    }
  },
  handleNext$1: function(stream) {
    var $event;
    if (this.get$isScheduled() === true) {
      this.scheduleTimer.cancel$0();
      this.scheduleTimer = null;
    }
    $event = this.firstPendingEvent;
    this.firstPendingEvent = $event.get$next();
    if (this.firstPendingEvent == null)
      this.lastPendingEvent = null;
    $event.perform$1(stream);
  }
};

$$._DoneSubscription = {"": "Object;_handler>,_timer,_liblib0$_pauseCount",
  _handler$0: function() {
    return this._handler.call$0();
  },
  _delayDone$0: function() {
    this._timer = $.Timer_Timer($.CONSTANT8, new $._DoneSubscription__delayDone_anon(this));
  },
  get$_isComplete: function() {
    return this._timer == null && this._liblib0$_pauseCount === 0;
  },
  cancel$0: function() {
    if (this.get$_isComplete())
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._timer;
    if (t1 != null) {
      t1.cancel$0();
      this._timer = null;
    }
    this._liblib0$_pauseCount = 0;
  },
  _DoneSubscription$1: function(_handler) {
    this._delayDone$0();
  }
};

$$._ForwardingStream = {"": "Stream;",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    if (onData == null)
      onData = $._nullDataHandler;
    if (onError == null)
      onError = $._nullErrorHandler;
    if (onDone == null)
      onDone = $._nullDoneHandler;
    return this._createSubscription$4(onData, onError, onDone, true === unsubscribeOnError);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, onDone, onError, null);
  },
  _createSubscription$4: function(onData, onError, onDone, unsubscribeOnError) {
    return $._ForwardingStreamSubscription$(this, onData, onError, onDone, unsubscribeOnError);
  },
  _handleData$2: function(data, sink) {
    sink._sendData$1(data);
  },
  _handleError$2: function(error, sink) {
    sink._sendError$1(error);
  },
  _handleDone$1: function(sink) {
    sink._sendDone$0();
  }
};

$$._BaseStreamSubscription = {"": "Object;",
  _liblib0$_onData$1: function(arg0) {
    return this._liblib0$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _onDone$0: function() {
    return this._onDone.call$0();
  },
  _BaseStreamSubscription$3: function(_onData, _onError, _onDone) {
    if (this._liblib0$_onData == null)
      this._liblib0$_onData = $._nullDataHandler;
    if (this._onError == null)
      this._onError = $._nullErrorHandler;
    if (this._onDone == null)
      this._onDone = $._nullDoneHandler;
  }
};

$$._ForwardingStreamSubscription = {"": "_BaseStreamSubscription;_stream,_unsubscribeOnError,_subscription,_liblib0$_onData,_onError,_onDone",
  cancel$0: function() {
    var t1 = this._subscription;
    if (t1 == null)
      throw $.$$throw($.StateError$("Subscription has been unsubscribed"));
    t1.cancel$0();
    this._subscription = null;
  },
  _sendData$1: function(data) {
    this._liblib0$_onData$1(data);
  },
  _sendError$1: function(error) {
    this._onError$1(error);
    if (this._unsubscribeOnError) {
      this._subscription.cancel$0();
      this._subscription = null;
    }
  },
  _sendDone$0: function() {
    var t1 = this._subscription;
    if (t1 != null) {
      t1.cancel$0();
      this._subscription = null;
    }
    this._onDone$0();
  },
  _handleData$1: function(data) {
    this._stream._handleData$2(data, this);
  },
  get$_handleData: function() {
    return new $.Bound__handleData__ForwardingStreamSubscription(this, "_handleData$1");
  },
  _handleError$1: function(error) {
    this._stream._handleError$2(error, this);
  },
  get$_handleError: function() {
    return new $.BoundClosure$1(this, "_handleError$1");
  },
  _handleDone$0: function() {
    this._subscription = null;
    this._stream._handleDone$1(this);
  },
  get$_handleDone: function() {
    return new $.Bound__handleDone__ForwardingStreamSubscription(this, "_handleDone$0");
  },
  _ForwardingStreamSubscription$5: function(_stream, onData, onError, onDone, _unsubscribeOnError) {
    var t1, t2, t3;
    t1 = this._stream._source;
    t2 = this.get$_handleData();
    t3 = this.get$_handleError();
    this._subscription = t1.listen$3$onDone$onError(t2, this.get$_handleDone(), t3);
  }
};

$$._WhereStream = {"": "_ForwardingStream;_test,_source",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _handleData$2: function(inputEvent, sink) {
    var satisfies, e, s, exception, t1;
    satisfies = null;
    try {
      satisfies = this._test$1(inputEvent);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      sink._sendError$1($._asyncError(e, s, null));
      return;
    }

    if (satisfies === true)
      sink._sendData$1(inputEvent);
  }
};

$$._ElementCssClassSet = {"": "CssClassSet;_element",
  readClasses$0: function() {
    var s, t1, trimmed;
    s = $.LinkedHashSet$();
    for (t1 = $.CONSTANT11.get$iterator($.split$1$s(this._element.className, " ")); t1.moveNext$0();) {
      trimmed = $.trim$0$s(t1.get$current());
      if ($.CONSTANT9.get$isEmpty(trimmed) !== true)
        s.add$1(trimmed);
    }
    return s;
  },
  writeClasses$1: function(s) {
    var t1;
    $.List_List$from(s);
    t1 = $.join$1$a(s, " ");
    this._element.className = t1;
  }
};

$$._ChildNodeListLazy = {"": "Object;_this",
  get$last: function() {
    var result = this._this.lastChild;
    return result;
  },
  add$1: function(value) {
    this._this.appendChild(value);
  },
  removeLast$0: function() {
    var result = this.get$last();
    if (result != null)
      this._this.removeChild(result);
    return result;
  },
  remove$1: function(object) {
    var t1;
    if (!(typeof object === "object" && object !== null && object.$isNode()))
      return;
    t1 = this._this;
    if (t1 !== object.parentNode)
      return;
    t1.removeChild(object);
  },
  $indexSet: function(index, value) {
    var t1, t2;
    t1 = this._this;
    t2 = t1.childNodes;
    if (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior())
      return this.$$indexSet$bailout(1, index, value, t1, t2);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t2.length)
      throw $.ioore(index);
    t1.replaceChild(value, t2[index]);
  },
  $$indexSet$bailout: function(state0, index, value, t1, t2) {
    t1.replaceChild(value, $.$$index$a(t2, index));
  },
  get$iterator: function() {
    return $.get$iterator$a(this._this.childNodes);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq$o(this.get$length(), 0);
  },
  elementAt$1: function(index) {
    return $.$$index$a(this._this.childNodes, index);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  get$length: function() {
    return $.get$length$a(this._this.childNodes);
  },
  $index: function(index) {
    var t1 = this._this.childNodes;
    if (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior())
      return this.$$index$bailout(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, index, t1) {
    return $.$$index$a(t1, index);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [null]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [null]; };
  }
};

$$._AttributeMap = {"": "Object;",
  forEach$1: function(f) {
    var t1, t2;
    for (t1 = $.get$iterator$a(this.get$keys()); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      f.call$2(t2, this.$index(t2));
    }
  },
  get$keys: function() {
    var attributes, keys, len, i;
    attributes = this._element.attributes;
    keys = $.List_List(0);
    for (len = attributes.get$length(), i = 0; i < len; ++i)
      if (this._matches$1(attributes.$index(i)) === true)
        keys.push(attributes.$index(i).get$$$dom_localName());
    return keys;
  },
  get$values: function() {
    var attributes, values, len, i;
    attributes = this._element.attributes;
    values = $.List_List(0);
    for (len = attributes.get$length(), i = 0; i < len; ++i)
      if (this._matches$1(attributes.$index(i)) === true)
        values.push(attributes.$index(i).get$value());
    return values;
  },
  get$isEmpty: function() {
    return $.$$eq$o(this.get$length(), 0);
  },
  $isMap: function() {
    return true;
  },
  $asMap: function() {
    return function () { return [$.String, $.String]; };
  }
};

$$._ElementAttributeMap = {"": "_AttributeMap;_element",
  containsKey$1: function(key) {
    return this._element.hasAttribute(key);
  },
  $index: function(key) {
    return this._element.getAttribute(key);
  },
  $indexSet: function(key, value) {
    this._element.setAttribute(key, $.S(value));
  },
  remove$1: function(key) {
    var t1, value;
    t1 = this._element;
    value = t1.getAttribute(key);
    t1.removeAttribute(key);
    return value;
  },
  get$length: function() {
    return $.get$length$as(this.get$keys());
  },
  _matches$1: function(node) {
    return node.get$$$dom_namespaceUri() == null;
  }
};

$$.CssClassSet = {"": "Object;",
  toString$0: function() {
    return $.join$1$a(this.readClasses$0(), " ");
  },
  get$iterator: function() {
    return $.get$iterator$a(this.readClasses$0());
  },
  forEach$1: function(f) {
    $.forEach$1$a(this.readClasses$0(), f);
  },
  join$1: function(separator) {
    return $.join$1$a(this.readClasses$0(), separator);
  },
  where$1: function(f) {
    return $.where$1$a(this.readClasses$0(), f);
  },
  any$1: function(f) {
    return $.any$1$a(this.readClasses$0(), f);
  },
  get$isEmpty: function() {
    return $.get$isEmpty$as(this.readClasses$0());
  },
  get$length: function() {
    return $.get$length$as(this.readClasses$0());
  },
  contains$1: function(value) {
    return $.contains$1$as(this.readClasses$0(), value);
  },
  add$1: function(value) {
    var t1, s;
    t1 = new $.CssClassSet_add_anon(value);
    s = this.readClasses$0();
    t1.call$1(s);
    this.writeClasses$1(s);
  },
  remove$1: function(value) {
    var s, result;
    if (!(typeof value === "string"))
      return false;
    s = this.readClasses$0();
    result = $.remove$1$a(s, value);
    this.writeClasses$1(s);
    return result;
  },
  toList$0: function() {
    return $.toList$0$a(this.readClasses$0());
  },
  elementAt$1: function(index) {
    return $.elementAt$1$a(this.readClasses$0(), index);
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.String]; };
  }
};

$$._EventStream = {"": "Stream;_target,_eventType,_useCapture",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    return $._EventStreamSubscription$(this._target, this._eventType, onData, this._useCapture);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, onDone, onError, null);
  }
};

$$._EventStreamSubscription = {"": "StreamSubscription;_pauseCount,_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this.get$_canceled() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._onData;
    if (t1 != null)
      this._target.$$dom_removeEventListener$3(this._eventType, t1, this._useCapture);
    this._target = null;
    this._onData = null;
  },
  get$_canceled: function() {
    return this._target == null;
  },
  get$_paused: function() {
    return this._pauseCount > 0;
  },
  _tryResume$0: function() {
    if (this._onData != null && this.get$_paused() !== true)
      this._target.$$dom_addEventListener$3(this._eventType, this._onData, this._useCapture);
  },
  _EventStreamSubscription$4: function(_target, _eventType, _onData, _useCapture) {
    this._tryResume$0();
  }
};

$$.EventStreamProvider = {"": "Object;_eventType",
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventType, useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._DOMWindowCrossFrame = {"": "Object;_window",
  get$top: function() {
    return $._DOMWindowCrossFrame__createSafe(this._window.top);
  },
  close$0: function() {
    return this._window.close();
  }
};

$$.FixedSizeListIterator = {"": "Object;_array,_liblib$_length,_position,_liblib$_current",
  moveNext$0: function() {
    var t1, nextPosition;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    nextPosition = t1 + 1;
    t1 = this._liblib$_length;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(2, t1, nextPosition);
    if (nextPosition < t1) {
      t1 = this._array;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout(3, t1, nextPosition);
      if (nextPosition !== (nextPosition | 0))
        throw $.iae(nextPosition);
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._liblib$_current = t1[nextPosition];
      this._position = nextPosition;
      return true;
    }
    this._liblib$_current = null;
    this._position = t1;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, nextPosition) {
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        nextPosition = $.$$add$n(t1, 1);
        t1 = this._liblib$_length;
      case 2:
        state0 = 0;
      case 3:
        if (state0 === 3 || state0 === 0 && $.$$lt$n(nextPosition, t1) === true)
          switch (state0) {
            case 0:
              t1 = this._array;
            case 3:
              state0 = 0;
              this._liblib$_current = $.$$index$as(t1, nextPosition);
              this._position = nextPosition;
              return true;
          }
        this._liblib$_current = null;
        this._position = t1;
        return false;
    }
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$._Random = {"": "Object;",
  nextDouble$0: function() {
    return Math.random();
  }
};

$$._AttributeClassSet = {"": "CssClassSet;_liblib4$_element",
  readClasses$0: function() {
    var classname, s, t1, trimmed;
    classname = this._liblib4$_element.get$attributes().$index("class");
    s = $.LinkedHashSet$();
    if (classname == null)
      return s;
    for (t1 = $.CONSTANT11.get$iterator($.split$1$s(classname, " ")); t1.moveNext$0();) {
      trimmed = $.trim$0$s(t1.get$current());
      if ($.CONSTANT9.get$isEmpty(trimmed) !== true)
        s.add$1(trimmed);
    }
    return s;
  },
  writeClasses$1: function(s) {
    this._liblib4$_element.get$attributes().$indexSet("class", $.join$1$a(s, " "));
  }
};

$$.GalagaGame = {"": "Game;score=,highScore,lastPowerUp,lastEnemy,lastStar,_liblib1$_state,Stats>,Options>,Controls,Highscores>,RankSelect>,pointMultiplier=,enemyX<,enemyY<,bulletCap,shipStartLives,colorCount=,enemyCount,enemyAmount=,defaultTimer,level=,p1Dead<,goingRight>,_countdownTimer,_waitingTimer,_waiting=,difficulty=,bonusCheck=,bonusStage=,soundEffectsOn=,tutorial<,visualLevel>,ship>,nextId,targetId=,_statUpdateEvent>,_gameOverEvent>,_shipHitEvent>,_bossHitEvent>,_bossKilledEvent,_motherShipEvent>,_normalHitEvent>,entities,timer,clockTick,rect,sound,input,renderer,loop,bgStyle,showOutlines",
  get$state: function() {
    return this._liblib1$_state;
  },
  set$state: function(value) {
    if ($.$$eq$o(this._liblib1$_state, value) === true)
      return;
    this._liblib1$_state = value;
    this.disableEntitiesByGroup$1("welcome");
    this.disableEntitiesByGroup$1("gameOver");
    this.disableEntitiesByGroup$1("stats");
    this.disableEntitiesByGroup$1("paused");
    this.disableEntitiesByGroup$1("options");
    this.disableEntitiesByGroup$1("instructions");
    this.disableEntitiesByGroup$1("levelEnd");
    this.disableEntitiesByGroup$1("leaders");
    if ($.$$eq$o(this._liblib1$_state, 1) === true)
      this.enableEntitiesByGroup$1("welcome");
    else if ($.$$eq$o(this._liblib1$_state, 4) === true)
      this.enableEntitiesByGroup$1("gameOver");
    else if ($.$$eq$o(this._liblib1$_state, 5) === true)
      this.enableEntitiesByGroup$1("stats");
    else if ($.$$eq$o(this._liblib1$_state, 2) === true)
      this.enableEntitiesByGroup$1("paused");
    else if ($.$$eq$o(this._liblib1$_state, 6) === true)
      this.enableEntitiesByGroup$1("options");
    else if ($.$$eq$o(this._liblib1$_state, 7) === true)
      this.enableEntitiesByGroup$1("instructions");
    else if ($.$$eq$o(this._liblib1$_state, 8) === true)
      this.enableEntitiesByGroup$1("levelEnd");
    else if ($.$$eq$o(this._liblib1$_state, 9) === true)
      this.enableEntitiesByGroup$1("leaders");
  },
  set$waiting: function(value) {
    var t1;
    this._waiting = value;
    t1 = this._waitingTimer;
    if (t1 != null)
      t1.cancel$0();
    this.disableEntitiesByGroup$1("welcome");
    this.disableEntitiesByGroup$1("gameOver");
    this.disableEntitiesByGroup$1("stats");
    this.disableEntitiesByGroup$1("paused");
    this.disableEntitiesByGroup$1("options");
    this.disableEntitiesByGroup$1("instructions");
    this.disableEntitiesByGroup$1("leaders");
    this._waitingTimer = $.Timer_Timer$repeating($.CONSTANT19, new $.GalagaGame_waiting_anon(this));
  },
  start$0: function() {
    var t1, t2;
    t1 = this.Stats;
    if (t1.containsKey$1("killed") !== true)
      $.$$indexSet$a(t1, "killed", 0);
    if (t1.containsKey$1("wins") !== true)
      $.$$indexSet$a(t1, "wins", 0);
    if (t1.containsKey$1("loses") !== true)
      $.$$indexSet$a(t1, "loses", 0);
    if (t1.containsKey$1("totalGames") !== true)
      $.$$indexSet$a(t1, "totalGames", 0);
    if (t1.containsKey$1("highscore") !== true)
      $.$$indexSet$a(t1, "highscore", 0);
    if (t1.containsKey$1("normalKills") !== true)
      $.$$indexSet$a(t1, "normalKills", 0);
    if (t1.containsKey$1("bossKills") !== true)
      $.$$indexSet$a(t1, "bossKills", 0);
    if (t1.containsKey$1("motherKills") !== true)
      $.$$indexSet$a(t1, "motherKills", 0);
    if (t1.containsKey$1("powerups") !== true)
      $.$$indexSet$a(t1, "powerups", 0);
    t1 = this.Options;
    if (t1.containsKey$1("startLives") !== true)
      $.$$indexSet$a(t1, "startLives", 3);
    if (t1.containsKey$1("bulletCap") !== true)
      $.$$indexSet$a(t1, "bulletCap", 3);
    if (t1.containsKey$1("time") !== true)
      $.$$indexSet$a(t1, "time", 60);
    if (t1.containsKey$1("difficulty") !== true)
      $.$$indexSet$a(t1, "difficulty", 1);
    if (t1.containsKey$1("powerups") !== true)
      $.$$indexSet$a(t1, "powerups", 1);
    if (t1.containsKey$1("soundeffects") !== true)
      $.$$indexSet$a(t1, "soundeffects", 1);
    t2 = this.Controls;
    if (t2.containsKey$1("left") !== true)
      $.$$indexSet$a(t2, "left", "left");
    if (t2.containsKey$1("right") !== true)
      $.$$indexSet$a(t2, "right", "right");
    if (t2.containsKey$1("fire") !== true)
      $.$$indexSet$a(t2, "fire", "space");
    t2 = this.Highscores;
    if (t2.containsKey$1(1) !== true)
      $.$$indexSet$a(t2, 1, 0);
    if (t2.containsKey$1(2) !== true)
      $.$$indexSet$a(t2, 2, 0);
    if (t2.containsKey$1(3) !== true)
      $.$$indexSet$a(t2, 3, 0);
    if (t2.containsKey$1(4) !== true)
      $.$$indexSet$a(t2, 4, 0);
    if (t2.containsKey$1(5) !== true)
      $.$$indexSet$a(t2, 5, 0);
    if (t2.containsKey$1(6) !== true)
      $.$$indexSet$a(t2, 6, 0);
    if (t2.containsKey$1(7) !== true)
      $.$$indexSet$a(t2, 7, 0);
    if (t2.containsKey$1(8) !== true)
      $.$$indexSet$a(t2, 8, 0);
    if (t2.containsKey$1(9) !== true)
      $.$$indexSet$a(t2, 9, 0);
    if (t2.containsKey$1(10) !== true)
      $.$$indexSet$a(t2, 10, 0);
    t2 = this.RankSelect;
    if (t2.containsKey$1(1) !== true)
      $.$$indexSet$a(t2, 1, true);
    if (t2.containsKey$1(2) !== true)
      $.$$indexSet$a(t2, 2, false);
    if (t2.containsKey$1(3) !== true)
      $.$$indexSet$a(t2, 3, false);
    if (t2.containsKey$1(4) !== true)
      $.$$indexSet$a(t2, 4, false);
    if (t2.containsKey$1(5) !== true)
      $.$$indexSet$a(t2, 5, false);
    if (t2.containsKey$1(6) !== true)
      $.$$indexSet$a(t2, 6, false);
    if (t2.containsKey$1(7) !== true)
      $.$$indexSet$a(t2, 7, false);
    if (t2.containsKey$1(8) !== true)
      $.$$indexSet$a(t2, 8, false);
    if (t2.containsKey$1(9) !== true)
      $.$$indexSet$a(t2, 9, false);
    if ($.$$eq$o($.$$index$as(t1, "soundeffects"), 1) === true)
      this.soundEffectsOn = true;
    else
      this.soundEffectsOn = false;
    this.createWelcomeMenu$0();
    this.createGameOverMenu$0();
    this.createStatsMenu$0();
    this.createPausedMenu$0();
    this.createControlsMenu$0();
    this.createLeaderBoardMenu$0();
    if (this.soundEffectsOn === true)
      this.sound.play$3("menu", 0.5, true);
    this.set$state(1);
    $.Game.prototype.start$0.call(this);
  },
  update$0: function() {
    var t1, t2, t3;
    t1 = this.get$state();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(1, t1);
    if (t1 !== 3) {
      t1 = this.get$state();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(2, t1);
      t1 = t1 === 2;
    } else
      t1 = true;
    if (t1) {
      t1 = this.input.keyCode;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(3, t1);
      if (t1 === 27) {
        t1 = this.get$state();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(4, t1);
        this.set$state(t1 === 2 ? 3 : 2);
      }
      t1 = this.enemyAmount;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(5, t1);
      if (t1 <= 0) {
        t1 = this.Stats;
        t2 = $.getInterceptor$as(t1);
        t3 = t2.$index(t1, "wins");
        if (typeof t3 !== "number")
          return this.update$0$bailout1(6, t1, t2, t3);
        t2.$indexSet(t1, "wins", t3 + 1);
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon0());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon1());
        if (this.soundEffectsOn === true)
          this.sound.play$1("cursorSelect2");
        this.removeEntitiesByGroup$1("levelEnd");
        this.createLevelEnd$0();
        this.set$state(8);
        this.set$waiting(1);
        t1 = this.tutorial;
        if (typeof t1 !== "boolean")
          return this.update$0$bailout1(7, t1);
        if (!t1) {
          t1 = this.level;
          if (typeof t1 !== "number")
            return this.update$0$bailout1(8, t1);
          this.level = t1 + 1;
        }
        this.visualLevel = this.visualLevel + 1;
      }
      t1 = this.get$state();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(9, t1);
      if (t1 === 3) {
        t1 = $.$$index$as(this.Options, "soundeffects");
        if (typeof t1 !== "number")
          return this.update$0$bailout1(10, t1);
        t1 = t1 === 1;
      } else
        t1 = false;
      if (t1)
        this.newPowerUp$0();
      t1 = this.get$state();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(11, t1);
      if (t1 === 3)
        this.newMotherShip$0();
      t1 = this.timer.get$gameTime();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(12, t1);
      if (t1 <= 0 && this.bonusStage !== true)
        this.gameOver$0();
      else if (this.bonusStage === true && t1 <= 0) {
        t1 = this.Stats;
        t2 = $.getInterceptor$as(t1);
        t3 = t2.$index(t1, "wins");
        if (typeof t3 !== "number")
          return this.update$0$bailout1(14, t1, t2, t3);
        t2.$indexSet(t1, "wins", t3 + 1);
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon2());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon3());
        this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon4());
        if (this.soundEffectsOn === true)
          this.sound.play$1("cursorSelect2");
        this.removeEntitiesByGroup$1("levelEnd");
        this.createLevelEnd$0();
        this.set$state(8);
        this.set$waiting(1);
        t1 = this.tutorial;
        if (typeof t1 !== "boolean")
          return this.update$0$bailout1(15, t1);
        if (!t1) {
          t1 = this.level;
          if (typeof t1 !== "number")
            return this.update$0$bailout1(16, t1);
          this.level = t1 + 1;
        }
        this.visualLevel = this.visualLevel + 1;
      }
    }
    t1 = this.colorCount;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(17, t1);
    if (t1 < 7)
      this.colorCount = t1 + 1;
    else if (t1 >= 7)
      this.colorCount = 1;
    $.forEach$1$a($.where$1$a(this.entities, new $.GalagaGame_update_anon5()), new $.GalagaGame_update_anon6(this));
    this.newStar$0();
    $.Game.prototype.update$0.call(this);
  },
  update$0$bailout1: function(state0, t1, t2, t3) {
    switch (state0) {
      case 0:
        t1 = this.get$state();
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$eq$o(t1, 3) !== true)
          switch (state0) {
            case 0:
              t1 = this.get$state();
            case 2:
              state0 = 0;
              t3 = $.$$eq$o(t1, 2) === true;
              t1 = t3;
          }
        else
          t1 = true;
      default:
        if (state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              t1 = this.input.keyCode;
            case 3:
              state0 = 0;
            case 4:
              if (state0 === 4 || state0 === 0 && $.$$eq$o(t1, 27) === true)
                switch (state0) {
                  case 0:
                    t1 = this.get$state();
                  case 4:
                    state0 = 0;
                    this.set$state($.$$eq$o(t1, 2) === true ? 3 : 2);
                }
              t1 = this.enemyAmount;
            case 5:
              state0 = 0;
            default:
              if (state0 === 8 || state0 === 7 || state0 === 6 || state0 === 0 && $.$$le$n(t1, 0) === true)
                switch (state0) {
                  case 0:
                    t1 = this.Stats;
                    t2 = $.getInterceptor$as(t1);
                    t3 = t2.$index(t1, "wins");
                  case 6:
                    state0 = 0;
                    t2.$indexSet(t1, "wins", $.$$add$n(t3, 1));
                    this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon());
                    this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon0());
                    this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon1());
                    if (this.soundEffectsOn === true)
                      this.sound.play$1("cursorSelect2");
                    this.removeEntitiesByGroup$1("levelEnd");
                    this.createLevelEnd$0();
                    this.set$state(8);
                    this.set$waiting(1);
                    t1 = this.tutorial;
                  case 7:
                    state0 = 0;
                  case 8:
                    if (state0 === 8 || state0 === 0 && $.$$eq$o(t1, false) === true)
                      switch (state0) {
                        case 0:
                          t1 = this.level;
                        case 8:
                          state0 = 0;
                          this.level = $.$$add$n(t1, 1);
                      }
                    this.visualLevel = this.visualLevel + 1;
                }
              t1 = this.get$state();
            case 9:
              state0 = 0;
            case 10:
              if (state0 === 10 || state0 === 0 && $.$$eq$o(t1, 3) === true)
                switch (state0) {
                  case 0:
                    t1 = $.$$index$as(this.Options, "soundeffects");
                  case 10:
                    state0 = 0;
                    t3 = $.$$eq$o(t1, 1) === true;
                    t1 = t3;
                }
              else
                t1 = false;
              if (t1)
                this.newPowerUp$0();
              t1 = this.get$state();
            case 11:
              state0 = 0;
              if ($.$$eq$o(t1, 3) === true)
                this.newMotherShip$0();
              t1 = this.timer.get$gameTime();
            case 12:
              state0 = 0;
            case 13:
            case 14:
            case 15:
            case 16:
              if (state0 === 0 && $.$$le$n(t1, 0) === true && this.bonusStage !== true)
                this.gameOver$0();
              else
                switch (state0) {
                  case 0:
                  case 13:
                    if (state0 === 13 || state0 === 0 && this.bonusStage === true)
                      switch (state0) {
                        case 0:
                          t1 = this.timer.get$gameTime();
                        case 13:
                          state0 = 0;
                          t3 = $.$$le$n(t1, 0) === true;
                          t1 = t3;
                      }
                    else
                      t1 = false;
                  default:
                    if (state0 === 16 || state0 === 15 || state0 === 14 || state0 === 0 && t1)
                      switch (state0) {
                        case 0:
                          t1 = this.Stats;
                          t2 = $.getInterceptor$as(t1);
                          t3 = t2.$index(t1, "wins");
                        case 14:
                          state0 = 0;
                          t2.$indexSet(t1, "wins", $.$$add$n(t3, 1));
                          this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon2());
                          this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon3());
                          this.removeEntitiesByFilter$1(new $.GalagaGame_update_anon4());
                          if (this.soundEffectsOn === true)
                            this.sound.play$1("cursorSelect2");
                          this.removeEntitiesByGroup$1("levelEnd");
                          this.createLevelEnd$0();
                          this.set$state(8);
                          this.set$waiting(1);
                          t1 = this.tutorial;
                        case 15:
                          state0 = 0;
                        case 16:
                          if (state0 === 16 || state0 === 0 && $.$$eq$o(t1, false) === true)
                            switch (state0) {
                              case 0:
                                t1 = this.level;
                              case 16:
                                state0 = 0;
                                this.level = $.$$add$n(t1, 1);
                            }
                          this.visualLevel = this.visualLevel + 1;
                      }
                }
          }
        t1 = this.colorCount;
      case 17:
        state0 = 0;
      case 18:
      case 19:
        if (state0 === 18 || state0 === 0 && $.$$lt$n(t1, 7) === true)
          switch (state0) {
            case 0:
              t1 = this.colorCount;
            case 18:
              state0 = 0;
              this.colorCount = $.$$add$n(t1, 1);
          }
        else
          switch (state0) {
            case 0:
              t1 = this.colorCount;
            case 19:
              state0 = 0;
              if ($.$$ge$n(t1, 7) === true)
                this.colorCount = 1;
          }
        $.forEach$1$a($.where$1$a(this.entities, new $.GalagaGame_update_anon5()), new $.GalagaGame_update_anon6(this));
        this.newStar$0();
        $.Game.prototype.update$0.call(this);
    }
  },
  startStars$0: function() {
    var w, star;
    w = $.random(0.5, 3.5, false);
    star = $.Stars$(this, 0, 0, w, w, this.colorCount);
    do {
      star.set$x($.random(-this.rect.get$halfWidth(), this.rect.get$halfWidth(), false));
      star.set$y($.random(-this.rect.get$halfHeight(), this.rect.get$halfHeight(), false));
    } while ($.any$1$a($.where$1$a(this.entities, new $.GalagaGame_startStars_anon()), new $.GalagaGame_startStars_anon0(star)) === true);
    $.add$1$a(this.entities, star);
  },
  newParticle$4: function(x, y, xVel, yVel) {
    var w, particle;
    w = $.random(0.5, 3.5, false);
    particle = $.Particles$(this, x, y, w, w, this.colorCount, xVel, yVel);
    $.add$1$a(this.entities, particle);
  },
  newExplosion$2: function(x, y) {
    var yV, i;
    for (yV = 80, i = 0; i < 3; ++i) {
      this.newParticle$4(x, y, 50, yV);
      yV -= 80;
    }
    for (yV = 80, i = 0; i < 3; ++i) {
      this.newParticle$4(x, y, -50, yV);
      yV -= 80;
    }
    this.newParticle$4(x, y, 0, 100);
    this.newParticle$4(x, y, 0, -100);
    if (this.soundEffectsOn === true)
      this.sound.play$3("explosion", 0.5, false);
  },
  newMiniExplosion$2: function(x, y) {
    this.newParticle$4(x, y, 50, 0);
    this.newParticle$4(x, y, -50, 0);
    this.newParticle$4(x, y, 0, 50);
    this.newParticle$4(x, y, 0, -50);
    if (this.soundEffectsOn === true)
      this.sound.play$3("explosion", 0.1, false);
  },
  newStar$0: function() {
    var w, star;
    if ($.$$gt$n($.random(0, 1, false), 0.09) === true || $.$$eq$o(this.get$state(), 2) === true)
      return;
    w = $.random(0.5, 3.5, false);
    star = $.Stars$(this, 0, 0, w, w, this.colorCount);
    do {
      star.set$x($.random(-this.rect.get$halfWidth(), this.rect.get$halfWidth(), false));
      star.set$y(-this.rect.get$halfHeight());
    } while ($.any$1$a($.where$1$a(this.entities, new $.GalagaGame_newStar_anon()), new $.GalagaGame_newStar_anon0(star)) === true);
    this.lastStar = this.timer.get$gameTime();
    $.add$1$a(this.entities, star);
  },
  newBoss$0: function() {
    var enemy = $.Enemy$(this, 0, 0, this.difficulty, "Boss");
    enemy.idNum = this.nextId;
    this.nextId = $.$$add$n(this.nextId, 1);
    $.add$1$a(this.entities, enemy);
  },
  newBossDrone$2: function(x, y) {
    var t1, enemy;
    t1 = {};
    t1.x_0 = 0;
    $.forEach$1$a($.where$1$a(this.entities, new $.GalagaGame_newBossDrone_anon()), new $.GalagaGame_newBossDrone_anon0(t1));
    if ($.$$ge$n(t1.x_0, 6) === true)
      return;
    if ($.$$lt$n($.random(0, 1, false), 0.01) === true) {
      enemy = $.Enemy$(this, t1.x_0, y, this.difficulty, "Drone");
      enemy.idNum = this.nextId;
      this.nextId = $.$$add$n(this.nextId, 1);
      $.add$1$a(this.entities, enemy);
    }
  },
  newMotherShip$1$difficulty: function(difficulty) {
    var t1, enemy;
    t1 = {};
    t1.x_0 = 0;
    $.forEach$1$a($.where$1$a(this.entities, new $.GalagaGame_newMotherShip_anon()), new $.GalagaGame_newMotherShip_anon0(t1));
    if ($.$$ge$n(t1.x_0, 2) === true)
      return;
    if ($.$$lt$n($.random(0, 1, false), 0.001) === true) {
      enemy = $.Enemy$(this, -this.rect.get$halfWidth(), -225, difficulty, "MotherShip");
      enemy.idNum = this.nextId;
      this.nextId = $.$$add$n(this.nextId, 1);
      $.add$1$a(this.entities, enemy);
    }
  },
  newMotherShip$0: function() {
    return this.newMotherShip$1$difficulty(1);
  },
  newEnemy$1: function(difficulty) {
    var enemy, t1;
    enemy = $.Enemy$(this, this.enemyX, this.enemyY, difficulty, "Normal");
    enemy.startY = this.enemyY;
    t1 = this.enemyX;
    if (typeof t1 !== "number")
      return this.newEnemy$1$bailout(1, t1, enemy);
    this.enemyX = t1 + 70;
    this.enemyCount = this.enemyCount + 1;
    if (this.enemyCount > 10) {
      t1 = this.enemyY;
      if (typeof t1 !== "number")
        return this.newEnemy$1$bailout(2, t1, enemy);
      this.enemyY = t1 + 65;
      this.enemyX = -400;
      this.enemyCount = 0;
    }
    enemy.idNum = this.nextId;
    t1 = this.nextId;
    if (typeof t1 !== "number")
      return this.newEnemy$1$bailout(3, t1, enemy);
    this.nextId = t1 + 1;
    this.lastEnemy = this.timer.get$gameTime();
    $.add$1$a(this.entities, enemy);
  },
  newEnemy$1$bailout: function(state0, t1, enemy) {
    switch (state0) {
      case 0:
        enemy = $.Enemy$(this, this.enemyX, this.enemyY, difficulty, "Normal");
        enemy.startY = this.enemyY;
        t1 = this.enemyX;
      case 1:
        state0 = 0;
        this.enemyX = $.$$add$n(t1, 70);
        this.enemyCount = this.enemyCount + 1;
      case 2:
        if (state0 === 2 || state0 === 0 && this.enemyCount > 10)
          switch (state0) {
            case 0:
              t1 = this.enemyY;
            case 2:
              state0 = 0;
              this.enemyY = $.$$add$n(t1, 65);
              this.enemyX = -400;
              this.enemyCount = 0;
          }
        enemy.idNum = this.nextId;
        t1 = this.nextId;
      case 3:
        state0 = 0;
        this.nextId = $.$$add$n(t1, 1);
        this.lastEnemy = this.timer.get$gameTime();
        $.add$1$a(this.entities, enemy);
    }
  },
  newEnemy$0: function() {
    return this.newEnemy$1(1);
  },
  newBulletPowerUp$2: function(x, y) {
    var powerUp = $.PowerUp$(this, x, y, "bulletPower");
    $.add$1$a(this.entities, powerUp);
  },
  newPowerUp$0: function() {
    if ($.$$ge$n($.random(0, 1, false), 0.1) === true)
      return;
    if ($.$$ge$n($.get$length$as($.where$1$a(this.entities, new $.GalagaGame_newPowerUp_anon())), 5) === true)
      return;
    if ($.$$lt$n(this.timer.get$gameTime(), 5) === true)
      return;
    if ($.$$ge$n($.$$add$n(this.lastPowerUp, 5), this.timer.get$gameTime()) === true)
      return;
    var powerUp = $.PowerUp$(this, 0, 0, null);
    do {
      powerUp.set$x($.random(-this.rect.get$halfWidth() + 50, this.rect.get$halfWidth() - 50, false));
      powerUp.set$y(-this.rect.get$halfHeight());
    } while ($.any$1$a($.where$1$a(this.entities, new $.GalagaGame_newPowerUp_anon0()), new $.GalagaGame_newPowerUp_anon1(powerUp)) === true);
    this.lastPowerUp = this.timer.get$gameTime();
    $.add$1$a(this.entities, powerUp);
  },
  getEnemyX$1: function(type) {
    $.forEach$1$a($.where$1$a(this.entities, new $.GalagaGame_getEnemyX_anon()), new $.GalagaGame_getEnemyX_anon0(type));
    return 0;
  },
  getEnemyY$1: function(type) {
    $.forEach$1$a($.toList$0$a($.where$1$a(this.entities, new $.GalagaGame_getEnemyY_anon())), new $.GalagaGame_getEnemyY_anon0(type));
    return 0;
  },
  createLevelEnd$0: function() {
    var t1 = this.visualLevel;
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "levelEnd", "", 0.4, 56, t1 === this.bonusCheck ? "Level " + $.S(t1) + " Complete!" : "Prepare for Bonus Stage!", 0, -97);
    $.add$1$a(this.entities, t1);
    this.disableEntitiesByGroup$1("levelEnd");
  },
  createWelcomeMenu$0: function() {
    this._gameOverEvent.signal$0();
    var t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.4, 56, "Welcome to Galaga!", 0, -97);
    $.add$1$a(this.entities, t1);
    t1 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_anon(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.4, 36, "Start Game", 0, -31);
    $.add$1$a(this.entities, t1);
    t1 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_anon0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.4, 36, "Statistics", 0, 14);
    $.add$1$a(this.entities, t1);
    t1 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_anon1(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.4, 36, "Options", 0, 48);
    $.add$1$a(this.entities, t1);
    t1 = $.GameButton$(new $.GalagaGame_createWelcomeMenu_anon2(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "welcome", "", 0.4, 36, "Leaderboard", 0, 82);
    $.add$1$a(this.entities, t1);
    this.disableEntitiesByGroup$1("welcome");
  },
  createPausedMenu$0: function() {
    var t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "paused", "", 0.4, 56, "PAUSED", 0, -31);
    $.add$1$a(this.entities, t1);
    t1 = $.GameButton$(new $.GalagaGame_createPausedMenu_anon(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "paused", "", 0.4, 36, "Quit", 0, 15);
    $.add$1$a(this.entities, t1);
    this.disableEntitiesByGroup$1("paused");
  },
  createLeaderBoardMenu$0: function() {
    var t1, t2, t3;
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 56, "Leaderboard", 0, -240);
    $.add$1$a(this.entities, t1);
    t1 = this.Highscores;
    t2 = $.getInterceptor$as(t1);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "1: " + $.S(t2.$index(t1, 1)), -145, -190);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "2: " + $.S(t2.$index(t1, 2)), -145, -150);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "3: " + $.S(t2.$index(t1, 3)), -145, -110);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "4: " + $.S(t2.$index(t1, 4)), -145, -70);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "5: " + $.S(t2.$index(t1, 5)), -145, -30);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "6: " + $.S(t2.$index(t1, 6)), -145, 10);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "7: " + $.S(t2.$index(t1, 7)), -145, 50);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "8: " + $.S(t2.$index(t1, 8)), -145, 90);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "9: " + $.S(t2.$index(t1, 9)), -145, 130);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 42, "10: " + $.S(t2.$index(t1, 10)), -145, 170);
    $.add$1$a(this.entities, t3);
    t3 = $.GameButton$(new $.GalagaGame_createLeaderBoardMenu_anon(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "leaders", "", 0.4, 36, "Back", -420, -280);
    $.add$1$a(this.entities, t3);
    this.disableEntitiesByGroup$1("leaders");
  },
  createStatsMenu$0: function() {
    var t1, t2, t3;
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 56, "Statistics", 0, -280);
    $.add$1$a(this.entities, t1);
    t1 = this.Stats;
    t2 = $.getInterceptor$as(t1);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Total Killed: " + $.S(t2.$index(t1, "killed")), -400, -200);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Groupies Annihilated: " + $.S(t2.$index(t1, "normalKills")), -400, -155);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Big Bosses Denominated: " + $.S(t2.$index(t1, "bossKills")), -400, -110);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Mother Ships Deflowered: " + $.S(t2.$index(t1, "motherKills")), -400, -65);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Powerups Absorbed: " + $.S(t2.$index(t1, "powerups")), -400, -20);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Total Wins: " + $.S(t2.$index(t1, "wins")), -400, 25);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Total Loses: " + $.S(t2.$index(t1, "loses")), -400, 70);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Total Games: " + $.S(t2.$index(t1, "totalGames")), -400, 115);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "High Score: " + $.S(t2.$index(t1, "highscore")), -400, 160);
    $.add$1$a(this.entities, t3);
    t1 = this.RankSelect;
    t2 = $.getInterceptor$as(t1);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", $.$$eq$o(t2.$index(t1, 1), true) === true ? 0.8 : 0.4, 36, "Jew", 100, -200);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", $.$$eq$o(t2.$index(t1, 2), true) === true ? 0.8 : 0.4, 36, "Jewish Priest", 100, -155);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", $.$$eq$o(t2.$index(t1, 3), true) === true ? 0.8 : 0.4, 36, "Amish Mastermind", 100, -110);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", $.$$eq$o(t2.$index(t1, 4), true) === true ? 0.8 : 0.4, 36, "Road Warrior", 100, -65);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", $.$$eq$o(t2.$index(t1, 5), true) === true ? 0.8 : 0.4, 36, "Space Recruit", 100, -20);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", $.$$eq$o(t2.$index(t1, 6), true) === true ? 0.8 : 0.4, 36, "Space Cadet", 100, 25);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", $.$$eq$o(t2.$index(t1, 7), true) === true ? 0.8 : 0.4, 36, "Space Captain", 100, 70);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", $.$$eq$o(t2.$index(t1, 8), true) === true ? 0.8 : 0.4, 36, "Overlord of the Galaxy", 100, 115);
    $.add$1$a(this.entities, t3);
    t1 = $.GameText$(false, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", $.$$eq$o(t2.$index(t1, 9), true) === true ? 0.8 : 0.4, 36, "Overlord of the Universe", 100, 160);
    $.add$1$a(this.entities, t1);
    t1 = $.GameButton$(new $.GalagaGame_createStatsMenu_anon(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "Back", -420, -280);
    $.add$1$a(this.entities, t1);
    t1 = $.GameButton$(new $.GalagaGame_createStatsMenu_anon0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "stats", "", 0.4, 36, "RESET", 0, 225);
    $.add$1$a(this.entities, t1);
    this.disableEntitiesByGroup$1("stats");
  },
  createOptionsMenu$0: function() {
    var t1, t2, t3;
    this._gameOverEvent.signal$0();
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.8, 56, "Options", 0, -160);
    $.add$1$a(this.entities, t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.6, 36, "Starting Lives:", 0, -60);
    $.add$1$a(this.entities, t1);
    t1 = this.Options;
    t2 = $.getInterceptor$as(t1);
    t3 = $.S(t2.$index(t1, "startLives"));
    t3 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, t3, 120, -60);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.6, 36, "Bullet Cap:", 0, -30);
    $.add$1$a(this.entities, t3);
    t3 = $.S(t2.$index(t1, "bulletCap"));
    t3 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, t3, 120, -30);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.6, 36, "Time:", 0, 0);
    $.add$1$a(this.entities, t3);
    t3 = $.S(t2.$index(t1, "time"));
    t3 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon1(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, t3, 120, 0);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.6, 36, "Difficulty:", 0, 30);
    $.add$1$a(this.entities, t3);
    t3 = $.S(t2.$index(t1, "difficulty"));
    t3 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon2(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, t3, 120, 30);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.6, 36, "Powerups Enabled:", -38, -94);
    $.add$1$a(this.entities, t3);
    t3 = $.$$eq$o(t2.$index(t1, "powerups"), 1) === true ? "True" : "False";
    t3 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon3(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, t3, 150, -94);
    $.add$1$a(this.entities, t3);
    t3 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.6, 36, "Sound Effects Enabled:", -38, 60);
    $.add$1$a(this.entities, t3);
    t1 = $.$$eq$o(t2.$index(t1, "soundeffects"), 1) === true ? "True" : "False";
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon4(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, t1, 170, 60);
    $.add$1$a(this.entities, t1);
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon5(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.6, 36, "Set to Defaults", 10, 120);
    $.add$1$a(this.entities, t1);
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon6(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, "Instructions", 380, -280);
    $.add$1$a(this.entities, t1);
    t1 = $.GameButton$(new $.GalagaGame_createOptionsMenu_anon7(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "options", "", 0.4, 36, "Back", -420, -280);
    $.add$1$a(this.entities, t1);
    this.disableEntitiesByGroup$1("options");
  },
  createControlsMenu$0: function() {
    var t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.8, 56, "Instructions", 0, -160);
    $.add$1$a(this.entities, t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.6, 24, "Move left/right: Mouse swipe", 0, -94);
    $.add$1$a(this.entities, t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.6, 24, "Fire: Left Mouse Button", 0, -45);
    $.add$1$a(this.entities, t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.6, 24, "'S' PowerUp = You shoot 3 shots in 3 different directions, which move in a spiral formation.", 0, 0);
    $.add$1$a(this.entities, t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.6, 24, "'x2' PowerUp = Multiplies your score additions by 2.", 0, 45);
    $.add$1$a(this.entities, t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.6, 24, "'+' PowerUp = Increases the amount of bullets you can fire by 1.", 0, 90);
    $.add$1$a(this.entities, t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.6, 24, "'Life' PowerUp = Increases your total lives by 1.", 0, 135);
    $.add$1$a(this.entities, t1);
    t1 = $.GameButton$(new $.GalagaGame_createControlsMenu_anon(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "instructions", "", 0.4, 36, "Back", 0, 180);
    $.add$1$a(this.entities, t1);
    this.disableEntitiesByGroup$1("instructions");
  },
  createGameOverMenu$0: function() {
    var t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "gameOver", "", 0.4, 56, $.$$le$n(this.enemyAmount, 0) === true ? "You Won!" : "You Lost!", 0, -97);
    $.add$1$a(this.entities, t1);
    t1 = $.GameText$(true, "255, 255, 255", "cinnamoncake, Verdana", this, "gameOver", "", 0.4, 36, "Play again?", 0, -31);
    $.add$1$a(this.entities, t1);
    t1 = $.GameButton$(new $.GalagaGame_createGameOverMenu_anon(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "gameOver", "", 0.4, 36, "Yes", 0, 15);
    $.add$1$a(this.entities, t1);
    t1 = $.GameButton$(new $.GalagaGame_createGameOverMenu_anon0(this), true, "255, 255, 255", "cinnamoncake, Verdana", this, "gameOver", "", 0.4, 36, "No", 0, 60);
    $.add$1$a(this.entities, t1);
    this.disableEntitiesByGroup$1("gameOver");
  },
  resetStats$0: function() {
    var t1, t2;
    t1 = this.Stats;
    t2 = $.getInterceptor$a(t1);
    t2.$indexSet(t1, "killed", 0);
    t2.$indexSet(t1, "wins", 0);
    t2.$indexSet(t1, "loses", 0);
    t2.$indexSet(t1, "totalGames", 0);
    t2.$indexSet(t1, "highscore", 0);
    this.set$state(1);
    this.removeEntitiesByGroup$1("stats");
    this.createStatsMenu$0();
    this.set$state(5);
  },
  resetOptions$0: function() {
    var t1, t2;
    t1 = this.Options;
    t2 = $.getInterceptor$a(t1);
    t2.$indexSet(t1, "startLives", 3);
    t2.$indexSet(t1, "bulletCap", 3);
    t2.$indexSet(t1, "time", 60);
    t2.$indexSet(t1, "difficulty", 1);
    t2.$indexSet(t1, "soundeffects", 1);
    this.set$state(1);
    this.removeEntitiesByGroup$1("options");
    this.createOptionsMenu$0();
    this.set$state(6);
  },
  newGame$0: function() {
    var i, t1, t2, t3, t4;
    $.forEach$1$a($.where$1$a(this.entities, new $.GalagaGame_newGame_anon()), new $.GalagaGame_newGame_anon0());
    for (i = 0; i < 50; ++i) {
      if ($.$$lt$n(this.colorCount, 7) === true)
        this.colorCount = $.$$add$n(this.colorCount, 1);
      else if ($.$$ge$n(this.colorCount, 7) === true)
        this.colorCount = 1;
      this.startStars$0();
    }
    this.score = 0;
    t1 = this.ship;
    if (t1 != null)
      t1.removeFromGame$0();
    this.removeEntitiesByFilter$1(new $.GalagaGame_newGame_anon1());
    this.removeEntitiesByFilter$1(new $.GalagaGame_newGame_anon2());
    this.removeEntitiesByFilter$1(new $.GalagaGame_newGame_anon3());
    this.enemyX = -400;
    this.enemyY = -165;
    this.enemyAmount = 33;
    this.bonusCheck = 3;
    this.bonusStage = false;
    this.visualLevel = 2;
    this.level = 2;
    this.score = 0;
    this.pointMultiplier = 1;
    if ($.$$ge$n(this.level, this.bonusCheck) === true) {
      this.bonusStage = true;
      this.bonusCheck = $.$$add$n(this.bonusCheck, 3);
    } else
      this.bonusStage = false;
    for (i = 0; i < 33; ++i)
      this.newEnemy$0();
    this.ship = $.Ship$(this, 0, this.rect.get$halfHeight() - 30);
    t1 = this.ship;
    $.add$1$a(this.entities, t1);
    this.p1Dead = false;
    this.ship.set$spiralShot(true);
    t1 = this.Options;
    t2 = $.getInterceptor$as(t1);
    t3 = t2.$index(t1, "startLives");
    this.ship.set$lives(t3);
    t3 = this.Stats;
    t4 = $.getInterceptor$as(t3);
    t4.$indexSet(t3, "totalGames", $.$$add$n(t4.$index(t3, "totalGames"), 1));
    this.set$state(3);
    this.timer.set$timeDecrease(true);
    t1 = t2.$index(t1, "time");
    this.timer.set$gameTime(t1);
  },
  gameOver$0: function() {
    var t1, t2;
    this.removeEntitiesByFilter$1(new $.GalagaGame_gameOver_anon());
    this.removeEntitiesByFilter$1(new $.GalagaGame_gameOver_anon0());
    this.removeEntitiesByFilter$1(new $.GalagaGame_gameOver_anon1());
    this.updateLeaderboard$0();
    t1 = this.Stats;
    t2 = $.getInterceptor$as(t1);
    t2.$indexSet(t1, "loses", $.$$add$n(t2.$index(t1, "loses"), 1));
    this._gameOverEvent.signal$0();
    if (this.soundEffectsOn === true)
      this.sound.play$1("cursorSelect2");
    this.removeEntitiesByGroup$1("gameOver");
    this.createGameOverMenu$0();
    this.set$state(4);
  },
  switchDirection$0: function() {
    this.goingRight = !this.goingRight;
    $.forEach$1$a($.where$1$a(this.entities, new $.GalagaGame_switchDirection_anon()), new $.GalagaGame_switchDirection_anon0());
  },
  canEnemyFall$0: function() {
    var t1 = {};
    t1.x_0 = 0;
    $.forEach$1$a($.where$1$a(this.entities, new $.GalagaGame_canEnemyFall_anon()), new $.GalagaGame_canEnemyFall_anon0(t1));
    if ($.$$ge$n(t1.x_0, 3) === true)
      return false;
    else
      return true;
  },
  get$canEnemyFall: function() {
    return new $.BoundClosure$0(this, "canEnemyFall$0");
  },
  removeBullets$0: function() {
    this.removeEntitiesByFilter$1(new $.GalagaGame_removeBullets_anon());
  },
  updateLeaderboard$0: function() {
    var tempMap, t1, k, i, t2, j;
    tempMap = $.HashMap$();
    t1 = this.Highscores;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this.updateLeaderboard$0$bailout(1, t1, tempMap);
    k = 1;
    for (; k < 11; ++k) {
      if (k >= t1.length)
        throw $.ioore(k);
      tempMap.$indexSet(k, t1[k]);
    }
    for (i = 1; i <= 10; ++i) {
      t2 = this.score;
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$$gt$n(t2, t1[i]) === true) {
        for (j = i + 1; j < 10; ++j) {
          t2 = tempMap.$index(j - 1);
          if (j >= t1.length)
            throw $.ioore(j);
          t1[j] = t2;
        }
        t2 = this.score;
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i] = t2;
        $.$$indexSet$a(this.Stats, "highScore", t1[i]);
        break;
      }
    }
  },
  updateLeaderboard$0$bailout: function(state0, t1, tempMap) {
    var t3, k, i, j, t2;
    t3 = $.getInterceptor$as(t1);
    k = 1;
    for (; k < 11; ++k)
      tempMap.$indexSet(k, t3.$index(t1, k));
    for (i = 1; i <= 10; ++i)
      if ($.$$gt$n(this.score, t3.$index(t1, i)) === true) {
        for (j = i + 1, t2 = $.getInterceptor$a(t1); j < 10; ++j)
          t2.$indexSet(t1, j, tempMap.$index(j - 1));
        t2.$indexSet(t1, i, this.score);
        $.$$indexSet$a(this.Stats, "highScore", t3.$index(t1, i));
        break;
      }
  },
  get$onStatUpdate: function() {
    return this._statUpdateEvent.get$stream();
  },
  get$onGameOver: function() {
    return this._gameOverEvent.get$stream();
  },
  get$onShipHit: function() {
    return this._shipHitEvent.get$stream();
  },
  get$onBossHit: function() {
    return this._bossHitEvent.get$stream();
  },
  get$onMotherShipHit: function() {
    return this._motherShipEvent.get$stream();
  },
  get$onNormalHit: function() {
    return this._normalHitEvent.get$stream();
  }
};

$$.Ship = {"": "GameEntity;bulletPower=,bullet=,maxBullet=,lives=,soundLevel,isPoweringUp,spiralShot=,superSpiral<,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2, t3;
    t1 = this.game.get$state();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(1, t1);
    if (t1 !== 2) {
      t1 = this.game.get$state();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(2, t1);
      if (t1 !== 4) {
        t1 = this.game.get$state();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(3, t1);
        t1 = t1 === 1;
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1)
      return;
    t1 = this.lives;
    if (typeof t1 !== "number")
      throw $.iae(t1);
    this.set$width(10 * t1);
    t2 = this.lives;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    this.set$height(10 * t2);
    t1 = this.get$width();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(4, t1);
    if (!(t1 > 36)) {
      t1 = this.get$height();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(5, t1);
      t1 = t1 > 36;
    } else
      t1 = true;
    if (t1) {
      this.set$width(36);
      this.set$height(36);
    }
    t1 = this.lives;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(6, t1);
    if (t1 <= 0) {
      t1 = this.game.get$Stats();
      t2 = $.getInterceptor$as(t1);
      t3 = t2.$index(t1, "loses");
      if (typeof t3 !== "number")
        return this.update$0$bailout1(7, t1, t2, t3);
      t2.$indexSet(t1, "loses", t3 + 1);
      this.game.set$p1Dead(true);
      this._removeFromGame = true;
      this.game.gameOver$0();
    }
    t1 = this.bullet;
    t3 = this.maxBullet;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(8, t1);
    if (typeof t3 !== "number")
      return this.update$0$bailout1(9, t1, 0, t3);
    if (t1 > t3)
      this.bullet = 3;
    t1 = this.bullet;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(10, t1);
    if (t1 < 0)
      this.bullet = 0;
    t1 = this.game.get$state();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(11, t1);
    if (t1 === 1)
      return;
    t1 = this.game.get$input().get$mouse();
    if (t1 != null)
      this.set$x(t1.get$x());
    t1 = this.get$x();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(12, t1);
    if (t1 + 16 > this.game.get$rect().get$halfWidth())
      this.set$x(this.game.get$rect().get$halfWidth() - 16);
    t1 = this.get$x();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(13, t1);
    if (t1 - 16 < -this.game.get$rect().get$halfWidth())
      this.set$x(-this.game.get$rect().get$halfWidth() + 16);
    t1 = this.bullet;
    if (typeof t1 !== "number")
      return this.update$0$bailout1(14, t1);
    if (t1 > 0)
      if (this.game.get$input().get$click() != null)
        this.fire$0();
    $.GameEntity.prototype.update$0.call(this);
  },
  update$0$bailout1: function(state0, t1, t2, t3) {
    switch (state0) {
      case 0:
        t1 = this.game.get$state();
      case 1:
        state0 = 0;
      default:
        if (state0 === 3 || state0 === 2 || state0 === 0 && $.$$eq$o(t1, 2) !== true)
          switch (state0) {
            case 0:
              t1 = this.game.get$state();
            case 2:
              state0 = 0;
            case 3:
              if (state0 === 3 || state0 === 0 && $.$$eq$o(t1, 4) !== true)
                switch (state0) {
                  case 0:
                    t1 = this.game.get$state();
                  case 3:
                    state0 = 0;
                    t3 = $.$$eq$o(t1, 1) === true;
                    t1 = t3;
                }
              else
                t1 = true;
          }
        else
          t1 = true;
        if (t1)
          return;
        t1 = this.lives;
        if (typeof t1 !== "number")
          throw $.iae(t1);
        this.set$width(10 * t1);
        t2 = this.lives;
        if (typeof t2 !== "number")
          throw $.iae(t2);
        this.set$height(10 * t2);
        t1 = this.get$width();
      case 4:
        state0 = 0;
      case 5:
        if (state0 === 5 || state0 === 0 && $.$$gt$n(t1, 36) !== true)
          switch (state0) {
            case 0:
              t1 = this.get$height();
            case 5:
              state0 = 0;
              t3 = $.$$gt$n(t1, 36) === true;
              t1 = t3;
          }
        else
          t1 = true;
        if (t1) {
          this.set$width(36);
          this.set$height(36);
        }
        t1 = this.lives;
      case 6:
        state0 = 0;
      case 7:
        if (state0 === 7 || state0 === 0 && $.$$le$n(t1, 0) === true)
          switch (state0) {
            case 0:
              t1 = this.game.get$Stats();
              t2 = $.getInterceptor$as(t1);
              t3 = t2.$index(t1, "loses");
            case 7:
              state0 = 0;
              t2.$indexSet(t1, "loses", $.$$add$n(t3, 1));
              this.game.set$p1Dead(true);
              this._removeFromGame = true;
              this.game.gameOver$0();
          }
        t1 = this.bullet;
      case 8:
        state0 = 0;
        t3 = this.maxBullet;
      case 9:
        state0 = 0;
        if ($.$$gt$n(t1, t3) === true)
          this.bullet = 3;
        t1 = this.bullet;
      case 10:
        state0 = 0;
        if ($.$$lt$n(t1, 0) === true)
          this.bullet = 0;
        t1 = this.game.get$state();
      case 11:
        state0 = 0;
        if ($.$$eq$o(t1, 1) === true)
          return;
        t1 = this.game.get$input().get$mouse();
        if (t1 != null)
          this.set$x(t1.get$x());
        t1 = this.get$x();
      case 12:
        state0 = 0;
        if ($.$$gt$n($.$$add$n(t1, 16), this.game.get$rect().get$halfWidth()) === true)
          this.set$x(this.game.get$rect().get$halfWidth() - 16);
        t1 = this.get$x();
      case 13:
        state0 = 0;
        if ($.$$lt$n($.$$sub$n(t1, 16), -this.game.get$rect().get$halfWidth()) === true)
          this.set$x(-this.game.get$rect().get$halfWidth() + 16);
        t1 = this.bullet;
      case 14:
        state0 = 0;
        if ($.$$gt$n(t1, 0) === true)
          if (this.game.get$input().get$click() != null)
            this.fire$0();
        $.GameEntity.prototype.update$0.call(this);
    }
  },
  fire$0: function() {
    var t1, t2;
    this.soundLevel = $.$$mul$n(this.bulletPower, 0.02);
    if ($.$$gt$n(this.soundLevel, 1) === true)
      this.soundLevel = 1;
    if (this.superSpiral === true) {
      t1 = this.game;
      t1.addEntity$1($.Bullet$(t1, this.get$x(), this.get$y(), "straight", -350, this.bulletPower, "normal"));
      t1 = this.game;
      t1.addEntity$1($.Bullet$(t1, this.get$x(), this.get$y(), "right", -350, this.bulletPower, "normal"));
      t1 = this.game;
      t1.addEntity$1($.Bullet$(t1, this.get$x(), this.get$y(), "left", -350, this.bulletPower, "normal"));
      t1 = this.game;
      t1.addEntity$1($.Bullet$(t1, this.get$x(), this.get$y(), "right", -350, this.bulletPower, "normal"));
      t1 = this.game;
      t1.addEntity$1($.Bullet$(t1, this.get$x(), this.get$y(), "left", -350, this.bulletPower, "normal"));
    }
    t1 = this.spiralShot;
    t2 = this.game;
    if (t1 === true) {
      t2.addEntity$1($.Bullet$(t2, this.get$x(), this.get$y(), "straight", -350, this.bulletPower, "normal"));
      t1 = this.game;
      t1.addEntity$1($.Bullet$(t1, this.get$x(), this.get$y(), "right", -350, this.bulletPower, "normal"));
      t1 = this.game;
      t1.addEntity$1($.Bullet$(t1, this.get$x(), this.get$y(), "left", -350, this.bulletPower, "normal"));
      t1 = this.game;
      if (t1.get$soundEffectsOn() === true)
        t1.get$sound().play$2("shipFire", this.soundLevel);
    } else {
      t2.addEntity$1($.Bullet$(t2, this.get$x(), this.get$y(), "straight", -350, this.bulletPower, "normal"));
      t1 = this.game;
      if (t1.get$soundEffectsOn() === true)
        t1.get$sound().play$2("shipFire", this.soundLevel);
    }
    if ($.$$gt$n(this.bullet, 0) === true)
      this.bullet = $.$$sub$n(this.bullet, 1);
  },
  Ship$3: function(game, x, y) {
    this.opacity = 0.2;
    this.maxBullet = $.$$index$as(this.game.get$Options(), "bulletCap");
    this.bullet = this.maxBullet;
  },
  $isShip: true
};

$$.Enemy = {"": "GameEntity;type=,yReset,isFalling>,creationTime,startY,difficulty=,bossDifficulty,health=,bossHealth,maxHp,bossMaxHp,belowHalfHp,idNum>,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t3, t2, t4, t5, t6, t8, t9, t7;
    t1 = this.game.get$state();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(1, t1);
    if (t1 !== 2) {
      t1 = this.game.get$state();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(2, t1);
      if (t1 !== 4) {
        t1 = this.game.get$state();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(3, t1);
        t1 = t1 === 1;
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1)
      return;
    t1 = this.health;
    t3 = this.maxHp;
    if (typeof t3 !== "number")
      return this.update$0$bailout1(5, t1, t3);
    if (typeof t1 !== "number")
      return this.update$0$bailout1(4, t1);
    if (!(t1 < t3 / 2)) {
      t1 = this.bossHealth;
      t2 = this.bossMaxHp;
      if (typeof t2 !== "number")
        return this.update$0$bailout1(6, t1, 0, t2);
      t1 = t1 < t2 / 2;
    } else
      t1 = true;
    if (t1)
      this.belowHalfHp = true;
    t1 = this.type;
    if (typeof t1 !== "string")
      return this.update$0$bailout1(7, t1);
    if (t1 === "Drone") {
      t1 = this.health;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(8, t1);
      if (t1 <= 0) {
        t1 = this.game;
        t2 = t1.get$score();
        t4 = t1.get$pointMultiplier();
        if (typeof t4 !== "number")
          throw $.iae(t4);
        if (typeof t2 !== "number")
          return this.update$0$bailout1(9, t1, 0, t2);
        t1.set$score(t2 + 100 * t4);
        t1 = this.game.get$Stats();
        t5 = $.getInterceptor$as(t1);
        t6 = t5.$index(t1, "killed");
        if (typeof t6 !== "number")
          return this.update$0$bailout1(10, t1, 0, 0, t5, t6);
        t5.$indexSet(t1, "killed", t6 + 1);
        t1 = $.random(0, 1, false);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(11, t1);
        if (t1 > 0.5)
          this.game.newBulletPowerUp$2(this.get$x(), this.get$y());
        this.game.newMiniExplosion$2(this.get$x(), this.get$y());
        this._removeFromGame = true;
      }
      t1 = $.random(0, 1, false);
      if (typeof t1 !== "number")
        return this.update$0$bailout1(12, t1);
      if (t1 <= 0.01) {
        t1 = this.momentum;
        t2 = t1.get$yVel();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(13, t2);
        if (t2 !== 0)
          t1.set$yVel(t2 * -1);
        else
          t1.set$yVel(60);
      }
      t1 = $.random(0, 1, false);
      if (typeof t1 !== "number")
        return this.update$0$bailout1(15, t1);
      if (t1 <= 0.01) {
        t1 = this.momentum;
        t2 = t1.get$xVel();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(16, t2);
        if (t2 !== 0)
          t1.set$xVel(t2 * -1);
        else
          t1.set$xVel(60);
      }
      t1 = this.get$y();
      t3 = this.game.get$rect().get$halfHeight();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(18, t1);
      if (t1 > t3 - 80) {
        t1 = this.momentum;
        t2 = t1.get$yVel();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(19, t1, 0, t2);
        t1.set$yVel(t2 * -1);
      }
      t1 = this.get$y();
      t3 = this.game.get$rect().get$halfHeight();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(20, t1);
      if (t1 < -t3 + 16) {
        t1 = this.momentum;
        t2 = t1.get$yVel();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(21, t1, 0, t2);
        t1.set$yVel(t2 * -1);
      }
      t1 = this.get$x();
      t3 = this.game.get$rect().get$halfWidth();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(22, t1);
      if (t1 > t3 - 16) {
        t1 = this.momentum;
        t2 = t1.get$xVel();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(23, t1, 0, t2);
        t1.set$xVel(t2 * -1);
      }
      t1 = this.get$x();
      t3 = this.game.get$rect().get$halfWidth();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(24, t1);
      if (t1 < -t3 + 16) {
        t1 = this.momentum;
        t2 = t1.get$xVel();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(25, t1, 0, t2);
        t1.set$xVel(t2 * -1);
      }
      t1 = this.get$x();
      t3 = this.game.getEnemyX$1("Boss");
      if (typeof t1 !== "number")
        return this.update$0$bailout1(26, t1);
      if (t1 > t3) {
        t1 = $.random(0, 1, false);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(27, t1);
        if (t1 <= 0.05) {
          t1 = this.momentum;
          t2 = t1.get$xVel();
          if (typeof t2 !== "number")
            return this.update$0$bailout1(28, t1, 0, t2);
          t1.set$xVel(t2 * -1);
        }
      }
      t1 = this.get$x();
      t3 = this.game.getEnemyX$1("Boss");
      if (typeof t1 !== "number")
        return this.update$0$bailout1(29, t1);
      if (t1 < t3) {
        t1 = $.random(0, 1, false);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(30, t1);
        if (t1 <= 0.05) {
          t1 = this.momentum;
          t2 = t1.get$xVel();
          if (typeof t2 !== "number")
            return this.update$0$bailout1(31, t1, 0, t2);
          t1.set$xVel(t2 * -1);
        }
      }
      t1 = this.get$y();
      t3 = this.game.getEnemyY$1("Boss");
      if (typeof t1 !== "number")
        return this.update$0$bailout1(32, t1);
      if (t1 > t3) {
        t1 = $.random(0, 1, false);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(33, t1);
        if (t1 <= 0.05) {
          t1 = this.momentum;
          t2 = t1.get$yVel();
          if (typeof t2 !== "number")
            return this.update$0$bailout1(34, t1, 0, t2);
          t1.set$yVel(t2 * -1);
        }
      }
      t1 = this.get$y();
      t3 = this.game.getEnemyY$1("Boss");
      if (typeof t1 !== "number")
        return this.update$0$bailout1(35, t1);
      if (t1 < t3) {
        t1 = $.random(0, 1, false);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(36, t1);
        if (t1 <= 0.05) {
          t1 = this.momentum;
          t2 = t1.get$yVel();
          if (typeof t2 !== "number")
            return this.update$0$bailout1(37, t1, 0, t2);
          t1.set$yVel(t2 * -1);
        }
      }
      t1 = this.bossDifficulty;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(38, t1);
      if (t1 === 1) {
        t1 = $.random(0, 1, false);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(39, t1);
        if (t1 <= 0.01) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(40, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("enemyFire", 0.3);
        }
      } else if (t1 === 2) {
        t1 = $.random(0, 1, false);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(42, t1);
        if (t1 <= 0.03) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(43, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("enemyFire", 0.3);
        }
      } else if (t1 === 3) {
        t1 = $.random(0, 1, false);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(45, t1);
        if (t1 <= 0.07) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(46, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(47, t1);
          if (t1 <= 0.1) {
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(48, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(49, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(50, t1);
            if (t1 <= 0.1) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(51, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(52, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("enemyFire", 0.3);
        }
      } else if (t1 === 4) {
        t1 = $.random(0, 1, false);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(54, t1);
        if (t1 <= 0.1) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(55, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(56, t1);
          if (t1 <= 0.3) {
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(57, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(58, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(59, t1);
            if (t1 <= 0.3) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(60, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(61, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("enemyFire", 0.3);
        }
      } else if (t1 === 5) {
        t1 = $.random(0, 1, false);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(63, t1);
        if (t1 <= 0.2) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(64, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(65, t1);
          if (t1 <= 0.5) {
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(66, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(67, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(68, t1);
            if (t1 <= 0.5) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(69, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(70, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("enemyFire", 0.3);
        }
      }
    }
    t1 = this.type;
    if (typeof t1 !== "string")
      return this.update$0$bailout1(71, t1);
    if (t1 === "Boss") {
      t1 = this.health;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(72, t1);
      if (t1 <= 0) {
        t1 = this.game.get$Stats();
        t2 = $.getInterceptor$as(t1);
        t3 = t2.$index(t1, "wins");
        if (typeof t3 !== "number")
          return this.update$0$bailout1(73, t1, t3, t2);
        t2.$indexSet(t1, "wins", t3 + 1);
        this.game.newExplosion$2(this.get$x(), this.get$y());
        this.game.removeEntitiesByFilter$1(new $.Enemy_update_anon());
        this.game.removeEntitiesByFilter$1(new $.Enemy_update_anon0());
        this.game.removeEntitiesByFilter$1(new $.Enemy_update_anon1());
        t1 = this.game;
        if (t1.get$soundEffectsOn() === true)
          t1.get$sound().play$1("cursorSelect2");
        this.game.removeEntitiesByGroup$1("levelEnd");
        this.game.createLevelEnd$0();
        this.game.set$state(8);
        this.game.set$waiting(1);
        this.game.set$bonusCheck(3);
        this.game.set$bonusStage(false);
        t1 = this.game;
        t2 = t1.get$level();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(74, t1, 0, t2);
        t1.set$level(t2 + 1);
        this.bossHealth = this.bossHealth + 50;
        t1 = this.game;
        t2 = t1.get$level();
        t4 = t1.get$bonusCheck();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(75, t1, 0, t2);
        if (typeof t4 !== "number")
          return this.update$0$bailout1(76, 0, 0, t2, 0, 0, t4);
        if (t2 >= t4) {
          t1.set$bonusStage(true);
          t1 = this.game;
          t2 = t1.get$bonusCheck();
          if (typeof t2 !== "number")
            return this.update$0$bailout1(77, t1, 0, t2);
          t1.set$bonusCheck(t2 + 3);
        } else
          t1.set$bonusStage(false);
        t1 = this.game;
        t2 = t1.get$score();
        t4 = t1.get$pointMultiplier();
        if (typeof t4 !== "number")
          throw $.iae(t4);
        if (typeof t2 !== "number")
          return this.update$0$bailout1(78, t1, 0, t2);
        t1.set$score(t2 + 10000 * t4);
        t1 = this.game.get$Stats();
        t5 = $.getInterceptor$as(t1);
        t6 = t5.$index(t1, "killed");
        if (typeof t6 !== "number")
          return this.update$0$bailout1(79, t1, 0, 0, t5, t6);
        t5.$indexSet(t1, "killed", t6 + 1);
        this.game.set$bonusStage(false);
        this._removeFromGame = true;
      }
      t1 = $.random(0, 1, false);
      if (typeof t1 !== "number")
        return this.update$0$bailout1(80, t1);
      if (t1 <= 0.01) {
        t1 = this.momentum;
        t2 = t1.get$yVel();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(81, t2);
        if (t2 !== 0)
          t1.set$yVel(t2 * -1);
        else
          t1.set$yVel(60);
      }
      t1 = $.random(0, 1, false);
      if (typeof t1 !== "number")
        return this.update$0$bailout1(83, t1);
      if (t1 <= 0.01) {
        t1 = this.momentum;
        t2 = t1.get$xVel();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(84, t2);
        if (t2 !== 0)
          t1.set$xVel(t2 * -1);
        else
          t1.set$xVel(60);
      }
      t1 = this.get$y();
      t3 = this.game.get$rect().get$halfHeight();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(86, t1);
      if (t1 > t3 - 250) {
        t1 = $.random(0, 1, false);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(87, t1);
        t1 = t1 <= 0.07;
      } else
        t1 = false;
      if (t1) {
        t1 = this.momentum;
        t2 = t1.get$yVel();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(88, t1, 0, t2);
        t1.set$yVel(t2 * -1);
      }
      t1 = this.get$y();
      t3 = this.game.get$rect().get$halfHeight();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(89, t1);
      if (t1 > t3 - 115) {
        t1 = this.momentum;
        t2 = t1.get$yVel();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(90, t1, 0, t2);
        t1.set$yVel(t2 * -1);
      }
      t1 = this.get$y();
      t3 = this.game.get$rect().get$halfHeight();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(91, t1);
      if (t1 < -t3 + 72) {
        t1 = this.momentum;
        t2 = t1.get$yVel();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(92, t1, 0, t2);
        t1.set$yVel(t2 * -1);
      }
      t1 = this.get$x();
      t3 = this.game.get$rect().get$halfWidth();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(93, t1);
      if (t1 > t3 - 72) {
        t1 = this.momentum;
        t2 = t1.get$xVel();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(94, t1, 0, t2);
        t1.set$xVel(t2 * -1);
      }
      t1 = this.get$x();
      t3 = this.game.get$rect().get$halfWidth();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(95, t1);
      if (t1 < -t3 + 72) {
        t1 = this.momentum;
        t2 = t1.get$xVel();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(96, t1, 0, t2);
        t1.set$xVel(t2 * -1);
      }
      if (this.belowHalfHp) {
        t1 = this.bossDifficulty;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(97, t1);
        if (t1 === 1) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(98, t1);
          if (t1 <= 0.1) {
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(99, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(100, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t8 = this.get$x();
            t9 = this.get$y();
            if (typeof t9 !== "number")
              return this.update$0$bailout1(101, t1, 0, 0, 0, 0, 0, t8, t9);
            t1.addEntity$1($.Bullet$(t1, t8, t9 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            if (t1.get$soundEffectsOn() === true)
              t1.get$sound().play$2("enemyFire", 0.3);
          }
        } else if (t1 === 2) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(103, t1);
          if (t1 <= 0.1) {
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(104, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(105, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            t8 = this.get$x();
            t9 = this.get$y();
            if (typeof t9 !== "number")
              return this.update$0$bailout1(106, t1, 0, 0, 0, 0, 0, t8, t9);
            t1.addEntity$1($.Bullet$(t1, t8, t9 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            t1 = this.game;
            if (t1.get$soundEffectsOn() === true)
              t1.get$sound().play$2("enemyFire", 0.3);
          }
        } else if (t1 === 3) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(108, t1);
          if (t1 <= 0.07) {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(109, t1);
            if (t1 <= 0.1) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(110, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(111, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t8 = this.get$x();
              t9 = this.get$y();
              if (typeof t9 !== "number")
                return this.update$0$bailout1(112, t1, 0, 0, 0, 0, 0, t8, t9);
              t1.addEntity$1($.Bullet$(t1, t8, t9 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            } else {
              t1 = $.random(0, 1, false);
              if (typeof t1 !== "number")
                return this.update$0$bailout1(113, t1);
              if (t1 <= 0.1) {
                t1 = this.game;
                t2 = this.get$x();
                t3 = this.get$y();
                if (typeof t3 !== "number")
                  return this.update$0$bailout1(114, t1, t3, t2);
                t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                t1 = this.game;
                t5 = this.get$x();
                t6 = this.get$y();
                if (typeof t6 !== "number")
                  return this.update$0$bailout1(115, t1, 0, 0, t5, t6);
                t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              }
            }
            t1 = this.game;
            if (t1.get$soundEffectsOn() === true)
              t1.get$sound().play$2("enemyFire", 0.3);
          }
        } else if (t1 === 4) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(117, t1);
          if (t1 <= 0.1) {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(118, t1);
            if (t1 <= 0.3) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(119, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(120, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t8 = this.get$x();
              t9 = this.get$y();
              if (typeof t9 !== "number")
                return this.update$0$bailout1(121, t1, 0, 0, 0, 0, 0, t8, t9);
              t1.addEntity$1($.Bullet$(t1, t8, t9 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            } else {
              t1 = $.random(0, 1, false);
              if (typeof t1 !== "number")
                return this.update$0$bailout1(122, t1);
              if (t1 <= 0.3) {
                t1 = this.game;
                t2 = this.get$x();
                t3 = this.get$y();
                if (typeof t3 !== "number")
                  return this.update$0$bailout1(123, t1, t3, t2);
                t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                t1 = this.game;
                t5 = this.get$x();
                t6 = this.get$y();
                if (typeof t6 !== "number")
                  return this.update$0$bailout1(124, t1, 0, 0, t5, t6);
                t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              }
            }
            t1 = this.game;
            if (t1.get$soundEffectsOn() === true)
              t1.get$sound().play$2("enemyFire", 0.3);
          }
        } else if (t1 === 5) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(126, t1);
          if (t1 <= 0.2) {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(127, t1);
            if (t1 <= 0.5) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(128, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(129, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t8 = this.get$x();
              t9 = this.get$y();
              if (typeof t9 !== "number")
                return this.update$0$bailout1(130, t1, 0, 0, 0, 0, 0, t8, t9);
              t1.addEntity$1($.Bullet$(t1, t8, t9 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            } else {
              t1 = $.random(0, 1, false);
              if (typeof t1 !== "number")
                return this.update$0$bailout1(131, t1);
              if (t1 <= 0.5) {
                t1 = this.game;
                t2 = this.get$x();
                t3 = this.get$y();
                if (typeof t3 !== "number")
                  return this.update$0$bailout1(132, t1, t3, t2);
                t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                t1 = this.game;
                t5 = this.get$x();
                t6 = this.get$y();
                if (typeof t6 !== "number")
                  return this.update$0$bailout1(133, t1, 0, 0, t5, t6);
                t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              }
            }
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(134, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(135, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t8 = this.get$x();
            t9 = this.get$y();
            if (typeof t9 !== "number")
              return this.update$0$bailout1(136, t1, 0, 0, 0, 0, 0, t8, t9);
            t1.addEntity$1($.Bullet$(t1, t8, t9 + 16, "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            if (t1.get$soundEffectsOn() === true)
              t1.get$sound().play$2("enemyFire", 0.3);
          }
        }
      } else {
        t1 = this.bossDifficulty;
        if (typeof t1 !== "number")
          return this.update$0$bailout1(137, t1);
        if (t1 === 1) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(138, t1);
          if (t1 <= 0.01) {
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(139, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(140, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t8 = this.get$x();
            t9 = this.get$y();
            if (typeof t9 !== "number")
              return this.update$0$bailout1(141, t1, 0, 0, 0, 0, 0, t8, t9);
            t1.addEntity$1($.Bullet$(t1, t8, t9 + 16, "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            if (t1.get$soundEffectsOn() === true)
              t1.get$sound().play$2("enemyFire", 0.3);
          }
        } else if (t1 === 2) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(143, t1);
          if (t1 <= 0.03) {
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(144, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(145, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t8 = this.get$x();
            t9 = this.get$y();
            if (typeof t9 !== "number")
              return this.update$0$bailout1(146, t1, 0, 0, 0, 0, 0, t8, t9);
            t1.addEntity$1($.Bullet$(t1, t8, t9 + 16, "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            if (t1.get$soundEffectsOn() === true)
              t1.get$sound().play$2("enemyFire", 0.3);
          }
        } else if (t1 === 3) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(148, t1);
          if (t1 <= 0.07) {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(149, t1);
            if (t1 <= 0.1) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(150, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(42, 54, false), "normal"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(151, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "left", $.random(350, 400, false), $.random(42, 54, false), "normal"));
              t1 = this.game;
              t8 = this.get$x();
              t9 = this.get$y();
              if (typeof t9 !== "number")
                return this.update$0$bailout1(152, t1, 0, 0, 0, 0, 0, t8, t9);
              t1.addEntity$1($.Bullet$(t1, t8, t9 + 16, "right", $.random(350, 400, false), $.random(42, 54, false), "normal"));
            } else {
              t1 = $.random(0, 1, false);
              if (typeof t1 !== "number")
                return this.update$0$bailout1(153, t1);
              if (t1 <= 0.1) {
                t1 = this.game;
                t2 = this.get$x();
                t3 = this.get$y();
                if (typeof t3 !== "number")
                  return this.update$0$bailout1(154, t1, t3, t2);
                t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                t1 = this.game;
                t5 = this.get$x();
                t6 = this.get$y();
                if (typeof t6 !== "number")
                  return this.update$0$bailout1(155, t1, 0, 0, t5, t6);
                t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              }
            }
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(156, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(157, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t8 = this.get$x();
            t9 = this.get$y();
            if (typeof t9 !== "number")
              return this.update$0$bailout1(158, t1, 0, 0, 0, 0, 0, t8, t9);
            t1.addEntity$1($.Bullet$(t1, t8, t9 + 16, "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            if (t1.get$soundEffectsOn() === true)
              t1.get$sound().play$2("enemyFire", 0.3);
          }
        } else if (t1 === 4) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(160, t1);
          if (t1 <= 0.1) {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(161, t1);
            if (t1 <= 0.3) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(162, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(42, 54, false), "normal"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(163, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "left", $.random(350, 400, false), $.random(42, 54, false), "normal"));
              t1 = this.game;
              t8 = this.get$x();
              t9 = this.get$y();
              if (typeof t9 !== "number")
                return this.update$0$bailout1(164, t1, 0, 0, 0, 0, 0, t8, t9);
              t1.addEntity$1($.Bullet$(t1, t8, t9 + 16, "right", $.random(350, 400, false), $.random(42, 54, false), "normal"));
            } else {
              t1 = $.random(0, 1, false);
              if (typeof t1 !== "number")
                return this.update$0$bailout1(165, t1);
              if (t1 <= 0.3) {
                t1 = this.game;
                t2 = this.get$x();
                t3 = this.get$y();
                if (typeof t3 !== "number")
                  return this.update$0$bailout1(166, t1, t3, t2);
                t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                t1 = this.game;
                t5 = this.get$x();
                t6 = this.get$y();
                if (typeof t6 !== "number")
                  return this.update$0$bailout1(167, t1, 0, 0, t5, t6);
                t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              }
            }
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(168, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(169, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t8 = this.get$x();
            t9 = this.get$y();
            if (typeof t9 !== "number")
              return this.update$0$bailout1(170, t1, 0, 0, 0, 0, 0, t8, t9);
            t1.addEntity$1($.Bullet$(t1, t8, t9 + 16, "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            if (t1.get$soundEffectsOn() === true)
              t1.get$sound().play$2("enemyFire", 0.3);
          }
        } else if (t1 === 5) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(172, t1);
          if (t1 <= 0.2) {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(173, t1);
            if (t1 <= 0.5) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(174, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(42, 54, false), "normal"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(175, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "left", $.random(350, 400, false), $.random(42, 54, false), "normal"));
              t1 = this.game;
              t8 = this.get$x();
              t9 = this.get$y();
              if (typeof t9 !== "number")
                return this.update$0$bailout1(176, t1, 0, 0, 0, 0, 0, t8, t9);
              t1.addEntity$1($.Bullet$(t1, t8, t9 + 16, "right", $.random(350, 400, false), $.random(42, 54, false), "normal"));
            } else {
              t1 = $.random(0, 1, false);
              if (typeof t1 !== "number")
                return this.update$0$bailout1(177, t1);
              if (t1 <= 0.5) {
                t1 = this.game;
                t2 = this.get$x();
                t3 = this.get$y();
                if (typeof t3 !== "number")
                  return this.update$0$bailout1(178, t1, t3, t2);
                t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                t1 = this.game;
                t5 = this.get$x();
                t6 = this.get$y();
                if (typeof t6 !== "number")
                  return this.update$0$bailout1(179, t1, 0, 0, t5, t6);
                t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              }
            }
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(180, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(181, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            t8 = this.get$x();
            t9 = this.get$y();
            if (typeof t9 !== "number")
              return this.update$0$bailout1(182, t1, 0, 0, 0, 0, 0, t8, t9);
            t1.addEntity$1($.Bullet$(t1, t8, t9 + 16, "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
            t1 = this.game;
            if (t1.get$soundEffectsOn() === true)
              t1.get$sound().play$2("enemyFire", 0.3);
          }
        }
      }
      t1 = $.random(0, 1, false);
      if (typeof t1 !== "number")
        return this.update$0$bailout1(183, t1);
      t3 = this.game;
      if (t1 <= 0.5) {
        t1 = this.get$x();
        t2 = this.get$y();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(184, t1, t3, t2);
        t3.newBossDrone$2(t1, t2 - 50);
      } else {
        t1 = this.get$x();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(185, t1, t3);
        t1 += 72;
        t4 = this.get$y();
        if (typeof t4 !== "number")
          return this.update$0$bailout1(186, t1, t3, 0, 0, 0, t4);
        t3.newBossDrone$2(t1, t4 - 50);
      }
    }
    t1 = this.type;
    if (typeof t1 !== "string")
      return this.update$0$bailout1(187, t1);
    if (t1 === "MotherShip") {
      t1 = this.get$x();
      t3 = this.game.get$rect().get$halfWidth();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(188, t1);
      if (t1 > t3)
        this._removeFromGame = true;
      t1 = this.health;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(189, t1);
      if (t1 <= 0) {
        t1 = this.game;
        t2 = t1.get$score();
        t4 = t1.get$pointMultiplier();
        if (typeof t4 !== "number")
          throw $.iae(t4);
        if (typeof t2 !== "number")
          return this.update$0$bailout1(190, t1, 0, t2);
        t1.set$score(t2 + 1000 * t4);
        t1 = this.game.get$Stats();
        t5 = $.getInterceptor$as(t1);
        t6 = t5.$index(t1, "killed");
        if (typeof t6 !== "number")
          return this.update$0$bailout1(191, t1, 0, 0, t5, t6);
        t5.$indexSet(t1, "killed", t6 + 1);
        t1 = $.random(0, 1, false);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(192, t1);
        if (t1 > 0.5)
          this.game.newBulletPowerUp$2(this.get$x(), this.get$y());
        this.game.newMiniExplosion$2(this.get$x(), this.get$y());
        this._removeFromGame = true;
      }
      t1 = this.difficulty;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(193, t1);
      if (t1 === 1) {
        t1 = this.get$x();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(194, t1);
        t1 += 16;
        t3 = this.game.get$ship().get$x();
        if (typeof t3 !== "number")
          return this.update$0$bailout1(195, t1, t3);
        if (t1 >= t3) {
          t1 = this.get$x();
          if (typeof t1 !== "number")
            return this.update$0$bailout1(196, t1);
          t1 -= 16;
          t3 = this.game.get$ship().get$x();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(197, t1, t3);
          t3 = t1 <= t3;
          t1 = t3;
        } else
          t1 = false;
        if (t1) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(198, t1);
          t1 = t1 <= 0.01;
        } else
          t1 = false;
        if (t1) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(199, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("motherShipFire", 0.3);
        }
      } else if (t1 === 2) {
        t1 = this.get$x();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(201, t1);
        t1 += 16;
        t3 = this.game.get$ship().get$x();
        if (typeof t3 !== "number")
          return this.update$0$bailout1(202, t1, t3);
        if (t1 >= t3) {
          t1 = this.get$x();
          if (typeof t1 !== "number")
            return this.update$0$bailout1(203, t1);
          t1 -= 16;
          t3 = this.game.get$ship().get$x();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(204, t1, t3);
          t3 = t1 <= t3;
          t1 = t3;
        } else
          t1 = false;
        if (t1) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(205, t1);
          t1 = t1 <= 0.03;
        } else
          t1 = false;
        if (t1) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(206, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("motherShipFire", 0.3);
        }
      } else if (t1 === 3) {
        t1 = this.get$x();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(208, t1);
        t1 += 16;
        t3 = this.game.get$ship().get$x();
        if (typeof t3 !== "number")
          return this.update$0$bailout1(209, t1, t3);
        if (t1 >= t3) {
          t1 = this.get$x();
          if (typeof t1 !== "number")
            return this.update$0$bailout1(210, t1);
          t1 -= 16;
          t3 = this.game.get$ship().get$x();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(211, t1, t3);
          t3 = t1 <= t3;
          t1 = t3;
        } else
          t1 = false;
        if (t1) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(212, t1);
          t1 = t1 <= 0.07;
        } else
          t1 = false;
        if (t1) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(213, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(214, t1);
          if (t1 <= 0.1) {
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(215, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(216, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(217, t1);
            if (t1 <= 0.1) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(218, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(219, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("motherShipFire", 0.3);
        }
      } else if (t1 === 4) {
        t1 = this.get$x();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(221, t1);
        t1 += 16;
        t3 = this.game.get$ship().get$x();
        if (typeof t3 !== "number")
          return this.update$0$bailout1(222, t1, t3);
        if (t1 >= t3) {
          t1 = this.get$x();
          if (typeof t1 !== "number")
            return this.update$0$bailout1(223, t1);
          t1 -= 16;
          t3 = this.game.get$ship().get$x();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(224, t1, t3);
          t3 = t1 <= t3;
          t1 = t3;
        } else
          t1 = false;
        if (t1) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(225, t1);
          t1 = t1 <= 0.1;
        } else
          t1 = false;
        if (t1) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(226, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(227, t1);
          if (t1 <= 0.3) {
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(228, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(229, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(230, t1);
            if (t1 <= 0.3) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(231, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(232, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("motherShipFire", 0.3);
        }
      } else if (t1 === 5) {
        t1 = this.get$x();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(234, t1);
        t1 += 16;
        t3 = this.game.get$ship().get$x();
        if (typeof t3 !== "number")
          return this.update$0$bailout1(235, t1, t3);
        if (t1 >= t3) {
          t1 = this.get$x();
          if (typeof t1 !== "number")
            return this.update$0$bailout1(236, t1);
          t1 -= 16;
          t3 = this.game.get$ship().get$x();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(237, t1, t3);
          t3 = t1 <= t3;
          t1 = t3;
        } else
          t1 = false;
        if (t1) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(238, t1);
          t1 = t1 <= 0.2;
        } else
          t1 = false;
        if (t1) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(239, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(240, t1);
          if (t1 <= 0.5) {
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(241, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(242, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(243, t1);
            if (t1 <= 0.5) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(244, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(245, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("motherShipFire", 0.3);
        }
      }
    }
    t1 = this.type;
    if (typeof t1 !== "string")
      return this.update$0$bailout1(246, t1);
    if (t1 === "Normal") {
      t1 = $.random(0, 1, false);
      if (typeof t1 !== "number")
        return this.update$0$bailout1(247, t1);
      if (t1 < 0.0002 && $.$$eq$o(this.game.get$canEnemyFall(), true))
        this.momentum.set$yVel(140);
      t1 = this.health;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(248, t1);
      if (t1 <= 0) {
        t1 = this.game;
        t2 = t1.get$score();
        t4 = t1.get$pointMultiplier();
        if (typeof t4 !== "number")
          throw $.iae(t4);
        if (typeof t2 !== "number")
          return this.update$0$bailout1(249, t1, 0, t2);
        t1.set$score(t2 + 100 * t4);
        t1 = this.game;
        t5 = t1.get$enemyAmount();
        if (typeof t5 !== "number")
          return this.update$0$bailout1(250, t1, 0, 0, t5);
        t1.set$enemyAmount(t5 - 1);
        t1 = this.game.get$Stats();
        t7 = $.getInterceptor$as(t1);
        t8 = t7.$index(t1, "killed");
        if (typeof t8 !== "number")
          return this.update$0$bailout1(251, t1, 0, 0, 0, 0, 0, t8, 0, t7);
        t7.$indexSet(t1, "killed", t8 + 1);
        t1 = $.random(0, 1, false);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(252, t1);
        if (t1 > 0.5)
          this.game.newBulletPowerUp$2(this.get$x(), this.get$y());
        this.game.newMiniExplosion$2(this.get$x(), this.get$y());
        this._removeFromGame = true;
      }
      t1 = this.get$y();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(253, t1);
      if (t1 >= 350 && !this.yReset) {
        this.set$y(-350);
        this.yReset = true;
      }
      if (this.yReset) {
        t1 = this.game.get$goingRight();
        t2 = this.momentum;
        if (t1 === true)
          t2.set$xVel(80);
        else
          t2.set$xVel(-80);
      }
      t1 = this.get$y();
      t3 = this.startY;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(254, t1);
      if (typeof t3 !== "number")
        return this.update$0$bailout1(255, t1, t3);
      if (t1 >= t3 && this.yReset) {
        this.momentum.set$yVel(0);
        this.set$y(this.startY);
        this.yReset = false;
      }
      t1 = $.random(0, 1, false);
      if (typeof t1 !== "number")
        return this.update$0$bailout1(256, t1);
      if (t1 <= 0.01 && this.game.canEnemyFall$0()) {
        t1 = this.momentum;
        t2 = t1.get$yVel();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(257, t1, 0, t2);
        t1.set$yVel(t2 * -1);
        this.isFalling = true;
        this.yReset = false;
      }
      t1 = this.get$x();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(258, t1);
      if (!(t1 + 16 > this.game.get$rect().get$halfWidth())) {
        t1 = this.get$x();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(259, t1);
        t3 = t1 - 16 < -this.game.get$rect().get$halfWidth();
        t1 = t3;
      } else
        t1 = true;
      if (t1)
        this.game.switchDirection$0();
      if (this.collidesWith$1(this.game.get$ship())) {
        this.game.get$_gameOverEvent().signal$0();
        t1 = this.game;
        if (t1.get$soundEffectsOn() === true)
          t1.get$sound().play$1("sweep");
        this._removeFromGame = true;
        t1 = this.game.get$ship();
        t2 = t1.get$lives();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(260, t1, 0, t2);
        t1.set$lives(t2 - 1);
      }
      t1 = this.get$x();
      t3 = this.game.get$rect().get$halfWidth();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(261, t1);
      if (t1 < -t3)
        this.game.gameOver$0();
      t1 = this.difficulty;
      if (typeof t1 !== "number")
        return this.update$0$bailout1(262, t1);
      if (t1 === 1) {
        t1 = this.get$x();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(263, t1);
        t1 += 16;
        t3 = this.game.get$ship().get$x();
        if (typeof t3 !== "number")
          return this.update$0$bailout1(264, t1, t3);
        if (t1 >= t3) {
          t1 = this.get$x();
          if (typeof t1 !== "number")
            return this.update$0$bailout1(265, t1);
          t1 -= 16;
          t3 = this.game.get$ship().get$x();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(266, t1, t3);
          t3 = t1 <= t3;
          t1 = t3;
        } else
          t1 = false;
        if (t1) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(267, t1);
          t1 = t1 <= 0.01;
        } else
          t1 = false;
        if (t1) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(268, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("enemyFire", 0.3);
        }
      } else if (t1 === 2) {
        t1 = this.get$x();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(270, t1);
        t1 += 16;
        t3 = this.game.get$ship().get$x();
        if (typeof t3 !== "number")
          return this.update$0$bailout1(271, t1, t3);
        if (t1 >= t3) {
          t1 = this.get$x();
          if (typeof t1 !== "number")
            return this.update$0$bailout1(272, t1);
          t1 -= 16;
          t3 = this.game.get$ship().get$x();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(273, t1, t3);
          t3 = t1 <= t3;
          t1 = t3;
        } else
          t1 = false;
        if (t1) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(274, t1);
          t1 = t1 <= 0.03;
        } else
          t1 = false;
        if (t1) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(275, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("enemyFire", 0.3);
        }
      } else if (t1 === 3) {
        t1 = this.get$x();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(277, t1);
        t1 += 16;
        t3 = this.game.get$ship().get$x();
        if (typeof t3 !== "number")
          return this.update$0$bailout1(278, t1, t3);
        if (t1 >= t3) {
          t1 = this.get$x();
          if (typeof t1 !== "number")
            return this.update$0$bailout1(279, t1);
          t1 -= 16;
          t3 = this.game.get$ship().get$x();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(280, t1, t3);
          t3 = t1 <= t3;
          t1 = t3;
        } else
          t1 = false;
        if (t1) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(281, t1);
          t1 = t1 <= 0.07;
        } else
          t1 = false;
        if (t1) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(282, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(283, t1);
          if (t1 <= 0.1) {
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(284, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(285, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(286, t1);
            if (t1 <= 0.1) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(287, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(288, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("enemyFire", 0.3);
        }
      } else if (t1 === 4) {
        t1 = this.get$x();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(290, t1);
        t1 += 16;
        t3 = this.game.get$ship().get$x();
        if (typeof t3 !== "number")
          return this.update$0$bailout1(291, t1, t3);
        if (t1 >= t3) {
          t1 = this.get$x();
          if (typeof t1 !== "number")
            return this.update$0$bailout1(292, t1);
          t1 -= 16;
          t3 = this.game.get$ship().get$x();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(293, t1, t3);
          t3 = t1 <= t3;
          t1 = t3;
        } else
          t1 = false;
        if (t1) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(294, t1);
          t1 = t1 <= 0.1;
        } else
          t1 = false;
        if (t1) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(295, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(296, t1);
          if (t1 <= 0.3) {
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(297, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(298, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(299, t1);
            if (t1 <= 0.3) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(300, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(301, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("enemyFire", 0.3);
        }
      } else if (t1 === 5) {
        t1 = this.get$x();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(303, t1);
        t1 += 16;
        t3 = this.game.get$ship().get$x();
        if (typeof t3 !== "number")
          return this.update$0$bailout1(304, t1, t3);
        if (t1 >= t3) {
          t1 = this.get$x();
          if (typeof t1 !== "number")
            return this.update$0$bailout1(305, t1);
          t1 -= 16;
          t3 = this.game.get$ship().get$x();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(306, t1, t3);
          t3 = t1 <= t3;
          t1 = t3;
        } else
          t1 = false;
        if (t1) {
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(307, t1);
          t1 = t1 <= 0.2;
        } else
          t1 = false;
        if (t1) {
          t1 = this.game;
          t2 = this.get$x();
          t3 = this.get$y();
          if (typeof t3 !== "number")
            return this.update$0$bailout1(308, t1, t3, t2);
          t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          t1 = $.random(0, 1, false);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(309, t1);
          if (t1 <= 0.5) {
            t1 = this.game;
            t2 = this.get$x();
            t3 = this.get$y();
            if (typeof t3 !== "number")
              return this.update$0$bailout1(310, t1, t3, t2);
            t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
            t1 = this.game;
            t5 = this.get$x();
            t6 = this.get$y();
            if (typeof t6 !== "number")
              return this.update$0$bailout1(311, t1, 0, 0, t5, t6);
            t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
          } else {
            t1 = $.random(0, 1, false);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(312, t1);
            if (t1 <= 0.5) {
              t1 = this.game;
              t2 = this.get$x();
              t3 = this.get$y();
              if (typeof t3 !== "number")
                return this.update$0$bailout1(313, t1, t3, t2);
              t1.addEntity$1($.Bullet$(t1, t2, t3 + 16, "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
              t1 = this.game;
              t5 = this.get$x();
              t6 = this.get$y();
              if (typeof t6 !== "number")
                return this.update$0$bailout1(314, t1, 0, 0, t5, t6);
              t1.addEntity$1($.Bullet$(t1, t5, t6 + 16, "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
            }
          }
          t1 = this.game;
          if (t1.get$soundEffectsOn() === true)
            t1.get$sound().play$2("enemyFire", 0.3);
        }
      }
    }
    $.GameEntity.prototype.update$0.call(this);
  },
  update$0$bailout1: function(state0, t1, t3, t2, t5, t6, t4, t8, t9, t7) {
    switch (state0) {
      case 0:
        t1 = this.game.get$state();
      case 1:
        state0 = 0;
      default:
        if (state0 === 3 || state0 === 2 || state0 === 0 && $.$$eq$o(t1, 2) !== true)
          switch (state0) {
            case 0:
              t1 = this.game.get$state();
            case 2:
              state0 = 0;
            case 3:
              if (state0 === 3 || state0 === 0 && $.$$eq$o(t1, 4) !== true)
                switch (state0) {
                  case 0:
                    t1 = this.game.get$state();
                  case 3:
                    state0 = 0;
                    t3 = $.$$eq$o(t1, 1) === true;
                    t1 = t3;
                }
              else
                t1 = true;
          }
        else
          t1 = true;
        if (t1)
          return;
        t1 = this.health;
      case 4:
        state0 = 0;
        t3 = this.maxHp;
      case 5:
        state0 = 0;
      case 6:
        if (state0 === 6 || state0 === 0 && $.$$lt$n(t1, $.$$div$n(t3, 2)) !== true)
          switch (state0) {
            case 0:
              t1 = this.bossHealth;
              t2 = this.bossMaxHp;
            case 6:
              state0 = 0;
              t1 = t1 < $.$$div$n(t2, 2);
          }
        else
          t1 = true;
        if (t1)
          this.belowHalfHp = true;
        t1 = this.type;
      case 7:
        state0 = 0;
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
      case 70:
        if (state0 === 70 || state0 === 69 || state0 === 68 || state0 === 67 || state0 === 66 || state0 === 65 || state0 === 64 || state0 === 63 || state0 === 62 || state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 37 || state0 === 36 || state0 === 35 || state0 === 34 || state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 0 && $.$$eq$o(t1, "Drone") === true)
          switch (state0) {
            case 0:
              t1 = this.health;
            case 8:
              state0 = 0;
            default:
              if (state0 === 11 || state0 === 10 || state0 === 9 || state0 === 0 && $.$$le$n(t1, 0) === true)
                switch (state0) {
                  case 0:
                    t1 = this.game;
                    t2 = t1.get$score();
                  case 9:
                    state0 = 0;
                    t4 = t1.get$pointMultiplier();
                    if (typeof t4 !== "number")
                      throw $.iae(t4);
                    t1.set$score($.$$add$n(t2, 100 * t4));
                    t1 = this.game.get$Stats();
                    t5 = $.getInterceptor$as(t1);
                    t6 = t5.$index(t1, "killed");
                  case 10:
                    state0 = 0;
                    t5.$indexSet(t1, "killed", $.$$add$n(t6, 1));
                    t1 = $.random(0, 1, false);
                  case 11:
                    state0 = 0;
                    if ($.$$gt$n(t1, 0.5) === true)
                      this.game.newBulletPowerUp$2(this.get$x(), this.get$y());
                    this.game.newMiniExplosion$2(this.get$x(), this.get$y());
                    this._removeFromGame = true;
                }
              t1 = $.random(0, 1, false);
            case 12:
              state0 = 0;
            case 13:
            case 14:
              if (state0 === 14 || state0 === 13 || state0 === 0 && $.$$le$n(t1, 0.01) === true)
                switch (state0) {
                  case 0:
                    t1 = this.momentum.get$yVel();
                  case 13:
                    state0 = 0;
                    t1 = $.$$eq$o(t1, 0);
                    t3 = this.momentum;
                  case 14:
                    if (state0 === 14 || state0 === 0 && t1 !== true)
                      switch (state0) {
                        case 0:
                          t1 = t3.get$yVel();
                        case 14:
                          state0 = 0;
                          t3.set$yVel($.$$mul$n(t1, -1));
                      }
                    else
                      t3.set$yVel(60);
                }
              t1 = $.random(0, 1, false);
            case 15:
              state0 = 0;
            case 16:
            case 17:
              if (state0 === 17 || state0 === 16 || state0 === 0 && $.$$le$n(t1, 0.01) === true)
                switch (state0) {
                  case 0:
                    t1 = this.momentum.get$xVel();
                  case 16:
                    state0 = 0;
                    t1 = $.$$eq$o(t1, 0);
                    t3 = this.momentum;
                  case 17:
                    if (state0 === 17 || state0 === 0 && t1 !== true)
                      switch (state0) {
                        case 0:
                          t1 = t3.get$xVel();
                        case 17:
                          state0 = 0;
                          t3.set$xVel($.$$mul$n(t1, -1));
                      }
                    else
                      t3.set$xVel(60);
                }
              t1 = this.get$y();
            case 18:
              state0 = 0;
            case 19:
              if (state0 === 19 || state0 === 0 && $.$$gt$n(t1, this.game.get$rect().get$halfHeight() - 80) === true)
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.get$yVel();
                  case 19:
                    state0 = 0;
                    t1.set$yVel($.$$mul$n(t2, -1));
                }
              t1 = this.get$y();
            case 20:
              state0 = 0;
            case 21:
              if (state0 === 21 || state0 === 0 && $.$$lt$n(t1, -this.game.get$rect().get$halfHeight() + 16) === true)
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.get$yVel();
                  case 21:
                    state0 = 0;
                    t1.set$yVel($.$$mul$n(t2, -1));
                }
              t1 = this.get$x();
            case 22:
              state0 = 0;
            case 23:
              if (state0 === 23 || state0 === 0 && $.$$gt$n(t1, this.game.get$rect().get$halfWidth() - 16) === true)
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.get$xVel();
                  case 23:
                    state0 = 0;
                    t1.set$xVel($.$$mul$n(t2, -1));
                }
              t1 = this.get$x();
            case 24:
              state0 = 0;
            case 25:
              if (state0 === 25 || state0 === 0 && $.$$lt$n(t1, -this.game.get$rect().get$halfWidth() + 16) === true)
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.get$xVel();
                  case 25:
                    state0 = 0;
                    t1.set$xVel($.$$mul$n(t2, -1));
                }
              t1 = this.get$x();
            case 26:
              state0 = 0;
            case 27:
            case 28:
              if (state0 === 28 || state0 === 27 || state0 === 0 && $.$$gt$n(t1, this.game.getEnemyX$1("Boss")) === true)
                switch (state0) {
                  case 0:
                    t1 = $.random(0, 1, false);
                  case 27:
                    state0 = 0;
                  case 28:
                    if (state0 === 28 || state0 === 0 && $.$$le$n(t1, 0.05) === true)
                      switch (state0) {
                        case 0:
                          t1 = this.momentum;
                          t2 = t1.get$xVel();
                        case 28:
                          state0 = 0;
                          t1.set$xVel($.$$mul$n(t2, -1));
                      }
                }
              t1 = this.get$x();
            case 29:
              state0 = 0;
            case 30:
            case 31:
              if (state0 === 31 || state0 === 30 || state0 === 0 && $.$$lt$n(t1, this.game.getEnemyX$1("Boss")) === true)
                switch (state0) {
                  case 0:
                    t1 = $.random(0, 1, false);
                  case 30:
                    state0 = 0;
                  case 31:
                    if (state0 === 31 || state0 === 0 && $.$$le$n(t1, 0.05) === true)
                      switch (state0) {
                        case 0:
                          t1 = this.momentum;
                          t2 = t1.get$xVel();
                        case 31:
                          state0 = 0;
                          t1.set$xVel($.$$mul$n(t2, -1));
                      }
                }
              t1 = this.get$y();
            case 32:
              state0 = 0;
            case 33:
            case 34:
              if (state0 === 34 || state0 === 33 || state0 === 0 && $.$$gt$n(t1, this.game.getEnemyY$1("Boss")) === true)
                switch (state0) {
                  case 0:
                    t1 = $.random(0, 1, false);
                  case 33:
                    state0 = 0;
                  case 34:
                    if (state0 === 34 || state0 === 0 && $.$$le$n(t1, 0.05) === true)
                      switch (state0) {
                        case 0:
                          t1 = this.momentum;
                          t2 = t1.get$yVel();
                        case 34:
                          state0 = 0;
                          t1.set$yVel($.$$mul$n(t2, -1));
                      }
                }
              t1 = this.get$y();
            case 35:
              state0 = 0;
            case 36:
            case 37:
              if (state0 === 37 || state0 === 36 || state0 === 0 && $.$$lt$n(t1, this.game.getEnemyY$1("Boss")) === true)
                switch (state0) {
                  case 0:
                    t1 = $.random(0, 1, false);
                  case 36:
                    state0 = 0;
                  case 37:
                    if (state0 === 37 || state0 === 0 && $.$$le$n(t1, 0.05) === true)
                      switch (state0) {
                        case 0:
                          t1 = this.momentum;
                          t2 = t1.get$yVel();
                        case 37:
                          state0 = 0;
                          t1.set$yVel($.$$mul$n(t2, -1));
                      }
                }
              t1 = this.bossDifficulty;
            case 38:
              state0 = 0;
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
              if (state0 === 40 || state0 === 39 || state0 === 0 && $.$$eq$o(t1, 1) === true)
                switch (state0) {
                  case 0:
                    t1 = $.random(0, 1, false);
                  case 39:
                    state0 = 0;
                  case 40:
                    if (state0 === 40 || state0 === 0 && $.$$le$n(t1, 0.01) === true)
                      switch (state0) {
                        case 0:
                          t1 = this.game;
                          t2 = this.get$x();
                          t3 = this.get$y();
                        case 40:
                          state0 = 0;
                          t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                          t1 = this.game;
                          if (t1.get$soundEffectsOn() === true)
                            t1.get$sound().play$2("enemyFire", 0.3);
                      }
                }
              else
                switch (state0) {
                  case 0:
                    t1 = this.bossDifficulty;
                  case 41:
                    state0 = 0;
                  default:
                    if (state0 === 43 || state0 === 42 || state0 === 0 && $.$$eq$o(t1, 2) === true)
                      switch (state0) {
                        case 0:
                          t1 = $.random(0, 1, false);
                        case 42:
                          state0 = 0;
                        case 43:
                          if (state0 === 43 || state0 === 0 && $.$$le$n(t1, 0.03) === true)
                            switch (state0) {
                              case 0:
                                t1 = this.game;
                                t2 = this.get$x();
                                t3 = this.get$y();
                              case 43:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                t1 = this.game;
                                if (t1.get$soundEffectsOn() === true)
                                  t1.get$sound().play$2("enemyFire", 0.3);
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                          t1 = this.bossDifficulty;
                        case 44:
                          state0 = 0;
                        default:
                          if (state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 0 && $.$$eq$o(t1, 3) === true)
                            switch (state0) {
                              case 0:
                                t1 = $.random(0, 1, false);
                              case 45:
                                state0 = 0;
                              default:
                                if (state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 0 && $.$$le$n(t1, 0.07) === true)
                                  switch (state0) {
                                    case 0:
                                      t1 = this.game;
                                      t2 = this.get$x();
                                      t3 = this.get$y();
                                    case 46:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                      t1 = $.random(0, 1, false);
                                    case 47:
                                      state0 = 0;
                                    default:
                                      if (state0 === 49 || state0 === 48 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                                        switch (state0) {
                                          case 0:
                                            t1 = this.game;
                                            t2 = this.get$x();
                                            t3 = this.get$y();
                                          case 48:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                            t1 = this.game;
                                            t5 = this.get$x();
                                            t6 = this.get$y();
                                          case 49:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                        }
                                      else
                                        switch (state0) {
                                          case 0:
                                            t1 = $.random(0, 1, false);
                                          case 50:
                                            state0 = 0;
                                          default:
                                            if (state0 === 52 || state0 === 51 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this.get$x();
                                                  t3 = this.get$y();
                                                case 51:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                  t1 = this.game;
                                                  t5 = this.get$x();
                                                  t6 = this.get$y();
                                                case 52:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                              }
                                        }
                                      t1 = this.game;
                                      if (t1.get$soundEffectsOn() === true)
                                        t1.get$sound().play$2("enemyFire", 0.3);
                                  }
                            }
                          else
                            switch (state0) {
                              case 0:
                                t1 = this.bossDifficulty;
                              case 53:
                                state0 = 0;
                              default:
                                if (state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 0 && $.$$eq$o(t1, 4) === true)
                                  switch (state0) {
                                    case 0:
                                      t1 = $.random(0, 1, false);
                                    case 54:
                                      state0 = 0;
                                    default:
                                      if (state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                                        switch (state0) {
                                          case 0:
                                            t1 = this.game;
                                            t2 = this.get$x();
                                            t3 = this.get$y();
                                          case 55:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                            t1 = $.random(0, 1, false);
                                          case 56:
                                            state0 = 0;
                                          default:
                                            if (state0 === 58 || state0 === 57 || state0 === 0 && $.$$le$n(t1, 0.3) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this.get$x();
                                                  t3 = this.get$y();
                                                case 57:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                  t1 = this.game;
                                                  t5 = this.get$x();
                                                  t6 = this.get$y();
                                                case 58:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                              }
                                            else
                                              switch (state0) {
                                                case 0:
                                                  t1 = $.random(0, 1, false);
                                                case 59:
                                                  state0 = 0;
                                                default:
                                                  if (state0 === 61 || state0 === 60 || state0 === 0 && $.$$le$n(t1, 0.3) === true)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this.get$x();
                                                        t3 = this.get$y();
                                                      case 60:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                        t1 = this.game;
                                                        t5 = this.get$x();
                                                        t6 = this.get$y();
                                                      case 61:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                    }
                                              }
                                            t1 = this.game;
                                            if (t1.get$soundEffectsOn() === true)
                                              t1.get$sound().play$2("enemyFire", 0.3);
                                        }
                                  }
                                else
                                  switch (state0) {
                                    case 0:
                                      t1 = this.bossDifficulty;
                                    case 62:
                                      state0 = 0;
                                    default:
                                      if (state0 === 70 || state0 === 69 || state0 === 68 || state0 === 67 || state0 === 66 || state0 === 65 || state0 === 64 || state0 === 63 || state0 === 0 && $.$$eq$o(t1, 5) === true)
                                        switch (state0) {
                                          case 0:
                                            t1 = $.random(0, 1, false);
                                          case 63:
                                            state0 = 0;
                                          default:
                                            if (state0 === 70 || state0 === 69 || state0 === 68 || state0 === 67 || state0 === 66 || state0 === 65 || state0 === 64 || state0 === 0 && $.$$le$n(t1, 0.2) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this.get$x();
                                                  t3 = this.get$y();
                                                case 64:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                  t1 = $.random(0, 1, false);
                                                case 65:
                                                  state0 = 0;
                                                default:
                                                  if (state0 === 67 || state0 === 66 || state0 === 0 && $.$$le$n(t1, 0.5) === true)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this.get$x();
                                                        t3 = this.get$y();
                                                      case 66:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                        t1 = this.game;
                                                        t5 = this.get$x();
                                                        t6 = this.get$y();
                                                      case 67:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                    }
                                                  else
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = $.random(0, 1, false);
                                                      case 68:
                                                        state0 = 0;
                                                      default:
                                                        if (state0 === 70 || state0 === 69 || state0 === 0 && $.$$le$n(t1, 0.5) === true)
                                                          switch (state0) {
                                                            case 0:
                                                              t1 = this.game;
                                                              t2 = this.get$x();
                                                              t3 = this.get$y();
                                                            case 69:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                              t1 = this.game;
                                                              t5 = this.get$x();
                                                              t6 = this.get$y();
                                                            case 70:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                          }
                                                    }
                                                  t1 = this.game;
                                                  if (t1.get$soundEffectsOn() === true)
                                                    t1.get$sound().play$2("enemyFire", 0.3);
                                              }
                                        }
                                  }
                            }
                      }
                }
          }
        t1 = this.type;
      case 71:
        state0 = 0;
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 80:
      case 81:
      case 82:
      case 83:
      case 84:
      case 85:
      case 86:
      case 87:
      case 88:
      case 89:
      case 90:
      case 91:
      case 92:
      case 93:
      case 94:
      case 95:
      case 96:
      case 97:
      case 98:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 111:
      case 112:
      case 113:
      case 114:
      case 115:
      case 116:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
      case 123:
      case 124:
      case 125:
      case 126:
      case 127:
      case 128:
      case 129:
      case 130:
      case 131:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 144:
      case 145:
      case 146:
      case 147:
      case 148:
      case 149:
      case 150:
      case 151:
      case 152:
      case 153:
      case 154:
      case 155:
      case 156:
      case 157:
      case 158:
      case 159:
      case 160:
      case 161:
      case 162:
      case 163:
      case 164:
      case 165:
      case 166:
      case 167:
      case 168:
      case 169:
      case 170:
      case 171:
      case 172:
      case 173:
      case 174:
      case 175:
      case 176:
      case 177:
      case 178:
      case 179:
      case 180:
      case 181:
      case 182:
      case 183:
      case 184:
      case 185:
      case 186:
        if (state0 === 186 || state0 === 185 || state0 === 184 || state0 === 183 || state0 === 182 || state0 === 181 || state0 === 180 || state0 === 179 || state0 === 178 || state0 === 177 || state0 === 176 || state0 === 175 || state0 === 174 || state0 === 173 || state0 === 172 || state0 === 171 || state0 === 170 || state0 === 169 || state0 === 168 || state0 === 167 || state0 === 166 || state0 === 165 || state0 === 164 || state0 === 163 || state0 === 162 || state0 === 161 || state0 === 160 || state0 === 159 || state0 === 158 || state0 === 157 || state0 === 156 || state0 === 155 || state0 === 154 || state0 === 153 || state0 === 152 || state0 === 151 || state0 === 150 || state0 === 149 || state0 === 148 || state0 === 147 || state0 === 146 || state0 === 145 || state0 === 144 || state0 === 143 || state0 === 142 || state0 === 141 || state0 === 140 || state0 === 139 || state0 === 138 || state0 === 137 || state0 === 136 || state0 === 135 || state0 === 134 || state0 === 133 || state0 === 132 || state0 === 131 || state0 === 130 || state0 === 129 || state0 === 128 || state0 === 127 || state0 === 126 || state0 === 125 || state0 === 124 || state0 === 123 || state0 === 122 || state0 === 121 || state0 === 120 || state0 === 119 || state0 === 118 || state0 === 117 || state0 === 116 || state0 === 115 || state0 === 114 || state0 === 113 || state0 === 112 || state0 === 111 || state0 === 110 || state0 === 109 || state0 === 108 || state0 === 107 || state0 === 106 || state0 === 105 || state0 === 104 || state0 === 103 || state0 === 102 || state0 === 101 || state0 === 100 || state0 === 99 || state0 === 98 || state0 === 97 || state0 === 96 || state0 === 95 || state0 === 94 || state0 === 93 || state0 === 92 || state0 === 91 || state0 === 90 || state0 === 89 || state0 === 88 || state0 === 87 || state0 === 86 || state0 === 85 || state0 === 84 || state0 === 83 || state0 === 82 || state0 === 81 || state0 === 80 || state0 === 79 || state0 === 78 || state0 === 77 || state0 === 76 || state0 === 75 || state0 === 74 || state0 === 73 || state0 === 72 || state0 === 0 && $.$$eq$o(t1, "Boss") === true)
          switch (state0) {
            case 0:
              t1 = this.health;
            case 72:
              state0 = 0;
            default:
              if (state0 === 79 || state0 === 78 || state0 === 77 || state0 === 76 || state0 === 75 || state0 === 74 || state0 === 73 || state0 === 0 && $.$$le$n(t1, 0) === true)
                switch (state0) {
                  case 0:
                    t1 = this.game.get$Stats();
                    t2 = $.getInterceptor$as(t1);
                    t3 = t2.$index(t1, "wins");
                  case 73:
                    state0 = 0;
                    t2.$indexSet(t1, "wins", $.$$add$n(t3, 1));
                    this.game.newExplosion$2(this.get$x(), this.get$y());
                    this.game.removeEntitiesByFilter$1(new $.Enemy_update_anon());
                    this.game.removeEntitiesByFilter$1(new $.Enemy_update_anon0());
                    this.game.removeEntitiesByFilter$1(new $.Enemy_update_anon1());
                    t1 = this.game;
                    if (t1.get$soundEffectsOn() === true)
                      t1.get$sound().play$1("cursorSelect2");
                    this.game.removeEntitiesByGroup$1("levelEnd");
                    this.game.createLevelEnd$0();
                    this.game.set$state(8);
                    this.game.set$waiting(1);
                    this.game.set$bonusCheck(3);
                    this.game.set$bonusStage(false);
                    t1 = this.game;
                    t2 = t1.get$level();
                  case 74:
                    state0 = 0;
                    t1.set$level($.$$add$n(t2, 1));
                    this.bossHealth = this.bossHealth + 50;
                    t1 = this.game;
                    t2 = t1.get$level();
                  case 75:
                    state0 = 0;
                    t4 = t1.get$bonusCheck();
                  case 76:
                    state0 = 0;
                    t4 = $.$$ge$n(t2, t4);
                    t2 = this.game;
                  case 77:
                    if (state0 === 77 || state0 === 0 && t4 === true)
                      switch (state0) {
                        case 0:
                          t2.set$bonusStage(true);
                          t1 = this.game;
                          t2 = t1.get$bonusCheck();
                        case 77:
                          state0 = 0;
                          t1.set$bonusCheck($.$$add$n(t2, 3));
                      }
                    else
                      t2.set$bonusStage(false);
                    t1 = this.game;
                    t2 = t1.get$score();
                  case 78:
                    state0 = 0;
                    t4 = t1.get$pointMultiplier();
                    if (typeof t4 !== "number")
                      throw $.iae(t4);
                    t1.set$score($.$$add$n(t2, 10000 * t4));
                    t1 = this.game.get$Stats();
                    t5 = $.getInterceptor$as(t1);
                    t6 = t5.$index(t1, "killed");
                  case 79:
                    state0 = 0;
                    t5.$indexSet(t1, "killed", $.$$add$n(t6, 1));
                    this.game.set$bonusStage(false);
                    this._removeFromGame = true;
                }
              t1 = $.random(0, 1, false);
            case 80:
              state0 = 0;
            case 81:
            case 82:
              if (state0 === 82 || state0 === 81 || state0 === 0 && $.$$le$n(t1, 0.01) === true)
                switch (state0) {
                  case 0:
                    t1 = this.momentum.get$yVel();
                  case 81:
                    state0 = 0;
                    t1 = $.$$eq$o(t1, 0);
                    t3 = this.momentum;
                  case 82:
                    if (state0 === 82 || state0 === 0 && t1 !== true)
                      switch (state0) {
                        case 0:
                          t1 = t3.get$yVel();
                        case 82:
                          state0 = 0;
                          t3.set$yVel($.$$mul$n(t1, -1));
                      }
                    else
                      t3.set$yVel(60);
                }
              t1 = $.random(0, 1, false);
            case 83:
              state0 = 0;
            case 84:
            case 85:
              if (state0 === 85 || state0 === 84 || state0 === 0 && $.$$le$n(t1, 0.01) === true)
                switch (state0) {
                  case 0:
                    t1 = this.momentum.get$xVel();
                  case 84:
                    state0 = 0;
                    t1 = $.$$eq$o(t1, 0);
                    t3 = this.momentum;
                  case 85:
                    if (state0 === 85 || state0 === 0 && t1 !== true)
                      switch (state0) {
                        case 0:
                          t1 = t3.get$xVel();
                        case 85:
                          state0 = 0;
                          t3.set$xVel($.$$mul$n(t1, -1));
                      }
                    else
                      t3.set$xVel(60);
                }
              t1 = this.get$y();
            case 86:
              state0 = 0;
            case 87:
              if (state0 === 87 || state0 === 0 && $.$$gt$n(t1, this.game.get$rect().get$halfHeight() - 250) === true)
                switch (state0) {
                  case 0:
                    t1 = $.random(0, 1, false);
                  case 87:
                    state0 = 0;
                    t3 = $.$$le$n(t1, 0.07) === true;
                    t1 = t3;
                }
              else
                t1 = false;
            case 88:
              if (state0 === 88 || state0 === 0 && t1)
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.get$yVel();
                  case 88:
                    state0 = 0;
                    t1.set$yVel($.$$mul$n(t2, -1));
                }
              t1 = this.get$y();
            case 89:
              state0 = 0;
            case 90:
              if (state0 === 90 || state0 === 0 && $.$$gt$n(t1, this.game.get$rect().get$halfHeight() - 115) === true)
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.get$yVel();
                  case 90:
                    state0 = 0;
                    t1.set$yVel($.$$mul$n(t2, -1));
                }
              t1 = this.get$y();
            case 91:
              state0 = 0;
            case 92:
              if (state0 === 92 || state0 === 0 && $.$$lt$n(t1, -this.game.get$rect().get$halfHeight() + 72) === true)
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.get$yVel();
                  case 92:
                    state0 = 0;
                    t1.set$yVel($.$$mul$n(t2, -1));
                }
              t1 = this.get$x();
            case 93:
              state0 = 0;
            case 94:
              if (state0 === 94 || state0 === 0 && $.$$gt$n(t1, this.game.get$rect().get$halfWidth() - 72) === true)
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.get$xVel();
                  case 94:
                    state0 = 0;
                    t1.set$xVel($.$$mul$n(t2, -1));
                }
              t1 = this.get$x();
            case 95:
              state0 = 0;
            case 96:
              if (state0 === 96 || state0 === 0 && $.$$lt$n(t1, -this.game.get$rect().get$halfWidth() + 72) === true)
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.get$xVel();
                  case 96:
                    state0 = 0;
                    t1.set$xVel($.$$mul$n(t2, -1));
                }
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
              if (state0 === 136 || state0 === 135 || state0 === 134 || state0 === 133 || state0 === 132 || state0 === 131 || state0 === 130 || state0 === 129 || state0 === 128 || state0 === 127 || state0 === 126 || state0 === 125 || state0 === 124 || state0 === 123 || state0 === 122 || state0 === 121 || state0 === 120 || state0 === 119 || state0 === 118 || state0 === 117 || state0 === 116 || state0 === 115 || state0 === 114 || state0 === 113 || state0 === 112 || state0 === 111 || state0 === 110 || state0 === 109 || state0 === 108 || state0 === 107 || state0 === 106 || state0 === 105 || state0 === 104 || state0 === 103 || state0 === 102 || state0 === 101 || state0 === 100 || state0 === 99 || state0 === 98 || state0 === 97 || state0 === 0 && this.belowHalfHp)
                switch (state0) {
                  case 0:
                    t1 = this.bossDifficulty;
                  case 97:
                    state0 = 0;
                  default:
                    if (state0 === 101 || state0 === 100 || state0 === 99 || state0 === 98 || state0 === 0 && $.$$eq$o(t1, 1) === true)
                      switch (state0) {
                        case 0:
                          t1 = $.random(0, 1, false);
                        case 98:
                          state0 = 0;
                        default:
                          if (state0 === 101 || state0 === 100 || state0 === 99 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                            switch (state0) {
                              case 0:
                                t1 = this.game;
                                t2 = this.get$x();
                                t3 = this.get$y();
                              case 99:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                t1 = this.game;
                                t5 = this.get$x();
                                t6 = this.get$y();
                              case 100:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                t1 = this.game;
                                t8 = this.get$x();
                                t9 = this.get$y();
                              case 101:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t8, $.$$add$n(t9, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                t1 = this.game;
                                if (t1.get$soundEffectsOn() === true)
                                  t1.get$sound().play$2("enemyFire", 0.3);
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                          t1 = this.bossDifficulty;
                        case 102:
                          state0 = 0;
                        default:
                          if (state0 === 106 || state0 === 105 || state0 === 104 || state0 === 103 || state0 === 0 && $.$$eq$o(t1, 2) === true)
                            switch (state0) {
                              case 0:
                                t1 = $.random(0, 1, false);
                              case 103:
                                state0 = 0;
                              default:
                                if (state0 === 106 || state0 === 105 || state0 === 104 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                                  switch (state0) {
                                    case 0:
                                      t1 = this.game;
                                      t2 = this.get$x();
                                      t3 = this.get$y();
                                    case 104:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                      t1 = this.game;
                                      t5 = this.get$x();
                                      t6 = this.get$y();
                                    case 105:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                      t1 = this.game;
                                      t8 = this.get$x();
                                      t9 = this.get$y();
                                    case 106:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t8, $.$$add$n(t9, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                      t1 = this.game;
                                      if (t1.get$soundEffectsOn() === true)
                                        t1.get$sound().play$2("enemyFire", 0.3);
                                  }
                            }
                          else
                            switch (state0) {
                              case 0:
                                t1 = this.bossDifficulty;
                              case 107:
                                state0 = 0;
                              default:
                                if (state0 === 115 || state0 === 114 || state0 === 113 || state0 === 112 || state0 === 111 || state0 === 110 || state0 === 109 || state0 === 108 || state0 === 0 && $.$$eq$o(t1, 3) === true)
                                  switch (state0) {
                                    case 0:
                                      t1 = $.random(0, 1, false);
                                    case 108:
                                      state0 = 0;
                                    default:
                                      if (state0 === 115 || state0 === 114 || state0 === 113 || state0 === 112 || state0 === 111 || state0 === 110 || state0 === 109 || state0 === 0 && $.$$le$n(t1, 0.07) === true)
                                        switch (state0) {
                                          case 0:
                                            t1 = $.random(0, 1, false);
                                          case 109:
                                            state0 = 0;
                                          default:
                                            if (state0 === 112 || state0 === 111 || state0 === 110 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this.get$x();
                                                  t3 = this.get$y();
                                                case 110:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                  t1 = this.game;
                                                  t5 = this.get$x();
                                                  t6 = this.get$y();
                                                case 111:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                  t1 = this.game;
                                                  t8 = this.get$x();
                                                  t9 = this.get$y();
                                                case 112:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t8, $.$$add$n(t9, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                              }
                                            else
                                              switch (state0) {
                                                case 0:
                                                  t1 = $.random(0, 1, false);
                                                case 113:
                                                  state0 = 0;
                                                default:
                                                  if (state0 === 115 || state0 === 114 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this.get$x();
                                                        t3 = this.get$y();
                                                      case 114:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                        t1 = this.game;
                                                        t5 = this.get$x();
                                                        t6 = this.get$y();
                                                      case 115:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                    }
                                              }
                                            t1 = this.game;
                                            if (t1.get$soundEffectsOn() === true)
                                              t1.get$sound().play$2("enemyFire", 0.3);
                                        }
                                  }
                                else
                                  switch (state0) {
                                    case 0:
                                      t1 = this.bossDifficulty;
                                    case 116:
                                      state0 = 0;
                                    default:
                                      if (state0 === 124 || state0 === 123 || state0 === 122 || state0 === 121 || state0 === 120 || state0 === 119 || state0 === 118 || state0 === 117 || state0 === 0 && $.$$eq$o(t1, 4) === true)
                                        switch (state0) {
                                          case 0:
                                            t1 = $.random(0, 1, false);
                                          case 117:
                                            state0 = 0;
                                          default:
                                            if (state0 === 124 || state0 === 123 || state0 === 122 || state0 === 121 || state0 === 120 || state0 === 119 || state0 === 118 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = $.random(0, 1, false);
                                                case 118:
                                                  state0 = 0;
                                                default:
                                                  if (state0 === 121 || state0 === 120 || state0 === 119 || state0 === 0 && $.$$le$n(t1, 0.3) === true)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this.get$x();
                                                        t3 = this.get$y();
                                                      case 119:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                        t1 = this.game;
                                                        t5 = this.get$x();
                                                        t6 = this.get$y();
                                                      case 120:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                        t1 = this.game;
                                                        t8 = this.get$x();
                                                        t9 = this.get$y();
                                                      case 121:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t8, $.$$add$n(t9, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                    }
                                                  else
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = $.random(0, 1, false);
                                                      case 122:
                                                        state0 = 0;
                                                      default:
                                                        if (state0 === 124 || state0 === 123 || state0 === 0 && $.$$le$n(t1, 0.3) === true)
                                                          switch (state0) {
                                                            case 0:
                                                              t1 = this.game;
                                                              t2 = this.get$x();
                                                              t3 = this.get$y();
                                                            case 123:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                              t1 = this.game;
                                                              t5 = this.get$x();
                                                              t6 = this.get$y();
                                                            case 124:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                          }
                                                    }
                                                  t1 = this.game;
                                                  if (t1.get$soundEffectsOn() === true)
                                                    t1.get$sound().play$2("enemyFire", 0.3);
                                              }
                                        }
                                      else
                                        switch (state0) {
                                          case 0:
                                            t1 = this.bossDifficulty;
                                          case 125:
                                            state0 = 0;
                                          default:
                                            if (state0 === 136 || state0 === 135 || state0 === 134 || state0 === 133 || state0 === 132 || state0 === 131 || state0 === 130 || state0 === 129 || state0 === 128 || state0 === 127 || state0 === 126 || state0 === 0 && $.$$eq$o(t1, 5) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = $.random(0, 1, false);
                                                case 126:
                                                  state0 = 0;
                                                default:
                                                  if (state0 === 136 || state0 === 135 || state0 === 134 || state0 === 133 || state0 === 132 || state0 === 131 || state0 === 130 || state0 === 129 || state0 === 128 || state0 === 127 || state0 === 0 && $.$$le$n(t1, 0.2) === true)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = $.random(0, 1, false);
                                                      case 127:
                                                        state0 = 0;
                                                      default:
                                                        if (state0 === 130 || state0 === 129 || state0 === 128 || state0 === 0 && $.$$le$n(t1, 0.5) === true)
                                                          switch (state0) {
                                                            case 0:
                                                              t1 = this.game;
                                                              t2 = this.get$x();
                                                              t3 = this.get$y();
                                                            case 128:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                              t1 = this.game;
                                                              t5 = this.get$x();
                                                              t6 = this.get$y();
                                                            case 129:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                              t1 = this.game;
                                                              t8 = this.get$x();
                                                              t9 = this.get$y();
                                                            case 130:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t8, $.$$add$n(t9, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                          }
                                                        else
                                                          switch (state0) {
                                                            case 0:
                                                              t1 = $.random(0, 1, false);
                                                            case 131:
                                                              state0 = 0;
                                                            default:
                                                              if (state0 === 133 || state0 === 132 || state0 === 0 && $.$$le$n(t1, 0.5) === true)
                                                                switch (state0) {
                                                                  case 0:
                                                                    t1 = this.game;
                                                                    t2 = this.get$x();
                                                                    t3 = this.get$y();
                                                                  case 132:
                                                                    state0 = 0;
                                                                    t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                                    t1 = this.game;
                                                                    t5 = this.get$x();
                                                                    t6 = this.get$y();
                                                                  case 133:
                                                                    state0 = 0;
                                                                    t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                                }
                                                          }
                                                        t1 = this.game;
                                                        t2 = this.get$x();
                                                        t3 = this.get$y();
                                                      case 134:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                                        t1 = this.game;
                                                        t5 = this.get$x();
                                                        t6 = this.get$y();
                                                      case 135:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                                        t1 = this.game;
                                                        t8 = this.get$x();
                                                        t9 = this.get$y();
                                                      case 136:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t8, $.$$add$n(t9, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                                        t1 = this.game;
                                                        if (t1.get$soundEffectsOn() === true)
                                                          t1.get$sound().play$2("enemyFire", 0.3);
                                                    }
                                              }
                                        }
                                  }
                            }
                      }
                }
              else
                switch (state0) {
                  case 0:
                    t1 = this.bossDifficulty;
                  case 137:
                    state0 = 0;
                  default:
                    if (state0 === 141 || state0 === 140 || state0 === 139 || state0 === 138 || state0 === 0 && $.$$eq$o(t1, 1) === true)
                      switch (state0) {
                        case 0:
                          t1 = $.random(0, 1, false);
                        case 138:
                          state0 = 0;
                        default:
                          if (state0 === 141 || state0 === 140 || state0 === 139 || state0 === 0 && $.$$le$n(t1, 0.01) === true)
                            switch (state0) {
                              case 0:
                                t1 = this.game;
                                t2 = this.get$x();
                                t3 = this.get$y();
                              case 139:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                t1 = this.game;
                                t5 = this.get$x();
                                t6 = this.get$y();
                              case 140:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                t1 = this.game;
                                t8 = this.get$x();
                                t9 = this.get$y();
                              case 141:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t8, $.$$add$n(t9, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                t1 = this.game;
                                if (t1.get$soundEffectsOn() === true)
                                  t1.get$sound().play$2("enemyFire", 0.3);
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                          t1 = this.bossDifficulty;
                        case 142:
                          state0 = 0;
                        default:
                          if (state0 === 146 || state0 === 145 || state0 === 144 || state0 === 143 || state0 === 0 && $.$$eq$o(t1, 2) === true)
                            switch (state0) {
                              case 0:
                                t1 = $.random(0, 1, false);
                              case 143:
                                state0 = 0;
                              default:
                                if (state0 === 146 || state0 === 145 || state0 === 144 || state0 === 0 && $.$$le$n(t1, 0.03) === true)
                                  switch (state0) {
                                    case 0:
                                      t1 = this.game;
                                      t2 = this.get$x();
                                      t3 = this.get$y();
                                    case 144:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                      t1 = this.game;
                                      t5 = this.get$x();
                                      t6 = this.get$y();
                                    case 145:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                      t1 = this.game;
                                      t8 = this.get$x();
                                      t9 = this.get$y();
                                    case 146:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t8, $.$$add$n(t9, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                      t1 = this.game;
                                      if (t1.get$soundEffectsOn() === true)
                                        t1.get$sound().play$2("enemyFire", 0.3);
                                  }
                            }
                          else
                            switch (state0) {
                              case 0:
                                t1 = this.bossDifficulty;
                              case 147:
                                state0 = 0;
                              default:
                                if (state0 === 158 || state0 === 157 || state0 === 156 || state0 === 155 || state0 === 154 || state0 === 153 || state0 === 152 || state0 === 151 || state0 === 150 || state0 === 149 || state0 === 148 || state0 === 0 && $.$$eq$o(t1, 3) === true)
                                  switch (state0) {
                                    case 0:
                                      t1 = $.random(0, 1, false);
                                    case 148:
                                      state0 = 0;
                                    default:
                                      if (state0 === 158 || state0 === 157 || state0 === 156 || state0 === 155 || state0 === 154 || state0 === 153 || state0 === 152 || state0 === 151 || state0 === 150 || state0 === 149 || state0 === 0 && $.$$le$n(t1, 0.07) === true)
                                        switch (state0) {
                                          case 0:
                                            t1 = $.random(0, 1, false);
                                          case 149:
                                            state0 = 0;
                                          default:
                                            if (state0 === 152 || state0 === 151 || state0 === 150 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this.get$x();
                                                  t3 = this.get$y();
                                                case 150:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(42, 54, false), "normal"));
                                                  t1 = this.game;
                                                  t5 = this.get$x();
                                                  t6 = this.get$y();
                                                case 151:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "left", $.random(350, 400, false), $.random(42, 54, false), "normal"));
                                                  t1 = this.game;
                                                  t8 = this.get$x();
                                                  t9 = this.get$y();
                                                case 152:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t8, $.$$add$n(t9, 16), "right", $.random(350, 400, false), $.random(42, 54, false), "normal"));
                                              }
                                            else
                                              switch (state0) {
                                                case 0:
                                                  t1 = $.random(0, 1, false);
                                                case 153:
                                                  state0 = 0;
                                                default:
                                                  if (state0 === 155 || state0 === 154 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this.get$x();
                                                        t3 = this.get$y();
                                                      case 154:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                        t1 = this.game;
                                                        t5 = this.get$x();
                                                        t6 = this.get$y();
                                                      case 155:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                    }
                                              }
                                            t1 = this.game;
                                            t2 = this.get$x();
                                            t3 = this.get$y();
                                          case 156:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                            t1 = this.game;
                                            t5 = this.get$x();
                                            t6 = this.get$y();
                                          case 157:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                            t1 = this.game;
                                            t8 = this.get$x();
                                            t9 = this.get$y();
                                          case 158:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t8, $.$$add$n(t9, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                            t1 = this.game;
                                            if (t1.get$soundEffectsOn() === true)
                                              t1.get$sound().play$2("enemyFire", 0.3);
                                        }
                                  }
                                else
                                  switch (state0) {
                                    case 0:
                                      t1 = this.bossDifficulty;
                                    case 159:
                                      state0 = 0;
                                    default:
                                      if (state0 === 170 || state0 === 169 || state0 === 168 || state0 === 167 || state0 === 166 || state0 === 165 || state0 === 164 || state0 === 163 || state0 === 162 || state0 === 161 || state0 === 160 || state0 === 0 && $.$$eq$o(t1, 4) === true)
                                        switch (state0) {
                                          case 0:
                                            t1 = $.random(0, 1, false);
                                          case 160:
                                            state0 = 0;
                                          default:
                                            if (state0 === 170 || state0 === 169 || state0 === 168 || state0 === 167 || state0 === 166 || state0 === 165 || state0 === 164 || state0 === 163 || state0 === 162 || state0 === 161 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = $.random(0, 1, false);
                                                case 161:
                                                  state0 = 0;
                                                default:
                                                  if (state0 === 164 || state0 === 163 || state0 === 162 || state0 === 0 && $.$$le$n(t1, 0.3) === true)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this.get$x();
                                                        t3 = this.get$y();
                                                      case 162:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(42, 54, false), "normal"));
                                                        t1 = this.game;
                                                        t5 = this.get$x();
                                                        t6 = this.get$y();
                                                      case 163:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "left", $.random(350, 400, false), $.random(42, 54, false), "normal"));
                                                        t1 = this.game;
                                                        t8 = this.get$x();
                                                        t9 = this.get$y();
                                                      case 164:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t8, $.$$add$n(t9, 16), "right", $.random(350, 400, false), $.random(42, 54, false), "normal"));
                                                    }
                                                  else
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = $.random(0, 1, false);
                                                      case 165:
                                                        state0 = 0;
                                                      default:
                                                        if (state0 === 167 || state0 === 166 || state0 === 0 && $.$$le$n(t1, 0.3) === true)
                                                          switch (state0) {
                                                            case 0:
                                                              t1 = this.game;
                                                              t2 = this.get$x();
                                                              t3 = this.get$y();
                                                            case 166:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                              t1 = this.game;
                                                              t5 = this.get$x();
                                                              t6 = this.get$y();
                                                            case 167:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                          }
                                                    }
                                                  t1 = this.game;
                                                  t2 = this.get$x();
                                                  t3 = this.get$y();
                                                case 168:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                                  t1 = this.game;
                                                  t5 = this.get$x();
                                                  t6 = this.get$y();
                                                case 169:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                                  t1 = this.game;
                                                  t8 = this.get$x();
                                                  t9 = this.get$y();
                                                case 170:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t8, $.$$add$n(t9, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                                  t1 = this.game;
                                                  if (t1.get$soundEffectsOn() === true)
                                                    t1.get$sound().play$2("enemyFire", 0.3);
                                              }
                                        }
                                      else
                                        switch (state0) {
                                          case 0:
                                            t1 = this.bossDifficulty;
                                          case 171:
                                            state0 = 0;
                                          default:
                                            if (state0 === 182 || state0 === 181 || state0 === 180 || state0 === 179 || state0 === 178 || state0 === 177 || state0 === 176 || state0 === 175 || state0 === 174 || state0 === 173 || state0 === 172 || state0 === 0 && $.$$eq$o(t1, 5) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = $.random(0, 1, false);
                                                case 172:
                                                  state0 = 0;
                                                default:
                                                  if (state0 === 182 || state0 === 181 || state0 === 180 || state0 === 179 || state0 === 178 || state0 === 177 || state0 === 176 || state0 === 175 || state0 === 174 || state0 === 173 || state0 === 0 && $.$$le$n(t1, 0.2) === true)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = $.random(0, 1, false);
                                                      case 173:
                                                        state0 = 0;
                                                      default:
                                                        if (state0 === 176 || state0 === 175 || state0 === 174 || state0 === 0 && $.$$le$n(t1, 0.5) === true)
                                                          switch (state0) {
                                                            case 0:
                                                              t1 = this.game;
                                                              t2 = this.get$x();
                                                              t3 = this.get$y();
                                                            case 174:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(42, 54, false), "normal"));
                                                              t1 = this.game;
                                                              t5 = this.get$x();
                                                              t6 = this.get$y();
                                                            case 175:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "left", $.random(350, 400, false), $.random(42, 54, false), "normal"));
                                                              t1 = this.game;
                                                              t8 = this.get$x();
                                                              t9 = this.get$y();
                                                            case 176:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t8, $.$$add$n(t9, 16), "right", $.random(350, 400, false), $.random(42, 54, false), "normal"));
                                                          }
                                                        else
                                                          switch (state0) {
                                                            case 0:
                                                              t1 = $.random(0, 1, false);
                                                            case 177:
                                                              state0 = 0;
                                                            default:
                                                              if (state0 === 179 || state0 === 178 || state0 === 0 && $.$$le$n(t1, 0.5) === true)
                                                                switch (state0) {
                                                                  case 0:
                                                                    t1 = this.game;
                                                                    t2 = this.get$x();
                                                                    t3 = this.get$y();
                                                                  case 178:
                                                                    state0 = 0;
                                                                    t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                                    t1 = this.game;
                                                                    t5 = this.get$x();
                                                                    t6 = this.get$y();
                                                                  case 179:
                                                                    state0 = 0;
                                                                    t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                                }
                                                          }
                                                        t1 = this.game;
                                                        t2 = this.get$x();
                                                        t3 = this.get$y();
                                                      case 180:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                                        t1 = this.game;
                                                        t5 = this.get$x();
                                                        t6 = this.get$y();
                                                      case 181:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "left", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                                        t1 = this.game;
                                                        t8 = this.get$x();
                                                        t9 = this.get$y();
                                                      case 182:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t8, $.$$add$n(t9, 16), "right", $.random(350, 400, false), $.random(30, 42, false), "normal"));
                                                        t1 = this.game;
                                                        if (t1.get$soundEffectsOn() === true)
                                                          t1.get$sound().play$2("enemyFire", 0.3);
                                                    }
                                              }
                                        }
                                  }
                            }
                      }
                }
              t1 = $.random(0, 1, false);
            case 183:
              state0 = 0;
              t1 = $.$$le$n(t1, 0.5);
              t3 = this.game;
            case 184:
            case 185:
            case 186:
              if (state0 === 184 || state0 === 0 && t1 === true)
                switch (state0) {
                  case 0:
                    t1 = this.get$x();
                    t2 = this.get$y();
                  case 184:
                    state0 = 0;
                    t3.newBossDrone$2(t1, $.$$sub$n(t2, 50));
                }
              else
                switch (state0) {
                  case 0:
                    t1 = this.get$x();
                  case 185:
                    state0 = 0;
                    t1 = $.$$add$n(t1, 72);
                    t4 = this.get$y();
                  case 186:
                    state0 = 0;
                    t3.newBossDrone$2(t1, $.$$sub$n(t4, 50));
                }
          }
        t1 = this.type;
      case 187:
        state0 = 0;
      case 188:
      case 189:
      case 190:
      case 191:
      case 192:
      case 193:
      case 194:
      case 195:
      case 196:
      case 197:
      case 198:
      case 199:
      case 200:
      case 201:
      case 202:
      case 203:
      case 204:
      case 205:
      case 206:
      case 207:
      case 208:
      case 209:
      case 210:
      case 211:
      case 212:
      case 213:
      case 214:
      case 215:
      case 216:
      case 217:
      case 218:
      case 219:
      case 220:
      case 221:
      case 222:
      case 223:
      case 224:
      case 225:
      case 226:
      case 227:
      case 228:
      case 229:
      case 230:
      case 231:
      case 232:
      case 233:
      case 234:
      case 235:
      case 236:
      case 237:
      case 238:
      case 239:
      case 240:
      case 241:
      case 242:
      case 243:
      case 244:
      case 245:
        if (state0 === 245 || state0 === 244 || state0 === 243 || state0 === 242 || state0 === 241 || state0 === 240 || state0 === 239 || state0 === 238 || state0 === 237 || state0 === 236 || state0 === 235 || state0 === 234 || state0 === 233 || state0 === 232 || state0 === 231 || state0 === 230 || state0 === 229 || state0 === 228 || state0 === 227 || state0 === 226 || state0 === 225 || state0 === 224 || state0 === 223 || state0 === 222 || state0 === 221 || state0 === 220 || state0 === 219 || state0 === 218 || state0 === 217 || state0 === 216 || state0 === 215 || state0 === 214 || state0 === 213 || state0 === 212 || state0 === 211 || state0 === 210 || state0 === 209 || state0 === 208 || state0 === 207 || state0 === 206 || state0 === 205 || state0 === 204 || state0 === 203 || state0 === 202 || state0 === 201 || state0 === 200 || state0 === 199 || state0 === 198 || state0 === 197 || state0 === 196 || state0 === 195 || state0 === 194 || state0 === 193 || state0 === 192 || state0 === 191 || state0 === 190 || state0 === 189 || state0 === 188 || state0 === 0 && $.$$eq$o(t1, "MotherShip") === true)
          switch (state0) {
            case 0:
              t1 = this.get$x();
            case 188:
              state0 = 0;
              if ($.$$gt$n(t1, this.game.get$rect().get$halfWidth()) === true)
                this._removeFromGame = true;
              t1 = this.health;
            case 189:
              state0 = 0;
            default:
              if (state0 === 192 || state0 === 191 || state0 === 190 || state0 === 0 && $.$$le$n(t1, 0) === true)
                switch (state0) {
                  case 0:
                    t1 = this.game;
                    t2 = t1.get$score();
                  case 190:
                    state0 = 0;
                    t4 = t1.get$pointMultiplier();
                    if (typeof t4 !== "number")
                      throw $.iae(t4);
                    t1.set$score($.$$add$n(t2, 1000 * t4));
                    t1 = this.game.get$Stats();
                    t5 = $.getInterceptor$as(t1);
                    t6 = t5.$index(t1, "killed");
                  case 191:
                    state0 = 0;
                    t5.$indexSet(t1, "killed", $.$$add$n(t6, 1));
                    t1 = $.random(0, 1, false);
                  case 192:
                    state0 = 0;
                    if ($.$$gt$n(t1, 0.5) === true)
                      this.game.newBulletPowerUp$2(this.get$x(), this.get$y());
                    this.game.newMiniExplosion$2(this.get$x(), this.get$y());
                    this._removeFromGame = true;
                }
              t1 = this.difficulty;
            case 193:
              state0 = 0;
            case 194:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
            case 219:
            case 220:
            case 221:
            case 222:
            case 223:
            case 224:
            case 225:
            case 226:
            case 227:
            case 228:
            case 229:
            case 230:
            case 231:
            case 232:
            case 233:
            case 234:
            case 235:
            case 236:
            case 237:
            case 238:
            case 239:
            case 240:
            case 241:
            case 242:
            case 243:
            case 244:
            case 245:
              if (state0 === 199 || state0 === 198 || state0 === 197 || state0 === 196 || state0 === 195 || state0 === 194 || state0 === 0 && $.$$eq$o(t1, 1) === true)
                switch (state0) {
                  case 0:
                    t1 = this.get$x();
                  case 194:
                    state0 = 0;
                    t1 = $.$$add$n(t1, 16);
                    t3 = this.game.get$ship().get$x();
                  case 195:
                    state0 = 0;
                  default:
                    if (state0 === 197 || state0 === 196 || state0 === 0 && $.$$ge$n(t1, t3) === true)
                      switch (state0) {
                        case 0:
                          t1 = this.get$x();
                        case 196:
                          state0 = 0;
                          t1 = $.$$sub$n(t1, 16);
                          t3 = this.game.get$ship().get$x();
                        case 197:
                          state0 = 0;
                          t5 = $.$$le$n(t1, t3) === true;
                          t1 = t5;
                      }
                    else
                      t1 = false;
                  case 198:
                    if (state0 === 198 || state0 === 0 && t1)
                      switch (state0) {
                        case 0:
                          t1 = $.random(0, 1, false);
                        case 198:
                          state0 = 0;
                          t3 = $.$$le$n(t1, 0.01) === true;
                          t1 = t3;
                      }
                    else
                      t1 = false;
                  case 199:
                    if (state0 === 199 || state0 === 0 && t1)
                      switch (state0) {
                        case 0:
                          t1 = this.game;
                          t2 = this.get$x();
                          t3 = this.get$y();
                        case 199:
                          state0 = 0;
                          t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                          t1 = this.game;
                          if (t1.get$soundEffectsOn() === true)
                            t1.get$sound().play$2("motherShipFire", 0.3);
                      }
                }
              else
                switch (state0) {
                  case 0:
                    t1 = this.difficulty;
                  case 200:
                    state0 = 0;
                  default:
                    if (state0 === 206 || state0 === 205 || state0 === 204 || state0 === 203 || state0 === 202 || state0 === 201 || state0 === 0 && $.$$eq$o(t1, 2) === true)
                      switch (state0) {
                        case 0:
                          t1 = this.get$x();
                        case 201:
                          state0 = 0;
                          t1 = $.$$add$n(t1, 16);
                          t3 = this.game.get$ship().get$x();
                        case 202:
                          state0 = 0;
                        default:
                          if (state0 === 204 || state0 === 203 || state0 === 0 && $.$$ge$n(t1, t3) === true)
                            switch (state0) {
                              case 0:
                                t1 = this.get$x();
                              case 203:
                                state0 = 0;
                                t1 = $.$$sub$n(t1, 16);
                                t3 = this.game.get$ship().get$x();
                              case 204:
                                state0 = 0;
                                t5 = $.$$le$n(t1, t3) === true;
                                t1 = t5;
                            }
                          else
                            t1 = false;
                        case 205:
                          if (state0 === 205 || state0 === 0 && t1)
                            switch (state0) {
                              case 0:
                                t1 = $.random(0, 1, false);
                              case 205:
                                state0 = 0;
                                t3 = $.$$le$n(t1, 0.03) === true;
                                t1 = t3;
                            }
                          else
                            t1 = false;
                        case 206:
                          if (state0 === 206 || state0 === 0 && t1)
                            switch (state0) {
                              case 0:
                                t1 = this.game;
                                t2 = this.get$x();
                                t3 = this.get$y();
                              case 206:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                t1 = this.game;
                                if (t1.get$soundEffectsOn() === true)
                                  t1.get$sound().play$2("motherShipFire", 0.3);
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                          t1 = this.difficulty;
                        case 207:
                          state0 = 0;
                        default:
                          if (state0 === 219 || state0 === 218 || state0 === 217 || state0 === 216 || state0 === 215 || state0 === 214 || state0 === 213 || state0 === 212 || state0 === 211 || state0 === 210 || state0 === 209 || state0 === 208 || state0 === 0 && $.$$eq$o(t1, 3) === true)
                            switch (state0) {
                              case 0:
                                t1 = this.get$x();
                              case 208:
                                state0 = 0;
                                t1 = $.$$add$n(t1, 16);
                                t3 = this.game.get$ship().get$x();
                              case 209:
                                state0 = 0;
                              default:
                                if (state0 === 211 || state0 === 210 || state0 === 0 && $.$$ge$n(t1, t3) === true)
                                  switch (state0) {
                                    case 0:
                                      t1 = this.get$x();
                                    case 210:
                                      state0 = 0;
                                      t1 = $.$$sub$n(t1, 16);
                                      t3 = this.game.get$ship().get$x();
                                    case 211:
                                      state0 = 0;
                                      t5 = $.$$le$n(t1, t3) === true;
                                      t1 = t5;
                                  }
                                else
                                  t1 = false;
                              case 212:
                                if (state0 === 212 || state0 === 0 && t1)
                                  switch (state0) {
                                    case 0:
                                      t1 = $.random(0, 1, false);
                                    case 212:
                                      state0 = 0;
                                      t3 = $.$$le$n(t1, 0.07) === true;
                                      t1 = t3;
                                  }
                                else
                                  t1 = false;
                              case 213:
                              case 214:
                              case 215:
                              case 216:
                              case 217:
                              case 218:
                              case 219:
                                if (state0 === 219 || state0 === 218 || state0 === 217 || state0 === 216 || state0 === 215 || state0 === 214 || state0 === 213 || state0 === 0 && t1)
                                  switch (state0) {
                                    case 0:
                                      t1 = this.game;
                                      t2 = this.get$x();
                                      t3 = this.get$y();
                                    case 213:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                      t1 = $.random(0, 1, false);
                                    case 214:
                                      state0 = 0;
                                    default:
                                      if (state0 === 216 || state0 === 215 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                                        switch (state0) {
                                          case 0:
                                            t1 = this.game;
                                            t2 = this.get$x();
                                            t3 = this.get$y();
                                          case 215:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                            t1 = this.game;
                                            t5 = this.get$x();
                                            t6 = this.get$y();
                                          case 216:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                        }
                                      else
                                        switch (state0) {
                                          case 0:
                                            t1 = $.random(0, 1, false);
                                          case 217:
                                            state0 = 0;
                                          default:
                                            if (state0 === 219 || state0 === 218 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this.get$x();
                                                  t3 = this.get$y();
                                                case 218:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                  t1 = this.game;
                                                  t5 = this.get$x();
                                                  t6 = this.get$y();
                                                case 219:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                              }
                                        }
                                      t1 = this.game;
                                      if (t1.get$soundEffectsOn() === true)
                                        t1.get$sound().play$2("motherShipFire", 0.3);
                                  }
                            }
                          else
                            switch (state0) {
                              case 0:
                                t1 = this.difficulty;
                              case 220:
                                state0 = 0;
                              default:
                                if (state0 === 232 || state0 === 231 || state0 === 230 || state0 === 229 || state0 === 228 || state0 === 227 || state0 === 226 || state0 === 225 || state0 === 224 || state0 === 223 || state0 === 222 || state0 === 221 || state0 === 0 && $.$$eq$o(t1, 4) === true)
                                  switch (state0) {
                                    case 0:
                                      t1 = this.get$x();
                                    case 221:
                                      state0 = 0;
                                      t1 = $.$$add$n(t1, 16);
                                      t3 = this.game.get$ship().get$x();
                                    case 222:
                                      state0 = 0;
                                    default:
                                      if (state0 === 224 || state0 === 223 || state0 === 0 && $.$$ge$n(t1, t3) === true)
                                        switch (state0) {
                                          case 0:
                                            t1 = this.get$x();
                                          case 223:
                                            state0 = 0;
                                            t1 = $.$$sub$n(t1, 16);
                                            t3 = this.game.get$ship().get$x();
                                          case 224:
                                            state0 = 0;
                                            t5 = $.$$le$n(t1, t3) === true;
                                            t1 = t5;
                                        }
                                      else
                                        t1 = false;
                                    case 225:
                                      if (state0 === 225 || state0 === 0 && t1)
                                        switch (state0) {
                                          case 0:
                                            t1 = $.random(0, 1, false);
                                          case 225:
                                            state0 = 0;
                                            t3 = $.$$le$n(t1, 0.1) === true;
                                            t1 = t3;
                                        }
                                      else
                                        t1 = false;
                                    case 226:
                                    case 227:
                                    case 228:
                                    case 229:
                                    case 230:
                                    case 231:
                                    case 232:
                                      if (state0 === 232 || state0 === 231 || state0 === 230 || state0 === 229 || state0 === 228 || state0 === 227 || state0 === 226 || state0 === 0 && t1)
                                        switch (state0) {
                                          case 0:
                                            t1 = this.game;
                                            t2 = this.get$x();
                                            t3 = this.get$y();
                                          case 226:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                            t1 = $.random(0, 1, false);
                                          case 227:
                                            state0 = 0;
                                          default:
                                            if (state0 === 229 || state0 === 228 || state0 === 0 && $.$$le$n(t1, 0.3) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this.get$x();
                                                  t3 = this.get$y();
                                                case 228:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                  t1 = this.game;
                                                  t5 = this.get$x();
                                                  t6 = this.get$y();
                                                case 229:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                              }
                                            else
                                              switch (state0) {
                                                case 0:
                                                  t1 = $.random(0, 1, false);
                                                case 230:
                                                  state0 = 0;
                                                default:
                                                  if (state0 === 232 || state0 === 231 || state0 === 0 && $.$$le$n(t1, 0.3) === true)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this.get$x();
                                                        t3 = this.get$y();
                                                      case 231:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                        t1 = this.game;
                                                        t5 = this.get$x();
                                                        t6 = this.get$y();
                                                      case 232:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                    }
                                              }
                                            t1 = this.game;
                                            if (t1.get$soundEffectsOn() === true)
                                              t1.get$sound().play$2("motherShipFire", 0.3);
                                        }
                                  }
                                else
                                  switch (state0) {
                                    case 0:
                                      t1 = this.difficulty;
                                    case 233:
                                      state0 = 0;
                                    default:
                                      if (state0 === 245 || state0 === 244 || state0 === 243 || state0 === 242 || state0 === 241 || state0 === 240 || state0 === 239 || state0 === 238 || state0 === 237 || state0 === 236 || state0 === 235 || state0 === 234 || state0 === 0 && $.$$eq$o(t1, 5) === true)
                                        switch (state0) {
                                          case 0:
                                            t1 = this.get$x();
                                          case 234:
                                            state0 = 0;
                                            t1 = $.$$add$n(t1, 16);
                                            t3 = this.game.get$ship().get$x();
                                          case 235:
                                            state0 = 0;
                                          default:
                                            if (state0 === 237 || state0 === 236 || state0 === 0 && $.$$ge$n(t1, t3) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.get$x();
                                                case 236:
                                                  state0 = 0;
                                                  t1 = $.$$sub$n(t1, 16);
                                                  t3 = this.game.get$ship().get$x();
                                                case 237:
                                                  state0 = 0;
                                                  t5 = $.$$le$n(t1, t3) === true;
                                                  t1 = t5;
                                              }
                                            else
                                              t1 = false;
                                          case 238:
                                            if (state0 === 238 || state0 === 0 && t1)
                                              switch (state0) {
                                                case 0:
                                                  t1 = $.random(0, 1, false);
                                                case 238:
                                                  state0 = 0;
                                                  t3 = $.$$le$n(t1, 0.2) === true;
                                                  t1 = t3;
                                              }
                                            else
                                              t1 = false;
                                          case 239:
                                          case 240:
                                          case 241:
                                          case 242:
                                          case 243:
                                          case 244:
                                          case 245:
                                            if (state0 === 245 || state0 === 244 || state0 === 243 || state0 === 242 || state0 === 241 || state0 === 240 || state0 === 239 || state0 === 0 && t1)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this.get$x();
                                                  t3 = this.get$y();
                                                case 239:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                  t1 = $.random(0, 1, false);
                                                case 240:
                                                  state0 = 0;
                                                default:
                                                  if (state0 === 242 || state0 === 241 || state0 === 0 && $.$$le$n(t1, 0.5) === true)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this.get$x();
                                                        t3 = this.get$y();
                                                      case 241:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                        t1 = this.game;
                                                        t5 = this.get$x();
                                                        t6 = this.get$y();
                                                      case 242:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                    }
                                                  else
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = $.random(0, 1, false);
                                                      case 243:
                                                        state0 = 0;
                                                      default:
                                                        if (state0 === 245 || state0 === 244 || state0 === 0 && $.$$le$n(t1, 0.5) === true)
                                                          switch (state0) {
                                                            case 0:
                                                              t1 = this.game;
                                                              t2 = this.get$x();
                                                              t3 = this.get$y();
                                                            case 244:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                              t1 = this.game;
                                                              t5 = this.get$x();
                                                              t6 = this.get$y();
                                                            case 245:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                          }
                                                    }
                                                  t1 = this.game;
                                                  if (t1.get$soundEffectsOn() === true)
                                                    t1.get$sound().play$2("motherShipFire", 0.3);
                                              }
                                        }
                                  }
                            }
                      }
                }
          }
        t1 = this.type;
      case 246:
        state0 = 0;
      case 247:
      case 248:
      case 249:
      case 250:
      case 251:
      case 252:
      case 253:
      case 254:
      case 255:
      case 256:
      case 257:
      case 258:
      case 259:
      case 260:
      case 261:
      case 262:
      case 263:
      case 264:
      case 265:
      case 266:
      case 267:
      case 268:
      case 269:
      case 270:
      case 271:
      case 272:
      case 273:
      case 274:
      case 275:
      case 276:
      case 277:
      case 278:
      case 279:
      case 280:
      case 281:
      case 282:
      case 283:
      case 284:
      case 285:
      case 286:
      case 287:
      case 288:
      case 289:
      case 290:
      case 291:
      case 292:
      case 293:
      case 294:
      case 295:
      case 296:
      case 297:
      case 298:
      case 299:
      case 300:
      case 301:
      case 302:
      case 303:
      case 304:
      case 305:
      case 306:
      case 307:
      case 308:
      case 309:
      case 310:
      case 311:
      case 312:
      case 313:
      case 314:
        if (state0 === 314 || state0 === 313 || state0 === 312 || state0 === 311 || state0 === 310 || state0 === 309 || state0 === 308 || state0 === 307 || state0 === 306 || state0 === 305 || state0 === 304 || state0 === 303 || state0 === 302 || state0 === 301 || state0 === 300 || state0 === 299 || state0 === 298 || state0 === 297 || state0 === 296 || state0 === 295 || state0 === 294 || state0 === 293 || state0 === 292 || state0 === 291 || state0 === 290 || state0 === 289 || state0 === 288 || state0 === 287 || state0 === 286 || state0 === 285 || state0 === 284 || state0 === 283 || state0 === 282 || state0 === 281 || state0 === 280 || state0 === 279 || state0 === 278 || state0 === 277 || state0 === 276 || state0 === 275 || state0 === 274 || state0 === 273 || state0 === 272 || state0 === 271 || state0 === 270 || state0 === 269 || state0 === 268 || state0 === 267 || state0 === 266 || state0 === 265 || state0 === 264 || state0 === 263 || state0 === 262 || state0 === 261 || state0 === 260 || state0 === 259 || state0 === 258 || state0 === 257 || state0 === 256 || state0 === 255 || state0 === 254 || state0 === 253 || state0 === 252 || state0 === 251 || state0 === 250 || state0 === 249 || state0 === 248 || state0 === 247 || state0 === 0 && $.$$eq$o(t1, "Normal") === true)
          switch (state0) {
            case 0:
              t1 = $.random(0, 1, false);
            case 247:
              state0 = 0;
              if ($.$$lt$n(t1, 0.0002) === true && $.$$eq$o(this.game.get$canEnemyFall(), true))
                this.momentum.set$yVel(140);
              t1 = this.health;
            case 248:
              state0 = 0;
            default:
              if (state0 === 252 || state0 === 251 || state0 === 250 || state0 === 249 || state0 === 0 && $.$$le$n(t1, 0) === true)
                switch (state0) {
                  case 0:
                    t1 = this.game;
                    t2 = t1.get$score();
                  case 249:
                    state0 = 0;
                    t4 = t1.get$pointMultiplier();
                    if (typeof t4 !== "number")
                      throw $.iae(t4);
                    t1.set$score($.$$add$n(t2, 100 * t4));
                    t1 = this.game;
                    t5 = t1.get$enemyAmount();
                  case 250:
                    state0 = 0;
                    t1.set$enemyAmount($.$$sub$n(t5, 1));
                    t1 = this.game.get$Stats();
                    t7 = $.getInterceptor$as(t1);
                    t8 = t7.$index(t1, "killed");
                  case 251:
                    state0 = 0;
                    t7.$indexSet(t1, "killed", $.$$add$n(t8, 1));
                    t1 = $.random(0, 1, false);
                  case 252:
                    state0 = 0;
                    if ($.$$gt$n(t1, 0.5) === true)
                      this.game.newBulletPowerUp$2(this.get$x(), this.get$y());
                    this.game.newMiniExplosion$2(this.get$x(), this.get$y());
                    this._removeFromGame = true;
                }
              t1 = this.get$y();
            case 253:
              state0 = 0;
              if ($.$$ge$n(t1, 350) === true && !this.yReset) {
                this.set$y(-350);
                this.yReset = true;
              }
              if (this.yReset) {
                t1 = this.game.get$goingRight();
                t2 = this.momentum;
                if (t1 === true)
                  t2.set$xVel(80);
                else
                  t2.set$xVel(-80);
              }
              t1 = this.get$y();
            case 254:
              state0 = 0;
              t3 = this.startY;
            case 255:
              state0 = 0;
              if ($.$$ge$n(t1, t3) === true && this.yReset) {
                this.momentum.set$yVel(0);
                this.set$y(this.startY);
                this.yReset = false;
              }
              t1 = $.random(0, 1, false);
            case 256:
              state0 = 0;
            case 257:
              if (state0 === 257 || state0 === 0 && $.$$le$n(t1, 0.01) === true && this.game.canEnemyFall$0())
                switch (state0) {
                  case 0:
                    t1 = this.momentum;
                    t2 = t1.get$yVel();
                  case 257:
                    state0 = 0;
                    t1.set$yVel($.$$mul$n(t2, -1));
                    this.isFalling = true;
                    this.yReset = false;
                }
              t1 = this.get$x();
            case 258:
              state0 = 0;
            case 259:
              if (state0 === 259 || state0 === 0 && $.$$gt$n($.$$add$n(t1, 16), this.game.get$rect().get$halfWidth()) !== true)
                switch (state0) {
                  case 0:
                    t1 = this.get$x();
                  case 259:
                    state0 = 0;
                    t3 = $.$$lt$n($.$$sub$n(t1, 16), -this.game.get$rect().get$halfWidth()) === true;
                    t1 = t3;
                }
              else
                t1 = true;
              if (t1)
                this.game.switchDirection$0();
            case 260:
              if (state0 === 260 || state0 === 0 && this.collidesWith$1(this.game.get$ship()))
                switch (state0) {
                  case 0:
                    this.game.get$_gameOverEvent().signal$0();
                    t1 = this.game;
                    if (t1.get$soundEffectsOn() === true)
                      t1.get$sound().play$1("sweep");
                    this._removeFromGame = true;
                    t1 = this.game.get$ship();
                    t2 = t1.get$lives();
                  case 260:
                    state0 = 0;
                    t1.set$lives($.$$sub$n(t2, 1));
                }
              t1 = this.get$x();
            case 261:
              state0 = 0;
              if ($.$$lt$n(t1, -this.game.get$rect().get$halfWidth()) === true)
                this.game.gameOver$0();
              t1 = this.difficulty;
            case 262:
              state0 = 0;
            case 263:
            case 264:
            case 265:
            case 266:
            case 267:
            case 268:
            case 269:
            case 270:
            case 271:
            case 272:
            case 273:
            case 274:
            case 275:
            case 276:
            case 277:
            case 278:
            case 279:
            case 280:
            case 281:
            case 282:
            case 283:
            case 284:
            case 285:
            case 286:
            case 287:
            case 288:
            case 289:
            case 290:
            case 291:
            case 292:
            case 293:
            case 294:
            case 295:
            case 296:
            case 297:
            case 298:
            case 299:
            case 300:
            case 301:
            case 302:
            case 303:
            case 304:
            case 305:
            case 306:
            case 307:
            case 308:
            case 309:
            case 310:
            case 311:
            case 312:
            case 313:
            case 314:
              if (state0 === 268 || state0 === 267 || state0 === 266 || state0 === 265 || state0 === 264 || state0 === 263 || state0 === 0 && $.$$eq$o(t1, 1) === true)
                switch (state0) {
                  case 0:
                    t1 = this.get$x();
                  case 263:
                    state0 = 0;
                    t1 = $.$$add$n(t1, 16);
                    t3 = this.game.get$ship().get$x();
                  case 264:
                    state0 = 0;
                  default:
                    if (state0 === 266 || state0 === 265 || state0 === 0 && $.$$ge$n(t1, t3) === true)
                      switch (state0) {
                        case 0:
                          t1 = this.get$x();
                        case 265:
                          state0 = 0;
                          t1 = $.$$sub$n(t1, 16);
                          t3 = this.game.get$ship().get$x();
                        case 266:
                          state0 = 0;
                          t5 = $.$$le$n(t1, t3) === true;
                          t1 = t5;
                      }
                    else
                      t1 = false;
                  case 267:
                    if (state0 === 267 || state0 === 0 && t1)
                      switch (state0) {
                        case 0:
                          t1 = $.random(0, 1, false);
                        case 267:
                          state0 = 0;
                          t3 = $.$$le$n(t1, 0.01) === true;
                          t1 = t3;
                      }
                    else
                      t1 = false;
                  case 268:
                    if (state0 === 268 || state0 === 0 && t1)
                      switch (state0) {
                        case 0:
                          t1 = this.game;
                          t2 = this.get$x();
                          t3 = this.get$y();
                        case 268:
                          state0 = 0;
                          t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                          t1 = this.game;
                          if (t1.get$soundEffectsOn() === true)
                            t1.get$sound().play$2("enemyFire", 0.3);
                      }
                }
              else
                switch (state0) {
                  case 0:
                    t1 = this.difficulty;
                  case 269:
                    state0 = 0;
                  default:
                    if (state0 === 275 || state0 === 274 || state0 === 273 || state0 === 272 || state0 === 271 || state0 === 270 || state0 === 0 && $.$$eq$o(t1, 2) === true)
                      switch (state0) {
                        case 0:
                          t1 = this.get$x();
                        case 270:
                          state0 = 0;
                          t1 = $.$$add$n(t1, 16);
                          t3 = this.game.get$ship().get$x();
                        case 271:
                          state0 = 0;
                        default:
                          if (state0 === 273 || state0 === 272 || state0 === 0 && $.$$ge$n(t1, t3) === true)
                            switch (state0) {
                              case 0:
                                t1 = this.get$x();
                              case 272:
                                state0 = 0;
                                t1 = $.$$sub$n(t1, 16);
                                t3 = this.game.get$ship().get$x();
                              case 273:
                                state0 = 0;
                                t5 = $.$$le$n(t1, t3) === true;
                                t1 = t5;
                            }
                          else
                            t1 = false;
                        case 274:
                          if (state0 === 274 || state0 === 0 && t1)
                            switch (state0) {
                              case 0:
                                t1 = $.random(0, 1, false);
                              case 274:
                                state0 = 0;
                                t3 = $.$$le$n(t1, 0.03) === true;
                                t1 = t3;
                            }
                          else
                            t1 = false;
                        case 275:
                          if (state0 === 275 || state0 === 0 && t1)
                            switch (state0) {
                              case 0:
                                t1 = this.game;
                                t2 = this.get$x();
                                t3 = this.get$y();
                              case 275:
                                state0 = 0;
                                t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                t1 = this.game;
                                if (t1.get$soundEffectsOn() === true)
                                  t1.get$sound().play$2("enemyFire", 0.3);
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                          t1 = this.difficulty;
                        case 276:
                          state0 = 0;
                        default:
                          if (state0 === 288 || state0 === 287 || state0 === 286 || state0 === 285 || state0 === 284 || state0 === 283 || state0 === 282 || state0 === 281 || state0 === 280 || state0 === 279 || state0 === 278 || state0 === 277 || state0 === 0 && $.$$eq$o(t1, 3) === true)
                            switch (state0) {
                              case 0:
                                t1 = this.get$x();
                              case 277:
                                state0 = 0;
                                t1 = $.$$add$n(t1, 16);
                                t3 = this.game.get$ship().get$x();
                              case 278:
                                state0 = 0;
                              default:
                                if (state0 === 280 || state0 === 279 || state0 === 0 && $.$$ge$n(t1, t3) === true)
                                  switch (state0) {
                                    case 0:
                                      t1 = this.get$x();
                                    case 279:
                                      state0 = 0;
                                      t1 = $.$$sub$n(t1, 16);
                                      t3 = this.game.get$ship().get$x();
                                    case 280:
                                      state0 = 0;
                                      t5 = $.$$le$n(t1, t3) === true;
                                      t1 = t5;
                                  }
                                else
                                  t1 = false;
                              case 281:
                                if (state0 === 281 || state0 === 0 && t1)
                                  switch (state0) {
                                    case 0:
                                      t1 = $.random(0, 1, false);
                                    case 281:
                                      state0 = 0;
                                      t3 = $.$$le$n(t1, 0.07) === true;
                                      t1 = t3;
                                  }
                                else
                                  t1 = false;
                              case 282:
                              case 283:
                              case 284:
                              case 285:
                              case 286:
                              case 287:
                              case 288:
                                if (state0 === 288 || state0 === 287 || state0 === 286 || state0 === 285 || state0 === 284 || state0 === 283 || state0 === 282 || state0 === 0 && t1)
                                  switch (state0) {
                                    case 0:
                                      t1 = this.game;
                                      t2 = this.get$x();
                                      t3 = this.get$y();
                                    case 282:
                                      state0 = 0;
                                      t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                      t1 = $.random(0, 1, false);
                                    case 283:
                                      state0 = 0;
                                    default:
                                      if (state0 === 285 || state0 === 284 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                                        switch (state0) {
                                          case 0:
                                            t1 = this.game;
                                            t2 = this.get$x();
                                            t3 = this.get$y();
                                          case 284:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                            t1 = this.game;
                                            t5 = this.get$x();
                                            t6 = this.get$y();
                                          case 285:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                        }
                                      else
                                        switch (state0) {
                                          case 0:
                                            t1 = $.random(0, 1, false);
                                          case 286:
                                            state0 = 0;
                                          default:
                                            if (state0 === 288 || state0 === 287 || state0 === 0 && $.$$le$n(t1, 0.1) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this.get$x();
                                                  t3 = this.get$y();
                                                case 287:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                  t1 = this.game;
                                                  t5 = this.get$x();
                                                  t6 = this.get$y();
                                                case 288:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                              }
                                        }
                                      t1 = this.game;
                                      if (t1.get$soundEffectsOn() === true)
                                        t1.get$sound().play$2("enemyFire", 0.3);
                                  }
                            }
                          else
                            switch (state0) {
                              case 0:
                                t1 = this.difficulty;
                              case 289:
                                state0 = 0;
                              default:
                                if (state0 === 301 || state0 === 300 || state0 === 299 || state0 === 298 || state0 === 297 || state0 === 296 || state0 === 295 || state0 === 294 || state0 === 293 || state0 === 292 || state0 === 291 || state0 === 290 || state0 === 0 && $.$$eq$o(t1, 4) === true)
                                  switch (state0) {
                                    case 0:
                                      t1 = this.get$x();
                                    case 290:
                                      state0 = 0;
                                      t1 = $.$$add$n(t1, 16);
                                      t3 = this.game.get$ship().get$x();
                                    case 291:
                                      state0 = 0;
                                    default:
                                      if (state0 === 293 || state0 === 292 || state0 === 0 && $.$$ge$n(t1, t3) === true)
                                        switch (state0) {
                                          case 0:
                                            t1 = this.get$x();
                                          case 292:
                                            state0 = 0;
                                            t1 = $.$$sub$n(t1, 16);
                                            t3 = this.game.get$ship().get$x();
                                          case 293:
                                            state0 = 0;
                                            t5 = $.$$le$n(t1, t3) === true;
                                            t1 = t5;
                                        }
                                      else
                                        t1 = false;
                                    case 294:
                                      if (state0 === 294 || state0 === 0 && t1)
                                        switch (state0) {
                                          case 0:
                                            t1 = $.random(0, 1, false);
                                          case 294:
                                            state0 = 0;
                                            t3 = $.$$le$n(t1, 0.1) === true;
                                            t1 = t3;
                                        }
                                      else
                                        t1 = false;
                                    case 295:
                                    case 296:
                                    case 297:
                                    case 298:
                                    case 299:
                                    case 300:
                                    case 301:
                                      if (state0 === 301 || state0 === 300 || state0 === 299 || state0 === 298 || state0 === 297 || state0 === 296 || state0 === 295 || state0 === 0 && t1)
                                        switch (state0) {
                                          case 0:
                                            t1 = this.game;
                                            t2 = this.get$x();
                                            t3 = this.get$y();
                                          case 295:
                                            state0 = 0;
                                            t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                            t1 = $.random(0, 1, false);
                                          case 296:
                                            state0 = 0;
                                          default:
                                            if (state0 === 298 || state0 === 297 || state0 === 0 && $.$$le$n(t1, 0.3) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this.get$x();
                                                  t3 = this.get$y();
                                                case 297:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                  t1 = this.game;
                                                  t5 = this.get$x();
                                                  t6 = this.get$y();
                                                case 298:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                              }
                                            else
                                              switch (state0) {
                                                case 0:
                                                  t1 = $.random(0, 1, false);
                                                case 299:
                                                  state0 = 0;
                                                default:
                                                  if (state0 === 301 || state0 === 300 || state0 === 0 && $.$$le$n(t1, 0.3) === true)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this.get$x();
                                                        t3 = this.get$y();
                                                      case 300:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                        t1 = this.game;
                                                        t5 = this.get$x();
                                                        t6 = this.get$y();
                                                      case 301:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                    }
                                              }
                                            t1 = this.game;
                                            if (t1.get$soundEffectsOn() === true)
                                              t1.get$sound().play$2("enemyFire", 0.3);
                                        }
                                  }
                                else
                                  switch (state0) {
                                    case 0:
                                      t1 = this.difficulty;
                                    case 302:
                                      state0 = 0;
                                    default:
                                      if (state0 === 314 || state0 === 313 || state0 === 312 || state0 === 311 || state0 === 310 || state0 === 309 || state0 === 308 || state0 === 307 || state0 === 306 || state0 === 305 || state0 === 304 || state0 === 303 || state0 === 0 && $.$$eq$o(t1, 5) === true)
                                        switch (state0) {
                                          case 0:
                                            t1 = this.get$x();
                                          case 303:
                                            state0 = 0;
                                            t1 = $.$$add$n(t1, 16);
                                            t3 = this.game.get$ship().get$x();
                                          case 304:
                                            state0 = 0;
                                          default:
                                            if (state0 === 306 || state0 === 305 || state0 === 0 && $.$$ge$n(t1, t3) === true)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.get$x();
                                                case 305:
                                                  state0 = 0;
                                                  t1 = $.$$sub$n(t1, 16);
                                                  t3 = this.game.get$ship().get$x();
                                                case 306:
                                                  state0 = 0;
                                                  t5 = $.$$le$n(t1, t3) === true;
                                                  t1 = t5;
                                              }
                                            else
                                              t1 = false;
                                          case 307:
                                            if (state0 === 307 || state0 === 0 && t1)
                                              switch (state0) {
                                                case 0:
                                                  t1 = $.random(0, 1, false);
                                                case 307:
                                                  state0 = 0;
                                                  t3 = $.$$le$n(t1, 0.2) === true;
                                                  t1 = t3;
                                              }
                                            else
                                              t1 = false;
                                          case 308:
                                          case 309:
                                          case 310:
                                          case 311:
                                          case 312:
                                          case 313:
                                          case 314:
                                            if (state0 === 314 || state0 === 313 || state0 === 312 || state0 === 311 || state0 === 310 || state0 === 309 || state0 === 308 || state0 === 0 && t1)
                                              switch (state0) {
                                                case 0:
                                                  t1 = this.game;
                                                  t2 = this.get$x();
                                                  t3 = this.get$y();
                                                case 308:
                                                  state0 = 0;
                                                  t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                  t1 = $.random(0, 1, false);
                                                case 309:
                                                  state0 = 0;
                                                default:
                                                  if (state0 === 311 || state0 === 310 || state0 === 0 && $.$$le$n(t1, 0.5) === true)
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = this.game;
                                                        t2 = this.get$x();
                                                        t3 = this.get$y();
                                                      case 310:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                        t1 = this.game;
                                                        t5 = this.get$x();
                                                        t6 = this.get$y();
                                                      case 311:
                                                        state0 = 0;
                                                        t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
                                                    }
                                                  else
                                                    switch (state0) {
                                                      case 0:
                                                        t1 = $.random(0, 1, false);
                                                      case 312:
                                                        state0 = 0;
                                                      default:
                                                        if (state0 === 314 || state0 === 313 || state0 === 0 && $.$$le$n(t1, 0.5) === true)
                                                          switch (state0) {
                                                            case 0:
                                                              t1 = this.game;
                                                              t2 = this.get$x();
                                                              t3 = this.get$y();
                                                            case 313:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t2, $.$$add$n(t3, 16), "left", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                              t1 = this.game;
                                                              t5 = this.get$x();
                                                              t6 = this.get$y();
                                                            case 314:
                                                              state0 = 0;
                                                              t1.addEntity$1($.Bullet$(t1, t5, $.$$add$n(t6, 16), "right", $.random(350, 400, false), $.random(8, 16, false), "exploding"));
                                                          }
                                                    }
                                                  t1 = this.game;
                                                  if (t1.get$soundEffectsOn() === true)
                                                    t1.get$sound().play$2("enemyFire", 0.3);
                                              }
                                        }
                                  }
                            }
                      }
                }
          }
        $.GameEntity.prototype.update$0.call(this);
    }
  },
  Enemy$5: function(game, x, y, diff, Type) {
    $.random(0, 1, false);
    this.creationTime = game.get$timer().get$gameTime();
    this.type = Type;
    this.difficulty = diff;
    if ($.$$eq$o(this.type, "Normal") === true)
      this.color = "255, 0, 255";
    if ($.$$eq$o(this.type, "MotherShip") === true)
      this.color = "0, 0, 255";
    if ($.$$eq$o(this.type, "Normal") === true)
      this.momentum.set$xVel(80);
    if ($.$$eq$o(this.type, "MotherShip") === true)
      this.momentum.set$xVel(40);
    if ($.$$eq$o(this.type, "Boss") === true)
      this.momentum.set$xVel(0);
    if ($.$$eq$o(this.type, "Drone") === true)
      this.momentum.set$xVel(80);
    if ($.$$eq$o(this.type, "Normal") === true)
      this.health = this.difficulty;
    if ($.$$eq$o(this.type, "MotherShip") === true)
      this.health = 3;
    if ($.$$eq$o(this.type, "Boss") === true) {
      this.set$width(72);
      this.set$height(72);
      this.health = this.bossHealth;
    }
    if ($.$$eq$o(this.type, "Drone") === true) {
      this.set$width(16);
      this.set$height(16);
      this.health = this.bossDifficulty;
    }
    this.maxHp = this.health;
    this.bossMaxHp = this.bossHealth;
    this.bossDifficulty = $.$$div$n(game.get$level(), 3);
    this.startY = y;
  },
  $isEnemy: true
};

$$.PowerUp = {"": "GameEntity;type=,creationTime,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2;
    if ($.$$eq$o(this.game.get$state(), 2) === true || $.$$eq$o(this.game.get$state(), 4) === true || $.$$eq$o(this.game.get$state(), 1) === true)
      return;
    if ($.$$eq$o(this.type, "bulletPower") === true) {
      t1 = $.$$gt$n(this.game.get$ship().get$x(), this.get$x());
      t2 = this.momentum;
      if (t1 === true)
        t2.set$xVel(40);
      else
        t2.set$xVel(-40);
    }
    if (this.collidesWith$1(this.game.get$ship())) {
      switch (this.type) {
        case "SpiralShot":
          this.SpiralUpdate$0();
          break;
        case "Multiplier":
          t1 = this.game;
          t1.set$pointMultiplier($.$$mul$n(t1.get$pointMultiplier(), 2));
          break;
        case "BulletIncrease":
          t1 = this.game.get$ship();
          t1.set$maxBullet($.$$add$n(t1.get$maxBullet(), 1));
          break;
        case "ExtraLife":
          t1 = this.game.get$ship();
          t1.set$lives($.$$add$n(t1.get$lives(), 1));
          break;
        case "bulletPower":
          t1 = this.game.get$ship();
          t1.set$bulletPower($.$$add$n(t1.get$bulletPower(), 1));
          break;
      }
      t1 = this.game;
      if (t1.get$soundEffectsOn() === true)
        t1.get$sound().play$1("powerUp");
      this._removeFromGame = true;
    }
    if ($.$$gt$n(this.get$y(), this.game.get$rect().get$halfHeight() + 20) === true)
      this._removeFromGame = true;
    $.GameEntity.prototype.update$0.call(this);
  },
  SpiralUpdate$0: function() {
    var t1, t2, t3;
    t1 = this.game;
    t2 = t1.get$score();
    t3 = t1.get$pointMultiplier();
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t1.set$score($.$$add$n(t2, 100 * t3));
    t1 = this.game.get$ship();
    if (t1.get$spiralShot() === true) {
      t1.set$superSpiral(true);
      this.game.get$ship().set$spiralShot(false);
    }
    t1 = this.game.get$ship();
    if (t1.get$spiralShot() !== true)
      t1.set$spiralShot(true);
  },
  PowerUp$4: function(game, x, y, Type) {
    var rType, t1, rColor;
    rType = $.random(0, 1, false);
    this.creationTime = game.get$timer().get$gameTime();
    t1 = $.getInterceptor$n(rType);
    if (t1.$lt(rType, 0.2) === true) {
      this.color = "0, 255, 0";
      this.type = "SpiralShot";
    } else if (t1.$lt(rType, 0.4) === true) {
      this.color = "255, 0, 0";
      this.type = "Multiplier";
    } else if (t1.$lt(rType, 0.6) === true) {
      this.color = "0, 0, 255";
      this.type = "BulletIncrease";
    } else if (t1.$lt(rType, 1) === true) {
      this.color = "255, 255, 0";
      this.type = "ExtraLife";
    }
    if (Type != null) {
      this.type = Type;
      if ($.$$eq$o(this.type, "bulletPower") === true) {
        rColor = $.random(0, 1, false);
        t1 = $.getInterceptor$n(rColor);
        if (t1.$lt(rColor, 0.2) === true)
          this.color = "0, 255, 0";
        else if (t1.$lt(rColor, 0.4) === true)
          this.color = "0, 255, 255";
        else if (t1.$lt(rColor, 0.6) === true)
          this.color = "0, 0, 255";
        else if (t1.$lt(rColor, 0.1) === true)
          this.color = "255, 255, 0";
        this.set$width(12);
        this.set$height(12);
      }
    }
    this.momentum.set$yVel(65);
  },
  $isPowerUp: true
};

$$.Bullet = {"": "GameEntity;temp,startX,Type,_deleteTimer,_waiting=,farRight,farLeft,right=,left=,straight,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t2, t3, t5;
    t1 = this.game.get$state();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(1, t1);
    if (t1 !== 2) {
      t1 = this.game.get$state();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(2, t1);
      if (t1 !== 4) {
        t1 = this.game.get$state();
        if (typeof t1 !== "number")
          return this.update$0$bailout1(3, t1);
        t1 = t1 === 1;
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1)
      return;
    $.GameEntity.prototype.update$0.call(this);
    t1 = this.Type;
    if (typeof t1 !== "string")
      return this.update$0$bailout1(4, t1);
    if (t1 === "exploding")
      this._deleteTimer = $.Timer_Timer$repeating($.CONSTANT19, new $.Bullet_update_anon(this));
    if (this.right === true)
      this.momentum.set$xVel(40);
    else if (this.left === true)
      this.momentum.set$xVel(-40);
    else if (this.straight === true)
      this.momentum.set$xVel(0);
    else if (this.farLeft === true)
      this.momentum.set$xVel(-60);
    else if (this.farRight === true)
      this.momentum.set$xVel(60);
    t1 = this.get$width();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(5, t1);
    if (!(t1 <= 0)) {
      t1 = this.get$height();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(6, t1);
      t1 = t1 <= 0;
    } else
      t1 = true;
    if (t1) {
      t1 = this.momentum.get$yVel();
      if (typeof t1 !== "number")
        return this.update$0$bailout1(7, t1);
      if (t1 > 0) {
        t1 = this.game;
        t2 = t1.get$score();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(8, t1, t2);
        t1.set$score(t2 + 100);
      }
      this._removeFromGame = true;
    }
    if (this.game.get$ship().get$spiralShot() === true)
      if (this.right === true) {
        t1 = this.startX;
        t3 = this.get$x();
        t5 = this.get$width();
        if (typeof t5 !== "number")
          return this.update$0$bailout1(11, t1, 0, t3, t5);
        if (typeof t3 !== "number")
          return this.update$0$bailout1(10, t1, 0, t3);
        if (typeof t1 !== "number")
          return this.update$0$bailout1(9, t1);
        t1 = t1 < t3 - t5 / 2 - 25;
      } else
        t1 = false;
    else
      t1 = false;
    if (t1) {
      this.right = false;
      this.left = true;
    } else {
      if (this.game.get$ship().get$spiralShot() === true)
        if (this.left === true) {
          t1 = this.startX;
          t3 = this.get$x();
          t5 = this.get$width();
          if (typeof t5 !== "number")
            return this.update$0$bailout1(14, t1, 0, t3, t5);
          if (typeof t3 !== "number")
            return this.update$0$bailout1(13, t1, 0, t3);
          if (typeof t1 !== "number")
            return this.update$0$bailout1(12, t1);
          t1 = t1 > t3 + t5 / 2 + 25;
        } else
          t1 = false;
      else
        t1 = false;
      if (t1) {
        this.left = false;
        this.right = true;
      } else {
        if (this.game.get$ship().get$spiralShot() === true)
          if (this.farLeft === true) {
            t1 = this.startX;
            t3 = this.get$x();
            t5 = this.get$width();
            if (typeof t5 !== "number")
              return this.update$0$bailout1(17, t1, 0, t3, t5);
            if (typeof t3 !== "number")
              return this.update$0$bailout1(16, t1, 0, t3);
            if (typeof t1 !== "number")
              return this.update$0$bailout1(15, t1);
            t1 = t1 > t3 + t5 / 2 + 40;
          } else
            t1 = false;
        else
          t1 = false;
        if (t1) {
          this.farLeft = false;
          this.farRight = true;
        } else {
          if (this.game.get$ship().get$spiralShot() === true)
            if (this.farRight === true) {
              t1 = this.startX;
              t3 = this.get$x();
              t5 = this.get$width();
              if (typeof t5 !== "number")
                return this.update$0$bailout1(20, t1, 0, t3, t5);
              if (typeof t3 !== "number")
                return this.update$0$bailout1(19, t1, 0, t3);
              if (typeof t1 !== "number")
                return this.update$0$bailout1(18, t1);
              t1 = t1 > t3 + t5 / 2 + 40;
            } else
              t1 = false;
          else
            t1 = false;
          if (t1) {
            this.farRight = false;
            this.farLeft = true;
          }
        }
      }
    }
    t1 = this.get$y();
    t3 = this.game.get$rect().get$halfHeight();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(21, t1);
    if (t1 < -t3) {
      t1 = this.game.get$ship();
      t2 = t1.get$bullet();
      if (typeof t2 !== "number")
        return this.update$0$bailout1(22, t2);
      if (t2 < 3)
        t1.set$bullet(t2 + 1);
      this._removeFromGame = true;
    }
    t1 = this.momentum.get$yVel();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(24, t1);
    if (t1 !== 0)
      $.forEach$1$a($.toList$0$a($.where$1$a(this.game.get$entities(), new $.Bullet_update_anon0(this))), new $.Bullet_update_anon1(this));
    t1 = this.momentum.get$yVel();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(25, t1);
    if (t1 < 0)
      $.forEach$1$a($.toList$0$a($.where$1$a(this.game.get$entities(), new $.Bullet_update_anon2(this))), new $.Bullet_update_anon3(this));
    t1 = this.momentum.get$yVel();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(26, t1);
    if (t1 > 0)
      $.forEach$1$a($.toList$0$a($.where$1$a(this.game.get$entities(), new $.Bullet_update_anon4(this))), new $.Bullet_update_anon5(this));
  },
  update$0$bailout1: function(state0, t1, t2, t3, t5) {
    switch (state0) {
      case 0:
        t1 = this.game.get$state();
      case 1:
        state0 = 0;
      default:
        if (state0 === 3 || state0 === 2 || state0 === 0 && $.$$eq$o(t1, 2) !== true)
          switch (state0) {
            case 0:
              t1 = this.game.get$state();
            case 2:
              state0 = 0;
            case 3:
              if (state0 === 3 || state0 === 0 && $.$$eq$o(t1, 4) !== true)
                switch (state0) {
                  case 0:
                    t1 = this.game.get$state();
                  case 3:
                    state0 = 0;
                    t3 = $.$$eq$o(t1, 1) === true;
                    t1 = t3;
                }
              else
                t1 = true;
          }
        else
          t1 = true;
        if (t1)
          return;
        $.GameEntity.prototype.update$0.call(this);
        t1 = this.Type;
      case 4:
        state0 = 0;
        if ($.$$eq$o(t1, "exploding") === true)
          this._deleteTimer = $.Timer_Timer$repeating($.CONSTANT19, new $.Bullet_update_anon(this));
        if (this.right === true)
          this.momentum.set$xVel(40);
        else if (this.left === true)
          this.momentum.set$xVel(-40);
        else if (this.straight === true)
          this.momentum.set$xVel(0);
        else if (this.farLeft === true)
          this.momentum.set$xVel(-60);
        else if (this.farRight === true)
          this.momentum.set$xVel(60);
        t1 = this.get$width();
      case 5:
        state0 = 0;
      case 6:
        if (state0 === 6 || state0 === 0 && $.$$le$n(t1, 0) !== true)
          switch (state0) {
            case 0:
              t1 = this.get$height();
            case 6:
              state0 = 0;
              t3 = $.$$le$n(t1, 0) === true;
              t1 = t3;
          }
        else
          t1 = true;
      case 7:
      case 8:
        if (state0 === 8 || state0 === 7 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              t1 = this.momentum.get$yVel();
            case 7:
              state0 = 0;
            case 8:
              if (state0 === 8 || state0 === 0 && $.$$gt$n(t1, 0) === true)
                switch (state0) {
                  case 0:
                    t1 = this.game;
                    t2 = t1.get$score();
                  case 8:
                    state0 = 0;
                    t1.set$score($.$$add$n(t2, 100));
                }
              this._removeFromGame = true;
          }
      case 9:
      case 10:
      case 11:
        if (state0 === 11 || state0 === 10 || state0 === 9 || state0 === 0 && this.game.get$ship().get$spiralShot() === true)
          switch (state0) {
            case 0:
            default:
              if (state0 === 11 || state0 === 10 || state0 === 9 || state0 === 0 && this.right === true)
                switch (state0) {
                  case 0:
                    t1 = this.startX;
                  case 9:
                    state0 = 0;
                    t3 = this.get$x();
                  case 10:
                    state0 = 0;
                    t5 = this.get$width();
                  case 11:
                    state0 = 0;
                    t7 = $.$$lt$n(t1, $.$$sub$n($.$$sub$n(t3, $.$$div$n(t5, 2)), 25)) === true;
                    t1 = t7;
                }
              else
                t1 = false;
          }
        else
          t1 = false;
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
        if (state0 === 0 && t1) {
          this.right = false;
          this.left = true;
        } else
          switch (state0) {
            case 0:
            default:
              if (state0 === 14 || state0 === 13 || state0 === 12 || state0 === 0 && this.game.get$ship().get$spiralShot() === true)
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 14 || state0 === 13 || state0 === 12 || state0 === 0 && this.left === true)
                      switch (state0) {
                        case 0:
                          t1 = this.startX;
                        case 12:
                          state0 = 0;
                          t3 = this.get$x();
                        case 13:
                          state0 = 0;
                          t5 = this.get$width();
                        case 14:
                          state0 = 0;
                          t7 = $.$$gt$n(t1, $.$$add$n($.$$add$n(t3, $.$$div$n(t5, 2)), 25)) === true;
                          t1 = t7;
                      }
                    else
                      t1 = false;
                }
              else
                t1 = false;
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
              if (state0 === 0 && t1) {
                this.left = false;
                this.right = true;
              } else
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 17 || state0 === 16 || state0 === 15 || state0 === 0 && this.game.get$ship().get$spiralShot() === true)
                      switch (state0) {
                        case 0:
                        default:
                          if (state0 === 17 || state0 === 16 || state0 === 15 || state0 === 0 && this.farLeft === true)
                            switch (state0) {
                              case 0:
                                t1 = this.startX;
                              case 15:
                                state0 = 0;
                                t3 = this.get$x();
                              case 16:
                                state0 = 0;
                                t5 = this.get$width();
                              case 17:
                                state0 = 0;
                                t7 = $.$$gt$n(t1, $.$$add$n($.$$add$n(t3, $.$$div$n(t5, 2)), 40)) === true;
                                t1 = t7;
                            }
                          else
                            t1 = false;
                      }
                    else
                      t1 = false;
                  case 18:
                  case 19:
                  case 20:
                    if (state0 === 0 && t1) {
                      this.farLeft = false;
                      this.farRight = true;
                    } else
                      switch (state0) {
                        case 0:
                        default:
                          if (state0 === 20 || state0 === 19 || state0 === 18 || state0 === 0 && this.game.get$ship().get$spiralShot() === true)
                            switch (state0) {
                              case 0:
                              default:
                                if (state0 === 20 || state0 === 19 || state0 === 18 || state0 === 0 && this.farRight === true)
                                  switch (state0) {
                                    case 0:
                                      t1 = this.startX;
                                    case 18:
                                      state0 = 0;
                                      t3 = this.get$x();
                                    case 19:
                                      state0 = 0;
                                      t5 = this.get$width();
                                    case 20:
                                      state0 = 0;
                                      t7 = $.$$gt$n(t1, $.$$add$n($.$$add$n(t3, $.$$div$n(t5, 2)), 40)) === true;
                                      t1 = t7;
                                  }
                                else
                                  t1 = false;
                            }
                          else
                            t1 = false;
                          if (t1) {
                            this.farRight = false;
                            this.farLeft = true;
                          }
                      }
                }
          }
        t1 = this.get$y();
      case 21:
        state0 = 0;
      case 22:
      case 23:
        if (state0 === 23 || state0 === 22 || state0 === 0 && $.$$lt$n(t1, -this.game.get$rect().get$halfHeight()) === true)
          switch (state0) {
            case 0:
              t1 = this.game.get$ship().get$bullet();
            case 22:
              state0 = 0;
            case 23:
              if (state0 === 23 || state0 === 0 && $.$$lt$n(t1, 3) === true)
                switch (state0) {
                  case 0:
                    t1 = this.game.get$ship();
                    t2 = t1.get$bullet();
                  case 23:
                    state0 = 0;
                    t1.set$bullet($.$$add$n(t2, 1));
                }
              this._removeFromGame = true;
          }
        t1 = this.momentum.get$yVel();
      case 24:
        state0 = 0;
        if ($.$$eq$o(t1, 0) !== true)
          $.forEach$1$a($.toList$0$a($.where$1$a(this.game.get$entities(), new $.Bullet_update_anon0(this))), new $.Bullet_update_anon1(this));
        t1 = this.momentum.get$yVel();
      case 25:
        state0 = 0;
        if ($.$$lt$n(t1, 0) === true)
          $.forEach$1$a($.toList$0$a($.where$1$a(this.game.get$entities(), new $.Bullet_update_anon2(this))), new $.Bullet_update_anon3(this));
        t1 = this.momentum.get$yVel();
      case 26:
        var t7;
        state0 = 0;
        if ($.$$gt$n(t1, 0) === true)
          $.forEach$1$a($.toList$0$a($.where$1$a(this.game.get$entities(), new $.Bullet_update_anon4(this))), new $.Bullet_update_anon5(this));
    }
  },
  Bullet$7: function(game, x, y, dir, yVel, size, type) {
    var t1;
    this.color = "255, 0, 0";
    this.momentum.set$yVel(yVel);
    this.startX = x;
    t1 = $.getInterceptor(dir);
    if (t1.$eq(dir, "right") === true)
      this.right = true;
    else if (t1.$eq(dir, "left") === true)
      this.left = true;
    else if (t1.$eq(dir, "straight") === true)
      this.straight = true;
    else if (t1.$eq(dir, "farLeft") === true)
      this.farLeft = true;
    else if (t1.$eq(dir, "farRight") === true)
      this.farRight = true;
    this.Type = type;
    if ($.$$ge$n(size, 36) === true)
      ;
  },
  $isBullet: true
};

$$.Stars = {"": "GameEntity;game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t3;
    t1 = this.game.get$state();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(1, t1);
    if (t1 === 2)
      return;
    t1 = this.get$y();
    t3 = this.game.get$rect().get$halfWidth();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(2, t1);
    if (t1 > t3)
      this._removeFromGame = true;
    $.GameEntity.prototype.update$0.call(this);
  },
  update$0$bailout1: function(state0, t1) {
    switch (state0) {
      case 0:
        t1 = this.game.get$state();
      case 1:
        state0 = 0;
        if ($.$$eq$o(t1, 2) === true)
          return;
        t1 = this.get$y();
      case 2:
        state0 = 0;
        if ($.$$gt$n(t1, this.game.get$rect().get$halfWidth()) === true)
          this._removeFromGame = true;
        $.GameEntity.prototype.update$0.call(this);
    }
  },
  Stars$6: function(game, x, y, h, w, col) {
    var t1;
    this.opacity = $.random(0.5, 1, false);
    t1 = $.getInterceptor(col);
    if (t1.$eq(col, 1) === true)
      this.color = "204, 0, 51";
    if (t1.$eq(col, 2) === true)
      this.color = "102, 255, 51";
    if (t1.$eq(col, 3) === true)
      this.color = "51, 104, 204";
    if (t1.$eq(col, 4) === true)
      this.color = "105, 255, 105";
    if (t1.$eq(col, 5) === true)
      this.color = "204, 255, 51";
    if (t1.$eq(col, 6) === true)
      this.color = "255, 102, 153";
    if (t1.$eq(col, 7) === true)
      this.color = "255, 153, 51";
    t1 = $.random(50, 75, false);
    this.momentum.set$yVel(t1);
  },
  $isStars: true
};

$$.Particles = {"": "GameEntity;_deleteTimer,_waiting=,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  update$0: function() {
    var t1, t3;
    t1 = this.game.get$state();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(1, t1);
    if (t1 === 2)
      return;
    this._deleteTimer = $.Timer_Timer$repeating($.CONSTANT19, new $.Particles_update_anon(this));
    t1 = this.get$y();
    t3 = this.game.get$rect().get$halfHeight();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(2, t1);
    if (t1 > t3)
      this._removeFromGame = true;
    t1 = this.get$y();
    t3 = this.game.get$rect().get$halfHeight();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(3, t1);
    if (t1 < -t3)
      this._removeFromGame = true;
    t1 = this.get$x();
    t3 = this.game.get$rect().get$halfWidth();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(4, t1);
    if (t1 > t3)
      this._removeFromGame = true;
    t1 = this.get$x();
    t3 = this.game.get$rect().get$halfWidth();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(5, t1);
    if (t1 < -t3)
      this._removeFromGame = true;
    $.GameEntity.prototype.update$0.call(this);
  },
  update$0$bailout1: function(state0, t1) {
    switch (state0) {
      case 0:
        t1 = this.game.get$state();
      case 1:
        state0 = 0;
        if ($.$$eq$o(t1, 2) === true)
          return;
        this._deleteTimer = $.Timer_Timer$repeating($.CONSTANT19, new $.Particles_update_anon(this));
        t1 = this.get$y();
      case 2:
        state0 = 0;
        if ($.$$gt$n(t1, this.game.get$rect().get$halfHeight()) === true)
          this._removeFromGame = true;
        t1 = this.get$y();
      case 3:
        state0 = 0;
        if ($.$$lt$n(t1, -this.game.get$rect().get$halfHeight()) === true)
          this._removeFromGame = true;
        t1 = this.get$x();
      case 4:
        state0 = 0;
        if ($.$$gt$n(t1, this.game.get$rect().get$halfWidth()) === true)
          this._removeFromGame = true;
        t1 = this.get$x();
      case 5:
        state0 = 0;
        if ($.$$lt$n(t1, -this.game.get$rect().get$halfWidth()) === true)
          this._removeFromGame = true;
        $.GameEntity.prototype.update$0.call(this);
    }
  },
  Particles$8: function(game, x, y, h, w, col, xV, yV) {
    var t1;
    this.opacity = $.random(0.5, 1, false);
    t1 = $.getInterceptor(col);
    if (t1.$eq(col, 1) === true)
      this.color = "204, 0, 51";
    if (t1.$eq(col, 2) === true)
      this.color = "102, 255, 51";
    if (t1.$eq(col, 3) === true)
      this.color = "51, 104, 204";
    if (t1.$eq(col, 4) === true)
      this.color = "105, 255, 105";
    if (t1.$eq(col, 5) === true)
      this.color = "204, 255, 51";
    if (t1.$eq(col, 6) === true)
      this.color = "255, 102, 153";
    if (t1.$eq(col, 7) === true)
      this.color = "255, 153, 51";
    this.momentum.set$yVel(yV);
    this.momentum.set$xVel(xV);
  }
};

$$.Game = {"": "Object;entities>,timer>,clockTick=,rect>,sound>,input>,renderer>,loop<,bgStyle=,showOutlines>",
  start$0: function() {
    $.Primitives_printString("starting game");
    this.input.start$0();
    this.loop.start$1(new $.Game_start_anon(this));
  },
  addEntity$1: function(entity) {
    $.add$1$a(this.entities, entity);
  },
  enableEntitiesByGroup$1: function(groupId) {
    $.forEach$1$a($.where$1$a(this.entities, new $.Game_enableEntitiesByGroup_anon(groupId)), new $.Game_enableEntitiesByGroup_anon0());
  },
  disableEntitiesByGroup$1: function(groupId) {
    $.forEach$1$a($.where$1$a(this.entities, new $.Game_disableEntitiesByGroup_anon(groupId)), new $.Game_disableEntitiesByGroup_anon0());
  },
  removeEntitiesByGroup$1: function(groupId) {
    $.forEach$1$a($.toList$0$a($.where$1$a(this.entities, new $.Game_removeEntitiesByGroup_anon(groupId))), new $.Game_removeEntitiesByGroup_anon0());
  },
  removeEntitiesByFilter$1: function(f) {
    $.forEach$1$a($.toList$0$a($.where$1$a(this.entities, new $.Game_removeEntitiesByFilter_anon(f))), new $.Game_removeEntitiesByFilter_anon0());
  },
  update$0: function() {
    var t1, i;
    $.get$length$as(this.entities);
    for (t1 = $.get$iterator$a($.toList$0$a($.where$1$a(this.entities, new $.Game_update_anon()))); t1.moveNext$0() === true;)
      t1.get$current().update$0();
    t1 = $.get$length$as(this.entities);
    if (typeof t1 !== "number")
      return this.update$0$bailout(1, t1);
    i = t1 - 1;
    for (; i >= 0; --i) {
      t1 = this.entities;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.update$0$bailout(2, $.CONSTANT15, i, t1);
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      if (t1[i].get$_removeFromGame() === true)
        $.removeRange$2$a(t1, i, 1);
    }
  },
  update$0$bailout: function(state0, t1, i, t2) {
    switch (state0) {
      case 0:
        $.get$length$as(this.entities);
        for (t1 = $.get$iterator$a($.toList$0$a($.where$1$a(this.entities, new $.Game_update_anon()))); t1.moveNext$0() === true;)
          t1.get$current().update$0();
        t1 = $.get$length$as(this.entities);
      case 1:
        state0 = 0;
        i = $.$$sub$n(t1, 1);
      case 2:
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = $.getInterceptor$n(i);
                if (!(t1.$ge(i, 0) === true))
                  break L0;
                t2 = this.entities;
              case 2:
                state0 = 0;
                if ($.$$index$as(t2, i).get$_removeFromGame() === true)
                  $.removeRange$2$a(this.entities, i, 1);
                i = t1.$sub(i, 1);
            }
    }
  },
  Game$withServices$4: function(sound, input, renderer, loop) {
    var t1;
    this.timer = $.GameTimer$();
    this.entities = $.List_List(0);
    t1 = this.renderer;
    this.rect = t1.rect;
    this.input.game = this;
    t1.set$game(this);
  }
};

$$.GameTimer = {"": "Object;gameTime=,wallLastTimestamp,fps>,fpsSampleRate,timeDecrease<",
  tick$0: function() {
    var wallCurrent, wallDelta, t1, gameDelta, t2;
    wallCurrent = $.DateTime$_now().millisecondsSinceEpoch;
    wallDelta = $.$$div$n($.$$sub$n(wallCurrent, this.wallLastTimestamp), 1000);
    this.wallLastTimestamp = wallCurrent;
    t1 = this.fps;
    this.fps = t1 + (1 / wallDelta - t1) / this.fpsSampleRate;
    gameDelta = $.min(wallDelta, 0.05);
    t1 = this.timeDecrease;
    t2 = this.gameTime;
    if (t1 !== true)
      this.gameTime = $.$$add$n(t2, gameDelta);
    else
      this.gameTime = $.$$sub$n(t2, gameDelta);
    return gameDelta;
  }
};

$$.GameEntity = {"": "Object;game>,isHighlighted>,soundReady=,id=,groupId>,box>,_removeFromGame=,radius>,momentum>,enabled=,opacity=,color>,fill>",
  update$0: function() {
    var t1, t2, t3, t5, t7, t9, t11;
    t1 = this.previousBox;
    t2 = this.box;
    if (t1 == null)
      this.previousBox = $.Rectangle$clone(t2);
    else
      t1.updateFrom$1(t2);
    if (this.enabled !== true)
      return;
    this.momentum.update$1(this.game.get$clockTick());
    t1 = this.get$x();
    t3 = this.momentum.get$xVel();
    t5 = this.game.get$clockTick();
    if (typeof t3 !== "number")
      return this.update$0$bailout(2, t1, t3);
    if (typeof t5 !== "number")
      return this.update$0$bailout(3, t1, t3, t5);
    if (typeof t1 !== "number")
      return this.update$0$bailout(1, t1);
    this.set$x(t1 + t3 * t5);
    t7 = this.get$y();
    t9 = this.momentum.get$yVel();
    t11 = this.game.get$clockTick();
    if (typeof t9 !== "number")
      return this.update$0$bailout(5, 0, 0, 0, t7, t9);
    if (typeof t11 !== "number")
      return this.update$0$bailout(6, 0, 0, 0, t7, t9, t11);
    if (typeof t7 !== "number")
      return this.update$0$bailout(4, 0, 0, 0, t7);
    this.set$y(t7 + t9 * t11);
    this.updateBox$0();
  },
  update$0$bailout: function(state0, t1, t3, t5, t7, t9, t11) {
    switch (state0) {
      case 0:
        t1 = this.previousBox;
        t2 = this.box;
        if (t1 == null)
          this.previousBox = $.Rectangle$clone(t2);
        else
          t1.updateFrom$1(t2);
        if (this.enabled !== true)
          return;
        this.momentum.update$1(this.game.get$clockTick());
        t1 = this.get$x();
      case 1:
        state0 = 0;
        t3 = this.momentum.get$xVel();
      case 2:
        state0 = 0;
        t5 = this.game.get$clockTick();
      case 3:
        state0 = 0;
        this.set$x($.$$add$n(t1, $.$$mul$n(t3, t5)));
        t7 = this.get$y();
      case 4:
        state0 = 0;
        t9 = this.momentum.get$yVel();
      case 5:
        state0 = 0;
        t11 = this.game.get$clockTick();
      case 6:
        var t2;
        state0 = 0;
        this.set$y($.$$add$n(t7, $.$$mul$n(t9, t11)));
        this.updateBox$0();
    }
  },
  get$x: function() {
    return this._x;
  },
  set$x: function(value) {
    this._x = value;
    this.updateBox$0();
  },
  get$y: function() {
    return this._y;
  },
  set$y: function(value) {
    this._y = value;
    this.updateBox$0();
  },
  get$width: function() {
    return this._width;
  },
  set$width: function(value) {
    this._width = value;
    this.updateBox$0();
  },
  get$height: function() {
    return this._height;
  },
  set$height: function(value) {
    this._height = value;
    this.updateBox$0();
  },
  updateBox$0: function() {
    if (this.box == null)
      this.box = $.Rectangle$(0, 0, 0, 0);
    var t1 = $.$$sub$n(this.get$x(), $.$$div$n(this.get$width(), 2));
    this.box.set$left(t1);
    t1 = $.$$sub$n(this.get$y(), $.$$div$n(this.get$height(), 2));
    this.box.set$top(t1);
    t1 = $.$$add$n(this.box.get$left(), this.get$width());
    this.box.set$right(t1);
    t1 = $.$$add$n(this.box.get$top(), this.get$height());
    this.box.set$bottom(t1);
  },
  removeFromGame$0: function() {
    this._removeFromGame = true;
  },
  collidesWith$1: function(entity) {
    if (entity.get$enabled() !== true)
      return false;
    return entity.get$box().intersectsWith$1(this.box);
  },
  GameEntity$withPosition$7: function(game, x, y, width, height, id, groupId) {
    var t1;
    this.momentum = $.Momentum$(null, null, 0, null, null, 0);
    this.set$x(x);
    this.set$y(y);
    this.set$width(width);
    this.set$height(height);
    t1 = this.id;
    if (t1 == null || $.$$eq$o($.get$length$as(t1), 0) === true)
      this.id = $.toString$0$abfnosu($.get$hashCode$ou(this));
  }
};

$$.Vector = {"": "Object;x=,y>",
  updateFrom$1: function(vect) {
    this.x = vect.get$x();
    this.y = vect.get$y();
  }
};

$$.Rectangle = {"": "Object;top=,left=,right=,bottom=",
  updateFrom$1: function(rect) {
    this.top = rect.get$top();
    this.left = rect.get$left();
    this.right = rect.get$right();
    this.bottom = rect.get$bottom();
  },
  intersectsWith$1: function(other) {
    return $.Rectangle_intersect(this, other);
  },
  contains$1: function(point) {
    if (point == null)
      return false;
    return $.$$ge$n(point.get$x(), this.left) === true && $.$$le$n(point.get$x(), this.right) === true && $.$$ge$n(point.get$y(), this.top) === true && $.$$le$n(point.get$y(), this.bottom) === true;
  },
  get$width: function() {
    return $.$$sub$n(this.right, this.left);
  },
  get$height: function() {
    return $.$$sub$n(this.bottom, this.top);
  },
  get$x: function() {
    return this.left;
  },
  get$y: function() {
    return this.top;
  },
  get$halfWidth: function() {
    var t1 = this.get$width();
    if (typeof t1 !== "number")
      return this.get$halfWidth$bailout(1, t1);
    return t1 / 2;
  },
  get$halfWidth$bailout: function(state0, t1) {
    return $.$$div$n(t1, 2);
  },
  get$halfHeight: function() {
    var t1 = this.get$height();
    if (typeof t1 !== "number")
      return this.get$halfHeight$bailout(1, t1);
    return t1 / 2;
  },
  get$halfHeight$bailout: function(state0, t1) {
    return $.$$div$n(t1, 2);
  }
};

$$.Momentum = {"": "Object;xVel=,yVel=,xAccel,yAccel,xMax,yMax",
  update$1: function(clockTick) {
    var t1, t2, t3, t4;
    t1 = this.xAccel;
    if (t1 != null && $.$$eq$o(t1, 0) !== true && $.CONSTANT15.$lt($.abs$0$n(this.xVel), this.xMax)) {
      t2 = $.$$gt$n(this.xVel, 0);
      t3 = $.getInterceptor$n(t1);
      t4 = this.xVel;
      if (t2 === true)
        this.xVel = $.$$add$n(t4, t3.$mul(t1, clockTick));
      else
        this.xVel = $.$$sub$n(t4, t3.$mul(t1, clockTick));
    }
    t1 = this.yAccel;
    if (t1 != null && $.$$eq$o(t1, 0) !== true && $.CONSTANT15.$lt($.abs$0$n(this.yVel), this.yMax)) {
      t2 = $.$$gt$n(this.yVel, 0);
      t3 = $.getInterceptor$n(t1);
      t4 = this.yVel;
      if (t2 === true)
        this.yVel = $.$$add$n(t4, t3.$mul(t1, clockTick));
      else
        this.yVel = $.$$sub$n(t4, t3.$mul(t1, clockTick));
    }
    t1 = this.xVel;
    if (t1 != null) {
      t2 = this.xMax;
      t1 = t2 != null && $.CONSTANT15.$gt($.abs$0$n(t1), t2);
    } else
      t1 = false;
    if (t1) {
      t1 = $.$$gt$n(this.xVel, 0);
      t2 = this.xMax;
      this.xVel = t1 === true ? t2 : $.$$negate$n(t2);
    }
    t1 = this.yVel;
    if (t1 != null) {
      t2 = this.yMax;
      t1 = t2 != null && $.CONSTANT15.$gt($.abs$0$n(t1), t2);
    } else
      t1 = false;
    if (t1) {
      t1 = $.$$gt$n(this.yVel, 0);
      t2 = this.yMax;
      this.yVel = t1 === true ? t2 : $.$$negate$n(t2);
    }
  }
};

$$.GameSound = {"": "Object;enabled=",
  get$rootDirectory: function() {
    return this._rootDirectory;
  },
  play$3: function(sound, volume, looping) {
  },
  play$1: function(sound) {
    return this.play$3(sound, 1, false);
  },
  play$2: function(sound, volume) {
    return this.play$3(sound, volume, false);
  }
};

$$.GameInput = {"": "Object;click=,mouse=,keyCode=,mouseDown<,game>",
  start$0: function() {
  },
  reset$0: function() {
    this.click = null;
    this.keyCode = -1;
  }
};

$$.GameRenderer = {"": "Object;rect>",
  get$game: function() {
    return this._game;
  },
  set$game: function(value) {
    this._game = value;
    this.init$0();
  },
  init$0: function() {
  },
  render$0: function() {
  }
};

$$.GameLoop = {"": "Object;",
  start$1: function(callback) {
    $.Timer_Timer$repeating($.CONSTANT0, new $.GameLoop_start_anon(callback));
  }
};

$$.GameText = {"": "GameEntity;text>,centered,font=,size>,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  updateBox$0: function() {
    if (this.box == null)
      this.box = $.Rectangle$(0, 0, 0, 0);
    this._height = this.size;
    if (this.centered === true)
      $.GameEntity.prototype.updateBox$0.call(this);
    else {
      var t1 = this.get$x();
      this.box.set$left(t1);
      t1 = this.get$y();
      this.box.set$top(t1);
      t1 = $.$$add$n(this.box.get$left(), this.get$width());
      this.box.set$right(t1);
      t1 = $.$$add$n(this.box.get$top(), this.get$height());
      this.box.set$bottom(t1);
    }
  },
  GameText$11$centered$color$font$game$groupId$id$opacity$size$text$x$y: function(centered, color, font, game, groupId, id, opacity, size, text, x, y) {
    this.opacity = opacity;
  },
  $isGameText: true
};

$$.GameButton = {"": "GameText;buttonAction,text,centered,font,size,game,_x,_y,_width,_height,isHighlighted,soundReady,id,groupId,box,previousBox,_removeFromGame,radius,momentum,enabled,opacity,color,fill,sprite",
  buttonAction$0: function() {
    return this.buttonAction.call$0();
  },
  update$0: function() {
    $.GameEntity.prototype.update$0.call(this);
    if (this.enabled !== true)
      return;
    var t1 = this.game.get$input().get$click();
    if (t1 != null) {
      $.Primitives_printString("x: " + $.S(t1.get$x()) + " y: " + $.S(this.game.get$input().get$click().get$y()));
      $.Primitives_printString($.toString$0$abfnosu($.contains$1$as(this.box, this.game.get$input().get$click())));
    }
    t1 = this.game.get$input().get$mouse();
    if (t1 != null && $.contains$1$as(this.box, t1) === true) {
      this.isHighlighted = true;
      this.opacity = 1;
    } else {
      this.isHighlighted = false;
      this.opacity = 0.5;
    }
    t1 = this.game.get$input().get$click();
    if (t1 != null && $.contains$1$as(this.box, t1) === true) {
      this.opacity = 1;
      $.Timer_Timer($.CONSTANT18, new $.GameButton_update_anon(this));
      this.buttonAction$0();
    }
  },
  GameButton$12$buttonAction$centered$color$font$game$groupId$id$opacity$size$text$x$y: function(buttonAction, centered, color, font, game, groupId, id, opacity, size, text, x, y) {
  },
  $isGameButton: true
};

$$.EventStream = {"": "Object;_controller",
  get$stream: function() {
    return this._controller.stream;
  },
  signal$1: function(value) {
    var t1, t2;
    t1 = $ === value;
    if (t1)
      value = null;
    t2 = this._controller;
    t2.add$1(!t1 ? value : $.get$EventArgs_empty());
  },
  signal$0: function() {
    return this.signal$1($);
  }
};

$$.EventArgs = {"": "Object;"};

$$.GalagaRenderer = {"": "CanvasGameRenderer;timeLeft,powerUpRenderer,enemyRenderer,targetId,ctx,defaultRenderer,assetManager,textRenderer,_game,rect",
  init$0: function() {
    var t1 = this.get$game().get$Stats();
    $.$$indexSet$a(t1, "killed", window.localStorage.containsKey$1("win1") === true ? $.int_parse(window.localStorage.$index("win1"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    $.$$indexSet$a(t1, "wins", window.localStorage.containsKey$1("win2") === true ? $.int_parse(window.localStorage.$index("win2"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    $.$$indexSet$a(t1, "loses", window.localStorage.containsKey$1("win3") === true ? $.int_parse(window.localStorage.$index("win3"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    $.$$indexSet$a(t1, "totalGames", window.localStorage.containsKey$1("win4") === true ? $.int_parse(window.localStorage.$index("win4"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    $.$$indexSet$a(t1, "highscore", window.localStorage.containsKey$1("win5") === true ? $.int_parse(window.localStorage.$index("win5"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    $.$$indexSet$a(t1, "normalKills", window.localStorage.containsKey$1("win12") === true ? $.int_parse(window.localStorage.$index("win12"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    $.$$indexSet$a(t1, "bossKills", window.localStorage.containsKey$1("win13") === true ? $.int_parse(window.localStorage.$index("win13"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    $.$$indexSet$a(t1, "motherKills", window.localStorage.containsKey$1("win14") === true ? $.int_parse(window.localStorage.$index("win14"), null, null) : 0);
    t1 = this.get$game().get$Stats();
    $.$$indexSet$a(t1, "powerups", window.localStorage.containsKey$1("win15") === true ? $.int_parse(window.localStorage.$index("win15"), null, null) : 0);
    t1 = this.get$game().get$Options();
    $.$$indexSet$a(t1, "startLives", window.localStorage.containsKey$1("win6") === true ? $.int_parse(window.localStorage.$index("win6"), null, null) : 0);
    t1 = this.get$game().get$Options();
    $.$$indexSet$a(t1, "bulletCap", window.localStorage.containsKey$1("win7") === true ? $.int_parse(window.localStorage.$index("win7"), null, null) : 0);
    t1 = this.get$game().get$Options();
    $.$$indexSet$a(t1, "time", window.localStorage.containsKey$1("win8") === true ? $.int_parse(window.localStorage.$index("win8"), null, null) : 0);
    t1 = this.get$game().get$Options();
    $.$$indexSet$a(t1, "difficulty", window.localStorage.containsKey$1("win9") === true ? $.int_parse(window.localStorage.$index("win9"), null, null) : 0);
    t1 = this.get$game().get$Options();
    $.$$indexSet$a(t1, "powerups", window.localStorage.containsKey$1("win10") === true ? $.int_parse(window.localStorage.$index("win10"), null, null) : 0);
    t1 = this.get$game().get$Options();
    $.$$indexSet$a(t1, "soundeffects", window.localStorage.containsKey$1("win11") === true ? $.int_parse(window.localStorage.$index("win11"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    $.$$indexSet$a(t1, 1, window.localStorage.containsKey$1("win16") === true ? $.int_parse(window.localStorage.$index("win16"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    $.$$indexSet$a(t1, 2, window.localStorage.containsKey$1("win17") === true ? $.int_parse(window.localStorage.$index("win17"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    $.$$indexSet$a(t1, 3, window.localStorage.containsKey$1("win18") === true ? $.int_parse(window.localStorage.$index("win18"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    $.$$indexSet$a(t1, 4, window.localStorage.containsKey$1("win19") === true ? $.int_parse(window.localStorage.$index("win19"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    $.$$indexSet$a(t1, 5, window.localStorage.containsKey$1("win20") === true ? $.int_parse(window.localStorage.$index("win20"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    $.$$indexSet$a(t1, 6, window.localStorage.containsKey$1("win21") === true ? $.int_parse(window.localStorage.$index("win21"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    $.$$indexSet$a(t1, 7, window.localStorage.containsKey$1("win22") === true ? $.int_parse(window.localStorage.$index("win22"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    $.$$indexSet$a(t1, 8, window.localStorage.containsKey$1("win23") === true ? $.int_parse(window.localStorage.$index("win23"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    $.$$indexSet$a(t1, 9, window.localStorage.containsKey$1("win24") === true ? $.int_parse(window.localStorage.$index("win24"), null, null) : 0);
    t1 = this.get$game().get$Highscores();
    $.$$indexSet$a(t1, 10, window.localStorage.containsKey$1("win25") === true ? $.int_parse(window.localStorage.$index("win25"), null, null) : 0);
    t1 = this.get$game().get$RankSelect();
    $.$$indexSet$a(t1, 1, window.localStorage.containsKey$1("win26") !== true || $.int_parse(window.localStorage.$index("win26"), null, null));
    t1 = this.get$game().get$RankSelect();
    $.$$indexSet$a(t1, 2, window.localStorage.containsKey$1("win27") === true && $.int_parse(window.localStorage.$index("win27"), null, null));
    t1 = this.get$game().get$RankSelect();
    $.$$indexSet$a(t1, 3, window.localStorage.containsKey$1("win28") === true && $.int_parse(window.localStorage.$index("win28"), null, null));
    t1 = this.get$game().get$RankSelect();
    $.$$indexSet$a(t1, 4, window.localStorage.containsKey$1("win29") === true && $.int_parse(window.localStorage.$index("win29"), null, null));
    t1 = this.get$game().get$RankSelect();
    $.$$indexSet$a(t1, 5, window.localStorage.containsKey$1("win30") === true && $.int_parse(window.localStorage.$index("win30"), null, null));
    t1 = this.get$game().get$RankSelect();
    $.$$indexSet$a(t1, 6, window.localStorage.containsKey$1("win31") === true && $.int_parse(window.localStorage.$index("win31"), null, null));
    t1 = this.get$game().get$RankSelect();
    $.$$indexSet$a(t1, 7, window.localStorage.containsKey$1("win32") === true && $.int_parse(window.localStorage.$index("win32"), null, null));
    t1 = this.get$game().get$RankSelect();
    $.$$indexSet$a(t1, 8, window.localStorage.containsKey$1("win33") === true && $.int_parse(window.localStorage.$index("win33"), null, null));
    t1 = this.get$game().get$RankSelect();
    $.$$indexSet$a(t1, 9, window.localStorage.containsKey$1("win34") === true && $.int_parse(window.localStorage.$index("win34"), null, null));
    this.get$game().get$onGameOver().listen$1(new $.GalagaRenderer_init_anon(this));
    this.get$game().get$onShipHit().listen$1(new $.GalagaRenderer_init_anon0(this));
    this.get$game().get$onStatUpdate().listen$1(new $.GalagaRenderer_init_anon1(this));
    this.get$game().get$onMotherShipHit().listen$1(new $.GalagaRenderer_init_anon2(this));
    this.get$game().get$onBossHit().listen$1(new $.GalagaRenderer_init_anon3(this));
    this.get$game().get$onNormalHit().listen$1(new $.GalagaRenderer_init_anon4(this));
  },
  gameOver$0: function() {
    this.bgFade$0();
    this.updateStats$0();
  },
  shipHit$0: function() {
    this.bgFade$0();
    $.Timer_Timer($.CONSTANT20, new $.GalagaRenderer_shipHit_anon(this));
    $.Timer_Timer($.CONSTANT21, new $.GalagaRenderer_shipHit_anon0(this));
    $.Timer_Timer($.CONSTANT24, new $.GalagaRenderer_shipHit_anon1(this));
    $.Timer_Timer($.CONSTANT27, new $.GalagaRenderer_shipHit_anon2(this));
    $.Timer_Timer($.CONSTANT31, new $.GalagaRenderer_shipHit_anon3(this));
    $.Timer_Timer($.CONSTANT32, new $.GalagaRenderer_shipHit_anon4(this));
  },
  updateStats$0: function() {
    window.localStorage.$indexSet("win1", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Stats(), "killed")));
    window.localStorage.$indexSet("win2", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Stats(), "wins")));
    window.localStorage.$indexSet("win3", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Stats(), "loses")));
    window.localStorage.$indexSet("win4", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Stats(), "totalGames")));
    window.localStorage.$indexSet("win5", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Stats(), "highscore")));
    window.localStorage.$indexSet("win12", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Stats(), "normalKills")));
    window.localStorage.$indexSet("win13", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Stats(), "bossKills")));
    window.localStorage.$indexSet("win14", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Stats(), "motherKills")));
    window.localStorage.$indexSet("win15", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Stats(), "powerups")));
    window.localStorage.$indexSet("win6", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Options(), "startLives")));
    window.localStorage.$indexSet("win7", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Options(), "bulletCap")));
    window.localStorage.$indexSet("win8", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Options(), "time")));
    window.localStorage.$indexSet("win9", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Options(), "difficulty")));
    window.localStorage.$indexSet("win10", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Options(), "powerups")));
    window.localStorage.$indexSet("win11", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Options(), "soundeffects")));
    window.localStorage.$indexSet("win16", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Highscores(), 1)));
    window.localStorage.$indexSet("win17", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Highscores(), 2)));
    window.localStorage.$indexSet("win18", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Highscores(), 3)));
    window.localStorage.$indexSet("win19", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Highscores(), 4)));
    window.localStorage.$indexSet("win20", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Highscores(), 5)));
    window.localStorage.$indexSet("win21", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Highscores(), 6)));
    window.localStorage.$indexSet("win22", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Highscores(), 7)));
    window.localStorage.$indexSet("win23", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Highscores(), 8)));
    window.localStorage.$indexSet("win24", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Highscores(), 9)));
    window.localStorage.$indexSet("win25", $.toString$0$abfnosu($.$$index$as(this.get$game().get$Highscores(), 10)));
    window.localStorage.$indexSet("win26", $.toString$0$abfnosu($.$$index$as(this.get$game().get$RankSelect(), 1)));
    window.localStorage.$indexSet("win27", $.toString$0$abfnosu($.$$index$as(this.get$game().get$RankSelect(), 2)));
    window.localStorage.$indexSet("win28", $.toString$0$abfnosu($.$$index$as(this.get$game().get$RankSelect(), 3)));
    window.localStorage.$indexSet("win29", $.toString$0$abfnosu($.$$index$as(this.get$game().get$RankSelect(), 4)));
    window.localStorage.$indexSet("win30", $.toString$0$abfnosu($.$$index$as(this.get$game().get$RankSelect(), 5)));
    window.localStorage.$indexSet("win31", $.toString$0$abfnosu($.$$index$as(this.get$game().get$RankSelect(), 6)));
    window.localStorage.$indexSet("win32", $.toString$0$abfnosu($.$$index$as(this.get$game().get$RankSelect(), 7)));
    window.localStorage.$indexSet("win33", $.toString$0$abfnosu($.$$index$as(this.get$game().get$RankSelect(), 8)));
    window.localStorage.$indexSet("win34", $.toString$0$abfnosu($.$$index$as(this.get$game().get$RankSelect(), 9)));
  },
  bossHit$0: function() {
    $.forEach$1$a($.where$1$a(this.get$game().get$entities(), new $.GalagaRenderer_bossHit_anon()), new $.GalagaRenderer_bossHit_anon0(this));
  },
  motherShipHit$0: function() {
    $.forEach$1$a($.where$1$a(this.get$game().get$entities(), new $.GalagaRenderer_motherShipHit_anon()), new $.GalagaRenderer_motherShipHit_anon0(this));
  },
  normalShipHit$0: function() {
    $.forEach$1$a($.where$1$a(this.get$game().get$entities(), new $.GalagaRenderer_normalShipHit_anon()), new $.GalagaRenderer_normalShipHit_anon0(this));
  },
  getRenderer$1: function(e) {
    var t1, t2;
    t1 = typeof e === "object" && e !== null && !!e.$isEnemy;
    if (t1) {
      t2 = this.get$game().get$state();
      if (typeof t2 !== "number")
        return this.getRenderer$1$bailout2(1, e, t2, t1);
      t2 = t2 === 4;
    } else
      t2 = false;
    if (t2)
      return;
    if (typeof e === "object" && e !== null && !!e.$isPowerUp)
      return this.powerUpRenderer;
    if (t1)
      return this.enemyRenderer;
    return $.CanvasGameRenderer.prototype.getRenderer$1.call(this, e);
  },
  getRenderer$1$bailout2: function(state0, e, t2, t1) {
    switch (state0) {
      case 0:
        t1 = typeof e === "object" && e !== null && !!e.$isEnemy;
      case 1:
        var t4;
        if (state0 === 1 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              t2 = this.get$game().get$state();
            case 1:
              state0 = 0;
              t4 = $.$$eq$o(t2, 4) === true;
              t2 = t4;
          }
        else
          t2 = false;
        if (t2)
          return;
        if (typeof e === "object" && e !== null && !!e.$isPowerUp)
          return this.powerUpRenderer;
        if (t1)
          return this.enemyRenderer;
        return $.CanvasGameRenderer.prototype.getRenderer$1.call(this, e);
    }
  },
  drawBeforeCtxRestore$0: function() {
    if ($.$$eq$o(this.get$game().get$state(), 3) === true || $.$$eq$o(this.get$game().get$state(), 2) === true) {
      this.drawTime$0();
      this.drawScore$0();
      this.drawHighScore$0();
      this.drawLives$0();
      this.drawLevel$0();
    }
    $.CanvasGameRenderer.prototype.drawBeforeCtxRestore$0.call(this);
  },
  drawLevel$0: function() {
    this.ctx.set$fillStyle("rgba(255, 255, 255, 1)");
    this.ctx.set$font("32px cinnamoncake, Verdana");
    this.ctx.fillText$3("Level: " + $.S(this.get$game().get$level()), 375, this.get$game().get$rect().get$halfHeight() - 5);
  },
  drawTime$0: function() {
    this.ctx.set$fillStyle("rgba(255, 255, 255, 1)");
    this.ctx.set$font("32px cinnamoncake, Verdana");
    this.ctx.fillText$3("Time: " + $.S($.round$0$n(this.get$game().get$timer().get$gameTime())) + " ", -100, -(this.get$game().get$rect().get$halfHeight() - 30));
  },
  drawLives$0: function() {
    this.ctx.set$fillStyle("rgba(255, 255, 255, 1)");
    this.ctx.set$font("32px cinnamoncake, Verdana");
    this.ctx.fillText$3("Lives: " + $.S(this.get$game().get$ship().get$lives()) + " ", -475, this.get$game().get$rect().get$halfHeight() - 5);
  },
  drawScore$0: function() {
    this.ctx.set$fillStyle("rgba(255, 255, 255, 1)");
    this.ctx.set$font("32px cinnamoncake, Verdana");
    this.ctx.fillText$3("Score: " + $.S(this.get$game().get$score()) + " ", -475, -(this.get$game().get$rect().get$halfHeight() - 30));
  },
  drawHighScore$0: function() {
    this.ctx.set$fillStyle("rgba(255, 255, 255, 1)");
    this.ctx.set$font("32px cinnamoncake, Verdana");
    this.ctx.fillText$3("High Score: " + $.S($.$$index$as(this.get$game().get$Stats(), "highscore")) + " ", 225, -(this.get$game().get$rect().get$halfHeight() - 30));
  },
  bgFade$0: function() {
    this.get$game().set$bgStyle("rgba(0, 0, 0, 0.8)");
    $.Timer_Timer($.CONSTANT20, new $.GalagaRenderer_bgFade_anon(this));
    $.Timer_Timer($.CONSTANT0, new $.GalagaRenderer_bgFade_anon0(this));
    $.Timer_Timer($.CONSTANT21, new $.GalagaRenderer_bgFade_anon1(this));
    $.Timer_Timer($.CONSTANT22, new $.GalagaRenderer_bgFade_anon2(this));
    $.Timer_Timer($.CONSTANT23, new $.GalagaRenderer_bgFade_anon3(this));
    $.Timer_Timer($.CONSTANT24, new $.GalagaRenderer_bgFade_anon4(this));
    $.Timer_Timer($.CONSTANT25, new $.GalagaRenderer_bgFade_anon5(this));
    $.Timer_Timer($.CONSTANT26, new $.GalagaRenderer_bgFade_anon6(this));
    $.Timer_Timer($.CONSTANT27, new $.GalagaRenderer_bgFade_anon7(this));
    $.Timer_Timer($.CONSTANT18, new $.GalagaRenderer_bgFade_anon8(this));
    $.Timer_Timer($.CONSTANT28, new $.GalagaRenderer_bgFade_anon9(this));
  },
  GalagaRenderer$1: function(targetId) {
    this.powerUpRenderer = $.PowerUpRenderer$(this);
    this.enemyRenderer = $.EnemyRenderer$(this);
  }
};

$$.PowerUpRenderer = {"": "DefaultCanvasEntityRenderer;gr",
  render$1: function(e) {
    var t1;
    $.DefaultCanvasEntityRenderer.prototype.render$1.call(this, e);
    t1 = this.gr;
    t1.get$ctx().set$fillStyle("rgba(0, 0, 0, .5)");
    t1.get$ctx().set$font("24px Verdana");
    switch (e.get$type()) {
      case "SpiralShot":
        t1.get$ctx().fillText$3("S", $.$$sub$n(e.get$x(), 8), $.$$add$n(e.get$y(), 8));
        break;
      case "Multiplier":
        t1.get$ctx().fillText$3("x2", $.$$sub$n(e.get$x(), 12), $.$$add$n(e.get$y(), 8));
        break;
      case "BulletIncrease":
        t1.get$ctx().set$font("36px Verdana");
        t1.get$ctx().fillText$3("+", $.$$sub$n(e.get$x(), 14), $.$$add$n(e.get$y(), 10));
        break;
      case "ExtraLife":
        t1.get$ctx().set$font("12px Verdana");
        t1.get$ctx().fillText$3("Life", $.$$sub$n(e.get$x(), 10), $.$$add$n(e.get$y(), 8));
        break;
    }
  }
};

$$.EnemyRenderer = {"": "DefaultCanvasEntityRenderer;gr",
  render$1: function(e) {
    var t1;
    $.DefaultCanvasEntityRenderer.prototype.render$1.call(this, e);
    t1 = this.gr;
    t1.get$ctx().set$fillStyle("rgba(0, 0, 0, .5)");
    t1.get$ctx().set$font("36px Verdana");
    switch (e.get$type()) {
      case "Boss":
        t1.get$ctx().fillText$3($.S(e.get$health()), $.$$sub$n(e.get$x(), 8), $.$$add$n(e.get$y(), 8));
        break;
    }
  }
};

$$.CanvasGameRenderer = {"": "GameRenderer;targetId=,ctx>",
  getRenderer$1: function(e) {
    if (typeof e === "object" && e !== null && !!e.$isGameText)
      return this.textRenderer;
    return this.defaultRenderer;
  },
  render$0: function() {
    var t1, t2, r;
    t1 = this.ctx;
    t1.clearRect$4(0, 0, t1.get$canvas().get$width(), this.ctx.get$canvas().get$height());
    t1 = this.get$game().get$bgStyle();
    this.ctx.set$fillStyle(t1);
    t1 = this.ctx;
    t1.fillRect$4(0, 0, t1.get$canvas().get$width(), this.ctx.get$canvas().get$height());
    this.ctx.save$0();
    t1 = this.ctx;
    t1.translate$2($.$$div$n(t1.get$canvas().get$width(), 2), $.$$div$n(this.ctx.get$canvas().get$height(), 2));
    for (t1 = $.get$iterator$a(this.get$game().get$entities()); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if (t2.get$enabled() !== true)
        continue;
      r = this.getRenderer$1(t2);
      if (r != null)
        r.render$1(t2);
    }
    this.drawBeforeCtxRestore$0();
    this.ctx.restore$0();
  },
  drawBeforeCtxRestore$0: function() {
    if ($.Game_debugMode === true)
      this.drawDebugInfo$0();
  },
  drawDebugInfo$0: function() {
    this.ctx.set$fillStyle("rgba(255, 255, 255, 0.2)");
    this.ctx.set$font("16px Verdana");
    this.ctx.fillText$3("FPS: " + $.S($.toStringAsFixed$1$n(this.get$game().get$timer().get$fps(), 1)), this.rect.get$halfWidth() - 120, -(this.rect.get$halfHeight() - 30));
  },
  CanvasGameRenderer$1: function(targetId) {
    var clientRect, t1;
    this.ctx = $.query("#" + $.S(this.targetId)).getContext$1("2d");
    this.rect = $.Rectangle$(0, 0, this.ctx.get$canvas().get$width(), this.ctx.get$canvas().get$height());
    clientRect = this.ctx.get$canvas().getBoundingClientRect$0();
    t1 = clientRect.get$top();
    this.rect.set$top(t1);
    t1 = clientRect.get$left();
    this.rect.set$left(t1);
    t1 = clientRect.get$right();
    this.rect.set$right(t1);
    t1 = clientRect.get$bottom();
    this.rect.set$bottom(t1);
    this.defaultRenderer = $.DefaultCanvasEntityRenderer$(this);
    this.textRenderer = $.TextRenderer$(this);
  }
};

$$.DefaultCanvasEntityRenderer = {"": "Object;gr",
  render$1: function(e) {
    var t1, t2;
    if (e.get$color() != null) {
      t1 = e.get$fill();
      t2 = this.gr;
      if (t1 === true) {
        t1 = "rgba(" + $.S(e.get$color()) + ", " + $.S(e.get$opacity()) + ")";
        t2.get$ctx().set$fillStyle(t1);
        t2.get$ctx().fillRect$4(e.get$box().get$left(), e.get$box().get$top(), e.get$box().get$width(), e.get$box().get$height());
      } else {
        t1 = "rgba(" + $.S(e.get$color()) + ", " + $.S(e.get$opacity()) + ")";
        t2.get$ctx().set$strokeStyle(t1);
        t2.get$ctx().strokeRect$4(e.get$box().get$left(), e.get$box().get$top(), e.get$box().get$width(), e.get$box().get$height());
      }
    }
    t1 = this.gr;
    if (t1.get$game().get$showOutlines() === true) {
      t1.get$ctx().beginPath$0();
      t1.get$ctx().set$strokeStyle("green");
      t1.get$ctx().arc$6(e.get$x(), e.get$y(), e.get$radius(), 0, 6.283185307179586, false);
      t1.get$ctx().stroke$0();
      t1.get$ctx().closePath$0();
    }
  }
};

$$.TextRenderer = {"": "DefaultCanvasEntityRenderer;gr",
  render$1: function(b) {
    var t1, t2;
    t1 = "rgba(" + $.S(b.get$color()) + ", " + $.S(b.get$opacity()) + ")";
    t2 = this.gr;
    t2.get$ctx().set$fillStyle(t1);
    t1 = $.S(b.get$size()) + "px " + $.S(b.get$font());
    t2.get$ctx().set$font(t1);
    b.set$width(t2.get$ctx().measureText$1(b.get$text()).get$width());
    t2.get$ctx().fillText$3(b.get$text(), b.get$box().get$left(), b.get$box().get$bottom());
  }
};

$$.HtmlGameInput = {"": "GameInput;click,mouse,keyCode,mouseDown,game",
  start$0: function() {
    $.Primitives_printString("Starting input");
    var t1 = new $.HtmlGameInput_start_getXandY(this);
    document.get$onClick().listen$1(new $.HtmlGameInput_start_anon(this, t1));
    document.get$onMouseMove().listen$1(new $.HtmlGameInput_start_anon0(this, t1));
    document.get$onTouchMove().listen$1(new $.HtmlGameInput_start_anon1(this, t1));
    document.get$onTouchStart().listen$1(new $.HtmlGameInput_start_anon2());
    document.get$onKeyDown().listen$1(new $.HtmlGameInput_start_anon3(this));
    document.get$onMouseDown().listen$1(new $.HtmlGameInput_start_anon4(this));
    document.get$onMouseUp().listen$1(new $.HtmlGameInput_start_anon5(this));
    $.Primitives_printString("Input started");
  }
};

$$.HtmlGameSound = {"": "GameSound;enabled,_rootDirectory",
  play$3: function(sound, volume, looping) {
    var t1, t2, sourceAudio, s, o;
    t1 = {};
    if (this.enabled !== true)
      return;
    if ($.Game_debugMode === true)
      $.Primitives_printString("Playing: " + $.S(sound));
    t2 = "#sound_" + $.S(sound);
    sourceAudio = document.query$1(t2);
    if (sourceAudio == null) {
      t2 = "#" + $.S(sound);
      sourceAudio = document.query$1(t2);
    }
    t1.audioCopy_0 = null;
    if (sourceAudio == null) {
      sourceAudio = $.AudioElement_AudioElement($);
      sourceAudio.set$id("sound_" + $.S(sound));
      sourceAudio.set$preload("auto");
      s = document.createElement("source");
      s.set$src($.S(this.get$rootDirectory()) + $.S(sound) + ".mp3");
      s.set$type("audio/mp3");
      sourceAudio.get$nodes().add$1(s);
      s = document.createElement("source");
      s.set$src($.S(this.get$rootDirectory()) + $.S(sound) + ".ogg");
      s.set$type("audio/ogg");
      sourceAudio.get$nodes().add$1(s);
      document.get$body().get$nodes().add$1(sourceAudio);
    }
    t1.audioCopy_0 = $.callTypeCast(sourceAudio.clone$1(true), "$isAudioElement");
    t1.audioCopy_0.set$id("");
    document.get$body().get$nodes().add$1(t1.audioCopy_0);
    t1.audioCopy_0.get$onEnded().listen$1(new $.HtmlGameSound_play_anon(t1));
    if (volume != null) {
      $.checkNum(10);
      $.checkNum(3);
      o = Math.pow(10, 3);
      t2 = $.round$0$n($.$$mul$n(volume, o));
      t1.audioCopy_0.set$volume(t2 / o);
    }
    if (looping === true)
      t1.audioCopy_0.set$loop(true);
    t1.audioCopy_0.play$0();
    $.add$1$a(t1.audioCopy_0.get$classes(), "sound-clone");
  },
  play$1: function(sound) {
    return this.play$3(sound, 1, false);
  },
  play$2: function(sound, volume) {
    return this.play$3(sound, volume, false);
  }
};

$$.HtmlGameLoop = {"": "GameLoop;_callback",
  _callback$0: function() {
    return this._callback.call$0();
  },
  start$1: function(callback) {
    this._callback = callback;
    window.requestAnimationFrame$1(this.get$loop());
  },
  loop$1: function(time) {
    this._callback$0();
    window.requestAnimationFrame$1(this.get$loop());
  },
  get$loop: function() {
    return new $.Bound_loop_HtmlGameLoop(this, "loop$1");
  }
};

$$.Game_start_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.set$clockTick(t1.get$timer().tick$0());
    t1.update$0();
    t1.get$renderer().render$0();
    t1.get$input().reset$0();
  },
  $is_TimerCallback0: true
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  },
  $is_TimerCallback0: true
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  },
  $is_TimerCallback0: true
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  },
  $is_TimerCallback0: true
};

$$.GameLoop_start_anon = {"": "Closure;callback_0",
  call$1: function(t) {
    return this.callback_0.call$0();
  },
  $is_TimerCallback1: true
};

$$.anon = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$1(this.this_0);
  },
  $is_TimerCallback0: true
};

$$.Duration_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100) === true)
      return $.S(n);
    if (t1.$gt(n, 10) === true)
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
};

$$.Duration_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$$ge$n(n, 10) === true)
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$.HtmlGameInput_start_getXandY = {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = e.get$clientX();
    t2 = this.this_0;
    return $.Vector$($.$$sub$n($.$$sub$n(t1, t2.get$game().get$rect().get$x()), t2.get$game().get$rect().get$halfWidth()), $.$$sub$n($.$$sub$n(e.get$clientY(), t2.get$game().get$rect().get$y()), t2.get$game().get$rect().get$halfHeight()));
  }
};

$$.HtmlGameInput_start_anon = {"": "Closure;this_1,getXandY_2",
  call$1: function(e) {
    var t1 = this.getXandY_2.call$1(e);
    this.this_1.set$click(t1);
  },
  $is_TimerCallback1: true
};

$$.HtmlGameInput_start_anon0 = {"": "Closure;this_3,getXandY_4",
  call$1: function(e) {
    var t1 = this.getXandY_4.call$1(e);
    this.this_3.set$mouse(t1);
  },
  $is_TimerCallback1: true
};

$$.HtmlGameInput_start_anon1 = {"": "Closure;this_5,getXandY_6",
  call$1: function(e) {
    var t1;
    e.preventDefault$0();
    t1 = this.getXandY_6.call$1($.$$index$as(e.get$touches(), 0));
    this.this_5.set$mouse(t1);
    return false;
  }
};

$$.HtmlGameInput_start_anon2 = {"": "Closure;",
  call$1: function(e) {
    e.preventDefault$0();
    return false;
  },
  $is_TimerCallback1: true
};

$$.HtmlGameInput_start_anon3 = {"": "Closure;this_7",
  call$1: function(e) {
    var t1 = e.get$keyCode();
    this.this_7.set$keyCode(t1);
  }
};

$$.HtmlGameInput_start_anon4 = {"": "Closure;this_8",
  call$1: function(e) {
    this.this_8.set$mouseDown(true);
  },
  $is_TimerCallback1: true
};

$$.HtmlGameInput_start_anon5 = {"": "Closure;this_9",
  call$1: function(e) {
    this.this_9.set$mouseDown(false);
  },
  $is_TimerCallback1: true
};

$$.convertNativeToDart_AcceptStructuredClone_findSlot = {"": "Closure;values_0,copies_1",
  call$1: function(value) {
    var t1, $length, i, t2;
    t1 = this.values_0;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.call$1$bailout(1, value, t1);
    $length = t1.length;
    for (i = 0; i < $length; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    $.add$1$a(t1, value);
    $.add$1$a(this.copies_1, null);
    return $length;
  },
  call$1$bailout: function(state0, value, t1, t3, $length) {
    switch (state0) {
      case 0:
        t1 = this.values_0;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$as(t1);
        $length = t3.get$length(t1);
      case 2:
        var i, t2;
        state0 = 0;
        for (i = 0; $.CONSTANT15.$lt(i, $length); ++i) {
          t2 = t3.$index(t1, i);
          if (t2 == null ? value == null : t2 === value)
            return i;
        }
        $.add$1$a(t1, value);
        $.add$1$a(this.copies_1, null);
        return $length;
    }
  }
};

$$.convertNativeToDart_AcceptStructuredClone_readSlot = {"": "Closure;copies_2",
  call$1: function(i) {
    return $.$$index$as(this.copies_2, i);
  }
};

$$.convertNativeToDart_AcceptStructuredClone_writeSlot = {"": "Closure;copies_3",
  call$2: function(i, x) {
    $.$$indexSet$a(this.copies_3, i, x);
  }
};

$$.convertNativeToDart_AcceptStructuredClone_walk = {"": "Closure;mustCopy_4,findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var slot, copy, t1, t2, $length, i;
    if (typeof e !== "object" || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.$isJavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    if (e instanceof Date)
      throw $.$$throw($.UnimplementedError$("structured clone of DateTime"));
    if (e instanceof RegExp)
      throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
    if (Object.getPrototypeOf(e) === Object.prototype) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      copy = $.makeLiteralMap([]);
      this.writeSlot_7.call$2(slot, copy);
      for (t1 = $.CONSTANT11.get$iterator(Object.keys(e)); t1.moveNext$0();) {
        t2 = t1.get$current();
        copy.$indexSet(t2, this.call$1(e[t2]));
      }
      return copy;
    }
    if (e instanceof Array) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      $length = e.length;
      if (this.mustCopy_4 === true)
        copy = new Array($length);
      else
        copy = e;
      if (typeof copy !== "object" || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.$isJavaScriptIndexingBehavior())
        return this.call$1$bailout(2, e, slot, copy, $.CONSTANT11, $length);
      this.writeSlot_7.call$2(slot, copy);
      for (i = 0; i < $length; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        t1 = this.call$1(e[i]);
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
    }
    return e;
  },
  call$1$bailout: function(state0, e, slot, copy, t1, $length) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor(e);
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (e instanceof Date)
          throw $.$$throw($.UnimplementedError$("structured clone of DateTime"));
        if (e instanceof RegExp)
          throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
        if (Object.getPrototypeOf(e) === Object.prototype) {
          slot = this.findSlot_5.call$1(e);
          copy = this.readSlot_6.call$1(slot);
          if (copy != null)
            return copy;
          copy = $.makeLiteralMap([]);
          this.writeSlot_7.call$2(slot, copy);
          for (t1 = $.CONSTANT11.get$iterator(Object.keys(e)); t1.moveNext$0();) {
            t2 = t1.get$current();
            copy.$indexSet(t2, this.call$1(e[t2]));
          }
          return copy;
        }
      case 2:
        var t2, i;
        if (state0 === 2 || state0 === 0 && e instanceof Array)
          switch (state0) {
            case 0:
              slot = this.findSlot_5.call$1(e);
              copy = this.readSlot_6.call$1(slot);
              if (copy != null)
                return copy;
              $length = t1.get$length(e);
              copy = this.mustCopy_4 === true ? new Array($length) : e;
            case 2:
              state0 = 0;
              this.writeSlot_7.call$2(slot, copy);
              for (t2 = $.getInterceptor$a(copy), i = 0; $.CONSTANT15.$lt(i, $length); ++i)
                t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
              return copy;
          }
        return e;
    }
  },
  $is_TimerCallback1: true
};

$$.Stream_elementAt_anon = {"": "Closure;box_0,future_1",
  call$1: function(value) {
    var t1 = this.box_0;
    if ($.$$eq$o(t1.index_0, 0) === true) {
      this.future_1._liblib0$_setValue$1(value);
      t1.subscription_1.cancel$0();
      return;
    }
    t1.index_0 = $.$$sub$n(t1.index_0, 1);
  },
  $is_TimerCallback1: true
};

$$.Stream_elementAt_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setError$1($.AsyncError$($.StateError$("Not enough elements for elementAt"), null));
  },
  $is_TimerCallback0: true
};

$$._FutureImpl__scheduleUnhandledError_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1, error;
    t1 = this.this_0;
    if (t1.get$_hasUnhandledError() === true) {
      t1.set$_state($.$$and$n(t1.get$_state(), 4294967291));
      error = t1.get$_resultOrListeners();
      $.Primitives_printString("Uncaught Error: " + $.S(error.get$error()));
      t1 = error.get$stackTrace();
      if (t1 != null)
        $.Primitives_printString("Stack Trace:\n" + $.S(t1) + "\n");
      throw $.$$throw(error.get$error());
    }
  },
  $is_TimerCallback0: true
};

$$.Timer_Timer_anon = {"": "Closure;box_0,callback_1",
  call$0: function() {
    return this.callback_1.call$1(this.box_0.timer_0);
  },
  $is_TimerCallback0: true
};

$$.internalCallback = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$0();
    this.this_0.set$_handle(null);
    var t1 = $globalState.topEventLoop;
    t1.set$activeTimerCount($.$$sub$n(t1.get$activeTimerCount(), 1));
  },
  $is_TimerCallback0: true
};

$$.ToString__emitMap_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (t1.first_0 !== true)
      $.add$1$a(this.result_1, ", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.ToString__emitObject(k, t1, t2);
    $.add$1$a(t1, ": ");
    $.ToString__emitObject(v, t1, t2);
  }
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if ($.$$gt$n(t1.i_1, 0) === true)
      $.add$1$a(t1.sb_0, ", ");
    $.add$1$a(t1.sb_0, key);
    $.add$1$a(t1.sb_0, ": ");
    $.add$1$a(t1.sb_0, $.Error_safeToString(value));
    t1.i_1 = $.$$add$n(t1.i_1, 1);
  }
};

$$.Stream_length_anon = {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$$add$n(t1.count_0, 1);
  },
  $is_TimerCallback1: true
};

$$.Stream_length_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._liblib0$_setValue$1(this.box_0.count_0);
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_update_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_update_anon0 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_update_anon1 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_update_anon2 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_update_anon3 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_update_anon4 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_update_anon5 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isGameButton;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_update_anon6 = {"": "Closure;this_0",
  call$1: function(e) {
    var t1;
    if ($.$$eq$o(e.get$opacity(), 1) === true && e.get$isHighlighted() === true && e.get$soundReady() === true) {
      t1 = this.this_0;
      if (t1.get$soundEffectsOn() === true)
        t1.get$sound().play$3("cursorMove", 1, false);
      e.set$soundReady(false);
    } else if ($.$$lt$n(e.get$opacity(), 1) === true)
      e.set$soundReady(true);
  },
  $is_TimerCallback1: true
};

$$.Game_update_anon = {"": "Closure;",
  call$1: function(e) {
    return e.get$_removeFromGame() !== true;
  },
  $is_TimerCallback1: true
};

$$.Stream_toList_anon = {"": "Closure;result_0",
  call$1: function(data) {
    $.add$1$a(this.result_0, data);
  },
  $is_TimerCallback1: true
};

$$.Stream_toList_anon0 = {"": "Closure;result_1,future_2",
  call$0: function() {
    this.future_2._liblib0$_setValue$1(this.result_1);
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_newStar_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isStars;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_newStar_anon0 = {"": "Closure;star_0",
  call$1: function(e) {
    return this.star_0.collidesWith$1(e);
  },
  $is_TimerCallback1: true
};

$$.Stream_any_anon = {"": "Closure;box_0,test_1,future_2",
  call$1: function(element) {
    var t1, t2, t3;
    t1 = new $.Stream_any__anon(this.test_1, element);
    t2 = this.box_0;
    t3 = this.future_2;
    $._runUserCode(t1, new $.Stream_any__anon0(t2, t3), $._cancelAndError(t2.subscription_0, t3), null);
  },
  $is_TimerCallback1: true
};

$$.Stream_any__anon = {"": "Closure;test_3,element_4",
  call$0: function() {
    return this.test_3.call$1(this.element_4);
  },
  $is_TimerCallback0: true
};

$$.Stream_any__anon0 = {"": "Closure;box_0,future_5",
  call$1: function(isMatch) {
    if (isMatch === true) {
      this.box_0.subscription_0.cancel$0();
      this.future_5._liblib0$_setValue$1(true);
    }
  }
};

$$.Stream_any_anon0 = {"": "Closure;future_6",
  call$0: function() {
    this.future_6._liblib0$_setValue$1(false);
  },
  $is_TimerCallback0: true
};

$$._cancelAndError_anon = {"": "Closure;subscription_0,future_1",
  call$1: function(error) {
    this.subscription_0.cancel$0();
    this.future_1._setError$1(error);
  }
};

$$.Game_disableEntitiesByGroup_anon = {"": "Closure;groupId_0",
  call$1: function(e) {
    return $.$$eq$o(e.get$groupId(), this.groupId_0);
  },
  $is_TimerCallback1: true
};

$$.Game_disableEntitiesByGroup_anon0 = {"": "Closure;",
  call$1: function(e) {
    e.set$enabled(false);
    return false;
  },
  $is_TimerCallback1: true
};

$$.Game_removeEntitiesByGroup_anon = {"": "Closure;groupId_0",
  call$1: function(e) {
    return $.$$eq$o(e.get$groupId(), this.groupId_0);
  },
  $is_TimerCallback1: true
};

$$.Game_removeEntitiesByGroup_anon0 = {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  },
  $is_TimerCallback1: true
};

$$.Game_removeEntitiesByFilter_anon = {"": "Closure;f_0",
  call$1: function(e) {
    return this.f_0.call$1(e);
  },
  $is_TimerCallback1: true
};

$$.Game_removeEntitiesByFilter_anon0 = {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_gameOver_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_gameOver_anon0 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_gameOver_anon1 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_createGameOverMenu_anon = {"": "Closure;this_0",
  call$0: function() {
    this.this_0.newGame$0();
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createGameOverMenu_anon0 = {"": "Closure;this_1",
  call$0: function() {
    var t1, t2;
    t1 = this.this_1;
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createGameOverMenu__anon());
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createGameOverMenu__anon0());
    t2 = t1.get$ship();
    if (t2 != null)
      t2.removeFromGame$0();
    t1.set$state(1);
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createGameOverMenu__anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_createGameOverMenu__anon0 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  },
  $is_TimerCallback1: true
};

$$.GameButton_update_anon = {"": "Closure;this_0",
  call$1: function(t) {
    this.this_0.set$opacity(0.5);
    return 0.5;
  },
  $is_TimerCallback1: true
};

$$.Stream_contains_anon = {"": "Closure;box_0,match_1,future_2",
  call$1: function(element) {
    var t1, t2, t3;
    t1 = new $.Stream_contains__anon(this.match_1, element);
    t2 = this.box_0;
    t3 = this.future_2;
    $._runUserCode(t1, new $.Stream_contains__anon0(t2, t3), $._cancelAndError(t2.subscription_0, t3), null);
  },
  $is_TimerCallback1: true
};

$$.Stream_contains__anon = {"": "Closure;match_3,element_4",
  call$0: function() {
    return $.$$eq$o(this.element_4, this.match_3);
  },
  $is_TimerCallback0: true
};

$$.Stream_contains__anon0 = {"": "Closure;box_0,future_5",
  call$1: function(isMatch) {
    if (isMatch === true) {
      this.box_0.subscription_0.cancel$0();
      this.future_5._liblib0$_setValue$1(true);
    }
  }
};

$$.Stream_contains_anon0 = {"": "Closure;future_6",
  call$0: function() {
    this.future_6._liblib0$_setValue$1(false);
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_newGame_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isStars;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_newGame_anon0 = {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_newGame_anon1 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_newGame_anon2 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_newGame_anon3 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_startStars_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isStars;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_startStars_anon0 = {"": "Closure;star_0",
  call$1: function(e) {
    return this.star_0.collidesWith$1(e);
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_newPowerUp_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_newPowerUp_anon0 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_newPowerUp_anon1 = {"": "Closure;powerUp_0",
  call$1: function(e) {
    return this.powerUp_0.collidesWith$1(e);
  },
  $is_TimerCallback1: true
};

$$.Bullet_update_anon = {"": "Closure;this_0",
  call$1: function(t) {
    var t1 = this.this_0;
    t1.set$_waiting($.$$add$n(t1.get$_waiting(), 1));
    if ($.$$eq$o(t1.get$_waiting(), 1) === true) {
      t1.get$game().newMiniExplosion$2(t1.get$x(), t1.get$y());
      t1.get$game().addEntity$1($.Bullet$(t1.get$game(), t1.get$x(), $.$$add$n(t1.get$y(), 16), "straight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
      t1.get$game().addEntity$1($.Bullet$(t1.get$game(), t1.get$x(), $.$$add$n(t1.get$y(), 16), "left", $.random(350, 400, false), $.random(8, 16, false), "normal"));
      t1.get$game().addEntity$1($.Bullet$(t1.get$game(), t1.get$x(), $.$$add$n(t1.get$y(), 16), "right", $.random(350, 400, false), $.random(8, 16, false), "normal"));
      t1.get$game().addEntity$1($.Bullet$(t1.get$game(), t1.get$x(), $.$$add$n(t1.get$y(), 16), "farLeft", $.random(350, 400, false), $.random(8, 16, false), "normal"));
      t1.get$game().addEntity$1($.Bullet$(t1.get$game(), t1.get$x(), $.$$add$n(t1.get$y(), 16), "farRight", $.random(350, 400, false), $.random(8, 16, false), "normal"));
      t1.set$_removeFromGame(true);
      t.cancel$0();
    }
  },
  $is_TimerCallback1: true
};

$$.Bullet_update_anon0 = {"": "Closure;this_1",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet && this.this_1.collidesWith$1(e);
  },
  $is_TimerCallback1: true
};

$$.Bullet_update_anon1 = {"": "Closure;this_2",
  call$1: function(e) {
    var t1 = this.this_2;
    if ($.$$gt$n(t1.get$width(), e.get$width()) === true && $.$$gt$n(t1.get$height(), e.get$height()) === true && $.$$eq$o(e.get$x(), t1.get$x()) !== true && $.$$eq$o(e.get$y(), t1.get$y()) !== true) {
      t1.set$width($.$$sub$n(t1.get$width(), e.get$width()));
      t1.set$height($.$$sub$n(t1.get$height(), e.get$height()));
      e.removeFromGame$0();
    }
  },
  $is_TimerCallback1: true
};

$$.Bullet_update_anon2 = {"": "Closure;this_3",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy && this.this_3.collidesWith$1(e);
  },
  $is_TimerCallback1: true
};

$$.Bullet_update_anon3 = {"": "Closure;this_4",
  call$1: function(enemy) {
    var t1, t2;
    t1 = this.this_4;
    if ($.$$gt$n(t1.get$width(), enemy.get$width()) === true && $.$$gt$n(t1.get$height(), enemy.get$height()) === true) {
      t1.set$width($.$$sub$n(t1.get$width(), enemy.get$width()));
      t1.set$height($.$$sub$n(t1.get$height(), enemy.get$height()));
    } else
      t1.set$_removeFromGame(true);
    t2 = enemy.get$idNum();
    t1.get$game().set$targetId(t2);
    if ($.$$lt$n(t1.get$game().get$ship().get$bullet(), 3) === true) {
      t2 = t1.get$game().get$ship();
      t2.set$bullet($.$$add$n(t2.get$bullet(), 1));
    }
    if (t1.get$game().get$soundEffectsOn() === true)
      t1.get$game().get$sound().play$2("enemyHit", 0.5);
    if ($.$$eq$o(enemy.get$type(), "MotherShip") === true)
      t1.get$game().get$_motherShipEvent().signal$0();
    else if ($.$$eq$o(enemy.get$type(), "Boss") === true)
      t1.get$game().get$_bossHitEvent().signal$0();
    else if ($.$$eq$o(enemy.get$type(), "Normal") === true)
      t1.get$game().get$_normalHitEvent().signal$0();
    if ($.$$eq$o(enemy.get$type(), "Boss") !== true) {
      enemy.set$width($.$$sub$n(enemy.get$width(), 8));
      enemy.set$height($.$$sub$n(enemy.get$height(), 8));
    }
    enemy.set$health($.$$sub$n(enemy.get$health(), 1));
  }
};

$$.Bullet_update_anon4 = {"": "Closure;this_5",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isShip && this.this_5.collidesWith$1(e);
  },
  $is_TimerCallback1: true
};

$$.Bullet_update_anon5 = {"": "Closure;this_6",
  call$1: function(e) {
    var t1, t2;
    t1 = this.this_6;
    t2 = t1.get$game().get$ship();
    t2.set$lives($.$$sub$n(t2.get$lives(), 1));
    t1.get$game().get$_shipHitEvent().signal$0();
    if (t1.get$game().get$soundEffectsOn() === true)
      t1.get$game().get$sound().play$2("shipHit", 0.5);
    t1.get$game().removeBullets$0();
    t2 = t1.get$game().get$ship().get$maxBullet();
    t1.get$game().get$ship().set$bullet(t2);
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_removeBullets_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  },
  $is_TimerCallback1: true
};

$$.Particles_update_anon = {"": "Closure;this_0",
  call$1: function(t) {
    var t1 = this.this_0;
    t1.set$_waiting($.$$add$n(t1.get$_waiting(), 1));
    if ($.$$eq$o(t1.get$_waiting(), 1) === true) {
      t1.set$_removeFromGame(true);
      t.cancel$0();
    }
  },
  $is_TimerCallback1: true
};

$$.GalagaRenderer_bgFade_anon = {"": "Closure;this_0",
  call$0: function() {
    this.this_0.get$game().set$bgStyle("rgba(0, 0, 0, 0.75)");
    return "rgba(0, 0, 0, 0.75)";
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_bgFade_anon0 = {"": "Closure;this_1",
  call$0: function() {
    this.this_1.get$game().set$bgStyle("rgba(0, 0, 0, 0.70)");
    return "rgba(0, 0, 0, 0.70)";
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_bgFade_anon1 = {"": "Closure;this_2",
  call$0: function() {
    this.this_2.get$game().set$bgStyle("rgba(0, 0, 0, 0.65)");
    return "rgba(0, 0, 0, 0.65)";
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_bgFade_anon2 = {"": "Closure;this_3",
  call$0: function() {
    this.this_3.get$game().set$bgStyle("rgba(0, 0, 0, 0.60)");
    return "rgba(0, 0, 0, 0.60)";
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_bgFade_anon3 = {"": "Closure;this_4",
  call$0: function() {
    this.this_4.get$game().set$bgStyle("rgba(0, 0, 0, 0.55)");
    return "rgba(0, 0, 0, 0.55)";
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_bgFade_anon4 = {"": "Closure;this_5",
  call$0: function() {
    this.this_5.get$game().set$bgStyle("rgba(0, 0, 0, 0.60)");
    return "rgba(0, 0, 0, 0.60)";
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_bgFade_anon5 = {"": "Closure;this_6",
  call$0: function() {
    this.this_6.get$game().set$bgStyle("rgba(0, 0, 0, 0.65)");
    return "rgba(0, 0, 0, 0.65)";
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_bgFade_anon6 = {"": "Closure;this_7",
  call$0: function() {
    this.this_7.get$game().set$bgStyle("rgba(0, 0, 0, 0.70)");
    return "rgba(0, 0, 0, 0.70)";
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_bgFade_anon7 = {"": "Closure;this_8",
  call$0: function() {
    this.this_8.get$game().set$bgStyle("rgba(0, 0, 0, 0.75)");
    return "rgba(0, 0, 0, 0.75)";
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_bgFade_anon8 = {"": "Closure;this_9",
  call$0: function() {
    this.this_9.get$game().set$bgStyle("rgba(0, 0, 0, 0.80)");
    return "rgba(0, 0, 0, 0.80)";
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_bgFade_anon9 = {"": "Closure;this_10",
  call$0: function() {
    this.this_10.get$game().set$bgStyle("rgba(0, 0, 0, 0.85)");
    return "rgba(0, 0, 0, 0.85)";
  },
  $is_TimerCallback0: true
};

$$.Enemy_update_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  },
  $is_TimerCallback1: true
};

$$.Enemy_update_anon0 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  },
  $is_TimerCallback1: true
};

$$.Enemy_update_anon1 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_switchDirection_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_switchDirection_anon0 = {"": "Closure;",
  call$1: function(e) {
    var t1;
    if ($.$$eq$o(e.get$type(), "Normal") === true) {
      t1 = e.get$momentum();
      t1.set$xVel($.$$mul$n(t1.get$xVel(), -1));
      if ($.$$ge$n(e.get$momentum().get$xVel(), 0) === true)
        e.set$x($.$$add$n(e.get$x(), 3));
      else
        e.set$x($.$$sub$n(e.get$x(), 3));
    }
  }
};

$$.GalagaGame_canEnemyFall_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_canEnemyFall_anon0 = {"": "Closure;box_0",
  call$1: function(e) {
    var t1;
    if ($.$$eq$o(e.get$type(), "Normal") === true && $.$$eq$o(e.get$isFalling(), true) === true) {
      t1 = this.box_0;
      t1.x_0 = $.$$add$n(t1.x_0, 1);
    }
  }
};

$$.GalagaGame_newBossDrone_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_newBossDrone_anon0 = {"": "Closure;box_0",
  call$1: function(e) {
    var t1;
    if ($.$$eq$o($.propertyTypeCast(e, "$isEnemy").type, "Drone") === true) {
      t1 = this.box_0;
      t1.x_0 = $.$$add$n(t1.x_0, 1);
    }
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_getEnemyY_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_getEnemyY_anon0 = {"": "Closure;type_0",
  call$1: function(e) {
    if ($.$$eq$o(e.get$type(), this.type_0) === true && $.$$eq$o(e.get$isFalling(), true) === true)
      return e.get$y();
  }
};

$$.GalagaGame_getEnemyX_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_getEnemyX_anon0 = {"": "Closure;type_0",
  call$1: function(e) {
    if ($.$$eq$o(e.get$type(), this.type_0) === true && $.$$eq$o(e.get$isFalling(), true) === true)
      return e.get$x();
  }
};

$$.AsyncError_throwDelayed_reportError = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.Primitives_printString("Uncaught Error: " + $.S(t1.get$error()));
    t1 = t1.get$stackTrace();
    if (t1 != null)
      $.Primitives_printString("Stack Trace:\n" + $.S(t1) + "\n");
  },
  $is_TimerCallback0: true
};

$$.AsyncError_throwDelayed_anon = {"": "Closure;this_1,reportError_2",
  call$0: function() {
    this.reportError_2.call$0();
    throw $.$$throw(this.this_1.get$error());
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_newMotherShip_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_newMotherShip_anon0 = {"": "Closure;box_0",
  call$1: function(e) {
    var t1;
    if ($.$$eq$o(e.get$type(), "MotherShip") === true) {
      t1 = this.box_0;
      t1.x_0 = $.$$add$n(t1.x_0, 1);
    }
  }
};

$$.GalagaGame_waiting_anon = {"": "Closure;this_0",
  call$1: function(t) {
    var t1, i, t2;
    t1 = this.this_0;
    t1.set$_waiting($.$$add$n(t1.get$_waiting(), 1));
    if ($.$$eq$o(t1.get$_waiting(), 3) === true) {
      $.forEach$1$a($.toList$0$a($.where$1$a(t1.get$entities(), new $.GalagaGame_waiting__anon())), new $.GalagaGame_waiting__anon0());
      for (i = 0; i < 50; ++i) {
        if ($.$$lt$n(t1.get$colorCount(), 7) === true)
          t1.set$colorCount($.$$add$n(t1.get$colorCount(), 1));
        else if ($.$$ge$n(t1.get$colorCount(), 7) === true)
          t1.set$colorCount(1);
        t1.startStars$0();
      }
      t1.set$enemyX(-400);
      t1.set$enemyY(-165);
      t1.set$enemyAmount(33);
      if ($.$$lt$n(t1.get$difficulty(), 5) === true)
        t1.set$difficulty($.$$add$n(t1.get$difficulty(), 1));
      if ($.$$ge$n(t1.get$visualLevel(), t1.get$bonusCheck()) === true) {
        t1.set$bonusStage(true);
        t1.set$tutorial(false);
        t1.set$bonusCheck($.$$add$n(t1.get$bonusCheck(), 3));
      } else
        t1.set$bonusStage(false);
      if ($.$$eq$o(t1.get$bonusStage(), true) === true)
        t1.newBoss$0();
      else
        for (i = 0; i < 33; ++i)
          t1.newEnemy$1(t1.get$difficulty());
      t1.set$state(3);
      t1.get$timer().set$timeDecrease(true);
      t2 = $.$$index$as(t1.get$Options(), "time");
      t1.get$timer().set$gameTime(t2);
      t.cancel$0();
    }
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_waiting__anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isStars;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_waiting__anon0 = {"": "Closure;",
  call$1: function(e) {
    return e.removeFromGame$0();
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_createLeaderBoardMenu_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.set$state(1);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn() === true)
      t1.get$sound().play$1("cursorSelect2");
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createControlsMenu_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.set$state(6);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn() === true)
      t1.get$sound().play$1("cursorSelect2");
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createPausedMenu_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1.get$ship();
    if (t2 != null)
      t2.removeFromGame$0();
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createPausedMenu__anon());
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createPausedMenu__anon0());
    t1.removeEntitiesByFilter$1(new $.GalagaGame_createPausedMenu__anon1());
    t1.get$_statUpdateEvent().signal$0();
    t1.gameOver$0();
    t1.set$state(1);
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createPausedMenu__anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isPowerUp;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_createPausedMenu__anon0 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isBullet;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_createPausedMenu__anon1 = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaGame_createStatsMenu_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.set$state(1);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn() === true)
      t1.get$sound().play$1("cursorSelect2");
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createStatsMenu_anon0 = {"": "Closure;this_1",
  call$0: function() {
    return this.this_1.resetStats$0();
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createWelcomeMenu_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.newGame$0();
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn() === true)
      t1.get$sound().play$1("cursorSelect");
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createWelcomeMenu_anon0 = {"": "Closure;this_1",
  call$0: function() {
    var t1 = this.this_1;
    t1.removeEntitiesByGroup$1("stats");
    t1.createStatsMenu$0();
    t1.set$state(5);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn() === true)
      t1.get$sound().play$1("cursorSelect2");
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createWelcomeMenu_anon1 = {"": "Closure;this_2",
  call$0: function() {
    var t1 = this.this_2;
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t1.set$state(6);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn() === true)
      t1.get$sound().play$1("cursorSelect2");
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createWelcomeMenu_anon2 = {"": "Closure;this_3",
  call$0: function() {
    var t1 = this.this_3;
    t1.removeEntitiesByGroup$1("leaders");
    t1.createLeaderBoardMenu$0();
    t1.set$state(9);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn() === true)
      t1.get$sound().play$1("cursorSelect2");
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createOptionsMenu_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_0;
    t2 = $.$$ge$n($.$$index$as(t1.get$Options(), "startLives"), 10);
    t3 = t1.get$Options();
    if (t2 === true)
      $.$$indexSet$a(t3, "startLives", 1);
    else {
      t2 = $.getInterceptor$as(t3);
      t2.$indexSet(t3, "startLives", $.$$add$n(t2.$index(t3, "startLives"), 1));
    }
    t1.get$_statUpdateEvent().signal$0();
    t1.set$state(1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t1.set$state(6);
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createOptionsMenu_anon0 = {"": "Closure;this_1",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_1;
    t2 = $.$$ge$n($.$$index$as(t1.get$Options(), "bulletCap"), 10);
    t3 = t1.get$Options();
    if (t2 === true)
      $.$$indexSet$a(t3, "bulletCap", 1);
    else {
      t2 = $.getInterceptor$as(t3);
      t2.$indexSet(t3, "bulletCap", $.$$add$n(t2.$index(t3, "bulletCap"), 1));
    }
    t1.get$_statUpdateEvent().signal$0();
    t1.set$state(1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t1.set$state(6);
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createOptionsMenu_anon1 = {"": "Closure;this_2",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_2;
    t2 = $.$$ge$n($.$$index$as(t1.get$Options(), "time"), 180);
    t3 = t1.get$Options();
    if (t2 === true)
      $.$$indexSet$a(t3, "time", 0);
    else {
      t2 = $.getInterceptor$as(t3);
      t2.$indexSet(t3, "time", $.$$add$n(t2.$index(t3, "time"), 20));
    }
    t1.get$_statUpdateEvent().signal$0();
    t1.set$state(1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t1.set$state(6);
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createOptionsMenu_anon2 = {"": "Closure;this_3",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_3;
    t2 = $.$$ge$n($.$$index$as(t1.get$Options(), "difficulty"), 5);
    t3 = t1.get$Options();
    if (t2 === true)
      $.$$indexSet$a(t3, "difficulty", 1);
    else {
      t2 = $.getInterceptor$as(t3);
      t2.$indexSet(t3, "difficulty", $.$$add$n(t2.$index(t3, "difficulty"), 1));
    }
    t1.get$_statUpdateEvent().signal$0();
    t1.set$state(1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t1.set$state(6);
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createOptionsMenu_anon3 = {"": "Closure;this_4",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_4;
    t2 = $.$$ge$n($.$$index$as(t1.get$Options(), "powerups"), 2);
    t3 = t1.get$Options();
    if (t2 === true)
      $.$$indexSet$a(t3, "powerups", 1);
    else {
      t2 = $.getInterceptor$as(t3);
      t2.$indexSet(t3, "powerups", $.$$add$n(t2.$index(t3, "powerups"), 1));
    }
    t1.get$_statUpdateEvent().signal$0();
    t1.set$state(1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t1.set$state(6);
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createOptionsMenu_anon4 = {"": "Closure;this_5",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_5;
    t2 = $.$$ge$n($.$$index$as(t1.get$Options(), "soundeffects"), 2);
    t3 = t1.get$Options();
    if (t2 === true)
      $.$$indexSet$a(t3, "soundeffects", 1);
    else {
      t2 = $.getInterceptor$as(t3);
      t2.$indexSet(t3, "soundeffects", $.$$add$n(t2.$index(t3, "soundeffects"), 1));
    }
    if ($.$$eq$o($.$$index$as(t1.get$Options(), "soundeffects"), 1) === true)
      t1.set$soundEffectsOn(true);
    else
      t1.set$soundEffectsOn(false);
    t1.get$_statUpdateEvent().signal$0();
    t1.set$state(1);
    t1.removeEntitiesByGroup$1("options");
    t1.createOptionsMenu$0();
    t1.set$state(6);
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createOptionsMenu_anon5 = {"": "Closure;this_6",
  call$0: function() {
    return this.this_6.resetOptions$0();
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createOptionsMenu_anon6 = {"": "Closure;this_7",
  call$0: function() {
    var t1 = this.this_7;
    t1.set$state(7);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn() === true)
      t1.get$sound().play$1("cursorSelect2");
  },
  $is_TimerCallback0: true
};

$$.GalagaGame_createOptionsMenu_anon7 = {"": "Closure;this_8",
  call$0: function() {
    var t1 = this.this_8;
    t1.set$state(1);
    t1.get$_statUpdateEvent().signal$0();
    if (t1.get$soundEffectsOn() === true)
      t1.get$sound().play$1("cursorSelect2");
  },
  $is_TimerCallback0: true
};

$$.Game_enableEntitiesByGroup_anon = {"": "Closure;groupId_0",
  call$1: function(e) {
    return $.$$eq$o(e.get$groupId(), this.groupId_0);
  },
  $is_TimerCallback1: true
};

$$.Game_enableEntitiesByGroup_anon0 = {"": "Closure;",
  call$1: function(e) {
    e.set$enabled(true);
    return true;
  },
  $is_TimerCallback1: true
};

$$.HtmlGameSound_play_anon = {"": "Closure;box_0",
  call$1: function(e) {
    if ($.Game_debugMode === true)
      $.Primitives_printString("removed");
    this.box_0.audioCopy_0.remove$0();
  },
  $is_TimerCallback1: true
};

$$.CssClassSet_add_anon = {"": "Closure;value_0",
  call$1: function(s) {
    return $.add$1$a(s, this.value_0);
  },
  $is_TimerCallback1: true
};

$$.Stream_isEmpty_anon = {"": "Closure;box_0,future_1",
  call$1: function(_) {
    this.box_0.subscription_0.cancel$0();
    this.future_1._liblib0$_setValue$1(false);
  },
  $is_TimerCallback1: true
};

$$.Stream_isEmpty_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._liblib0$_setValue$1(true);
  },
  $is_TimerCallback0: true
};

$$.convertDartToNative_Dictionary_anon = {"": "Closure;object_0",
  call$2: function(key, value) {
    this.object_0[key] = value;
  }
};

$$._StreamImpl__sendData_anon = {"": "Closure;value_0",
  call$1: function(subscriber) {
    var e, e0, s, exception, t1;
    try {
      subscriber._sendData$1(this.value_0);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        e.throwDelayed$0();
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$(e0, s).throwDelayed$0();
      }
    }

  },
  $is_TimerCallback1: true
};

$$._StreamImpl__sendDone_anon = {"": "Closure;this_0",
  call$1: function(subscriber) {
    var e, e0, s, exception, t1;
    this.this_0._cancel$1(subscriber);
    try {
      subscriber._sendDone$0();
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        e.throwDelayed$0();
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$(e0, s).throwDelayed$0();
      }
    }

  },
  $is_TimerCallback1: true
};

$$._StreamImpl__sendError_anon = {"": "Closure;error_0",
  call$1: function(subscriber) {
    var e, e0, s, exception, t1;
    try {
      subscriber._sendError$1(this.error_0);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        e.throwDelayed$0();
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$withCause(e0, s, this.error_0).throwDelayed$0();
      }
    }

  },
  $is_TimerCallback1: true
};

$$._DoneSubscription__delayDone_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    if (t1.get$_handler() != null)
      t1._handler$0();
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_init_anon = {"": "Closure;this_0",
  call$1: function(e) {
    var t1 = this.this_0;
    t1.bgFade$0();
    t1.updateStats$0();
    return;
  },
  $is_TimerCallback1: true
};

$$.GalagaRenderer_init_anon0 = {"": "Closure;this_1",
  call$1: function(e) {
    return this.this_1.shipHit$0();
  },
  $is_TimerCallback1: true
};

$$.GalagaRenderer_init_anon1 = {"": "Closure;this_2",
  call$1: function(e) {
    return this.this_2.updateStats$0();
  },
  $is_TimerCallback1: true
};

$$.GalagaRenderer_init_anon2 = {"": "Closure;this_3",
  call$1: function(e) {
    return this.this_3.motherShipHit$0();
  },
  $is_TimerCallback1: true
};

$$.GalagaRenderer_init_anon3 = {"": "Closure;this_4",
  call$1: function(e) {
    return this.this_4.bossHit$0();
  },
  $is_TimerCallback1: true
};

$$.GalagaRenderer_init_anon4 = {"": "Closure;this_5",
  call$1: function(e) {
    return this.this_5.normalShipHit$0();
  },
  $is_TimerCallback1: true
};

$$.GalagaRenderer_normalShipHit_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaRenderer_normalShipHit_anon0 = {"": "Closure;this_0",
  call$1: function(e) {
    if ($.$$eq$o(e.get$type(), "Normal") === true && $.$$eq$o(e.get$idNum(), this.this_0.get$game().get$targetId()) === true) {
      $.Timer_Timer($.CONSTANT20, new $.GalagaRenderer_normalShipHit__anon(e));
      $.Timer_Timer($.CONSTANT21, new $.GalagaRenderer_normalShipHit__anon0(e));
      $.Timer_Timer($.CONSTANT24, new $.GalagaRenderer_normalShipHit__anon1(e));
      $.Timer_Timer($.CONSTANT27, new $.GalagaRenderer_normalShipHit__anon2(e));
    }
  }
};

$$.GalagaRenderer_normalShipHit__anon = {"": "Closure;e_1",
  call$0: function() {
    this.e_1.set$opacity(0);
    return 0;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_normalShipHit__anon0 = {"": "Closure;e_2",
  call$0: function() {
    this.e_2.set$opacity(1);
    return 1;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_normalShipHit__anon1 = {"": "Closure;e_3",
  call$0: function() {
    this.e_3.set$opacity(0);
    return 0;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_normalShipHit__anon2 = {"": "Closure;e_4",
  call$0: function() {
    this.e_4.set$opacity(1);
    return 1;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_bossHit_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaRenderer_bossHit_anon0 = {"": "Closure;this_0",
  call$1: function(e) {
    if ($.$$eq$o(e.get$type(), "Boss") === true && $.$$eq$o(e.get$idNum(), this.this_0.get$game().get$targetId()) === true) {
      $.Timer_Timer($.CONSTANT20, new $.GalagaRenderer_bossHit__anon(e));
      $.Timer_Timer($.CONSTANT21, new $.GalagaRenderer_bossHit__anon0(e));
    }
  }
};

$$.GalagaRenderer_bossHit__anon = {"": "Closure;e_1",
  call$0: function() {
    this.e_1.set$opacity(0);
    return 0;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_bossHit__anon0 = {"": "Closure;e_2",
  call$0: function() {
    this.e_2.set$opacity(1);
    return 1;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_motherShipHit_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && !!e.$isEnemy;
  },
  $is_TimerCallback1: true
};

$$.GalagaRenderer_motherShipHit_anon0 = {"": "Closure;this_0",
  call$1: function(e) {
    if ($.$$eq$o(e.get$type(), "MotherShip") === true && $.$$eq$o(e.get$idNum(), this.this_0.get$game().get$targetId()) === true) {
      $.Timer_Timer($.CONSTANT20, new $.GalagaRenderer_motherShipHit__anon(e));
      $.Timer_Timer($.CONSTANT21, new $.GalagaRenderer_motherShipHit__anon0(e));
      $.Timer_Timer($.CONSTANT24, new $.GalagaRenderer_motherShipHit__anon1(e));
      $.Timer_Timer($.CONSTANT27, new $.GalagaRenderer_motherShipHit__anon2(e));
      $.Timer_Timer($.CONSTANT31, new $.GalagaRenderer_motherShipHit__anon3(e));
      $.Timer_Timer($.CONSTANT32, new $.GalagaRenderer_motherShipHit__anon4(e));
    }
  }
};

$$.GalagaRenderer_motherShipHit__anon = {"": "Closure;e_1",
  call$0: function() {
    this.e_1.set$opacity(0);
    return 0;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_motherShipHit__anon0 = {"": "Closure;e_2",
  call$0: function() {
    this.e_2.set$opacity(1);
    return 1;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_motherShipHit__anon1 = {"": "Closure;e_3",
  call$0: function() {
    this.e_3.set$opacity(0);
    return 0;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_motherShipHit__anon2 = {"": "Closure;e_4",
  call$0: function() {
    this.e_4.set$opacity(1);
    return 1;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_motherShipHit__anon3 = {"": "Closure;e_5",
  call$0: function() {
    this.e_5.set$opacity(0);
    return 0;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_motherShipHit__anon4 = {"": "Closure;e_6",
  call$0: function() {
    this.e_6.set$opacity(1);
    return 1;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_shipHit_anon = {"": "Closure;this_0",
  call$0: function() {
    this.this_0.get$game().get$ship().set$opacity(0);
    return 0;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_shipHit_anon0 = {"": "Closure;this_1",
  call$0: function() {
    this.this_1.get$game().get$ship().set$opacity(0.2);
    return 0.2;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_shipHit_anon1 = {"": "Closure;this_2",
  call$0: function() {
    this.this_2.get$game().get$ship().set$opacity(0);
    return 0;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_shipHit_anon2 = {"": "Closure;this_3",
  call$0: function() {
    this.this_3.get$game().get$ship().set$opacity(0.2);
    return 0.2;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_shipHit_anon3 = {"": "Closure;this_4",
  call$0: function() {
    this.this_4.get$game().get$ship().set$opacity(0);
    return 0;
  },
  $is_TimerCallback0: true
};

$$.GalagaRenderer_shipHit_anon4 = {"": "Closure;this_5",
  call$0: function() {
    this.this_5.get$game().get$ship().set$opacity(0.2);
    return 0.2;
  },
  $is_TimerCallback0: true
};

$$.DateTime_toString_fourDigits = {"": "Closure;",
  call$1: function(n) {
    var t1, absN, sign;
    t1 = $.getInterceptor$n(n);
    absN = t1.abs$0(n);
    sign = t1.$lt(n, 0) === true ? "-" : "";
    if (absN >= 1000)
      return $.S(n);
    if (absN >= 100)
      return sign + "0" + $.S(absN);
    if (absN >= 10)
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  }
};

$$.DateTime_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100) === true)
      return $.S(n);
    if (t1.$ge(n, 10) === true)
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
};

$$.DateTime_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$$ge$n(n, 10) === true)
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$._EventLoop__runHelper_next = {"": "Closure;this_0",
  call$0: function() {
    if (!this.this_0.runIteration$0())
      return;
    $.Timer_Timer($.CONSTANT8, this);
  },
  $is_TimerCallback0: true
};

$$._BaseSendPort_call_anon = {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1;
    this.port_1.close$0();
    t1 = this.completer_0;
    if (typeof value === "object" && value !== null && !!value.$isException)
      t1.completeError$1(value);
    else
      t1.complete$1(value);
  }
};

$$._WorkerSendPort_send_anon = {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage, manager;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($globalState.isWorker === true)
      $globalState.mainManager.postMessage$1(workerMessage);
    else {
      manager = $.$$index$as($globalState.managers, t1.get$_workerId());
      if (manager != null)
        manager.postMessage$1(workerMessage);
    }
  },
  $is_TimerCallback0: true
};

$$._waitForPendingPorts_anon = {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  },
  $is_TimerCallback1: true
};

$$._FutureImpl__handleValue_anon = {"": "Closure;thenFuture_0,value_1",
  call$0: function() {
    this.thenFuture_0._sendValue$1(this.value_1);
  },
  $is_TimerCallback0: true
};

$$._FutureImpl__handleError_anon = {"": "Closure;error_0,errorFuture_1",
  call$0: function() {
    this.errorFuture_1._sendError$1(this.error_0);
  },
  $is_TimerCallback0: true
};

$$._FutureImpl__FutureImpl$wait_handleError = {"": "Closure;box_0",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.values_1 != null) {
      t1.values_1 = null;
      t1.completer_0.completeError$2(error.get$error(), error.get$stackTrace());
    }
  },
  $is_TimerCallback1: true
};

$$._FutureImpl__FutureImpl$wait_anon = {"": "Closure;box_0,pos_1",
  call$1: function(value) {
    var t1, t2;
    t1 = this.box_0;
    t2 = t1.values_1;
    if (t2 == null)
      return;
    $.$$indexSet$a(t2, this.pos_1, value);
    t1.remaining_2 = $.$$sub$n(t1.remaining_2, 1);
    if ($.$$eq$o(t1.remaining_2, 0) === true)
      t1.completer_0.complete$1(t1.values_1);
  },
  $is_TimerCallback1: true
};

$$._PendingSendPortFinder_visitMap_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  },
  $is_TimerCallback1: true
};

$$.Storage_values_anon = {"": "Closure;values_0",
  call$2: function(k, v) {
    return $.add$1$a(this.values_0, v);
  }
};

$$._PendingSendPortFinder_visitList_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  },
  $is_TimerCallback1: true
};

$$._NativeJsSendPort_send_anon = {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    isolate = $.$$index$as($globalState.isolates, t2.get$_isolateId());
    if (isolate == null)
      return;
    if (t2.get$_receivePort().get$_liblib5$_callback() == null)
      return;
    shouldSerialize = $globalState.currentContext != null && $.$$eq$o($globalState.currentContext.get$id(), t2.get$_isolateId()) !== true;
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    $globalState.topEventLoop.enqueue$3(isolate, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), "receive " + $.S(msg));
  },
  $is_TimerCallback0: true
};

$$._NativeJsSendPort_send__anon = {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (t1.get$_receivePort().get$_liblib5$_callback() != null) {
      if (this.shouldSerialize_5 === true) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t1 = t1.get$_receivePort();
      t2 = this.box_0;
      t1._liblib5$_callback$2(t2.msg_0, t2.reply_1);
    }
  },
  $is_TimerCallback0: true
};

$$.Storage_keys_anon = {"": "Closure;keys_0",
  call$2: function(k, v) {
    return $.add$1$a(this.keys_0, k);
  }
};

$$._Copier_visitMap_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1, t2;
    t1 = this.box_0.copy_0;
    t2 = this.this_1;
    $.$$indexSet$a(t1, t2._dispatch$1(key), t2._dispatch$1(val));
  }
};

$$.IsolateNatives__processWorkerMessage_function = {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  },
  $is_TimerCallback0: true
};

$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  }
};

$$.BoundClosure$1 = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};
$$.Bound__handleData__ForwardingStreamSubscription = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  },
  $is_TimerCallback1: true
};
$$.Bound__handleDone__ForwardingStreamSubscription = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  },
  $is_TimerCallback0: true
};
$$.Bound_fill_CanvasRenderingContext2D = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  },
  call$0: function() {
    return this.call$1(null);
  },
  $is_TimerCallback0: true
};
$$.BoundClosure$4 = {"": "Closure;self,target",
  call$4: function(p0, p1, p2, p3) {
    return this.self[this.target](p0, p1, p2, p3);
  }
};
$$.Bound_click_Element = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  },
  $is_TimerCallback0: true
};
$$.Bound_click_SvgElement = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  },
  $is_TimerCallback0: true
};
$$.BoundClosure$0 = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  }
};
$$.Bound_loop_HtmlGameLoop = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  },
  $is_TimerCallback1: true
};
$.ListIterator$ = function(iterable) {
  return new $.ListIterator(iterable, iterable.length, 0, null);
};

$.WhereIterable$ = function(_iterable, _f) {
  return new $.WhereIterable(_iterable, _f);
};

$.WhereIterator$ = function(_iterator, _f) {
  return new $.WhereIterator(_iterator, _f);
};

$.ToString_collectionToString = function(c) {
  var result = $.StringBuffer$("");
  $.ToString__emitCollection(c, result, $.List_List(0));
  return result.toString$0();
};

$.ToString__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$a(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === "object" && c !== null && (c.constructor === Array || c.$isList());
  t2 = isList ? "[" : "{";
  t3 = $.getInterceptor$a(result);
  t3.add$1(result, t2);
  for (t2 = $.get$iterator$a(c), first = true; t2.moveNext$0() === true; first = false) {
    t4 = t2.get$current();
    if (!first)
      t3.add$1(result, ", ");
    $.ToString__emitObject(t4, result, visiting);
  }
  t3.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.ToString__emitObject = function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || o.$isCollection()))
    if ($.ToString__containsRef(visiting, o))
      $.add$1$a(result, typeof o === "object" && o !== null && (o.constructor === Array || o.$isList()) ? "[...]" : "{...}");
    else
      $.ToString__emitCollection(o, result, visiting);
  else if (typeof o === "object" && o !== null && o.$isMap())
    if ($.ToString__containsRef(visiting, o))
      $.add$1$a(result, "{...}");
    else
      $.ToString__emitMap(o, result, visiting);
  else
    $.add$1$a(result, o);
};

$.ToString__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.get$iterator$a(c); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.ToString_mapToString = function(m) {
  var result = $.StringBuffer$("");
  $.ToString__emitMap(m, result, $.List_List(0));
  return result.toString$0();
};

$.ToString__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$a(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$a(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.forEach$1$a(m, new $.ToString__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$._callInIsolate = function(isolate, $function) {
  isolate.eval$1($function);
  $globalState.topEventLoop.run$0();
};

$._currentIsolate = function() {
  return $globalState.currentContext;
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($globalState.isWorker === true)
    return;
  rootContext = $._IsolateContext$();
  $globalState.rootContext = rootContext;
  $globalState.currentContext = rootContext;
  rootContext.eval$1(entry);
  $globalState.topEventLoop.run$0();
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue(), 0);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.IsolateNatives_computeThisScript = function() {
  var currentScript, stack, matches;
  currentScript = $.$currentScript;
  if (currentScript != null)
    return String(currentScript.src);
  stack = new Error().stack;
  if (stack == null)
    stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
  matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
  if (matches != null)
    return matches[1];
  matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
  if (matches != null)
    return matches[1];
  throw $.$$throw($.UnsupportedError$("Cannot extract URI from \"" + $.S(stack) + "\""));
};

$.IsolateNatives_computeGlobalThis = function() {
  return function() { return this; }();
};

$.IsolateNatives__processWorkerMessage = function(sender, e) {
  var msg, t1, t2, entryPoint, replyTo, context;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$as(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      t2 = t1.$index(msg, "id");
      $globalState.currentManagerId = t2;
      entryPoint = $[t1.$index(msg, "functionName")];
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = $._IsolateContext$();
      $globalState.topEventLoop.enqueue$3(context, new $.IsolateNatives__processWorkerMessage_function(entryPoint, replyTo), "worker-start");
      $globalState.currentContext = context;
      $globalState.topEventLoop.run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (t1.$index(msg, "port") != null)
        t1.$index(msg, "port").send$2(t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $globalState.topEventLoop.run$0();
      break;
    case "close":
      $.IsolateNatives__log("Closing Worker");
      $.remove$1$a($globalState.managers, sender.get$id());
      sender.terminate$0();
      $globalState.topEventLoop.run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.isWorker === true)
        $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg])));
      else
        $.Primitives_printString($.toString$0$abfnosu(t1.$index(msg, "msg")));
      break;
    case "error":
      throw $.$$throw(t1.$index(msg, "msg"));
  }
};

$.IsolateNatives__log = function(msg) {
  var trace, exception;
  if ($globalState.isWorker === true)
    $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg])));
  else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.$$throw($._ExceptionImplementation$(trace));
    }

};

$.IsolateNatives__startIsolate = function(topLevel, replyTo) {
  $.lazyPort = $.ReceivePortImpl$();
  replyTo.send$2("spawned", $._Isolate_port().toSendPort$0());
  topLevel.call$0();
};

$.IsolateNatives__spawnWorker = function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (functionName == null)
    functionName = "main";
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.set$onmessage(function(e) { $.IsolateNatives__processWorkerMessage.call$2(worker, e); });
  t1 = $globalState;
  workerId = t1.nextManagerId;
  t1.nextManagerId = workerId + 1;
  worker.set$id(workerId);
  $.$$indexSet$a($globalState.managers, workerId, worker);
  worker.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.ReceivePortImpl$ = function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$$add$n(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $._FutureImpl__FutureImpl$wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._PendingSendPortFinder$ = function() {
  var t1 = new $._PendingSendPortFinder([], $._MessageTraverserVisitedMap$());
  t1._PendingSendPortFinder$0();
  return t1;
};

$._serializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.TimerImpl$ = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
};

$.TimerImpl$repeating = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(false, false, null);
  t1.TimerImpl$repeating$2(milliseconds, callback);
  return t1;
};

$.hasTimer = function() {
  return $.get$globalThis().setTimeout != null;
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number" && value !== 0 || typeof value === "boolean")
    return String(value);
  if (value == null)
    return "null";
  res = $.toString$0$abfnosu(value);
  if (!(typeof res === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.$$add$n($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives__throwFormatException = function(string) {
  throw $.$$throw($.FormatException$(string));
};

$.Primitives_parseInt = function(source, radix, handleError) {
  var match, t1, maxCharCode, digitsPart, i;
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  $.checkString(source);
  match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
  if (radix == null) {
    t1 = $.getInterceptor(match);
    if (match != null) {
      if (t1.$index(match, 2) != null)
        return parseInt(source, 16);
      if (t1.$index(match, 3) != null)
        return parseInt(source, 10);
      return handleError.call$1(source);
    }
    radix = 10;
  } else {
    if (!(typeof radix === "number" && Math.floor(radix) === radix))
      throw $.$$throw($.ArgumentError$("Radix is not an integer"));
    if (radix < 2 || radix > 36)
      throw $.$$throw($.RangeError$("Radix " + $.S(radix) + " not in range 2..36"));
    t1 = $.getInterceptor(match);
    if (match != null) {
      if (radix === 10 && t1.$index(match, 3) != null)
        return parseInt(source, 10);
      if (radix < 10 || t1.$index(match, 3) == null) {
        maxCharCode = radix <= 10 ? 48 + radix - 1 : 97 + radix - 10 - 1;
        digitsPart = $.toLowerCase$0$s(t1.$index(match, 1));
        for (i = 0; i < digitsPart.length; ++i)
          if ($.CONSTANT9.charCodeAt$1(digitsPart, i) > maxCharCode)
            return handleError.call$1(source);
      }
    }
    radix = radix;
  }
  if (match == null)
    return handleError.call$1(source);
  return parseInt(source, radix);
};

$.Primitives_objectTypeName = function(object) {
  var $name, decompiled, t1;
  $name = $.constructorNameFallback(object);
  if ($.$$eq$o($name, "Object") === true) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  t1 = $.getInterceptor$s($name);
  return t1.charCodeAt$1($name, 0) === 36 ? t1.substring$1($name, 1) : $name;
};

$.Primitives_newFixedList = function($length) {
  var result = new Array($length);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === "number"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.CONSTANT;
  wrapper = $.DartError$(ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.$$throw);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
};

$.DartError$ = function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
};

$.DartError_toStringWrapper = function() {
  return $.toString$0$abfnosu(this);
};

$.unwrapException = function(ex) {
  var message, type, $name, t1, ieErrorCode, ieFacilityNumber, t2;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    $name = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") === -1) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") === true || t1.$eq(type, "called_non_callable") === true || t1.$eq(type, "non_object_property_call") === true || t1.$eq(type, "non_object_property_load") === true;
    } else
      t1 = true;
    if (t1)
      return $.NoSuchMethodError$(null, $name, [], $.makeLiteralMap([]), null);
    else if ($.$$eq$o(type, "undefined_method") === true)
      return $.NoSuchMethodError$("", $name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1)
      if (message === "null has no properties" || message === "'null' is not an object" || $.CONSTANT9.endsWith$1(message, "is null") === true || $.CONSTANT9.endsWith$1(message, "is undefined") === true || $.CONSTANT9.endsWith$1(message, "is null or undefined") === true || $.CONSTANT9.endsWith$1(message, "of undefined") === true || $.CONSTANT9.endsWith$1(message, "of null") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    t1 = t1 ? message : "";
    return $._ExceptionImplementation$(t1);
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, key;
  iterator = $.CONSTANT11.get$iterator(keyValuePairs);
  result = $.LinkedHashMap$();
  for (; iterator.moveNext$0();) {
    key = iterator.get$current();
    iterator.moveNext$0();
    result.$indexSet(key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if (t1.$eq(numberOfArguments, 1) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($._ExceptionImplementation$("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $._currentIsolate();
  $function = function($0, $1) { return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, $0, $1); };
  closure.$identity = $function;
  return $function;
};

$.propertyTypeCastError = function(value, property) {
  var t1 = $.getInterceptor$as(property);
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.callTypeCast = function(value, property) {
  var t1;
  if (value != null)
    t1 = typeof value === "object" && value[property]();
  else
    t1 = true;
  if (t1)
    return value;
  $.propertyTypeCastError(value, property);
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation("CastError: Casting value of type " + $.S(actualType) + " to" + " incompatible type " + expectedType);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var $name = tag;
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "WebKitMutationObserver")
    return "MutationObserver";
  if ($name === "AudioChannelMerger")
    return "ChannelMergerNode";
  if ($name === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if ($name === "AudioGainNode")
    return "GainNode";
  if ($name === "AudioPannerNode")
    return "PannerNode";
  if ($name === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if ($name === "Oscillator")
    return "OscillatorNode";
  if ($name === "RealtimeAnalyserNode")
    return "AnalyserNode";
  if ($name === "IDBVersionChangeRequest")
    return "IDBOpenDBRequest";
  return $name;
};

$.typeNameInOpera = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "ApplicationCache")
    return "DOMApplicationCache";
  return $name;
};

$.typeNameInFirefox = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "CSS2Properties")
    return "CSSStyleDeclaration";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "GeoGeolocation")
    return "Geolocation";
  if ($name === "MouseScrollEvent")
    return "WheelEvent";
  if ($name === "OfflineResourceList")
    return "DOMApplicationCache";
  if ($name === "WorkerMessageEvent")
    return "MessageEvent";
  if ($name === "XMLDocument")
    return "Document";
  return $name;
};

$.typeNameInIE = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if ($name === "ApplicationCache")
    return "DOMApplicationCache";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "HTMLDDElement")
    return "HTMLElement";
  if ($name === "HTMLDTElement")
    return "HTMLElement";
  if ($name === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLPhraseElement")
    return "HTMLElement";
  if ($name === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if ($name === "MouseWheelEvent")
    return "WheelEvent";
  if ($name === "Position")
    return "Geoposition";
  if ($name === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return $name;
};

$.constructorNameFallback = function(object) {
  var $constructor, $name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof($constructor) === "function") {
    $name = $constructor.name;
    if (typeof $name === "string")
      t1 = $name !== "" && $name !== "Object" && $name !== "Function.prototype";
    else
      t1 = false;
    if (t1)
      return $name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function($function, object, property) {
  return $function.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (typeof(navigator) !== "object")
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, $name, methods, $arguments) {
  var hasOwnPropertyFunction, tag, method, secondTag, proto;
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  if (!$.isDartObject(obj)) {
    tag = $.getTypeNameOf(obj);
    method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
    if (method == null) {
      secondTag = $.alternateTag(obj, tag);
      if (secondTag != null)
        method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
    }
  } else
    method = null;
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT34));
  if (method == null)
    (function(){throw new TypeError($name + " is not a function");})();
  else {
    proto = Object.getPrototypeOf(obj);
    if (!$.callHasOwnProperty(hasOwnPropertyFunction, proto, $name))
      $.defineProperty(proto, $name, method);
  }
  return method.apply(obj, $arguments);
};

$.isDartObject = function(obj) {
  return ((obj) instanceof ($.Object));
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && $._dynamicMetadata0() != null)
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (method != null)
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function($name) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[$name];
  if (f != null && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT34)[$name];
  if (dartMethod != null)
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, $name, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, $name, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined")
    $._dynamicMetadata([]);
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global) {
  var pattern, sb, e, isMultiLine, isCaseSensitive, t1, exception;
  pattern = regExp.get$pattern();
  isMultiLine = regExp.get$isMultiLine();
  isCaseSensitive = regExp.get$isCaseSensitive();
  $.checkString(pattern);
  sb = $.StringBuffer$("");
  if (isMultiLine === true)
    $.add$1$a(sb, "m");
  if (isCaseSensitive !== true)
    $.add$1$a(sb, "i");
  if (global === true)
    $.add$1$a(sb, "g");
  try {
    t1 = new RegExp(pattern, $.toString$0$abfnosu(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.JSSyntaxRegExp$ = function(pattern, caseSensitive, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, caseSensitive);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$isMultiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$isCaseSensitive(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, $length, patternLength, startIndex, position, t1, endIndex;
  result = $.List_List(0);
  $length = haystack.length;
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = $.CONSTANT9.indexOf$2(haystack, needle, startIndex);
    t1 = $.getInterceptor(position);
    if (t1.$eq(position, -1) === true)
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = t1.$add(position, patternLength);
    if ($.$$eq$o(endIndex, $length) === true)
      break;
    else
      startIndex = t1.$eq(position, endIndex) === true ? $.$$add$n(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === "string")
    return $.$$eq$o($.CONSTANT9.indexOf$2(receiver, other, startIndex), -1) !== true;
  else if (typeof other === "object" && other !== null && !!other.$isJSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT9.substring$1(receiver, startIndex));
  else
    return $.get$iterator$a($.allMatches$1$s(other, $.CONSTANT9.substring$1(receiver, startIndex))).moveNext$0();
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, $length, i;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer$("");
      $length = receiver.length;
      result.add$1(to);
      for (i = 0; i < $length; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        result.add$1(receiver[i]);
        result.add$1(to);
      }
      return result.toString$0();
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.CONSTANT10, true), "\\$&"), true, false), true), to);
};

$.AsyncError$ = function(error, stackTrace) {
  return new $.AsyncError(error, stackTrace, null);
};

$.AsyncError$withCause = function(error, stackTrace, cause) {
  return new $.AsyncError(error, stackTrace, cause);
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$(), false);
};

$._FutureListenerWrapper$ = function(future) {
  return new $._FutureListenerWrapper(future, null);
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(0, null);
};

$._FutureImpl$immediate = function(value) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediate$1(value);
  return t1;
};

$._FutureImpl__FutureImpl$wait = function(futures) {
  var t1, t2, t3, t4, pos;
  t1 = {};
  t1.completer_0 = null;
  t1.values_1 = null;
  t2 = new $._FutureImpl__FutureImpl$wait_handleError(t1);
  t1.remaining_2 = 0;
  for (t3 = $.get$iterator$a(futures); t3.moveNext$0() === true;) {
    t4 = t3.get$current();
    pos = t1.remaining_2;
    t1.remaining_2 = $.$$add$n(pos, 1);
    t4.catchError$1(t2).then$1(new $._FutureImpl__FutureImpl$wait_anon(t1, pos));
  }
  if ($.$$eq$o(t1.remaining_2, 0) === true)
    return $._FutureImpl$immediate($.CONSTANT35);
  t1.values_1 = $.List_List$fixedLength(t1.remaining_2, null);
  t1.completer_0 = $._CompleterImpl$();
  return t1.completer_0.get$future();
};

$._ThenFuture$ = function(_onValue) {
  return new $._ThenFuture(_onValue, null, 0, null);
};

$._CatchErrorFuture$ = function(_onError, _test) {
  return new $._CatchErrorFuture(_test, _onError, null, 0, null);
};

$._SubscribeFuture$ = function(onValue, _onError) {
  return new $._SubscribeFuture(_onError, onValue, null, 0, null);
};

$._FutureWrapper$ = function(_future) {
  return new $._FutureWrapper(_future);
};

$.StreamController$broadcast = function(onPauseStateChange, onSubscriptionStateChange) {
  return new $.StreamController($._MultiControllerStream$(onSubscriptionStateChange, onPauseStateChange));
};

$._MultiControllerStream$ = function(_subscriptionHandler, _pauseHandler) {
  var t1 = new $._MultiControllerStream(_subscriptionHandler, _pauseHandler, null, null, 0, null);
  t1._MultiStreamImpl$0();
  return t1;
};

$._StreamSubscriptionImpl$ = function(source, _onData, _onError, _onDone, _unsubscribeOnError) {
  var t1 = new $._StreamSubscriptionImpl(_unsubscribeOnError, _onData, _onError, _onDone, source, 0, null, null);
  t1._InternalLink$0();
  return t1;
};

$._nullDataHandler = function(value) {
};

$._nullErrorHandler = function(error) {
  error.throwDelayed$0();
};

$._nullDoneHandler = function() {
};

$._DelayedData$ = function(value) {
  return new $._DelayedData(value, null);
};

$._InternalLink_unlink = function(element) {
  var next, previous;
  next = element.get$_nextLink();
  previous = element.get$_previousLink();
  next.set$_previousLink(previous);
  previous.set$_nextLink(next);
  element.set$_previousLink(element);
  element.set$_nextLink(element);
};

$._InternalLinkList_add = function(list, element) {
  var listEnd;
  if (element !== element._nextLink)
    $._InternalLink_unlink(element);
  listEnd = list._previousLink;
  listEnd.set$_nextLink(element);
  list._previousLink = element;
  element._previousLink = listEnd;
  element._nextLink = list;
};

$._InternalLinkList_isEmpty = function(list) {
  return list === list._nextLink;
};

$._StreamImplEvents$ = function() {
  return new $._StreamImplEvents(null, null, null);
};

$._DoneSubscription$ = function(_handler) {
  var t1 = new $._DoneSubscription(_handler, null, 0);
  t1._DoneSubscription$1(_handler);
  return t1;
};

$._asyncError = function(error, stackTrace, cause) {
  if (typeof error === "object" && error !== null && !!error.$isAsyncError)
    return error;
  if (cause == null)
    return $.AsyncError$(error, stackTrace);
  return $.AsyncError$withCause(error, stackTrace, cause);
};

$._runUserCode = function(userCode, onSuccess, onError, cause) {
  var result, e, e0, s, exception, t1;
  result = null;
  try {
    result = userCode.call$0();
  } catch (exception) {
    t1 = $.unwrapException(exception);
    if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
      e = t1;
      return onError.call$1(e);
    } else {
      e0 = t1;
      s = $.getTraceFromException(exception);
      if (cause == null)
        onError.call$1($.AsyncError$(e0, s));
      else
        onError.call$1($.AsyncError$withCause(e0, s, cause));
    }
  }

  onSuccess.call$1(result);
};

$._cancelAndError = function(subscription, future) {
  return new $._cancelAndError_anon(subscription, future);
};

$._ForwardingStreamSubscription$ = function(_stream, onData, onError, onDone, _unsubscribeOnError) {
  var t1 = new $._ForwardingStreamSubscription(_stream, _unsubscribeOnError, null, onData, onError, onDone);
  t1._BaseStreamSubscription$3(onData, onError, onDone);
  t1._ForwardingStreamSubscription$5(_stream, onData, onError, onDone, _unsubscribeOnError);
  return t1;
};

$._WhereStream$ = function(source, test) {
  return new $._WhereStream(test, source);
};

$.Timer_Timer = function(duration, callback) {
  var t1, t2, milliseconds, zeroArgumentCallback;
  t1 = {};
  t2 = callback != null && !!callback.$is_TimerCallback0;
  if (!t2 && !(callback != null && !!callback.$is_TimerCallback1))
    throw $.$$throw($.ArgumentError$(callback));
  milliseconds = duration.inMilliseconds;
  if ($.$$lt$n(milliseconds, 0) === true)
    milliseconds = 0;
  t1.timer_0 = null;
  zeroArgumentCallback = t2 ? callback : new $.Timer_Timer_anon(t1, callback);
  t1.timer_0 = $.TimerImpl$(milliseconds, zeroArgumentCallback);
  return t1.timer_0;
};

$.Timer_Timer$repeating = function(duration, callback) {
  var milliseconds = duration.inMilliseconds;
  if ($.$$lt$n(milliseconds, 0) === true)
    milliseconds = 0;
  return $.TimerImpl$repeating(milliseconds, callback);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof src !== "string" && (typeof src !== "object" || src === null || src.constructor !== Array && !src.$isJavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.$isJavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j, t1;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = $.getInterceptor$as(src); i >= srcStart; --i, --j)
      $.CONSTANT11.$indexSet(dst, j, t1.$index(src, i));
  else
    for (t1 = $.getInterceptor$as(src), j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j)
      $.CONSTANT11.$indexSet(dst, j, t1.$index(src, i));
};

$.IterableMixinWorkaround_contains = function(iterable, element) {
  var t1, t2;
  for (t1 = $.get$iterator$a(iterable), t2 = $.getInterceptor(element); t1.moveNext$0() === true;)
    if (t2.$eq(element, t1.get$current()) === true)
      return true;
  return false;
};

$.IterableMixinWorkaround_any = function(iterable, f) {
  var t1;
  for (t1 = $.get$iterator$a(iterable); t1.moveNext$0() === true;)
    if (f.call$1(t1.get$current()) === true)
      return true;
  return false;
};

$.IterableMixinWorkaround_joinList = function(list, separator) {
  var t1, buffer, i;
  if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
    return $.IterableMixinWorkaround_joinList$bailout(1, list, separator);
  if (typeof separator !== "string")
    return $.IterableMixinWorkaround_joinList$bailout(1, list, separator);
  if ($.get$isEmpty$as(list) === true)
    return "";
  t1 = list.length;
  if (t1 === 1) {
    if (0 >= t1)
      throw $.ioore(0);
    return $.S(list[0]);
  }
  buffer = $.StringBuffer$("");
  if (separator === "")
    for (i = 0; i < list.length; ++i)
      buffer.add$1($.S(list[i]));
  else {
    if (0 >= list.length)
      throw $.ioore(0);
    buffer.add$1($.S(list[0]));
    for (i = 1; i < list.length; ++i) {
      buffer.add$1(separator);
      if (i >= list.length)
        throw $.ioore(i);
      buffer.add$1($.S(list[i]));
    }
  }
  return buffer.toString$0();
};

$.IterableMixinWorkaround_joinList$bailout = function(state0, list, separator) {
  var t1, buffer, i;
  t1 = $.getInterceptor$as(list);
  if (t1.get$isEmpty(list) === true)
    return "";
  if ($.$$eq$o(t1.get$length(list), 1) === true)
    return $.S(t1.$index(list, 0));
  buffer = $.StringBuffer$("");
  if (separator == null || $.$$eq$o(separator, "") === true)
    for (i = 0; $.CONSTANT15.$lt(i, t1.get$length(list)); ++i)
      buffer.add$1($.S(t1.$index(list, i)));
  else {
    buffer.add$1($.S(t1.$index(list, 0)));
    for (i = 1; $.CONSTANT15.$lt(i, t1.get$length(list)); ++i) {
      buffer.add$1(separator);
      buffer.add$1($.S(t1.$index(list, i)));
    }
  }
  return buffer.toString$0();
};

$._HashMapTable$ = function() {
  var t1 = new $._HashMapTable(null, 8, 0, 0, 0, null);
  t1._HashTable$1(8);
  return t1;
};

$.HashMap$ = function() {
  var t1 = new $.HashMap($._HashMapTable$());
  t1.HashMap$0();
  return t1;
};

$._HashTableKeyIterable$ = function(hashTable) {
  return new $._HashTableKeyIterable(hashTable);
};

$._HashTableKeyIterator$ = function(hashTable) {
  return new $._HashTableKeyIterator(hashTable, hashTable._modificationCount, 0, null);
};

$._HashTableValueIterable$ = function(hashTable, _entryIndex) {
  return new $._HashTableValueIterable(_entryIndex, hashTable);
};

$._HashTableValueIterator$ = function(hashTable, _entryIndex) {
  return new $._HashTableValueIterator(_entryIndex, hashTable, hashTable.get$_modificationCount(), 0, null);
};

$._LinkedHashMapTable$ = function() {
  var t1 = new $._LinkedHashMapTable(null, 8, 0, 0, 0, null);
  t1._HashTable$1(8);
  return t1;
};

$.LinkedHashMap$ = function() {
  var t1 = new $.LinkedHashMap($._LinkedHashMapTable$());
  t1.LinkedHashMap$0();
  return t1;
};

$.LinkedHashSet$ = function() {
  var t1 = new $.LinkedHashSet($._LinkedHashTable$(8));
  t1.LinkedHashSet$0();
  return t1;
};

$._LinkedHashTable$ = function(initialCapacity) {
  var t1 = new $._LinkedHashTable(null, initialCapacity, 0, 0, 0, null);
  t1._HashTable$1(initialCapacity);
  return t1;
};

$._LinkedHashTableKeyIterable$ = function(_table) {
  return new $._LinkedHashTableKeyIterable(_table);
};

$._LinkedHashTableKeyIterator$ = function(hashTable) {
  return new $._LinkedHashTableKeyIterator(hashTable, hashTable.get$_modificationCount(), hashTable._next$1(0), null);
};

$._LinkedHashTableValueIterable$ = function(_hashTable, _valueIndex) {
  return new $._LinkedHashTableValueIterable(_hashTable, _valueIndex);
};

$._LinkedHashTableValueIterator$ = function(hashTable, _valueIndex) {
  return new $._LinkedHashTableValueIterator(_valueIndex, hashTable, hashTable.get$_modificationCount(), hashTable._next$1(0), null);
};

$.Queue_Queue = function() {
  return $.ListQueue$(null);
};

$.ListQueue$ = function(initialCapacity) {
  var t1 = new $.ListQueue(null, 0, 0, 0);
  t1.ListQueue$1(initialCapacity);
  return t1;
};

$.ListQueue__isPowerOf2 = function(number) {
  var t1 = $.getInterceptor$n(number);
  return t1.$and(number, t1.$sub(number, 1)) === 0;
};

$.ListQueue__nextPowerOf2 = function(number) {
  var number0, nextNumber;
  number0 = $.$$sub$n($.$$shl$n(number, 2), 1);
  if (number0 !== (number0 | 0))
    return $.ListQueue__nextPowerOf2$bailout(1, number0);
  for (number = number0; true; number = nextNumber) {
    nextNumber = (number & number - 1) >>> 0;
    if (nextNumber === 0)
      return number;
  }
};

$.ListQueue__nextPowerOf2$bailout = function(state0, number0) {
  var number, t1, nextNumber;
  for (number = number0; true; number = nextNumber) {
    t1 = $.getInterceptor$n(number);
    nextNumber = t1.$and(number, t1.$sub(number, 1));
    if (nextNumber === 0)
      return number;
  }
};

$._ListQueueIterator$ = function(queue) {
  return new $._ListQueueIterator(queue, queue._tail, queue._modificationCount, queue._head, null);
};

$.DateTime$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateTime(millisecondsSinceEpoch, isUtc);
  t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.DateTime$_now = function() {
  var t1 = new $.DateTime($.Primitives_dateNow(), false);
  t1.DateTime$_now$0();
  return t1;
};

$.Duration$ = function(days, hours, milliseconds, minutes, seconds) {
  return new $.Duration($.$$add$n($.$$add$n($.$$add$n($.$$add$n($.$$mul$n(days, 86400000), $.$$mul$n(hours, 3600000)), $.$$mul$n(minutes, 60000)), $.$$mul$n(seconds, 1000)), milliseconds));
};

$.Error_safeToString = function(object) {
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString$0$abfnosu(object);
  if (typeof object === "string")
    return "\"" + $.S($.replaceAll$2$s($.replaceAll$2$s($.replaceAll$2$s($.CONSTANT9.replaceAll$2(object, "\\", "\\\\"), "\n", "\\n"), "\r", "\\r"), "\"", "\\\"")) + "\"";
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$ = function(message) {
  return new $.RangeError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.RangeError$range = function(value, start, end) {
  return new $.RangeError("value " + $.S(value) + " not in range " + $.S(start) + ".." + $.S(end));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.ConcurrentModificationError$ = function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.IllegalJSRegExpException$ = function(pattern, errmsg) {
  return new $.IllegalJSRegExpException("Illegal pattern: " + $.S(pattern) + ", " + errmsg);
};

$.IntegerDivisionByZeroException$ = function() {
  return new $.IntegerDivisionByZeroException();
};

$.int_parse = function(source, onError, radix) {
  return $.Primitives_parseInt(source, radix, onError);
};

$.List_List = function($length) {
  if (!(typeof $length === "number" && Math.floor($length) === $length) || $length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  return new Array($length);
};

$.List_List$fixedLength = function($length, fill) {
  var result, t1, i;
  if (!(typeof $length === "number" && Math.floor($length) === $length) || $length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  result = $.Primitives_newFixedList($length);
  if (typeof result !== "object" || result === null || (result.constructor !== Array || !!result.immutable$list) && !result.$isJavaScriptIndexingBehavior())
    return $.List_List$fixedLength$bailout(1, $length, fill, result);
  if ($.$$eq$o($length, 0) !== true && fill != null)
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
};

$.List_List$fixedLength$bailout = function(state0, $length, fill, result) {
  var t1, i;
  if ($.$$eq$o($length, 0) !== true && fill != null)
    for (t1 = $.getInterceptor$as(result), i = 0; $.CONSTANT15.$lt(i, t1.get$length(result)); ++i)
      t1.$indexSet(result, i, fill);
  return result;
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(0);
  for (t1 = $.get$iterator$a(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  return list;
};

$.Map_Map = function() {
  return $.HashMap$();
};

$.RegExp_RegExp = function(pattern, caseSensitive, multiLine) {
  return $.JSSyntaxRegExp$(pattern, caseSensitive, multiLine);
};

$.StringBuffer$ = function($content) {
  var t1 = new $.StringBuffer("");
  t1.StringBuffer$1($content);
  return t1;
};

$.document = function() {
  return document;
};

$.query = function(selector) {
  return document.query$1(selector);
};

$.AudioElement_AudioElement = function(src) {
  var t1 = $ === src;
  if (t1)
    src = null;
  if (!t1)
    return new Audio(src);
  return new Audio();
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$._EventStream$ = function(_target, _eventType, _useCapture) {
  return new $._EventStream(_target, _eventType, _useCapture);
};

$._EventStreamSubscription$ = function(_target, _eventType, _onData, _useCapture) {
  var t1 = new $._EventStreamSubscription(0, _target, _eventType, _onData, _useCapture);
  t1._EventStreamSubscription$4(_target, _eventType, _onData, _useCapture);
  return t1;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  if (w === window)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator(array, $.get$length$as(array), -1, null);
};

$.convertDartToNative_Dictionary = function(dict) {
  var object;
  if (dict == null)
    return;
  object = {};
  $.forEach$1$a(dict, new $.convertDartToNative_Dictionary_anon(object));
  return object;
};

$.convertNativeToDart_SerializedScriptValue = function(object) {
  return $.convertNativeToDart_AcceptStructuredClone(object, true);
};

$.convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var copies = [];
  return new $.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $.convertNativeToDart_AcceptStructuredClone_findSlot([], copies), new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
};

$.ReceivePort_ReceivePort = function() {
  return $.ReceivePortImpl$();
};

$._Isolate_port = function() {
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  return $.lazyPort;
};

$.min = function(a, b) {
  if (a > b)
    return b;
  if (a < b)
    return a;
  if (typeof a === "number")
    if (a === 0)
      return (a + b) * a * b;
  if (a === 0 && $.CONSTANT33.get$isNegative(b) === true || $.CONSTANT33.get$isNaN(b))
    return b;
  return a;
  return a;
  throw $.$$throw($.ArgumentError$(b));
  throw $.$$throw($.ArgumentError$(a));
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$.main = function() {
  var game = $.GalagaGame$withServices($.HtmlGameSound$(), $.HtmlGameInput$(), $.GalagaRenderer$("surface"), $.HtmlGameLoop$());
  $.Game_debugMode = false;
  game.start$0();
};

$.GameButton$ = function(buttonAction, centered, color, font, game, groupId, id, opacity, size, text, x, y) {
  var t1 = new $.GameButton(buttonAction, text, centered, font, size, game, 0, 0, 1, 1, false, false, id, groupId, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 10, 10, id, groupId);
  t1.GameText$11$centered$color$font$game$groupId$id$opacity$size$text$x$y(centered, color, font, game, groupId, id, opacity, size, text, x, y);
  t1.GameButton$12$buttonAction$centered$color$font$game$groupId$id$opacity$size$text$x$y(buttonAction, centered, color, font, game, groupId, id, opacity, size, text, x, y);
  return t1;
};

$.GameText$ = function(centered, color, font, game, groupId, id, opacity, size, text, x, y) {
  var t1 = new $.GameText(text, centered, font, size, game, 0, 0, 1, 1, false, false, id, groupId, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 10, 10, id, groupId);
  t1.GameText$11$centered$color$font$game$groupId$id$opacity$size$text$x$y(centered, color, font, game, groupId, id, opacity, size, text, x, y);
  return t1;
};

$.GameTimer$ = function() {
  return new $.GameTimer(0, 0, 0, 60, false);
};

$.DefaultCanvasEntityRenderer$ = function(gr) {
  return new $.DefaultCanvasEntityRenderer(gr);
};

$.HtmlGameInput$ = function() {
  return new $.HtmlGameInput(null, null, null, false, null);
};

$.HtmlGameLoop$ = function() {
  return new $.HtmlGameLoop(null);
};

$.HtmlGameSound$ = function() {
  return new $.HtmlGameSound(true, "Sounds/");
};

$.TextRenderer$ = function(gr) {
  return new $.TextRenderer(gr);
};

$.random = function(min, max, wholeNumbers) {
  var t1, t2, value;
  t1 = $.CONSTANT17.nextDouble$0();
  t2 = $.$$sub$n(max, min);
  if (typeof t2 !== "number")
    throw $.iae(t2);
  value = $.$$add$n(min, t1 * t2);
  return wholeNumbers === true ? $.round$0$n(value) : value;
};

$.Momentum$ = function(xAccel, xMax, xVel, yAccel, yMax, yVel) {
  return new $.Momentum(xVel, yVel, xAccel, yAccel, xMax, yMax);
};

$.Rectangle$ = function($top, left, right, bottom) {
  return new $.Rectangle($top, left, right, bottom);
};

$.Rectangle$clone = function(rect) {
  return new $.Rectangle(rect.get$top(), rect.get$left(), rect.get$right(), rect.get$bottom());
};

$.Rectangle_intersect = function(r1, r2) {
  return !($.$$gt$n(r1.left, r2.get$right()) === true || $.$$lt$n(r1.right, r2.get$left()) === true || $.$$gt$n(r1.top, r2.get$bottom()) === true || $.$$lt$n(r1.bottom, r2.get$top()) === true);
};

$.Vector$ = function(x, y) {
  return new $.Vector(x, y);
};

$.EventStream$ = function() {
  return new $.EventStream($.StreamController$broadcast(null, null));
};

$.EventArgs$ = function() {
  return new $.EventArgs();
};

$.GalagaGame$withServices = function(sound, input, renderer, loop) {
  var t1 = new $.GalagaGame(0, 0, 5, 5, 0, null, $.Map_Map(), $.Map_Map(), $.Map_Map(), $.Map_Map(), $.Map_Map(), 1, -400, -165, 3, 3, 1, 0, 33, 60, 1, null, true, null, null, 0, 1, 3, false, true, true, 1, null, 1, 0, $.EventStream$(), $.EventStream$(), $.EventStream$(), $.EventStream$(), $.EventStream$(), $.EventStream$(), $.EventStream$(), null, null, null, null, sound, input, renderer, loop, "rgba(0, 0, 0, .85)", false);
  t1.Game$withServices$4(sound, input, renderer, loop);
  return t1;
};

$.Bullet$ = function(game, x, y, dir, yVel, size, type) {
  var t1 = new $.Bullet(0, 0, null, null, 0, false, false, false, false, false, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, size, size, null, null);
  t1.Bullet$7(game, x, y, dir, yVel, size, type);
  return t1;
};

$.Enemy$ = function(game, x, y, diff, Type) {
  var t1 = new $.Enemy(null, false, false, 0, 0, 1, 1, 1, 100, 1, 100, false, 1, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 36, 36, null, null);
  t1.Enemy$5(game, x, y, diff, Type);
  return t1;
};

$.EnemyRenderer$ = function(gr) {
  return new $.EnemyRenderer(gr);
};

$.GalagaRenderer$ = function(targetId) {
  var t1 = new $.GalagaRenderer(0, null, null, targetId, null, null, null, null, null, null);
  t1.CanvasGameRenderer$1(targetId);
  t1.GalagaRenderer$1(targetId);
  return t1;
};

$.PowerUpRenderer$ = function(gr) {
  return new $.PowerUpRenderer(gr);
};

$.Particles$ = function(game, x, y, h, w, col, xV, yV) {
  var t1 = new $.Particles(null, 0, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, h, w, null, null);
  t1.Particles$8(game, x, y, h, w, col, xV, yV);
  return t1;
};

$.PowerUp$ = function(game, x, y, Type) {
  var t1 = new $.PowerUp(null, 0, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 36, 36, null, null);
  t1.PowerUp$4(game, x, y, Type);
  return t1;
};

$.Ship$ = function(game, x, y) {
  var t1 = new $.Ship(8, 3, 3, 3, 0, false, false, false, game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, 36, 36, null, null);
  t1.Ship$3(game, x, y);
  return t1;
};

$.Stars$ = function(game, x, y, h, w, col) {
  var t1 = new $.Stars(game, 0, 0, 1, 1, false, false, null, null, null, null, false, null, null, true, 1, "255, 255, 255", true, null);
  t1.GameEntity$withPosition$7(game, x, y, h, w, null, null);
  t1.Stars$6(game, x, y, h, w, col);
  return t1;
};

$.IsolateNatives__processWorkerMessage.call$2 = $.IsolateNatives__processWorkerMessage;
$.IsolateNatives__processWorkerMessage.$name = "IsolateNatives__processWorkerMessage";
$.Primitives__throwFormatException.call$1 = $.Primitives__throwFormatException;
$.Primitives__throwFormatException.$name = "Primitives__throwFormatException";
$.$$throw.call$1 = $.$$throw;
$.$$throw.$name = "$$throw";
$.$$throw.$is_TimerCallback1 = true;
$.DartError_toStringWrapper.call$0 = $.DartError_toStringWrapper;
$.DartError_toStringWrapper.$name = "DartError_toStringWrapper";
$.DartError_toStringWrapper.$is_TimerCallback0 = true;
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$._nullDataHandler.call$1 = $._nullDataHandler;
$._nullDataHandler.$name = "_nullDataHandler";
$._nullDataHandler.$is_TimerCallback1 = true;
$._nullErrorHandler.call$1 = $._nullErrorHandler;
$._nullErrorHandler.$name = "_nullErrorHandler";
$._nullDoneHandler.call$0 = $._nullDoneHandler;
$._nullDoneHandler.$name = "_nullDoneHandler";
$._nullDoneHandler.$is_TimerCallback0 = true;
Isolate.$finishClasses($$, $, null);
$$ = {};
$.TextTrack = {builtin$cls: 'TextTrack'};
$.List = {builtin$cls: 'List'};
$.num = {builtin$cls: 'num'};
$.Touch = {builtin$cls: 'Touch'};
$.Match = {builtin$cls: 'Match'};
$.Node = {builtin$cls: 'Node'};
$.String = {builtin$cls: 'String'};
$.ReceivePort = {builtin$cls: 'ReceivePort'};
$._ManagerStub = {builtin$cls: '_ManagerStub'};
$.bool = {builtin$cls: 'bool'};
$.$int = {builtin$cls: '$int'};
$.Date = {builtin$cls: 'Date'};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT35 = Isolate.makeConstantList([]);
$.CONSTANT3 = new $.EventStreamProvider("keydown");
$.CONSTANT27 = new $.Duration(225);
$.CONSTANT34 = new $.Object();
$.CONSTANT6 = new $.EventStreamProvider("mousemove");
$.CONSTANT20 = new $.Duration(25);
$.CONSTANT1 = new $.EventStreamProvider("mouseup");
$.CONSTANT24 = new $.Duration(150);
$.CONSTANT16 = new $._LinkedHashTableHeadMarker();
$.CONSTANT28 = new $.Duration(275);
$.CONSTANT21 = new $.Duration(75);
$.CONSTANT17 = new $._Random();
$.CONSTANT26 = new $.Duration(200);
$.CONSTANT4 = new $.EventStreamProvider("touchstart");
$.CONSTANT8 = new $.Duration(0);
$.CONSTANT7 = new $.EventStreamProvider("click");
$.CONSTANT23 = new $.Duration(125);
$.CONSTANT14 = new $.JSNull();
$.CONSTANT = new $.NullThrownError();
$.CONSTANT11 = new $.JSArray();
$.CONSTANT15 = new $.JSNumber();
$.CONSTANT2 = new $.EventStreamProvider("mousedown");
$.CONSTANT9 = new $.JSString();
$.CONSTANT30 = new $.JSInt();
$.CONSTANT5 = new $.EventStreamProvider("touchmove");
$.CONSTANT18 = new $.Duration(250);
$.CONSTANT0 = new $.Duration(50);
$.CONSTANT32 = new $.Duration(375);
$.CONSTANT10 = new $.JSSyntaxRegExp("[-[\\]{}()*+?.,\\\\^$|#\\s]", false, true);
$.CONSTANT25 = new $.Duration(175);
$.CONSTANT29 = new $.EventStreamProvider("ended");
$.CONSTANT31 = new $.Duration(300);
$.CONSTANT33 = new $.JSDouble();
$.CONSTANT19 = new $.Duration(1000);
$.CONSTANT36 = new $._DelayedDone();
$.CONSTANT22 = new $.Duration(100);
$.CONSTANT12 = new $._DeadEntry();
$.CONSTANT13 = new $._NullKey();
$.lazyPort = null;
$.ReceivePortImpl__nextFreeId = 1;
$.Primitives_hashCodeSeed = 0;
$._getTypeNameOf = null;
$.Game_debugMode = false;
$.$$add$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return $.getInterceptor$n(receiver).$add(receiver, a0);
};
$.$$and$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver & a0) >>> 0;
  return $.getInterceptor$n(receiver).$and(receiver, a0);
};
$.$$div$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver / a0;
  return $.getInterceptor$n(receiver).$div(receiver, a0);
};
$.$$eq$o = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (!(typeof receiver == "object"))
    return !(a0 == null) && receiver === a0;
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.$$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return $.getInterceptor$n(receiver).$ge(receiver, a0);
};
$.$$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return $.getInterceptor$n(receiver).$gt(receiver, a0);
};
$.$$index$a = function(receiver, a0) {
  if (receiver.constructor == Array)
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return $.getInterceptor$a(receiver).$index(receiver, a0);
};
$.$$index$as = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string")
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return $.getInterceptor$as(receiver).$index(receiver, a0);
};
$.$$indexSet$a = function(receiver, a0, a1) {
  if (receiver.constructor == Array && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return $.getInterceptor$a(receiver).$indexSet(receiver, a0, a1);
};
$.$$le$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver <= a0;
  return $.getInterceptor$n(receiver).$le(receiver, a0);
};
$.$$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return $.getInterceptor$n(receiver).$lt(receiver, a0);
};
$.$$mul$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return $.getInterceptor$n(receiver).$mul(receiver, a0);
};
$.$$negate$n = function(receiver) {
  if (typeof receiver == "number")
    return -receiver;
  return $.getInterceptor$n(receiver).$negate(receiver);
};
$.$$or$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver | a0) >>> 0;
  return $.getInterceptor$n(receiver).$or(receiver, a0);
};
$.$$shl$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).$shl(receiver, a0);
};
$.$$shr$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).$shr(receiver, a0);
};
$.$$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return $.getInterceptor$n(receiver).$sub(receiver, a0);
};
$.$$tdiv$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).$tdiv(receiver, a0);
};
$.$$xor$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver ^ a0) >>> 0;
  return $.getInterceptor$n(receiver).$xor(receiver, a0);
};
$.abs$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).abs$0(receiver);
};
$.add$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).add$1(receiver, a0);
};
$.allMatches$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).allMatches$1(receiver, a0);
};
$.any$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).any$1(receiver, a0);
};
$.contains$1$as = function(receiver, a0) {
  return $.getInterceptor$as(receiver).contains$1(receiver, a0);
};
$.elementAt$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).elementAt$1(receiver, a0);
};
$.forEach$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).forEach$1(receiver, a0);
};
$.get$hashCode$abnosu = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.get$hashCode$ou = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.get$isEmpty$as = function(receiver) {
  return $.getInterceptor$as(receiver).get$isEmpty(receiver);
};
$.get$iterator$a = function(receiver) {
  return $.getInterceptor$a(receiver).get$iterator(receiver);
};
$.get$length$a = function(receiver) {
  return $.getInterceptor$a(receiver).get$length(receiver);
};
$.get$length$as = function(receiver) {
  return $.getInterceptor$as(receiver).get$length(receiver);
};
$.join$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).join$1(receiver, a0);
};
$.remainder$1$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).remainder$1(receiver, a0);
};
$.remove$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).remove$1(receiver, a0);
};
$.removeRange$2$a = function(receiver, a0, a1) {
  return $.getInterceptor$a(receiver).removeRange$2(receiver, a0, a1);
};
$.replaceAll$2$s = function(receiver, a0, a1) {
  return $.getInterceptor$s(receiver).replaceAll$2(receiver, a0, a1);
};
$.round$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).round$0(receiver);
};
$.split$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).split$1(receiver, a0);
};
$.toList$0$a = function(receiver) {
  return $.getInterceptor$a(receiver).toList$0(receiver);
};
$.toLowerCase$0$s = function(receiver) {
  return $.getInterceptor$s(receiver).toLowerCase$0(receiver);
};
$.toString$0$abfnosu = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.toStringAsFixed$1$n = function(receiver, a0) {
  return $.getInterceptor$n(receiver).toStringAsFixed$1(receiver, a0);
};
$.trim$0$s = function(receiver) {
  return $.getInterceptor$s(receiver).trim$0(receiver);
};
$.where$1$a = function(receiver, a0) {
  return $.getInterceptor$a(receiver).where$1(receiver, a0);
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$a = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$as = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== (void 0);
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "empty", "EventArgs_empty", "get$EventArgs_empty", function() {
  return $.EventArgs$();
});
var $ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table)
    $.defineProperty(Object.prototype, key, table[key]);
})({
  $isJavaScriptIndexingBehavior: function() {
    return false;
  },
  $isCollection: function() {
    return false;
  },
  $isList: function() {
    return false;
  },
  $isMap: function() {
    return false;
  },
  $isAudioElement: function() {
    return false;
  },
  $isNode: function() {
    return false;
  },
  toString$0: function() {
    return $.toStringForNativeObject(this);
  },
  get$hashCode: function() {
    return $.hashCodeForNativeObject(this);
  },
  $eq: function(a) {
    return this === a;
  }
});

$.$defineNativeClass("Worker", {
  get$id: function() {
    return this.id;
  },
  set$id: function(i) {
    this.id = i;
  },
  set$onmessage: function(f) {
    this.onmessage = f;
  },
  postMessage$1: function(msg) {
    this.postMessage(msg);
  },
  terminate$0: function() {
    this.terminate();
  }
});

$.$defineNativeClass("HTMLAnchorElement", {"": "type=",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLAudioElement", {
  $isAudioElement: function() {
    return true;
  },
  $asAudioElement: function() {
    return null;
  }
});

$.$defineNativeClass("Blob", {"": "size>,type>"});

$.$defineNativeClass("HTMLButtonElement", {"": "type=,value>"});

$.$defineNativeClass("HTMLCanvasElement", {"": "height=,width=",
  getContext$2: function(contextId, attrs) {
    var t1 = $ === attrs;
    if (t1)
      attrs = null;
    if (!t1)
      return this.getContext(contextId, $.convertDartToNative_Dictionary(attrs));
    return this.getContext(contextId);
  },
  getContext$1: function(contextId) {
    return this.getContext$2(contextId, $);
  }
});

$.$defineNativeClass("CanvasRenderingContext", {"": "canvas>"});

$.$defineNativeClass("CanvasRenderingContext2D", {"": "fillStyle<,font=,strokeStyle<",
  arc$6: function(x, y, radius, startAngle, endAngle, anticlockwise) {
    return this.arc(x,y,radius,startAngle,endAngle,anticlockwise);
  },
  beginPath$0: function() {
    return this.beginPath();
  },
  clearRect$4: function(x, y, width, height) {
    return this.clearRect(x,y,width,height);
  },
  closePath$0: function() {
    return this.closePath();
  },
  fill$1: function(winding) {
    return this.fill(winding);
  },
  get$fill: function() {
    return new $.Bound_fill_CanvasRenderingContext2D(this, "fill$1");
  },
  fillRect$4: function(x, y, width, height) {
    return this.fillRect(x,y,width,height);
  },
  fillText$4: function(text, x, y, maxWidth) {
    return this.fillText(text,x,y,maxWidth);
  },
  fillText$3: function(text, x, y) {
    return this.fillText(text, x, y);
  },
  measureText$1: function(text) {
    return this.measureText(text);
  },
  rect$4: function(x, y, width, height) {
    return this.rect(x,y,width,height);
  },
  get$rect: function() {
    return new $.BoundClosure$4(this, "rect$4");
  },
  restore$0: function() {
    return this.restore();
  },
  save$0: function() {
    return this.save();
  },
  stroke$0: function() {
    return this.stroke();
  },
  strokeRect$5: function(x, y, width, height, lineWidth) {
    return this.strokeRect(x,y,width,height,lineWidth);
  },
  strokeRect$4: function(x, y, width, height) {
    return this.strokeRect(x, y, width, height);
  },
  translate$2: function(tx, ty) {
    return this.translate(tx,ty);
  }
});

$.$defineNativeClass("CharacterData", {"": "length>"});

$.$defineNativeClass("ClientRect", {"": "bottom>,height>,left>,right>,top>,width>"});

$.$defineNativeClass("CSSStyleDeclaration", {"": "length>",
  getPropertyValue$1: function(propertyName) {
    var propValue = this.getPropertyValue(propertyName);
    return propValue != null ? propValue : "";
  },
  setProperty$3: function(propertyName, value, priority) {
    this.setProperty(propertyName, value, priority);
    if (!!this.setAttribute)
      this.setAttribute(propertyName, value);
  },
  get$bottom: function() {
    return this.getPropertyValue$1("bottom");
  },
  set$bottom: function(value) {
    this.setProperty$3("bottom", value, "");
  },
  get$color: function() {
    return this.getPropertyValue$1("color");
  },
  get$font: function() {
    return this.getPropertyValue$1("font");
  },
  set$font: function(value) {
    this.setProperty$3("font", value, "");
  },
  get$height: function() {
    return this.getPropertyValue$1("height");
  },
  set$height: function(value) {
    this.setProperty$3("height", value, "");
  },
  get$left: function() {
    return this.getPropertyValue$1("left");
  },
  set$left: function(value) {
    this.setProperty$3("left", value, "");
  },
  get$opacity: function() {
    return this.getPropertyValue$1("opacity");
  },
  set$opacity: function(value) {
    this.setProperty$3("opacity", value, "");
  },
  get$right: function() {
    return this.getPropertyValue$1("right");
  },
  set$right: function(value) {
    this.setProperty$3("right", value, "");
  },
  get$size: function() {
    return this.getPropertyValue$1("size");
  },
  set$src: function(value) {
    this.setProperty$3("src", value, "");
  },
  get$top: function() {
    return this.getPropertyValue$1("top");
  },
  set$top: function(value) {
    this.setProperty$3("top", value, "");
  },
  get$width: function() {
    return this.getPropertyValue$1("width");
  },
  set$width: function(value) {
    this.setProperty$3("width", value, "");
  }
});

$.$defineNativeClass("Document", {"": "$$dom_body:body~",
  get$onClick: function() {
    return $.CONSTANT7.forTarget$1(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT3.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT2.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT6.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT1.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT5.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT4.forTarget$1(this);
  },
  query$1: function(selectors) {
    if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", true, false).hasMatch$1(selectors))
      return this.getElementById($.CONSTANT9.substring$1(selectors, 1));
    return this.querySelector(selectors);
  }
});

$.$defineNativeClass("DOMException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Element", {"": "id=,$$dom_className:className}",
  get$attributes: function() {
    return $._ElementAttributeMap$(this);
  },
  get$classes: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$classes")) {
      return $._ElementCssClassSet$(this);
    } else
      return Object.prototype.get$classes.call(this);
  },
  translate$2: function(arg0, arg1) {
    return this.translate.call$2(arg0, arg1);
  },
  click$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("click$0")) {
      return this.click();
    } else
      return Object.prototype.click$0.call(this);
  },
  get$click: function() {
    return new $.Bound_click_Element(this, "click$0");
  },
  $$dom_getAttribute$1: function($name) {
    return this.getAttribute($name);
  },
  getBoundingClientRect$0: function() {
    return this.getBoundingClientRect();
  },
  $$dom_hasAttribute$1: function($name) {
    return this.hasAttribute($name);
  },
  $$dom_setAttribute$2: function($name, value) {
    return this.setAttribute($name,value);
  }
});

$.$defineNativeClass("HTMLEmbedElement", {"": "height=,src<,type=,width="});

$.$defineNativeClass("Event", {"": "type>",
  preventDefault$0: function() {
    return this.preventDefault();
  }
});

$.$defineNativeClass("EventException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("EventTarget", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_addEventListener$3")) {
      return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_removeEventListener$3")) {
      return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
});

$.$defineNativeClass("HTMLFieldSetElement", {"": "type>"});

$.$defineNativeClass("FileException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Float32Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.num]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.num]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Float64Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.num]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.num]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLFormElement", {"": "length>",
  reset$0: function() {
    return this.reset();
  }
});

$.$defineNativeClass("HTMLCollection", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLDocument", {
  get$body: function() {
    return $.document().get$$$dom_body();
  },
  register$2: function(tagName, elementClass) {
    throw $.$$throw($._ExceptionImplementation$("Not yet implemented"));
  }
});

$.$defineNativeClass("XMLHttpRequestException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLIFrameElement", {"": "height=,src<,width="});

$.$defineNativeClass("HTMLImageElement", {"": "height=,src<,width=,x>,y>",
  complete$1: function(arg0) {
    return this.complete.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLInputElement", {"": "height=,pattern>,size>,src<,type=,value>,width=",
  $isNode: function() {
    return true;
  },
  $asNode: function() {
    return null;
  }
});

$.$defineNativeClass("Int16Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Int32Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Int8Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("KeyboardEvent", {
  get$keyCode: function() {
    return this.keyCode;
  }
});

$.$defineNativeClass("HTMLKeygenElement", {"": "type>"});

$.$defineNativeClass("HTMLLIElement", {"": "type=,value>"});

$.$defineNativeClass("HTMLLinkElement", {"": "type="});

$.$defineNativeClass("MediaController", {"": "volume<",
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  play$0: function() {
    return this.play();
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("HTMLMediaElement", {"": "error>,loop<,preload<,src<,volume<",
  play$0: function() {
    return this.play();
  },
  get$onEnded: function() {
    return $.CONSTANT29.forTarget$1(this);
  }
});

$.$defineNativeClass("MediaStream", {"": "id>",
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  get$onEnded: function() {
    return $.CONSTANT29.forTarget$1(this);
  }
});

$.$defineNativeClass("MessageEvent", {"": "ports>"});

$.$defineNativeClass("HTMLMeterElement", {"": "value>"});

$.$defineNativeClass("MouseEvent", {"": "clientX>,clientY>"});

$.$defineNativeClass("Node", {"": "$$dom_attributes:attributes~,$$dom_childNodes:childNodes~,$$dom_localName:localName~,$$dom_namespaceUri:namespaceURI~,text:textContent~",
  get$nodes: function() {
    return $._ChildNodeListLazy$(this);
  },
  remove$0: function() {
    var t1 = this.parentNode;
    if (t1 != null)
      t1.removeChild(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_appendChild$1: function(newChild) {
    return this.appendChild(newChild);
  },
  clone$1: function(deep) {
    if (Object.getPrototypeOf(this).hasOwnProperty("clone$1")) {
      return this.cloneNode(deep);
    } else
      return Object.prototype.clone$1.call(this, deep);
  },
  contains$1: function(other) {
    return this.contains(other);
  },
  $$dom_removeChild$1: function(oldChild) {
    return this.removeChild(oldChild);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_replaceChild$2: function(newChild, oldChild) {
    return this.replaceChild(newChild,oldChild);
  },
  $isNode: function() {
    return true;
  },
  $asNode: function() {
    return null;
  }
});

$.$defineNativeClass("NodeList", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLOListElement", {"": "type=",
  start$0: function() {
    return this.start.call$0();
  },
  start$1: function(arg0) {
    return this.start.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLObjectElement", {"": "height=,type=,width="});

$.$defineNativeClass("HTMLOptionElement", {"": "value>"});

$.$defineNativeClass("HTMLOutputElement", {"": "type>,value>"});

$.$defineNativeClass("HTMLParamElement", {"": "value>"});

$.$defineNativeClass("PopStateEvent", {
  get$state: function() {
    return $.convertNativeToDart_SerializedScriptValue(this.state);
  }
});

$.$defineNativeClass("HTMLProgressElement", {"": "value>"});

$.$defineNativeClass("RadioNodeList", {"": "value>"});

$.$defineNativeClass("RangeException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLScriptElement", {"": "src<,type="});

$.$defineNativeClass("HTMLSelectElement", {"": "length>,size>,type>,value>"});

$.$defineNativeClass("ShadowRoot", {
  clone$1: function(deep) {
    return this.cloneNode(deep);
  }
});

$.$defineNativeClass("HTMLSourceElement", {"": "src<,type="});

$.$defineNativeClass("SpeechRecognitionError", {"": "error>"});

$.$defineNativeClass("Storage", {
  containsKey$1: function(key) {
    return this.getItem(key) != null;
  },
  $index: function(key) {
    return this.getItem(key);
  },
  $indexSet: function(key, value) {
    this.setItem(key, value);
  },
  remove$1: function(key) {
    var value = this.getItem(key);
    this.removeItem(key);
    return value;
  },
  forEach$1: function(f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = this.key(i);
      if (key == null)
        return;
      f.call$2(key, this.getItem(key));
    }
  },
  get$keys: function() {
    var keys = [];
    this.forEach$1(new $.Storage_keys_anon(keys));
    return keys;
  },
  get$values: function() {
    var values = [];
    this.forEach$1(new $.Storage_values_anon(values));
    return values;
  },
  get$length: function() {
    return this.length;
  },
  get$isEmpty: function() {
    return this.key(0) == null;
  },
  $isMap: function() {
    return true;
  },
  $asMap: function() {
    return function () { return [$.String, $.String]; };
  }
});

$.$defineNativeClass("HTMLStyleElement", {"": "type="});

$.$defineNativeClass("HTMLTextAreaElement", {"": "type>,value>"});

$.$defineNativeClass("TextMetrics", {"": "width>"});

$.$defineNativeClass("TextTrack", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("TextTrackList", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.TextTrack]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.TextTrack]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("TimeRanges", {"": "length>",
  start$1: function(index) {
    return this.start(index);
  }
});

$.$defineNativeClass("Touch", {"": "clientX>,clientY>"});

$.$defineNativeClass("TouchEvent", {"": "touches>"});

$.$defineNativeClass("TouchList", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Touch]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Touch]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLTrackElement", {"": "src<"});

$.$defineNativeClass("Uint16Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint32Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint8Array", {
  get$length: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$length")) {
      return this.length;
    } else
      return Object.prototype.get$length.call(this);
  },
  $index: function(index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$index")) {
      return this[index];
    } else
      return Object.prototype.$index.call(this, index);
  },
  $indexSet: function(index, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$indexSet")) {
      this[index] = value;
    } else
      return Object.prototype.$indexSet.call(this, index, value);
  },
  get$iterator: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$iterator")) {
      return $.FixedSizeListIterator$(this);
    } else
      return Object.prototype.get$iterator.call(this);
  },
  contains$1: function(element) {
    if (Object.getPrototypeOf(this).hasOwnProperty("contains$1")) {
      return $.IterableMixinWorkaround_contains(this, element);
    } else
      return Object.prototype.contains$1.call(this, element);
  },
  forEach$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("forEach$1")) {
      var t1;
      for (t1 = this.get$iterator(); t1.moveNext$0();)
        f.call$1(t1.get$current());
      return;
    } else
      return Object.prototype.forEach$1.call(this, f);
  },
  join$1: function(separator) {
    if (Object.getPrototypeOf(this).hasOwnProperty("join$1")) {
      return $.IterableMixinWorkaround_joinList(this, separator);
    } else
      return Object.prototype.join$1.call(this, separator);
  },
  where$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("where$1")) {
      return $.WhereIterable$(this, f);
    } else
      return Object.prototype.where$1.call(this, f);
  },
  any$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("any$1")) {
      return $.IterableMixinWorkaround_any(this, f);
    } else
      return Object.prototype.any$1.call(this, f);
  },
  toList$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("toList$0")) {
      return $.List_List$from(this);
    } else
      return Object.prototype.toList$0.call(this);
  },
  get$isEmpty: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$isEmpty")) {
      return this.get$length() === 0;
    } else
      return Object.prototype.get$isEmpty.call(this);
  },
  elementAt$1: function(index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("elementAt$1")) {
      return this.$index(index);
    } else
      return Object.prototype.elementAt$1.call(this, index);
  },
  add$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("add$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.add$1.call(this, value);
  },
  removeLast$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeLast$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeLast$0.call(this);
  },
  remove$1: function(object) {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.remove$1.call(this, object);
  },
  removeRange$2: function(start, rangeLength) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeRange$2")) {
      throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
    } else
      return Object.prototype.removeRange$2.call(this, start, rangeLength);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint8ClampedArray", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLVideoElement", {"": "height=,width="});

$.$defineNativeClass("DOMWindow", {
  requestAnimationFrame$1: function(callback) {
    this._ensureRequestAnimationFrame$0();
    return this._requestAnimationFrame$1(callback);
  },
  _requestAnimationFrame$1: function(callback) {
    return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function() {
    if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
  },
  get$top: function() {
    return $._convertNativeToDart_Window(this.top);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("XPathException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("NamedNodeMap", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0();)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return this.get$length() === 0;
  },
  elementAt$1: function(index) {
    return this[index];
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("SVGFEBlendElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEColorMatrixElement", {"": "type>,height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEComponentTransferElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFECompositeElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEConvolveMatrixElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDiffuseLightingElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDisplacementMapElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEFloodElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEGaussianBlurElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEImageElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMergeElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMorphologyElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEOffsetElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEPointLightElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFESpecularLightingElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFESpotLightElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFETileElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFETurbulenceElement", {"": "type>,height>,width>,x>,y>"});

$.$defineNativeClass("SVGFilterElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGForeignObjectElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGImageElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGMaskElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGPatternElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGRectElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGScriptElement", {"": "type="});

$.$defineNativeClass("SVGStyleElement", {"": "type="});

$.$defineNativeClass("SVGElement", {
  get$classes: function() {
    if (this._cssClassSet == null)
      this._cssClassSet = $._AttributeClassSet$(this);
    return this._cssClassSet;
  },
  click$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot invoke click SVG."));
  },
  get$click: function() {
    return new $.Bound_click_SvgElement(this, "click$0");
  },
  get$id: function() {
    return this.id;
  },
  set$id: function(value) {
    this.id = value;
  }
});

$.$defineNativeClass("SVGException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGSVGElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGTextPositioningElement", {"": "x>,y>"});

$.$defineNativeClass("SVGUseElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGComponentTransferFunctionElement", {"": "type>"});

$.$defineNativeClass("SVGCursorElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFEDropShadowElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGGlyphRefElement", {"": "x=,y>"});

// 112 dynamic classes.
// 257 classes
// 25 !leaf
(function() {
  var v0_TextPositioningElement = "SVGTextPositioningElement|SVGAltGlyphElement|SVGTSpanElement|SVGTextElement|SVGTRefElement", v1__SVGComponentTransferFunctionElement = "SVGComponentTransferFunctionElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement", v2_MediaElement = "HTMLMediaElement|HTMLVideoElement|HTMLAudioElement", v3_SvgElement = [v0_TextPositioningElement, v1__SVGComponentTransferFunctionElement, "SVGElement|SVGStyledElement|SVGAElement|SVGTextContentElement|SVGTextPathElement|SVGCircleElement|SVGClipPathElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFESpecularLightingElement|SVGFETileElement|SVGFETurbulenceElement|SVGFilterElement|SVGForeignObjectElement|SVGImageElement|SVGGElement|SVGLineElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGMaskElement|SVGMarkerElement|SVGPathElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGStopElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGUseElement|SVGTitleElement|SVGFEDropShadowElement|SVGGlyphRefElement|SVGMissingGlyphElement|SVGAnimationElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGAnimateColorElement|SVGFEDistantLightElement|SVGFEMergeNodeElement|SVGFEPointLightElement|SVGFESpotLightElement|SVGMetadataElement|SVGScriptElement|SVGStyleElement|SVGViewElement|SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGCursorElement|SVGFontElement|SVGFontFaceFormatElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGFontFaceNameElement|SVGHKernElement|SVGVKernElement|SVGFontFaceElement|SVGMPathElement|SVGGlyphElement"].join("|"), v4_MouseEvent = "MouseEvent|WheelEvent", v5_Element = [v2_MediaElement, v3_SvgElement, "Element|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|HTMLAppletElement|HTMLBaseFontElement|HTMLDirectoryElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLMarqueeElement|HTMLElement|HTMLAnchorElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFormElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement"].join("|"), v6_CharacterData = "CharacterData|Text|CDATASection|Comment", v7_Document = "Document|SVGDocument|HTMLDocument", v8_Node = [v5_Element, v6_CharacterData, v7_Document, "Node|ProcessingInstruction|DocumentFragment|ShadowRoot|Attr|DocumentType|EntityReference|Notation"].join("|"), v9_MediaStream = "MediaStream|LocalMediaStream";
  $.dynamicSetMetadata([["Blob", "Blob|File"], ["CanvasRenderingContext", "CanvasRenderingContext|WebGLRenderingContext|CanvasRenderingContext2D"], ["CharacterData", v6_CharacterData], ["Uint8Array", "Uint8Array|Uint8ClampedArray"], ["SVGTextPositioningElement", v0_TextPositioningElement], ["SVGComponentTransferFunctionElement", v1__SVGComponentTransferFunctionElement], ["SVGElement", v3_SvgElement], ["Document", v7_Document], ["HTMLMediaElement", v2_MediaElement], ["Element", v5_Element], ["MouseEvent", v4_MouseEvent], ["Event", [v4_MouseEvent, "Event|PopStateEvent|ProgressEvent|XMLHttpRequestProgressEvent|RTCDataChannelEvent|RTCIceCandidateEvent|RTCDTMFToneChangeEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|UIEvent|TextEvent|TouchEvent|CompositionEvent|SVGZoomEvent|FocusEvent|KeyboardEvent|TrackEvent|TransitionEvent|WebGLContextEvent|WebKitTransitionEvent|IDBVersionChangeEvent|BeforeLoadEvent|CloseEvent|WebKitAnimationEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|AudioProcessingEvent|OfflineAudioCompletionEvent|HashChangeEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OverflowEvent|PageTransitionEvent"].join("|")], ["Node", v8_Node], ["MediaStream", v9_MediaStream], ["EventTarget", [v8_Node, v9_MediaStream, "EventTarget|TextTrack|TextTrackList|DOMWindow|MediaController"].join("|")], ["HTMLCollection", "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"], ["NodeList", "NodeList|RadioNodeList"]]);
})();

$.main.call$0 = $.main;
// BEGIN invoke [main].
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(field, prototype) {
    var len = field.length;
    var lastCharCode = field.charCodeAt(len - 1);
    var needsAccessor = (lastCharCode & 63) >= 60;
    if (needsAccessor) {
      var needsGetter = (lastCharCode & 3) > 0;
      var needsSetter = (lastCharCode & 2) == 0;
      var renaming = (lastCharCode & 64) != 0;
      var accessorName = field = field.substring(0, len - 1);
      if (renaming) {
        var divider = field.indexOf(":");
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (needsGetter) {
        var getterString = "return this." + field;
        prototype["get$" + accessorName] = new Function(getterString);
      }
      if (needsSetter) {
        var setterString = "this." + field + " = v";
        prototype["set$" + accessorName] = new Function("v", setterString);
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(cls, fields, prototype) {
    var constructor;
    if (typeof fields == 'function') {
      constructor = fields;
    } else {
      var str = "function " + cls + "(";
      var body = "";
      for (var i = 0; i < fields.length; i++) {
        if (i != 0)
          str += ", ";
        var field = fields[i];
        field = generateAccessor(field, prototype);
        str += field;
        body += "this." + field + " = " + field + ";\n";
      }
      str += ") {" + body + "}\nreturn " + cls;
      constructor = new Function(str)();
    }
    constructor.prototype = prototype;
    constructor.builtin$cls = cls;
    return constructor;
  }
  var supportsProto = false;
  var tmp = defineClass('c', ['f?'], {}).prototype;
  if (tmp.__proto__) {
    tmp.__proto__ = {};
    if (typeof tmp.get$f != 'undefined')
      supportsProto = true;
  }
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        var fields = desc[''], supr;
        if (typeof fields == 'string') {
          var s = fields.split(";");
          supr = s[0];
          fields = s[1] == '' ? [] : s[1].split(',');
        } else {
          supr = desc.super;
        }
        isolateProperties[cls] = defineClass(cls, fields, desc);
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    var finishedClasses = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass)
        return;
      finishClass(superclass);
      var constructor = isolateProperties[cls];
      var superConstructor = isolateProperties[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = constructor.prototype;
      if (supportsProto) {
        prototype.__proto__ = superConstructor.prototype;
        prototype.constructor = constructor;
      } else {
        function tmp() {
        }
        tmp.prototype = superConstructor.prototype;
        var newPrototype = new tmp();
        constructor.prototype = newPrototype;
        newPrototype.constructor = constructor;
        for (var member in prototype) {
          if (!member)
            continue;
          if (hasOwnProperty.call(prototype, member)) {
            newPrototype[member] = prototype[member];
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var getter = new Function("{ return $." + fieldName + ";}");
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            $.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = getter;
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    isolateProperties.$currentScript = typeof document == "object" ? document.currentScript || document.scripts[document.scripts.length - 1] : null;
    var isolatePrototype = oldIsolate.prototype;
    var str = "{\n";
    str += "var properties = Isolate.$isolateProperties;\n";
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var staticName in isolateProperties) {
      if (hasOwnProperty.call(isolateProperties, staticName)) {
        str += "this." + staticName + "= properties." + staticName + ";\n";
      }
    }
    str += "}\n";
    var newIsolate = new Function(str);
    newIsolate.prototype = isolatePrototype;
    isolatePrototype.constructor = newIsolate;
    newIsolate.$isolateProperties = isolateProperties;
    newIsolate.$finishClasses = oldIsolate.$finishClasses;
    return newIsolate;
  };
}
//@ sourceMappingURL=galaga.dart.js.map
